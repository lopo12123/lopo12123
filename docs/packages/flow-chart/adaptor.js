var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function commonjsRequire(path) {
  throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var react = { exports: {} };
var react_production_min = {};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
  if (val === null || val === void 0) {
    throw new TypeError("Object.assign cannot be called with null or undefined");
  }
  return Object(val);
}
function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }
    var test1 = new String("abc");
    test1[5] = "de";
    if (Object.getOwnPropertyNames(test1)[0] === "5") {
      return false;
    }
    var test2 = {};
    for (var i = 0; i < 10; i++) {
      test2["_" + String.fromCharCode(i)] = i;
    }
    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {
      return test2[n2];
    });
    if (order2.join("") !== "0123456789") {
      return false;
    }
    var test3 = {};
    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
      test3[letter] = letter;
    });
    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
      return false;
    }
    return true;
  } catch (err) {
    return false;
  }
}
var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
  var from;
  var to = toObject(target);
  var symbols;
  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);
    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);
      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }
  return to;
};
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l = objectAssign, n$1 = 60103, p$1 = 60106;
react_production_min.Fragment = 60107;
react_production_min.StrictMode = 60108;
react_production_min.Profiler = 60114;
var q$1 = 60109, r$1 = 60110, t = 60112;
react_production_min.Suspense = 60113;
var u = 60115, v = 60116;
if (typeof Symbol === "function" && Symbol.for) {
  var w = Symbol.for;
  n$1 = w("react.element");
  p$1 = w("react.portal");
  react_production_min.Fragment = w("react.fragment");
  react_production_min.StrictMode = w("react.strict_mode");
  react_production_min.Profiler = w("react.profiler");
  q$1 = w("react.provider");
  r$1 = w("react.context");
  t = w("react.forward_ref");
  react_production_min.Suspense = w("react.suspense");
  u = w("react.memo");
  v = w("react.lazy");
}
var x = typeof Symbol === "function" && Symbol.iterator;
function y$1(a) {
  if (a === null || typeof a !== "object")
    return null;
  a = x && a[x] || a["@@iterator"];
  return typeof a === "function" ? a : null;
}
function z(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var A = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, B$1 = {};
function C(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B$1;
  this.updater = c || A;
}
C.prototype.isReactComponent = {};
C.prototype.setState = function(a, b) {
  if (typeof a !== "object" && typeof a !== "function" && a != null)
    throw Error(z(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};
C.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function D$1() {
}
D$1.prototype = C.prototype;
function E$1(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B$1;
  this.updater = c || A;
}
var F$1 = E$1.prototype = new D$1();
F$1.constructor = E$1;
l(F$1, C.prototype);
F$1.isPureReactComponent = true;
var G$1 = { current: null }, H$1 = Object.prototype.hasOwnProperty, I$1 = { key: true, ref: true, __self: true, __source: true };
function J(a, b, c) {
  var e, d = {}, k = null, h = null;
  if (b != null)
    for (e in b.ref !== void 0 && (h = b.ref), b.key !== void 0 && (k = "" + b.key), b)
      H$1.call(b, e) && !I$1.hasOwnProperty(e) && (d[e] = b[e]);
  var g2 = arguments.length - 2;
  if (g2 === 1)
    d.children = c;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    d.children = f2;
  }
  if (a && a.defaultProps)
    for (e in g2 = a.defaultProps, g2)
      d[e] === void 0 && (d[e] = g2[e]);
  return { $$typeof: n$1, type: a, key: k, ref: h, props: d, _owner: G$1.current };
}
function K(a, b) {
  return { $$typeof: n$1, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
}
function L(a) {
  return typeof a === "object" && a !== null && a.$$typeof === n$1;
}
function escape$1(a) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b[a2];
  });
}
var M$1 = /\/+/g;
function N$1(a, b) {
  return typeof a === "object" && a !== null && a.key != null ? escape$1("" + a.key) : b.toString(36);
}
function O$1(a, b, c, e, d) {
  var k = typeof a;
  if (k === "undefined" || k === "boolean")
    a = null;
  var h = false;
  if (a === null)
    h = true;
  else
    switch (k) {
      case "string":
      case "number":
        h = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case n$1:
          case p$1:
            h = true;
        }
    }
  if (h)
    return h = a, d = d(h), a = e === "" ? "." + N$1(h, 0) : e, Array.isArray(d) ? (c = "", a != null && (c = a.replace(M$1, "$&/") + "/"), O$1(d, b, c, "", function(a2) {
      return a2;
    })) : d != null && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M$1, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = e === "" ? "." : e + ":";
  if (Array.isArray(a))
    for (var g2 = 0; g2 < a.length; g2++) {
      k = a[g2];
      var f2 = e + N$1(k, g2);
      h += O$1(k, b, c, f2, d);
    }
  else if (f2 = y$1(a), typeof f2 === "function")
    for (a = f2.call(a), g2 = 0; !(k = a.next()).done; )
      k = k.value, f2 = e + N$1(k, g2++), h += O$1(k, b, c, f2, d);
  else if (k === "object")
    throw b = "" + a, Error(z(31, b === "[object Object]" ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}
function P$1(a, b, c) {
  if (a == null)
    return a;
  var e = [], d = 0;
  O$1(a, e, "", "", function(a2) {
    return b.call(c, a2, d++);
  });
  return e;
}
function Q(a) {
  if (a._status === -1) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function(b2) {
      a._status === 0 && (b2 = b2.default, a._status = 1, a._result = b2);
    }, function(b2) {
      a._status === 0 && (a._status = 2, a._result = b2);
    });
  }
  if (a._status === 1)
    return a._result;
  throw a._result;
}
var R$1 = { current: null };
function S$1() {
  var a = R$1.current;
  if (a === null)
    throw Error(z(321));
  return a;
}
var T$1 = { ReactCurrentDispatcher: R$1, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: G$1, IsSomeRendererActing: { current: false }, assign: l };
react_production_min.Children = { map: P$1, forEach: function(a, b, c) {
  P$1(a, function() {
    b.apply(this, arguments);
  }, c);
}, count: function(a) {
  var b = 0;
  P$1(a, function() {
    b++;
  });
  return b;
}, toArray: function(a) {
  return P$1(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!L(a))
    throw Error(z(143));
  return a;
} };
react_production_min.Component = C;
react_production_min.PureComponent = E$1;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T$1;
react_production_min.cloneElement = function(a, b, c) {
  if (a === null || a === void 0)
    throw Error(z(267, a));
  var e = l({}, a.props), d = a.key, k = a.ref, h = a._owner;
  if (b != null) {
    b.ref !== void 0 && (k = b.ref, h = G$1.current);
    b.key !== void 0 && (d = "" + b.key);
    if (a.type && a.type.defaultProps)
      var g2 = a.type.defaultProps;
    for (f2 in b)
      H$1.call(b, f2) && !I$1.hasOwnProperty(f2) && (e[f2] = b[f2] === void 0 && g2 !== void 0 ? g2[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (f2 === 1)
    e.children = c;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    e.children = g2;
  }
  return {
    $$typeof: n$1,
    type: a.type,
    key: d,
    ref: k,
    props: e,
    _owner: h
  };
};
react_production_min.createContext = function(a, b) {
  b === void 0 && (b = null);
  a = { $$typeof: r$1, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null };
  a.Provider = { $$typeof: q$1, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = J;
react_production_min.createFactory = function(a) {
  var b = J.bind(null, a);
  b.type = a;
  return b;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: t, render: a };
};
react_production_min.isValidElement = L;
react_production_min.lazy = function(a) {
  return { $$typeof: v, _payload: { _status: -1, _result: a }, _init: Q };
};
react_production_min.memo = function(a, b) {
  return { $$typeof: u, type: a, compare: b === void 0 ? null : b };
};
react_production_min.useCallback = function(a, b) {
  return S$1().useCallback(a, b);
};
react_production_min.useContext = function(a, b) {
  return S$1().useContext(a, b);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useEffect = function(a, b) {
  return S$1().useEffect(a, b);
};
react_production_min.useImperativeHandle = function(a, b, c) {
  return S$1().useImperativeHandle(a, b, c);
};
react_production_min.useLayoutEffect = function(a, b) {
  return S$1().useLayoutEffect(a, b);
};
react_production_min.useMemo = function(a, b) {
  return S$1().useMemo(a, b);
};
react_production_min.useReducer = function(a, b, c) {
  return S$1().useReducer(a, b, c);
};
react_production_min.useRef = function(a) {
  return S$1().useRef(a);
};
react_production_min.useState = function(a) {
  return S$1().useState(a);
};
react_production_min.version = "17.0.2";
{
  react.exports = react_production_min;
}
var React = react.exports;
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues) {
    getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues === "function" && msCrypto.getRandomValues.bind(msCrypto);
    if (!getRandomValues) {
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
  }
  return getRandomValues(rnds8);
}
var REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
function validate(uuid) {
  return typeof uuid === "string" && REGEX.test(uuid);
}
var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 256).toString(16).substr(1));
}
function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
  if (!validate(uuid)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return uuid;
}
function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset = offset || 0;
    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return stringify(rnds);
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = react.exports, g = 60103;
reactJsxRuntime_production_min.Fragment = 60107;
if (typeof Symbol === "function" && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  reactJsxRuntime_production_min.Fragment = h("react.fragment");
}
var m$1 = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n = Object.prototype.hasOwnProperty, p = { key: true, ref: true, __self: true, __source: true };
function q(c, a, k) {
  var b, d = {}, e = null, l2 = null;
  k !== void 0 && (e = "" + k);
  a.key !== void 0 && (e = "" + a.key);
  a.ref !== void 0 && (l2 = a.ref);
  for (b in a)
    n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in a = c.defaultProps, a)
      d[b] === void 0 && (d[b] = a[b]);
  return { $$typeof: g, type: c, key: e, ref: l2, props: d, _owner: m$1.current };
}
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
const Fragment = jsxRuntime.exports.Fragment;
function defineSpaApp(spaConstructor, injects) {
  return (container) => {
    const spaInstance = spaConstructor(container);
    Object.freeze(spaInstance);
    injects == null ? void 0 : injects(spaInstance);
    return spaInstance;
  };
}
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  var f2, g2, h, k;
  if (typeof performance === "object" && typeof performance.now === "function") {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  if (typeof window === "undefined" || typeof MessageChannel !== "function") {
    var t2 = null, u2 = null, w = function() {
      if (t2 !== null)
        try {
          var a = exports.unstable_now();
          t2(true, a);
          t2 = null;
        } catch (b) {
          throw setTimeout(w, 0), b;
        }
    };
    f2 = function(a) {
      t2 !== null ? setTimeout(f2, 0, a) : (t2 = a, setTimeout(w, 0));
    };
    g2 = function(a, b) {
      u2 = setTimeout(a, b);
    };
    h = function() {
      clearTimeout(u2);
    };
    exports.unstable_shouldYield = function() {
      return false;
    };
    k = exports.unstable_forceFrameRate = function() {
    };
  } else {
    var x2 = window.setTimeout, y2 = window.clearTimeout;
    if (typeof console !== "undefined") {
      var z2 = window.cancelAnimationFrame;
      typeof window.requestAnimationFrame !== "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
      typeof z2 !== "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    }
    var A2 = false, B2 = null, C2 = -1, D2 = 5, E = 0;
    exports.unstable_shouldYield = function() {
      return exports.unstable_now() >= E;
    };
    k = function() {
    };
    exports.unstable_forceFrameRate = function(a) {
      0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D2 = 0 < a ? Math.floor(1e3 / a) : 5;
    };
    var F2 = new MessageChannel(), G2 = F2.port2;
    F2.port1.onmessage = function() {
      if (B2 !== null) {
        var a = exports.unstable_now();
        E = a + D2;
        try {
          B2(true, a) ? G2.postMessage(null) : (A2 = false, B2 = null);
        } catch (b) {
          throw G2.postMessage(null), b;
        }
      } else
        A2 = false;
    };
    f2 = function(a) {
      B2 = a;
      A2 || (A2 = true, G2.postMessage(null));
    };
    g2 = function(a, b) {
      C2 = x2(function() {
        a(exports.unstable_now());
      }, b);
    };
    h = function() {
      y2(C2);
      C2 = -1;
    };
  }
  function H2(a, b) {
    var c = a.length;
    a.push(b);
    a:
      for (; ; ) {
        var d = c - 1 >>> 1, e = a[d];
        if (e !== void 0 && 0 < I2(e, b))
          a[d] = b, a[c] = e, c = d;
        else
          break a;
      }
  }
  function J2(a) {
    a = a[0];
    return a === void 0 ? null : a;
  }
  function K2(a) {
    var b = a[0];
    if (b !== void 0) {
      var c = a.pop();
      if (c !== b) {
        a[0] = c;
        a:
          for (var d = 0, e = a.length; d < e; ) {
            var m2 = 2 * (d + 1) - 1, n2 = a[m2], v2 = m2 + 1, r2 = a[v2];
            if (n2 !== void 0 && 0 > I2(n2, c))
              r2 !== void 0 && 0 > I2(r2, n2) ? (a[d] = r2, a[v2] = c, d = v2) : (a[d] = n2, a[m2] = c, d = m2);
            else if (r2 !== void 0 && 0 > I2(r2, c))
              a[d] = r2, a[v2] = c, d = v2;
            else
              break a;
          }
      }
      return b;
    }
    return null;
  }
  function I2(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return c !== 0 ? c : a.id - b.id;
  }
  var L2 = [], M2 = [], N2 = 1, O2 = null, P2 = 3, Q2 = false, R2 = false, S2 = false;
  function T2(a) {
    for (var b = J2(M2); b !== null; ) {
      if (b.callback === null)
        K2(M2);
      else if (b.startTime <= a)
        K2(M2), b.sortIndex = b.expirationTime, H2(L2, b);
      else
        break;
      b = J2(M2);
    }
  }
  function U2(a) {
    S2 = false;
    T2(a);
    if (!R2)
      if (J2(L2) !== null)
        R2 = true, f2(V2);
      else {
        var b = J2(M2);
        b !== null && g2(U2, b.startTime - a);
      }
  }
  function V2(a, b) {
    R2 = false;
    S2 && (S2 = false, h());
    Q2 = true;
    var c = P2;
    try {
      T2(b);
      for (O2 = J2(L2); O2 !== null && (!(O2.expirationTime > b) || a && !exports.unstable_shouldYield()); ) {
        var d = O2.callback;
        if (typeof d === "function") {
          O2.callback = null;
          P2 = O2.priorityLevel;
          var e = d(O2.expirationTime <= b);
          b = exports.unstable_now();
          typeof e === "function" ? O2.callback = e : O2 === J2(L2) && K2(L2);
          T2(b);
        } else
          K2(L2);
        O2 = J2(L2);
      }
      if (O2 !== null)
        var m2 = true;
      else {
        var n2 = J2(M2);
        n2 !== null && g2(U2, n2.startTime - b);
        m2 = false;
      }
      return m2;
    } finally {
      O2 = null, P2 = c, Q2 = false;
    }
  }
  var W2 = k;
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function() {
    R2 || Q2 || (R2 = true, f2(V2));
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return P2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return J2(L2);
  };
  exports.unstable_next = function(a) {
    switch (P2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = P2;
    }
    var c = P2;
    P2 = b;
    try {
      return a();
    } finally {
      P2 = c;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = W2;
  exports.unstable_runWithPriority = function(a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c = P2;
    P2 = a;
    try {
      return b();
    } finally {
      P2 = c;
    }
  };
  exports.unstable_scheduleCallback = function(a, b, c) {
    var d = exports.unstable_now();
    typeof c === "object" && c !== null ? (c = c.delay, c = typeof c === "number" && 0 < c ? d + c : d) : c = d;
    switch (a) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c + e;
    a = { id: N2++, callback: b, priorityLevel: a, startTime: c, expirationTime: e, sortIndex: -1 };
    c > d ? (a.sortIndex = c, H2(M2, a), J2(L2) === null && a === J2(M2) && (S2 ? h() : S2 = true, g2(U2, c - d))) : (a.sortIndex = e, H2(L2, a), R2 || Q2 || (R2 = true, f2(V2)));
    return a;
  };
  exports.unstable_wrapCallback = function(a) {
    var b = P2;
    return function() {
      var c = P2;
      P2 = b;
      try {
        return a.apply(this, arguments);
      } finally {
        P2 = c;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = react.exports, m = objectAssign, r = scheduler.exports;
function y(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
if (!aa)
  throw Error(y(227));
var ba = /* @__PURE__ */ new Set(), ca = {};
function da(a, b) {
  ea(a, b);
  ea(a + "Capture", b);
}
function ea(a, b) {
  ca[a] = b;
  for (a = 0; a < b.length; a++)
    ba.add(b[a]);
}
var fa = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ia = Object.prototype.hasOwnProperty, ja = {}, ka = {};
function la(a) {
  if (ia.call(ka, a))
    return true;
  if (ia.call(ja, a))
    return false;
  if (ha.test(a))
    return ka[a] = true;
  ja[a] = true;
  return false;
}
function ma(a, b, c, d) {
  if (c !== null && c.type === 0)
    return false;
  switch (typeof b) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d)
        return false;
      if (c !== null)
        return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return a !== "data-" && a !== "aria-";
    default:
      return false;
  }
}
function na(a, b, c, d) {
  if (b === null || typeof b === "undefined" || ma(a, b, c, d))
    return true;
  if (d)
    return false;
  if (c !== null)
    switch (c.type) {
      case 3:
        return !b;
      case 4:
        return b === false;
      case 5:
        return isNaN(b);
      case 6:
        return isNaN(b) || 1 > b;
    }
  return false;
}
function B(a, b, c, d, e, f2, g2) {
  this.acceptsBooleans = b === 2 || b === 3 || b === 4;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var D = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  D[a] = new B(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b = a[0];
  D[b] = new B(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  D[a] = new B(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  D[a] = new B(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  D[a] = new B(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  D[a] = new B(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  D[a] = new B(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  D[a] = new B(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  D[a] = new B(a, 5, false, a.toLowerCase(), null, false, false);
});
var oa = /[\-:]([a-z])/g;
function pa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  D[a] = new B(a, 1, false, a.toLowerCase(), null, false, false);
});
D.xlinkHref = new B("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  D[a] = new B(a, 1, false, a.toLowerCase(), null, true, true);
});
function qa(a, b, c, d) {
  var e = D.hasOwnProperty(b) ? D[b] : null;
  var f2 = e !== null ? e.type === 0 : d ? false : !(2 < b.length) || b[0] !== "o" && b[0] !== "O" || b[1] !== "n" && b[1] !== "N" ? false : true;
  f2 || (na(b, c, e, d) && (c = null), d || e === null ? la(b) && (c === null ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = c === null ? e.type === 3 ? false : "" : c : (b = e.attributeName, d = e.attributeNamespace, c === null ? a.removeAttribute(b) : (e = e.type, c = e === 3 || e === 4 && c === true ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
}
var ra = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, sa = 60103, ta = 60106, ua = 60107, wa = 60108, xa = 60114, ya = 60109, za = 60110, Aa = 60112, Ba = 60113, Ca = 60120, Da = 60115, Ea = 60116, Fa = 60121, Ga = 60128, Ha = 60129, Ia = 60130, Ja = 60131;
if (typeof Symbol === "function" && Symbol.for) {
  var E = Symbol.for;
  sa = E("react.element");
  ta = E("react.portal");
  ua = E("react.fragment");
  wa = E("react.strict_mode");
  xa = E("react.profiler");
  ya = E("react.provider");
  za = E("react.context");
  Aa = E("react.forward_ref");
  Ba = E("react.suspense");
  Ca = E("react.suspense_list");
  Da = E("react.memo");
  Ea = E("react.lazy");
  Fa = E("react.block");
  E("react.scope");
  Ga = E("react.opaque.id");
  Ha = E("react.debug_trace_mode");
  Ia = E("react.offscreen");
  Ja = E("react.legacy_hidden");
}
var Ka = typeof Symbol === "function" && Symbol.iterator;
function La(a) {
  if (a === null || typeof a !== "object")
    return null;
  a = Ka && a[Ka] || a["@@iterator"];
  return typeof a === "function" ? a : null;
}
var Ma;
function Na(a) {
  if (Ma === void 0)
    try {
      throw Error();
    } catch (c) {
      var b = c.stack.trim().match(/\n( *(at )?)/);
      Ma = b && b[1] || "";
    }
  return "\n" + Ma + a;
}
var Oa = false;
function Pa(a, b) {
  if (!a || Oa)
    return "";
  Oa = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b)
      if (b = function() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect === "object" && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (k) {
          var d = k;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (k) {
          d = k;
        }
        a.call(b.prototype);
      }
    else {
      try {
        throw Error();
      } catch (k) {
        d = k;
      }
      a();
    }
  } catch (k) {
    if (k && d && typeof k.stack === "string") {
      for (var e = k.stack.split("\n"), f2 = d.stack.split("\n"), g2 = e.length - 1, h = f2.length - 1; 1 <= g2 && 0 <= h && e[g2] !== f2[h]; )
        h--;
      for (; 1 <= g2 && 0 <= h; g2--, h--)
        if (e[g2] !== f2[h]) {
          if (g2 !== 1 || h !== 1) {
            do
              if (g2--, h--, 0 > h || e[g2] !== f2[h])
                return "\n" + e[g2].replace(" at new ", " at ");
            while (1 <= g2 && 0 <= h);
          }
          break;
        }
    }
  } finally {
    Oa = false, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Na(a) : "";
}
function Qa(a) {
  switch (a.tag) {
    case 5:
      return Na(a.type);
    case 16:
      return Na("Lazy");
    case 13:
      return Na("Suspense");
    case 19:
      return Na("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Pa(a.type, false), a;
    case 11:
      return a = Pa(a.type.render, false), a;
    case 22:
      return a = Pa(a.type._render, false), a;
    case 1:
      return a = Pa(a.type, true), a;
    default:
      return "";
  }
}
function Ra(a) {
  if (a == null)
    return null;
  if (typeof a === "function")
    return a.displayName || a.name || null;
  if (typeof a === "string")
    return a;
  switch (a) {
    case ua:
      return "Fragment";
    case ta:
      return "Portal";
    case xa:
      return "Profiler";
    case wa:
      return "StrictMode";
    case Ba:
      return "Suspense";
    case Ca:
      return "SuspenseList";
  }
  if (typeof a === "object")
    switch (a.$$typeof) {
      case za:
        return (a.displayName || "Context") + ".Consumer";
      case ya:
        return (a._context.displayName || "Context") + ".Provider";
      case Aa:
        var b = a.render;
        b = b.displayName || b.name || "";
        return a.displayName || (b !== "" ? "ForwardRef(" + b + ")" : "ForwardRef");
      case Da:
        return Ra(a.type);
      case Fa:
        return Ra(a._render);
      case Ea:
        b = a._payload;
        a = a._init;
        try {
          return Ra(a(b));
        } catch (c) {
        }
    }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && a.toLowerCase() === "input" && (b === "checkbox" || b === "radio");
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
  if (!a.hasOwnProperty(b) && typeof c !== "undefined" && typeof c.get === "function" && typeof c.set === "function") {
    var e = c.get, f2 = c.set;
    Object.defineProperty(a, b, { configurable: true, get: function() {
      return e.call(this);
    }, set: function(a2) {
      d = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b, { enumerable: c.enumerable });
    return { getValue: function() {
      return d;
    }, setValue: function(a2) {
      d = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b];
    } };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a)
    return false;
  var b = a._valueTracker;
  if (!b)
    return true;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), true) : false;
}
function Xa(a) {
  a = a || (typeof document !== "undefined" ? document : void 0);
  if (typeof a === "undefined")
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return m({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c != null ? c : a._wrapperState.initialChecked });
}
function Za(a, b) {
  var c = b.defaultValue == null ? "" : b.defaultValue, d = b.checked != null ? b.checked : b.defaultChecked;
  c = Sa(b.value != null ? b.value : c);
  a._wrapperState = { initialChecked: d, initialValue: c, controlled: b.type === "checkbox" || b.type === "radio" ? b.checked != null : b.value != null };
}
function $a(a, b) {
  b = b.checked;
  b != null && qa(a, "checked", b, false);
}
function ab(a, b) {
  $a(a, b);
  var c = Sa(b.value), d = b.type;
  if (c != null)
    if (d === "number") {
      if (c === 0 && a.value === "" || a.value != c)
        a.value = "" + c;
    } else
      a.value !== "" + c && (a.value = "" + c);
  else if (d === "submit" || d === "reset") {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? bb(a, b.type, c) : b.hasOwnProperty("defaultValue") && bb(a, b.type, Sa(b.defaultValue));
  b.checked == null && b.defaultChecked != null && (a.defaultChecked = !!b.defaultChecked);
}
function cb(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!(d !== "submit" && d !== "reset" || b.value !== void 0 && b.value !== null))
      return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  c !== "" && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  c !== "" && (a.name = c);
}
function bb(a, b, c) {
  if (b !== "number" || Xa(a.ownerDocument) !== a)
    c == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
function db(a) {
  var b = "";
  aa.Children.forEach(a, function(a2) {
    a2 != null && (b += a2);
  });
  return b;
}
function eb(a, b) {
  a = m({ children: void 0 }, b);
  if (b = db(b.children))
    a.children = b;
  return a;
}
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++)
      b["$" + c[e]] = true;
    for (c = 0; c < a.length; c++)
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = true);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = true;
        d && (a[e].defaultSelected = true);
        return;
      }
      b !== null || a[e].disabled || (b = a[e]);
    }
    b !== null && (b.selected = true);
  }
}
function gb(a, b) {
  if (b.dangerouslySetInnerHTML != null)
    throw Error(y(91));
  return m({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb(a, b) {
  var c = b.value;
  if (c == null) {
    c = b.children;
    b = b.defaultValue;
    if (c != null) {
      if (b != null)
        throw Error(y(92));
      if (Array.isArray(c)) {
        if (!(1 >= c.length))
          throw Error(y(93));
        c = c[0];
      }
      b = c;
    }
    b == null && (b = "");
    c = b;
  }
  a._wrapperState = { initialValue: Sa(c) };
}
function ib(a, b) {
  var c = Sa(b.value), d = Sa(b.defaultValue);
  c != null && (c = "" + c, c !== a.value && (a.value = c), b.defaultValue == null && a.defaultValue !== c && (a.defaultValue = c));
  d != null && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && b !== "" && b !== null && (a.value = b);
}
var kb = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
function lb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function mb(a, b) {
  return a == null || a === "http://www.w3.org/1999/xhtml" ? lb(b) : a === "http://www.w3.org/2000/svg" && b === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
}
var nb, ob = function(a) {
  return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b, c, d, e);
    });
  } : a;
}(function(a, b) {
  if (a.namespaceURI !== kb.svg || "innerHTML" in a)
    a.innerHTML = b;
  else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
    for (b = nb.firstChild; a.firstChild; )
      a.removeChild(a.firstChild);
    for (; b.firstChild; )
      a.appendChild(b.firstChild);
  }
});
function pb(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && c.nodeType === 3) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var qb = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function(a) {
  rb.forEach(function(b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    qb[b] = qb[a];
  });
});
function sb(a, b, c) {
  return b == null || typeof b === "boolean" || b === "" ? "" : c || typeof b !== "number" || b === 0 || qb.hasOwnProperty(a) && qb[a] ? ("" + b).trim() : b + "px";
}
function tb(a, b) {
  a = a.style;
  for (var c in b)
    if (b.hasOwnProperty(c)) {
      var d = c.indexOf("--") === 0, e = sb(c, b[c], d);
      c === "float" && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
}
var ub = m({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function vb(a, b) {
  if (b) {
    if (ub[a] && (b.children != null || b.dangerouslySetInnerHTML != null))
      throw Error(y(137, a));
    if (b.dangerouslySetInnerHTML != null) {
      if (b.children != null)
        throw Error(y(60));
      if (!(typeof b.dangerouslySetInnerHTML === "object" && "__html" in b.dangerouslySetInnerHTML))
        throw Error(y(61));
    }
    if (b.style != null && typeof b.style !== "object")
      throw Error(y(62));
  }
}
function wb(a, b) {
  if (a.indexOf("-") === -1)
    return typeof b.is === "string";
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return a.nodeType === 3 ? a.parentNode : a;
}
var yb = null, zb = null, Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if (typeof yb !== "function")
      throw Error(y(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb, b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b)
      for (a = 0; a < b.length; a++)
        Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb(a, b, c, d, e) {
  return a(b, c, d, e);
}
function Ib() {
}
var Jb = Gb, Kb = false, Lb = false;
function Mb() {
  if (zb !== null || Ab !== null)
    Ib(), Fb();
}
function Nb(a, b, c) {
  if (Lb)
    return a(b, c);
  Lb = true;
  try {
    return Jb(a, b, c);
  } finally {
    Lb = false, Mb();
  }
}
function Ob(a, b) {
  var c = a.stateNode;
  if (c === null)
    return null;
  var d = Db(c);
  if (d === null)
    return null;
  c = d[b];
  a:
    switch (b) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d = !d.disabled) || (a = a.type, d = !(a === "button" || a === "input" || a === "select" || a === "textarea"));
        a = !d;
        break a;
      default:
        a = false;
    }
  if (a)
    return null;
  if (c && typeof c !== "function")
    throw Error(y(231, b, typeof c));
  return c;
}
var Pb = false;
if (fa)
  try {
    var Qb = {};
    Object.defineProperty(Qb, "passive", { get: function() {
      Pb = true;
    } });
    window.addEventListener("test", Qb, Qb);
    window.removeEventListener("test", Qb, Qb);
  } catch (a) {
    Pb = false;
  }
function Rb(a, b, c, d, e, f2, g2, h, k) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (n2) {
    this.onError(n2);
  }
}
var Sb = false, Tb = null, Ub = false, Vb = null, Wb = { onError: function(a) {
  Sb = true;
  Tb = a;
} };
function Xb(a, b, c, d, e, f2, g2, h, k) {
  Sb = false;
  Tb = null;
  Rb.apply(Wb, arguments);
}
function Yb(a, b, c, d, e, f2, g2, h, k) {
  Xb.apply(this, arguments);
  if (Sb) {
    if (Sb) {
      var l2 = Tb;
      Sb = false;
      Tb = null;
    } else
      throw Error(y(198));
    Ub || (Ub = true, Vb = l2);
  }
}
function Zb(a) {
  var b = a, c = a;
  if (a.alternate)
    for (; b.return; )
      b = b.return;
  else {
    a = b;
    do
      b = a, (b.flags & 1026) !== 0 && (c = b.return), a = b.return;
    while (a);
  }
  return b.tag === 3 ? c : null;
}
function $b(a) {
  if (a.tag === 13) {
    var b = a.memoizedState;
    b === null && (a = a.alternate, a !== null && (b = a.memoizedState));
    if (b !== null)
      return b.dehydrated;
  }
  return null;
}
function ac(a) {
  if (Zb(a) !== a)
    throw Error(y(188));
}
function bc(a) {
  var b = a.alternate;
  if (!b) {
    b = Zb(a);
    if (b === null)
      throw Error(y(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b; ; ) {
    var e = c.return;
    if (e === null)
      break;
    var f2 = e.alternate;
    if (f2 === null) {
      d = e.return;
      if (d !== null) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c)
          return ac(e), a;
        if (f2 === d)
          return ac(e), b;
        f2 = f2.sibling;
      }
      throw Error(y(188));
    }
    if (c.return !== d.return)
      c = e, d = f2;
    else {
      for (var g2 = false, h = e.child; h; ) {
        if (h === c) {
          g2 = true;
          c = e;
          d = f2;
          break;
        }
        if (h === d) {
          g2 = true;
          d = e;
          c = f2;
          break;
        }
        h = h.sibling;
      }
      if (!g2) {
        for (h = f2.child; h; ) {
          if (h === c) {
            g2 = true;
            c = f2;
            d = e;
            break;
          }
          if (h === d) {
            g2 = true;
            d = f2;
            c = e;
            break;
          }
          h = h.sibling;
        }
        if (!g2)
          throw Error(y(189));
      }
    }
    if (c.alternate !== d)
      throw Error(y(190));
  }
  if (c.tag !== 3)
    throw Error(y(188));
  return c.stateNode.current === c ? a : b;
}
function cc(a) {
  a = bc(a);
  if (!a)
    return null;
  for (var b = a; ; ) {
    if (b.tag === 5 || b.tag === 6)
      return b;
    if (b.child)
      b.child.return = b, b = b.child;
    else {
      if (b === a)
        break;
      for (; !b.sibling; ) {
        if (!b.return || b.return === a)
          return null;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return null;
}
function dc(a, b) {
  for (var c = a.alternate; b !== null; ) {
    if (b === a || b === c)
      return true;
    b = b.return;
  }
  return false;
}
var ec, fc, gc, hc, ic = false, jc = [], kc = null, lc = null, mc = null, nc = /* @__PURE__ */ new Map(), oc = /* @__PURE__ */ new Map(), pc = [], qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a, b, c, d, e) {
  return { blockedOn: a, domEventName: b, eventSystemFlags: c | 16, nativeEvent: e, targetContainers: [d] };
}
function sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      kc = null;
      break;
    case "dragenter":
    case "dragleave":
      lc = null;
      break;
    case "mouseover":
    case "mouseout":
      mc = null;
      break;
    case "pointerover":
    case "pointerout":
      nc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      oc.delete(b.pointerId);
  }
}
function tc(a, b, c, d, e, f2) {
  if (a === null || a.nativeEvent !== f2)
    return a = rc(b, c, d, e, f2), b !== null && (b = Cb(b), b !== null && fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  e !== null && b.indexOf(e) === -1 && b.push(e);
  return a;
}
function uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return kc = tc(kc, a, b, c, d, e), true;
    case "dragenter":
      return lc = tc(lc, a, b, c, d, e), true;
    case "mouseover":
      return mc = tc(mc, a, b, c, d, e), true;
    case "pointerover":
      var f2 = e.pointerId;
      nc.set(f2, tc(nc.get(f2) || null, a, b, c, d, e));
      return true;
    case "gotpointercapture":
      return f2 = e.pointerId, oc.set(f2, tc(oc.get(f2) || null, a, b, c, d, e)), true;
  }
  return false;
}
function vc(a) {
  var b = wc(a.target);
  if (b !== null) {
    var c = Zb(b);
    if (c !== null) {
      if (b = c.tag, b === 13) {
        if (b = $b(c), b !== null) {
          a.blockedOn = b;
          hc(a.lanePriority, function() {
            r.unstable_runWithPriority(a.priority, function() {
              gc(c);
            });
          });
          return;
        }
      } else if (b === 3 && c.stateNode.hydrate) {
        a.blockedOn = c.tag === 3 ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function xc(a) {
  if (a.blockedOn !== null)
    return false;
  for (var b = a.targetContainers; 0 < b.length; ) {
    var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (c !== null)
      return b = Cb(c), b !== null && fc(b), a.blockedOn = c, false;
    b.shift();
  }
  return true;
}
function zc(a, b, c) {
  xc(a) && c.delete(b);
}
function Ac() {
  for (ic = false; 0 < jc.length; ) {
    var a = jc[0];
    if (a.blockedOn !== null) {
      a = Cb(a.blockedOn);
      a !== null && ec(a);
      break;
    }
    for (var b = a.targetContainers; 0 < b.length; ) {
      var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
      if (c !== null) {
        a.blockedOn = c;
        break;
      }
      b.shift();
    }
    a.blockedOn === null && jc.shift();
  }
  kc !== null && xc(kc) && (kc = null);
  lc !== null && xc(lc) && (lc = null);
  mc !== null && xc(mc) && (mc = null);
  nc.forEach(zc);
  oc.forEach(zc);
}
function Bc(a, b) {
  a.blockedOn === b && (a.blockedOn = null, ic || (ic = true, r.unstable_scheduleCallback(r.unstable_NormalPriority, Ac)));
}
function Cc(a) {
  function b(b2) {
    return Bc(b2, a);
  }
  if (0 < jc.length) {
    Bc(jc[0], a);
    for (var c = 1; c < jc.length; c++) {
      var d = jc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  kc !== null && Bc(kc, a);
  lc !== null && Bc(lc, a);
  mc !== null && Bc(mc, a);
  nc.forEach(b);
  oc.forEach(b);
  for (c = 0; c < pc.length; c++)
    d = pc[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < pc.length && (c = pc[0], c.blockedOn === null); )
    vc(c), c.blockedOn === null && pc.shift();
}
function Dc(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var Ec = { animationend: Dc("Animation", "AnimationEnd"), animationiteration: Dc("Animation", "AnimationIteration"), animationstart: Dc("Animation", "AnimationStart"), transitionend: Dc("Transition", "TransitionEnd") }, Fc = {}, Gc = {};
fa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);
function Hc(a) {
  if (Fc[a])
    return Fc[a];
  if (!Ec[a])
    return a;
  var b = Ec[a], c;
  for (c in b)
    if (b.hasOwnProperty(c) && c in Gc)
      return Fc[a] = b[c];
  return a;
}
var Ic = Hc("animationend"), Jc = Hc("animationiteration"), Kc = Hc("animationstart"), Lc = Hc("transitionend"), Mc = /* @__PURE__ */ new Map(), Nc = /* @__PURE__ */ new Map(), Oc = [
  "abort",
  "abort",
  Ic,
  "animationEnd",
  Jc,
  "animationIteration",
  Kc,
  "animationStart",
  "canplay",
  "canPlay",
  "canplaythrough",
  "canPlayThrough",
  "durationchange",
  "durationChange",
  "emptied",
  "emptied",
  "encrypted",
  "encrypted",
  "ended",
  "ended",
  "error",
  "error",
  "gotpointercapture",
  "gotPointerCapture",
  "load",
  "load",
  "loadeddata",
  "loadedData",
  "loadedmetadata",
  "loadedMetadata",
  "loadstart",
  "loadStart",
  "lostpointercapture",
  "lostPointerCapture",
  "playing",
  "playing",
  "progress",
  "progress",
  "seeking",
  "seeking",
  "stalled",
  "stalled",
  "suspend",
  "suspend",
  "timeupdate",
  "timeUpdate",
  Lc,
  "transitionEnd",
  "waiting",
  "waiting"
];
function Pc(a, b) {
  for (var c = 0; c < a.length; c += 2) {
    var d = a[c], e = a[c + 1];
    e = "on" + (e[0].toUpperCase() + e.slice(1));
    Nc.set(d, b);
    Mc.set(d, e);
    da(e, [d]);
  }
}
var Qc = r.unstable_now;
Qc();
var F = 8;
function Rc(a) {
  if ((1 & a) !== 0)
    return F = 15, 1;
  if ((2 & a) !== 0)
    return F = 14, 2;
  if ((4 & a) !== 0)
    return F = 13, 4;
  var b = 24 & a;
  if (b !== 0)
    return F = 12, b;
  if ((a & 32) !== 0)
    return F = 11, 32;
  b = 192 & a;
  if (b !== 0)
    return F = 10, b;
  if ((a & 256) !== 0)
    return F = 9, 256;
  b = 3584 & a;
  if (b !== 0)
    return F = 8, b;
  if ((a & 4096) !== 0)
    return F = 7, 4096;
  b = 4186112 & a;
  if (b !== 0)
    return F = 6, b;
  b = 62914560 & a;
  if (b !== 0)
    return F = 5, b;
  if (a & 67108864)
    return F = 4, 67108864;
  if ((a & 134217728) !== 0)
    return F = 3, 134217728;
  b = 805306368 & a;
  if (b !== 0)
    return F = 2, b;
  if ((1073741824 & a) !== 0)
    return F = 1, 1073741824;
  F = 8;
  return a;
}
function Sc(a) {
  switch (a) {
    case 99:
      return 15;
    case 98:
      return 10;
    case 97:
    case 96:
      return 8;
    case 95:
      return 2;
    default:
      return 0;
  }
}
function Tc(a) {
  switch (a) {
    case 15:
    case 14:
      return 99;
    case 13:
    case 12:
    case 11:
    case 10:
      return 98;
    case 9:
    case 8:
    case 7:
    case 6:
    case 4:
    case 5:
      return 97;
    case 3:
    case 2:
    case 1:
      return 95;
    case 0:
      return 90;
    default:
      throw Error(y(358, a));
  }
}
function Uc(a, b) {
  var c = a.pendingLanes;
  if (c === 0)
    return F = 0;
  var d = 0, e = 0, f2 = a.expiredLanes, g2 = a.suspendedLanes, h = a.pingedLanes;
  if (f2 !== 0)
    d = f2, e = F = 15;
  else if (f2 = c & 134217727, f2 !== 0) {
    var k = f2 & ~g2;
    k !== 0 ? (d = Rc(k), e = F) : (h &= f2, h !== 0 && (d = Rc(h), e = F));
  } else
    f2 = c & ~g2, f2 !== 0 ? (d = Rc(f2), e = F) : h !== 0 && (d = Rc(h), e = F);
  if (d === 0)
    return 0;
  d = 31 - Vc(d);
  d = c & ((0 > d ? 0 : 1 << d) << 1) - 1;
  if (b !== 0 && b !== d && (b & g2) === 0) {
    Rc(b);
    if (e <= F)
      return b;
    F = e;
  }
  b = a.entangledLanes;
  if (b !== 0)
    for (a = a.entanglements, b &= d; 0 < b; )
      c = 31 - Vc(b), e = 1 << c, d |= a[c], b &= ~e;
  return d;
}
function Wc(a) {
  a = a.pendingLanes & -1073741825;
  return a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
}
function Xc(a, b) {
  switch (a) {
    case 15:
      return 1;
    case 14:
      return 2;
    case 12:
      return a = Yc(24 & ~b), a === 0 ? Xc(10, b) : a;
    case 10:
      return a = Yc(192 & ~b), a === 0 ? Xc(8, b) : a;
    case 8:
      return a = Yc(3584 & ~b), a === 0 && (a = Yc(4186112 & ~b), a === 0 && (a = 512)), a;
    case 2:
      return b = Yc(805306368 & ~b), b === 0 && (b = 268435456), b;
  }
  throw Error(y(358, a));
}
function Yc(a) {
  return a & -a;
}
function Zc(a) {
  for (var b = [], c = 0; 31 > c; c++)
    b.push(a);
  return b;
}
function $c(a, b, c) {
  a.pendingLanes |= b;
  var d = b - 1;
  a.suspendedLanes &= d;
  a.pingedLanes &= d;
  a = a.eventTimes;
  b = 31 - Vc(b);
  a[b] = c;
}
var Vc = Math.clz32 ? Math.clz32 : ad, bd = Math.log, cd = Math.LN2;
function ad(a) {
  return a === 0 ? 32 : 31 - (bd(a) / cd | 0) | 0;
}
var dd = r.unstable_UserBlockingPriority, ed = r.unstable_runWithPriority, fd = true;
function gd(a, b, c, d) {
  Kb || Ib();
  var e = hd, f2 = Kb;
  Kb = true;
  try {
    Hb(e, a, b, c, d);
  } finally {
    (Kb = f2) || Mb();
  }
}
function id(a, b, c, d) {
  ed(dd, hd.bind(null, a, b, c, d));
}
function hd(a, b, c, d) {
  if (fd) {
    var e;
    if ((e = (b & 4) === 0) && 0 < jc.length && -1 < qc.indexOf(a))
      a = rc(null, a, b, c, d), jc.push(a);
    else {
      var f2 = yc(a, b, c, d);
      if (f2 === null)
        e && sc(a, d);
      else {
        if (e) {
          if (-1 < qc.indexOf(a)) {
            a = rc(f2, a, b, c, d);
            jc.push(a);
            return;
          }
          if (uc(f2, a, b, c, d))
            return;
          sc(a, d);
        }
        jd(a, b, d, null, c);
      }
    }
  }
}
function yc(a, b, c, d) {
  var e = xb(d);
  e = wc(e);
  if (e !== null) {
    var f2 = Zb(e);
    if (f2 === null)
      e = null;
    else {
      var g2 = f2.tag;
      if (g2 === 13) {
        e = $b(f2);
        if (e !== null)
          return e;
        e = null;
      } else if (g2 === 3) {
        if (f2.stateNode.hydrate)
          return f2.tag === 3 ? f2.stateNode.containerInfo : null;
        e = null;
      } else
        f2 !== e && (e = null);
    }
  }
  jd(a, b, d, e, c);
  return null;
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a, b = ld, c = b.length, d, e = "value" in kd ? kd.value : kd.textContent, f2 = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++)
    ;
  var g2 = c - a;
  for (d = 1; d <= g2 && b[c - d] === e[f2 - d]; d++)
    ;
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, a === 0 && b === 13 && (a = 13)) : a = b;
  a === 10 && (a = 13);
  return 32 <= a || a === 13 ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b(b2, d, e, f2, g2) {
    this._reactName = b2;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c in a)
      a.hasOwnProperty(c) && (b2 = a[c], this[c] = b2 ? b2(f2) : f2[c]);
    this.isDefaultPrevented = (f2.defaultPrevented != null ? f2.defaultPrevented : f2.returnValue === false) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  m(b.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : typeof a2.returnValue !== "unknown" && (a2.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : typeof a2.cancelBubble !== "unknown" && (a2.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = m({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = m({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a) {
  return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a)
    return a.movementX;
  a !== yd && (yd && a.type === "mousemove" ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
  return wd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : xd;
} }), Bd = rd(Ad), Cd = m({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = m({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = m({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = m({}, sd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = m({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : false;
}
function zd() {
  return Pd;
}
var Qd = m({}, ud, { key: function(a) {
  if (a.key) {
    var b = Md[a.key] || a.key;
    if (b !== "Unidentified")
      return b;
  }
  return a.type === "keypress" ? (a = od(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? Nd[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a) {
  return a.type === "keypress" ? od(a) : 0;
}, keyCode: function(a) {
  return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
}, which: function(a) {
  return a.type === "keypress" ? od(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
} }), Rd = rd(Qd), Sd = m({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = m({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = m({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = m({}, Ad, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = fa && "CompositionEvent" in window, be = null;
fa && "documentMode" in document && (be = document.documentMode);
var ce = fa && "TextEvent" in window && !be, de = fa && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return $d.indexOf(b.keyCode) !== -1;
    case "keydown":
      return b.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return typeof a === "object" && "data" in a ? a.data : null;
}
var ie = false;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (b.which !== 32)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie)
    return a === "compositionend" || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length)
          return b.char;
        if (b.which)
          return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && b.locale !== "ko" ? null : b.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b === "input" ? !!le[a.type] : b === "textarea" ? true : false;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({ event: c, listeners: b }));
}
var pe = null, qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b))
    return a;
}
function ve(a, b) {
  if (a === "change")
    return b;
}
var we = false;
if (fa) {
  var xe;
  if (fa) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = typeof ze.oninput === "function";
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if (a.propertyName === "value" && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    a = re;
    if (Kb)
      a(b);
    else {
      Kb = true;
      try {
        Gb(a, b);
      } finally {
        Kb = false, Mb();
      }
    }
  }
}
function Ce(a, b, c) {
  a === "focusin" ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : a === "focusout" && Ae();
}
function De(a) {
  if (a === "selectionchange" || a === "keyup" || a === "keydown")
    return te(qe);
}
function Ee(a, b) {
  if (a === "click")
    return te(b);
}
function Fe(a, b) {
  if (a === "input" || a === "change")
    return te(b);
}
function Ge(a, b) {
  return a === b && (a !== 0 || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = typeof Object.is === "function" ? Object.is : Ge, Ie = Object.prototype.hasOwnProperty;
function Je(a, b) {
  if (He(a, b))
    return true;
  if (typeof a !== "object" || a === null || typeof b !== "object" || b === null)
    return false;
  var c = Object.keys(a), d = Object.keys(b);
  if (c.length !== d.length)
    return false;
  for (d = 0; d < c.length; d++)
    if (!Ie.call(b, c[d]) || !He(a[c[d]], b[c[d]]))
      return false;
  return true;
}
function Ke(a) {
  for (; a && a.firstChild; )
    a = a.firstChild;
  return a;
}
function Le(a, b) {
  var c = Ke(a);
  a = 0;
  for (var d; c; ) {
    if (c.nodeType === 3) {
      d = a + c.textContent.length;
      if (a <= b && d >= b)
        return { node: c, offset: b - a };
      a = d;
    }
    a: {
      for (; c; ) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Ke(c);
  }
}
function Me(a, b) {
  return a && b ? a === b ? true : a && a.nodeType === 3 ? false : b && b.nodeType === 3 ? Me(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : false : false;
}
function Ne() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement; ) {
    try {
      var c = typeof b.contentWindow.location.href === "string";
    } catch (d) {
      c = false;
    }
    if (c)
      a = b.contentWindow;
    else
      break;
    b = Xa(a.document);
  }
  return b;
}
function Oe(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && (b === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || b === "textarea" || a.contentEditable === "true");
}
var Pe = fa && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : c.nodeType === 9 ? c : c.ownerDocument;
  Te || Qe == null || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Oe(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Je(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({ event: b, listeners: d }), b.target = Qe)));
}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
Pc(Oc, 2);
for (var Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve.length; We++)
  Nc.set(Ve[We], 0);
ea("onMouseEnter", ["mouseout", "mouseover"]);
ea("onMouseLeave", ["mouseout", "mouseover"]);
ea("onPointerEnter", ["pointerout", "pointerover"]);
ea("onPointerLeave", ["pointerout", "pointerover"]);
da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
da("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Yb(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = (b & 4) !== 0;
  for (var c = 0; c < a.length; c++) {
    var d = a[c], e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b)
        for (var g2 = d.length - 1; 0 <= g2; g2--) {
          var h = d[g2], k = h.instance, l2 = h.currentTarget;
          h = h.listener;
          if (k !== f2 && e.isPropagationStopped())
            break a;
          Ze(e, h, l2);
          f2 = k;
        }
      else
        for (g2 = 0; g2 < d.length; g2++) {
          h = d[g2];
          k = h.instance;
          l2 = h.currentTarget;
          h = h.listener;
          if (k !== f2 && e.isPropagationStopped())
            break a;
          Ze(e, h, l2);
          f2 = k;
        }
    }
  }
  if (Ub)
    throw a = Vb, Ub = false, Vb = null, a;
}
function G(a, b) {
  var c = $e(b), d = a + "__bubble";
  c.has(d) || (af(b, a, 2, false), c.add(d));
}
var bf = "_reactListening" + Math.random().toString(36).slice(2);
function cf(a) {
  a[bf] || (a[bf] = true, ba.forEach(function(b) {
    Ye.has(b) || df(b, false, a, null);
    df(b, true, a, null);
  }));
}
function df(a, b, c, d) {
  var e = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0, f2 = c;
  a === "selectionchange" && c.nodeType !== 9 && (f2 = c.ownerDocument);
  if (d !== null && !b && Ye.has(a)) {
    if (a !== "scroll")
      return;
    e |= 2;
    f2 = d;
  }
  var g2 = $e(f2), h = a + "__" + (b ? "capture" : "bubble");
  g2.has(h) || (b && (e |= 4), af(f2, a, e, b), g2.add(h));
}
function af(a, b, c, d) {
  var e = Nc.get(b);
  switch (e === void 0 ? 2 : e) {
    case 0:
      e = gd;
      break;
    case 1:
      e = id;
      break;
    default:
      e = hd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Pb || b !== "touchstart" && b !== "touchmove" && b !== "wheel" || (e = true);
  d ? e !== void 0 ? a.addEventListener(b, c, { capture: true, passive: e }) : a.addEventListener(b, c, true) : e !== void 0 ? a.addEventListener(b, c, { passive: e }) : a.addEventListener(b, c, false);
}
function jd(a, b, c, d, e) {
  var f2 = d;
  if ((b & 1) === 0 && (b & 2) === 0 && d !== null)
    a:
      for (; ; ) {
        if (d === null)
          return;
        var g2 = d.tag;
        if (g2 === 3 || g2 === 4) {
          var h = d.stateNode.containerInfo;
          if (h === e || h.nodeType === 8 && h.parentNode === e)
            break;
          if (g2 === 4)
            for (g2 = d.return; g2 !== null; ) {
              var k = g2.tag;
              if (k === 3 || k === 4) {
                if (k = g2.stateNode.containerInfo, k === e || k.nodeType === 8 && k.parentNode === e)
                  return;
              }
              g2 = g2.return;
            }
          for (; h !== null; ) {
            g2 = wc(h);
            if (g2 === null)
              return;
            k = g2.tag;
            if (k === 5 || k === 6) {
              d = f2 = g2;
              continue a;
            }
            h = h.parentNode;
          }
        }
        d = d.return;
      }
  Nb(function() {
    var d2 = f2, e2 = xb(c), g3 = [];
    a: {
      var h2 = Mc.get(a);
      if (h2 !== void 0) {
        var k2 = td, x2 = a;
        switch (a) {
          case "keypress":
            if (od(c) === 0)
              break a;
          case "keydown":
          case "keyup":
            k2 = Rd;
            break;
          case "focusin":
            x2 = "focus";
            k2 = Fd;
            break;
          case "focusout":
            x2 = "blur";
            k2 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k2 = Fd;
            break;
          case "click":
            if (c.button === 2)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k2 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k2 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k2 = Vd;
            break;
          case Ic:
          case Jc:
          case Kc:
            k2 = Hd;
            break;
          case Lc:
            k2 = Xd;
            break;
          case "scroll":
            k2 = vd;
            break;
          case "wheel":
            k2 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k2 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k2 = Td;
        }
        var w = (b & 4) !== 0, z2 = !w && a === "scroll", u2 = w ? h2 !== null ? h2 + "Capture" : null : h2;
        w = [];
        for (var t2 = d2, q2; t2 !== null; ) {
          q2 = t2;
          var v2 = q2.stateNode;
          q2.tag === 5 && v2 !== null && (q2 = v2, u2 !== null && (v2 = Ob(t2, u2), v2 != null && w.push(ef(t2, v2, q2))));
          if (z2)
            break;
          t2 = t2.return;
        }
        0 < w.length && (h2 = new k2(h2, x2, null, c, e2), g3.push({ event: h2, listeners: w }));
      }
    }
    if ((b & 7) === 0) {
      a: {
        h2 = a === "mouseover" || a === "pointerover";
        k2 = a === "mouseout" || a === "pointerout";
        if (h2 && (b & 16) === 0 && (x2 = c.relatedTarget || c.fromElement) && (wc(x2) || x2[ff]))
          break a;
        if (k2 || h2) {
          h2 = e2.window === e2 ? e2 : (h2 = e2.ownerDocument) ? h2.defaultView || h2.parentWindow : window;
          if (k2) {
            if (x2 = c.relatedTarget || c.toElement, k2 = d2, x2 = x2 ? wc(x2) : null, x2 !== null && (z2 = Zb(x2), x2 !== z2 || x2.tag !== 5 && x2.tag !== 6))
              x2 = null;
          } else
            k2 = null, x2 = d2;
          if (k2 !== x2) {
            w = Bd;
            v2 = "onMouseLeave";
            u2 = "onMouseEnter";
            t2 = "mouse";
            if (a === "pointerout" || a === "pointerover")
              w = Td, v2 = "onPointerLeave", u2 = "onPointerEnter", t2 = "pointer";
            z2 = k2 == null ? h2 : ue(k2);
            q2 = x2 == null ? h2 : ue(x2);
            h2 = new w(v2, t2 + "leave", k2, c, e2);
            h2.target = z2;
            h2.relatedTarget = q2;
            v2 = null;
            wc(e2) === d2 && (w = new w(u2, t2 + "enter", x2, c, e2), w.target = q2, w.relatedTarget = z2, v2 = w);
            z2 = v2;
            if (k2 && x2)
              b: {
                w = k2;
                u2 = x2;
                t2 = 0;
                for (q2 = w; q2; q2 = gf(q2))
                  t2++;
                q2 = 0;
                for (v2 = u2; v2; v2 = gf(v2))
                  q2++;
                for (; 0 < t2 - q2; )
                  w = gf(w), t2--;
                for (; 0 < q2 - t2; )
                  u2 = gf(u2), q2--;
                for (; t2--; ) {
                  if (w === u2 || u2 !== null && w === u2.alternate)
                    break b;
                  w = gf(w);
                  u2 = gf(u2);
                }
                w = null;
              }
            else
              w = null;
            k2 !== null && hf(g3, h2, k2, w, false);
            x2 !== null && z2 !== null && hf(g3, z2, x2, w, true);
          }
        }
      }
      a: {
        h2 = d2 ? ue(d2) : window;
        k2 = h2.nodeName && h2.nodeName.toLowerCase();
        if (k2 === "select" || k2 === "input" && h2.type === "file")
          var J2 = ve;
        else if (me(h2))
          if (we)
            J2 = Fe;
          else {
            J2 = De;
            var K2 = Ce;
          }
        else
          (k2 = h2.nodeName) && k2.toLowerCase() === "input" && (h2.type === "checkbox" || h2.type === "radio") && (J2 = Ee);
        if (J2 && (J2 = J2(a, d2))) {
          ne(g3, J2, c, e2);
          break a;
        }
        K2 && K2(a, h2, d2);
        a === "focusout" && (K2 = h2._wrapperState) && K2.controlled && h2.type === "number" && bb(h2, "number", h2.value);
      }
      K2 = d2 ? ue(d2) : window;
      switch (a) {
        case "focusin":
          if (me(K2) || K2.contentEditable === "true")
            Qe = K2, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g3, c, e2);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g3, c, e2);
      }
      var Q2;
      if (ae)
        b: {
          switch (a) {
            case "compositionstart":
              var L2 = "onCompositionStart";
              break b;
            case "compositionend":
              L2 = "onCompositionEnd";
              break b;
            case "compositionupdate":
              L2 = "onCompositionUpdate";
              break b;
          }
          L2 = void 0;
        }
      else
        ie ? ge(a, c) && (L2 = "onCompositionEnd") : a === "keydown" && c.keyCode === 229 && (L2 = "onCompositionStart");
      L2 && (de && c.locale !== "ko" && (ie || L2 !== "onCompositionStart" ? L2 === "onCompositionEnd" && ie && (Q2 = nd()) : (kd = e2, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), K2 = oe(d2, L2), 0 < K2.length && (L2 = new Ld(L2, a, null, c, e2), g3.push({ event: L2, listeners: K2 }), Q2 ? L2.data = Q2 : (Q2 = he(c), Q2 !== null && (L2.data = Q2))));
      if (Q2 = ce ? je(a, c) : ke(a, c))
        d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e2 = new Ld("onBeforeInput", "beforeinput", null, c, e2), g3.push({ event: e2, listeners: d2 }), e2.data = Q2);
    }
    se(g3, b);
  });
}
function ef(a, b, c) {
  return { instance: a, listener: b, currentTarget: c };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; a !== null; ) {
    var e = a, f2 = e.stateNode;
    e.tag === 5 && f2 !== null && (e = f2, f2 = Ob(a, c), f2 != null && d.unshift(ef(a, f2, e)), f2 = Ob(a, b), f2 != null && d.push(ef(a, f2, e)));
    a = a.return;
  }
  return d;
}
function gf(a) {
  if (a === null)
    return null;
  do
    a = a.return;
  while (a && a.tag !== 5);
  return a ? a : null;
}
function hf(a, b, c, d, e) {
  for (var f2 = b._reactName, g2 = []; c !== null && c !== d; ) {
    var h = c, k = h.alternate, l2 = h.stateNode;
    if (k !== null && k === d)
      break;
    h.tag === 5 && l2 !== null && (h = l2, e ? (k = Ob(c, f2), k != null && g2.unshift(ef(c, k, h))) : e || (k = Ob(c, f2), k != null && g2.push(ef(c, k, h))));
    c = c.return;
  }
  g2.length !== 0 && a.push({ event: b, listeners: g2 });
}
function jf() {
}
var kf = null, lf = null;
function mf(a, b) {
  switch (a) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b.autoFocus;
  }
  return false;
}
function nf(a, b) {
  return a === "textarea" || a === "option" || a === "noscript" || typeof b.children === "string" || typeof b.children === "number" || typeof b.dangerouslySetInnerHTML === "object" && b.dangerouslySetInnerHTML !== null && b.dangerouslySetInnerHTML.__html != null;
}
var of = typeof setTimeout === "function" ? setTimeout : void 0, pf = typeof clearTimeout === "function" ? clearTimeout : void 0;
function qf(a) {
  a.nodeType === 1 ? a.textContent = "" : a.nodeType === 9 && (a = a.body, a != null && (a.textContent = ""));
}
function rf(a) {
  for (; a != null; a = a.nextSibling) {
    var b = a.nodeType;
    if (b === 1 || b === 3)
      break;
  }
  return a;
}
function sf(a) {
  a = a.previousSibling;
  for (var b = 0; a; ) {
    if (a.nodeType === 8) {
      var c = a.data;
      if (c === "$" || c === "$!" || c === "$?") {
        if (b === 0)
          return a;
        b--;
      } else
        c === "/$" && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var tf = 0;
function uf(a) {
  return { $$typeof: Ga, toString: a, valueOf: a };
}
var vf = Math.random().toString(36).slice(2), wf = "__reactFiber$" + vf, xf = "__reactProps$" + vf, ff = "__reactContainer$" + vf, yf = "__reactEvents$" + vf;
function wc(a) {
  var b = a[wf];
  if (b)
    return b;
  for (var c = a.parentNode; c; ) {
    if (b = c[ff] || c[wf]) {
      c = b.alternate;
      if (b.child !== null || c !== null && c.child !== null)
        for (a = sf(a); a !== null; ) {
          if (c = a[wf])
            return c;
          a = sf(a);
        }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[wf] || a[ff];
  return !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
}
function ue(a) {
  if (a.tag === 5 || a.tag === 6)
    return a.stateNode;
  throw Error(y(33));
}
function Db(a) {
  return a[xf] || null;
}
function $e(a) {
  var b = a[yf];
  b === void 0 && (b = a[yf] = /* @__PURE__ */ new Set());
  return b;
}
var zf = [], Af = -1;
function Bf(a) {
  return { current: a };
}
function H(a) {
  0 > Af || (a.current = zf[Af], zf[Af] = null, Af--);
}
function I(a, b) {
  Af++;
  zf[Af] = a.current;
  a.current = b;
}
var Cf = {}, M = Bf(Cf), N = Bf(false), Df = Cf;
function Ef(a, b) {
  var c = a.type.contextTypes;
  if (!c)
    return Cf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
    return d.__reactInternalMemoizedMaskedChildContext;
  var e = {}, f2;
  for (f2 in c)
    e[f2] = b[f2];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Ff(a) {
  a = a.childContextTypes;
  return a !== null && a !== void 0;
}
function Gf() {
  H(N);
  H(M);
}
function Hf(a, b, c) {
  if (M.current !== Cf)
    throw Error(y(168));
  I(M, b);
  I(N, c);
}
function If(a, b, c) {
  var d = a.stateNode;
  a = b.childContextTypes;
  if (typeof d.getChildContext !== "function")
    return c;
  d = d.getChildContext();
  for (var e in d)
    if (!(e in a))
      throw Error(y(108, Ra(b) || "Unknown", e));
  return m({}, c, d);
}
function Jf(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Cf;
  Df = M.current;
  I(M, a);
  I(N, N.current);
  return true;
}
function Kf(a, b, c) {
  var d = a.stateNode;
  if (!d)
    throw Error(y(169));
  c ? (a = If(a, b, Df), d.__reactInternalMemoizedMergedChildContext = a, H(N), H(M), I(M, a)) : H(N);
  I(N, c);
}
var Lf = null, Mf = null, Nf = r.unstable_runWithPriority, Of = r.unstable_scheduleCallback, Pf = r.unstable_cancelCallback, Qf = r.unstable_shouldYield, Rf = r.unstable_requestPaint, Sf = r.unstable_now, Tf = r.unstable_getCurrentPriorityLevel, Uf = r.unstable_ImmediatePriority, Vf = r.unstable_UserBlockingPriority, Wf = r.unstable_NormalPriority, Xf = r.unstable_LowPriority, Yf = r.unstable_IdlePriority, Zf = {}, $f = Rf !== void 0 ? Rf : function() {
}, ag = null, bg = null, cg = false, dg = Sf(), O = 1e4 > dg ? Sf : function() {
  return Sf() - dg;
};
function eg() {
  switch (Tf()) {
    case Uf:
      return 99;
    case Vf:
      return 98;
    case Wf:
      return 97;
    case Xf:
      return 96;
    case Yf:
      return 95;
    default:
      throw Error(y(332));
  }
}
function fg(a) {
  switch (a) {
    case 99:
      return Uf;
    case 98:
      return Vf;
    case 97:
      return Wf;
    case 96:
      return Xf;
    case 95:
      return Yf;
    default:
      throw Error(y(332));
  }
}
function gg(a, b) {
  a = fg(a);
  return Nf(a, b);
}
function hg(a, b, c) {
  a = fg(a);
  return Of(a, b, c);
}
function ig() {
  if (bg !== null) {
    var a = bg;
    bg = null;
    Pf(a);
  }
  jg();
}
function jg() {
  if (!cg && ag !== null) {
    cg = true;
    var a = 0;
    try {
      var b = ag;
      gg(99, function() {
        for (; a < b.length; a++) {
          var c = b[a];
          do
            c = c(true);
          while (c !== null);
        }
      });
      ag = null;
    } catch (c) {
      throw ag !== null && (ag = ag.slice(a + 1)), Of(Uf, ig), c;
    } finally {
      cg = false;
    }
  }
}
var kg = ra.ReactCurrentBatchConfig;
function lg(a, b) {
  if (a && a.defaultProps) {
    b = m({}, b);
    a = a.defaultProps;
    for (var c in a)
      b[c] === void 0 && (b[c] = a[c]);
    return b;
  }
  return b;
}
var mg = Bf(null), ng = null, og = null, pg = null;
function qg() {
  pg = og = ng = null;
}
function rg(a) {
  var b = mg.current;
  H(mg);
  a.type._context._currentValue = b;
}
function sg(a, b) {
  for (; a !== null; ) {
    var c = a.alternate;
    if ((a.childLanes & b) === b)
      if (c === null || (c.childLanes & b) === b)
        break;
      else
        c.childLanes |= b;
    else
      a.childLanes |= b, c !== null && (c.childLanes |= b);
    a = a.return;
  }
}
function tg(a, b) {
  ng = a;
  pg = og = null;
  a = a.dependencies;
  a !== null && a.firstContext !== null && ((a.lanes & b) !== 0 && (ug = true), a.firstContext = null);
}
function vg(a, b) {
  if (pg !== a && b !== false && b !== 0) {
    if (typeof b !== "number" || b === 1073741823)
      pg = a, b = 1073741823;
    b = { context: a, observedBits: b, next: null };
    if (og === null) {
      if (ng === null)
        throw Error(y(308));
      og = b;
      ng.dependencies = { lanes: 0, firstContext: b, responders: null };
    } else
      og = og.next = b;
  }
  return a._currentValue;
}
var wg = false;
function xg(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null }, effects: null };
}
function yg(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function zg(a, b) {
  return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null };
}
function Ag(a, b) {
  a = a.updateQueue;
  if (a !== null) {
    a = a.shared;
    var c = a.pending;
    c === null ? b.next = b : (b.next = c.next, c.next = b);
    a.pending = b;
  }
}
function Bg(a, b) {
  var c = a.updateQueue, d = a.alternate;
  if (d !== null && (d = d.updateQueue, c === d)) {
    var e = null, f2 = null;
    c = c.firstBaseUpdate;
    if (c !== null) {
      do {
        var g2 = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
        f2 === null ? e = f2 = g2 : f2 = f2.next = g2;
        c = c.next;
      } while (c !== null);
      f2 === null ? e = f2 = b : f2 = f2.next = b;
    } else
      e = f2 = b;
    c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  a === null ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function Cg(a, b, c, d) {
  var e = a.updateQueue;
  wg = false;
  var f2 = e.firstBaseUpdate, g2 = e.lastBaseUpdate, h = e.shared.pending;
  if (h !== null) {
    e.shared.pending = null;
    var k = h, l2 = k.next;
    k.next = null;
    g2 === null ? f2 = l2 : g2.next = l2;
    g2 = k;
    var n2 = a.alternate;
    if (n2 !== null) {
      n2 = n2.updateQueue;
      var A2 = n2.lastBaseUpdate;
      A2 !== g2 && (A2 === null ? n2.firstBaseUpdate = l2 : A2.next = l2, n2.lastBaseUpdate = k);
    }
  }
  if (f2 !== null) {
    A2 = e.baseState;
    g2 = 0;
    n2 = l2 = k = null;
    do {
      h = f2.lane;
      var p2 = f2.eventTime;
      if ((d & h) === h) {
        n2 !== null && (n2 = n2.next = {
          eventTime: p2,
          lane: 0,
          tag: f2.tag,
          payload: f2.payload,
          callback: f2.callback,
          next: null
        });
        a: {
          var C2 = a, x2 = f2;
          h = b;
          p2 = c;
          switch (x2.tag) {
            case 1:
              C2 = x2.payload;
              if (typeof C2 === "function") {
                A2 = C2.call(p2, A2, h);
                break a;
              }
              A2 = C2;
              break a;
            case 3:
              C2.flags = C2.flags & -4097 | 64;
            case 0:
              C2 = x2.payload;
              h = typeof C2 === "function" ? C2.call(p2, A2, h) : C2;
              if (h === null || h === void 0)
                break a;
              A2 = m({}, A2, h);
              break a;
            case 2:
              wg = true;
          }
        }
        f2.callback !== null && (a.flags |= 32, h = e.effects, h === null ? e.effects = [f2] : h.push(f2));
      } else
        p2 = { eventTime: p2, lane: h, tag: f2.tag, payload: f2.payload, callback: f2.callback, next: null }, n2 === null ? (l2 = n2 = p2, k = A2) : n2 = n2.next = p2, g2 |= h;
      f2 = f2.next;
      if (f2 === null)
        if (h = e.shared.pending, h === null)
          break;
        else
          f2 = h.next, h.next = null, e.lastBaseUpdate = h, e.shared.pending = null;
    } while (1);
    n2 === null && (k = A2);
    e.baseState = k;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = n2;
    Dg |= g2;
    a.lanes = g2;
    a.memoizedState = A2;
  }
}
function Eg(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (a !== null)
    for (b = 0; b < a.length; b++) {
      var d = a[b], e = d.callback;
      if (e !== null) {
        d.callback = null;
        d = c;
        if (typeof e !== "function")
          throw Error(y(191, e));
        e.call(d);
      }
    }
}
var Fg = new aa.Component().refs;
function Gg(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = c === null || c === void 0 ? b : m({}, b, c);
  a.memoizedState = c;
  a.lanes === 0 && (a.updateQueue.baseState = c);
}
var Kg = { isMounted: function(a) {
  return (a = a._reactInternals) ? Zb(a) === a : false;
}, enqueueSetState: function(a, b, c) {
  a = a._reactInternals;
  var d = Hg(), e = Ig(a), f2 = zg(d, e);
  f2.payload = b;
  c !== void 0 && c !== null && (f2.callback = c);
  Ag(a, f2);
  Jg(a, e, d);
}, enqueueReplaceState: function(a, b, c) {
  a = a._reactInternals;
  var d = Hg(), e = Ig(a), f2 = zg(d, e);
  f2.tag = 1;
  f2.payload = b;
  c !== void 0 && c !== null && (f2.callback = c);
  Ag(a, f2);
  Jg(a, e, d);
}, enqueueForceUpdate: function(a, b) {
  a = a._reactInternals;
  var c = Hg(), d = Ig(a), e = zg(c, d);
  e.tag = 2;
  b !== void 0 && b !== null && (e.callback = b);
  Ag(a, e);
  Jg(a, d, c);
} };
function Lg(a, b, c, d, e, f2, g2) {
  a = a.stateNode;
  return typeof a.shouldComponentUpdate === "function" ? a.shouldComponentUpdate(d, f2, g2) : b.prototype && b.prototype.isPureReactComponent ? !Je(c, d) || !Je(e, f2) : true;
}
function Mg(a, b, c) {
  var d = false, e = Cf;
  var f2 = b.contextType;
  typeof f2 === "object" && f2 !== null ? f2 = vg(f2) : (e = Ff(b) ? Df : M.current, d = b.contextTypes, f2 = (d = d !== null && d !== void 0) ? Ef(a, e) : Cf);
  b = new b(c, f2);
  a.memoizedState = b.state !== null && b.state !== void 0 ? b.state : null;
  b.updater = Kg;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b;
}
function Ng(a, b, c, d) {
  a = b.state;
  typeof b.componentWillReceiveProps === "function" && b.componentWillReceiveProps(c, d);
  typeof b.UNSAFE_componentWillReceiveProps === "function" && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && Kg.enqueueReplaceState(b, b.state, null);
}
function Og(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = Fg;
  xg(a);
  var f2 = b.contextType;
  typeof f2 === "object" && f2 !== null ? e.context = vg(f2) : (f2 = Ff(b) ? Df : M.current, e.context = Ef(a, f2));
  Cg(a, c, e, d);
  e.state = a.memoizedState;
  f2 = b.getDerivedStateFromProps;
  typeof f2 === "function" && (Gg(a, b, f2, c), e.state = a.memoizedState);
  typeof b.getDerivedStateFromProps === "function" || typeof e.getSnapshotBeforeUpdate === "function" || typeof e.UNSAFE_componentWillMount !== "function" && typeof e.componentWillMount !== "function" || (b = e.state, typeof e.componentWillMount === "function" && e.componentWillMount(), typeof e.UNSAFE_componentWillMount === "function" && e.UNSAFE_componentWillMount(), b !== e.state && Kg.enqueueReplaceState(e, e.state, null), Cg(a, c, e, d), e.state = a.memoizedState);
  typeof e.componentDidMount === "function" && (a.flags |= 4);
}
var Pg = Array.isArray;
function Qg(a, b, c) {
  a = c.ref;
  if (a !== null && typeof a !== "function" && typeof a !== "object") {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (c.tag !== 1)
          throw Error(y(309));
        var d = c.stateNode;
      }
      if (!d)
        throw Error(y(147, a));
      var e = "" + a;
      if (b !== null && b.ref !== null && typeof b.ref === "function" && b.ref._stringRef === e)
        return b.ref;
      b = function(a2) {
        var b2 = d.refs;
        b2 === Fg && (b2 = d.refs = {});
        a2 === null ? delete b2[e] : b2[e] = a2;
      };
      b._stringRef = e;
      return b;
    }
    if (typeof a !== "string")
      throw Error(y(284));
    if (!c._owner)
      throw Error(y(290, a));
  }
  return a;
}
function Rg(a, b) {
  if (a.type !== "textarea")
    throw Error(y(31, Object.prototype.toString.call(b) === "[object Object]" ? "object with keys {" + Object.keys(b).join(", ") + "}" : b));
}
function Sg(a) {
  function b(b2, c2) {
    if (a) {
      var d2 = b2.lastEffect;
      d2 !== null ? (d2.nextEffect = c2, b2.lastEffect = c2) : b2.firstEffect = b2.lastEffect = c2;
      c2.nextEffect = null;
      c2.flags = 8;
    }
  }
  function c(c2, d2) {
    if (!a)
      return null;
    for (; d2 !== null; )
      b(c2, d2), d2 = d2.sibling;
    return null;
  }
  function d(a2, b2) {
    for (a2 = /* @__PURE__ */ new Map(); b2 !== null; )
      b2.key !== null ? a2.set(b2.key, b2) : a2.set(b2.index, b2), b2 = b2.sibling;
    return a2;
  }
  function e(a2, b2) {
    a2 = Tg(a2, b2);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a)
      return c2;
    d2 = b2.alternate;
    if (d2 !== null)
      return d2 = d2.index, d2 < c2 ? (b2.flags = 2, c2) : d2;
    b2.flags = 2;
    return c2;
  }
  function g2(b2) {
    a && b2.alternate === null && (b2.flags = 2);
    return b2;
  }
  function h(a2, b2, c2, d2) {
    if (b2 === null || b2.tag !== 6)
      return b2 = Ug(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function k(a2, b2, c2, d2) {
    if (b2 !== null && b2.elementType === c2.type)
      return d2 = e(b2, c2.props), d2.ref = Qg(a2, b2, c2), d2.return = a2, d2;
    d2 = Vg(c2.type, c2.key, c2.props, null, a2.mode, d2);
    d2.ref = Qg(a2, b2, c2);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b2, c2, d2) {
    if (b2 === null || b2.tag !== 4 || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation)
      return b2 = Wg(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2.children || []);
    b2.return = a2;
    return b2;
  }
  function n2(a2, b2, c2, d2, f3) {
    if (b2 === null || b2.tag !== 7)
      return b2 = Xg(c2, a2.mode, d2, f3), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function A2(a2, b2, c2) {
    if (typeof b2 === "string" || typeof b2 === "number")
      return b2 = Ug("" + b2, a2.mode, c2), b2.return = a2, b2;
    if (typeof b2 === "object" && b2 !== null) {
      switch (b2.$$typeof) {
        case sa:
          return c2 = Vg(b2.type, b2.key, b2.props, null, a2.mode, c2), c2.ref = Qg(a2, null, b2), c2.return = a2, c2;
        case ta:
          return b2 = Wg(b2, a2.mode, c2), b2.return = a2, b2;
      }
      if (Pg(b2) || La(b2))
        return b2 = Xg(b2, a2.mode, c2, null), b2.return = a2, b2;
      Rg(a2, b2);
    }
    return null;
  }
  function p2(a2, b2, c2, d2) {
    var e2 = b2 !== null ? b2.key : null;
    if (typeof c2 === "string" || typeof c2 === "number")
      return e2 !== null ? null : h(a2, b2, "" + c2, d2);
    if (typeof c2 === "object" && c2 !== null) {
      switch (c2.$$typeof) {
        case sa:
          return c2.key === e2 ? c2.type === ua ? n2(a2, b2, c2.props.children, d2, e2) : k(a2, b2, c2, d2) : null;
        case ta:
          return c2.key === e2 ? l2(a2, b2, c2, d2) : null;
      }
      if (Pg(c2) || La(c2))
        return e2 !== null ? null : n2(a2, b2, c2, d2, null);
      Rg(a2, c2);
    }
    return null;
  }
  function C2(a2, b2, c2, d2, e2) {
    if (typeof d2 === "string" || typeof d2 === "number")
      return a2 = a2.get(c2) || null, h(b2, a2, "" + d2, e2);
    if (typeof d2 === "object" && d2 !== null) {
      switch (d2.$$typeof) {
        case sa:
          return a2 = a2.get(d2.key === null ? c2 : d2.key) || null, d2.type === ua ? n2(b2, a2, d2.props.children, e2, d2.key) : k(b2, a2, d2, e2);
        case ta:
          return a2 = a2.get(d2.key === null ? c2 : d2.key) || null, l2(b2, a2, d2, e2);
      }
      if (Pg(d2) || La(d2))
        return a2 = a2.get(c2) || null, n2(b2, a2, d2, e2, null);
      Rg(b2, d2);
    }
    return null;
  }
  function x2(e2, g3, h2, k2) {
    for (var l3 = null, t2 = null, u2 = g3, z2 = g3 = 0, q2 = null; u2 !== null && z2 < h2.length; z2++) {
      u2.index > z2 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var n3 = p2(e2, u2, h2[z2], k2);
      if (n3 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a && u2 && n3.alternate === null && b(e2, u2);
      g3 = f2(n3, g3, z2);
      t2 === null ? l3 = n3 : t2.sibling = n3;
      t2 = n3;
      u2 = q2;
    }
    if (z2 === h2.length)
      return c(e2, u2), l3;
    if (u2 === null) {
      for (; z2 < h2.length; z2++)
        u2 = A2(e2, h2[z2], k2), u2 !== null && (g3 = f2(u2, g3, z2), t2 === null ? l3 = u2 : t2.sibling = u2, t2 = u2);
      return l3;
    }
    for (u2 = d(e2, u2); z2 < h2.length; z2++)
      q2 = C2(u2, e2, z2, h2[z2], k2), q2 !== null && (a && q2.alternate !== null && u2.delete(q2.key === null ? z2 : q2.key), g3 = f2(q2, g3, z2), t2 === null ? l3 = q2 : t2.sibling = q2, t2 = q2);
    a && u2.forEach(function(a2) {
      return b(e2, a2);
    });
    return l3;
  }
  function w(e2, g3, h2, k2) {
    var l3 = La(h2);
    if (typeof l3 !== "function")
      throw Error(y(150));
    h2 = l3.call(h2);
    if (h2 == null)
      throw Error(y(151));
    for (var t2 = l3 = null, u2 = g3, z2 = g3 = 0, q2 = null, n3 = h2.next(); u2 !== null && !n3.done; z2++, n3 = h2.next()) {
      u2.index > z2 ? (q2 = u2, u2 = null) : q2 = u2.sibling;
      var w2 = p2(e2, u2, n3.value, k2);
      if (w2 === null) {
        u2 === null && (u2 = q2);
        break;
      }
      a && u2 && w2.alternate === null && b(e2, u2);
      g3 = f2(w2, g3, z2);
      t2 === null ? l3 = w2 : t2.sibling = w2;
      t2 = w2;
      u2 = q2;
    }
    if (n3.done)
      return c(e2, u2), l3;
    if (u2 === null) {
      for (; !n3.done; z2++, n3 = h2.next())
        n3 = A2(e2, n3.value, k2), n3 !== null && (g3 = f2(n3, g3, z2), t2 === null ? l3 = n3 : t2.sibling = n3, t2 = n3);
      return l3;
    }
    for (u2 = d(e2, u2); !n3.done; z2++, n3 = h2.next())
      n3 = C2(u2, e2, z2, n3.value, k2), n3 !== null && (a && n3.alternate !== null && u2.delete(n3.key === null ? z2 : n3.key), g3 = f2(n3, g3, z2), t2 === null ? l3 = n3 : t2.sibling = n3, t2 = n3);
    a && u2.forEach(function(a2) {
      return b(e2, a2);
    });
    return l3;
  }
  return function(a2, d2, f3, h2) {
    var k2 = typeof f3 === "object" && f3 !== null && f3.type === ua && f3.key === null;
    k2 && (f3 = f3.props.children);
    var l3 = typeof f3 === "object" && f3 !== null;
    if (l3)
      switch (f3.$$typeof) {
        case sa:
          a: {
            l3 = f3.key;
            for (k2 = d2; k2 !== null; ) {
              if (k2.key === l3) {
                switch (k2.tag) {
                  case 7:
                    if (f3.type === ua) {
                      c(a2, k2.sibling);
                      d2 = e(k2, f3.props.children);
                      d2.return = a2;
                      a2 = d2;
                      break a;
                    }
                    break;
                  default:
                    if (k2.elementType === f3.type) {
                      c(a2, k2.sibling);
                      d2 = e(k2, f3.props);
                      d2.ref = Qg(a2, k2, f3);
                      d2.return = a2;
                      a2 = d2;
                      break a;
                    }
                }
                c(a2, k2);
                break;
              } else
                b(a2, k2);
              k2 = k2.sibling;
            }
            f3.type === ua ? (d2 = Xg(f3.props.children, a2.mode, h2, f3.key), d2.return = a2, a2 = d2) : (h2 = Vg(f3.type, f3.key, f3.props, null, a2.mode, h2), h2.ref = Qg(a2, d2, f3), h2.return = a2, a2 = h2);
          }
          return g2(a2);
        case ta:
          a: {
            for (k2 = f3.key; d2 !== null; ) {
              if (d2.key === k2)
                if (d2.tag === 4 && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                  c(a2, d2.sibling);
                  d2 = e(d2, f3.children || []);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                } else {
                  c(a2, d2);
                  break;
                }
              else
                b(a2, d2);
              d2 = d2.sibling;
            }
            d2 = Wg(f3, a2.mode, h2);
            d2.return = a2;
            a2 = d2;
          }
          return g2(a2);
      }
    if (typeof f3 === "string" || typeof f3 === "number")
      return f3 = "" + f3, d2 !== null && d2.tag === 6 ? (c(a2, d2.sibling), d2 = e(d2, f3), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = Ug(f3, a2.mode, h2), d2.return = a2, a2 = d2), g2(a2);
    if (Pg(f3))
      return x2(a2, d2, f3, h2);
    if (La(f3))
      return w(a2, d2, f3, h2);
    l3 && Rg(a2, f3);
    if (typeof f3 === "undefined" && !k2)
      switch (a2.tag) {
        case 1:
        case 22:
        case 0:
        case 11:
        case 15:
          throw Error(y(152, Ra(a2.type) || "Component"));
      }
    return c(a2, d2);
  };
}
var Yg = Sg(true), Zg = Sg(false), $g = {}, ah = Bf($g), bh = Bf($g), ch = Bf($g);
function dh(a) {
  if (a === $g)
    throw Error(y(174));
  return a;
}
function eh(a, b) {
  I(ch, b);
  I(bh, a);
  I(ah, $g);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : mb(null, "");
      break;
    default:
      a = a === 8 ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = mb(b, a);
  }
  H(ah);
  I(ah, b);
}
function fh() {
  H(ah);
  H(bh);
  H(ch);
}
function gh(a) {
  dh(ch.current);
  var b = dh(ah.current);
  var c = mb(b, a.type);
  b !== c && (I(bh, a), I(ah, c));
}
function hh(a) {
  bh.current === a && (H(ah), H(bh));
}
var P = Bf(0);
function ih(a) {
  for (var b = a; b !== null; ) {
    if (b.tag === 13) {
      var c = b.memoizedState;
      if (c !== null && (c = c.dehydrated, c === null || c.data === "$?" || c.data === "$!"))
        return b;
    } else if (b.tag === 19 && b.memoizedProps.revealOrder !== void 0) {
      if ((b.flags & 64) !== 0)
        return b;
    } else if (b.child !== null) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a)
      break;
    for (; b.sibling === null; ) {
      if (b.return === null || b.return === a)
        return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var jh = null, kh = null, lh = false;
function mh(a, b) {
  var c = nh(5, null, null, 0);
  c.elementType = "DELETED";
  c.type = "DELETED";
  c.stateNode = b;
  c.return = a;
  c.flags = 8;
  a.lastEffect !== null ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
}
function oh(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = b.nodeType !== 1 || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return b !== null ? (a.stateNode = b, true) : false;
    case 6:
      return b = a.pendingProps === "" || b.nodeType !== 3 ? null : b, b !== null ? (a.stateNode = b, true) : false;
    case 13:
      return false;
    default:
      return false;
  }
}
function ph(a) {
  if (lh) {
    var b = kh;
    if (b) {
      var c = b;
      if (!oh(a, b)) {
        b = rf(c.nextSibling);
        if (!b || !oh(a, b)) {
          a.flags = a.flags & -1025 | 2;
          lh = false;
          jh = a;
          return;
        }
        mh(jh, c);
      }
      jh = a;
      kh = rf(b.firstChild);
    } else
      a.flags = a.flags & -1025 | 2, lh = false, jh = a;
  }
}
function qh(a) {
  for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
    a = a.return;
  jh = a;
}
function rh(a) {
  if (a !== jh)
    return false;
  if (!lh)
    return qh(a), lh = true, false;
  var b = a.type;
  if (a.tag !== 5 || b !== "head" && b !== "body" && !nf(b, a.memoizedProps))
    for (b = kh; b; )
      mh(a, b), b = rf(b.nextSibling);
  qh(a);
  if (a.tag === 13) {
    a = a.memoizedState;
    a = a !== null ? a.dehydrated : null;
    if (!a)
      throw Error(y(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a; ) {
        if (a.nodeType === 8) {
          var c = a.data;
          if (c === "/$") {
            if (b === 0) {
              kh = rf(a.nextSibling);
              break a;
            }
            b--;
          } else
            c !== "$" && c !== "$!" && c !== "$?" || b++;
        }
        a = a.nextSibling;
      }
      kh = null;
    }
  } else
    kh = jh ? rf(a.stateNode.nextSibling) : null;
  return true;
}
function sh() {
  kh = jh = null;
  lh = false;
}
var th = [];
function uh() {
  for (var a = 0; a < th.length; a++)
    th[a]._workInProgressVersionPrimary = null;
  th.length = 0;
}
var vh = ra.ReactCurrentDispatcher, wh = ra.ReactCurrentBatchConfig, xh = 0, R = null, S = null, T = null, yh = false, zh = false;
function Ah() {
  throw Error(y(321));
}
function Bh(a, b) {
  if (b === null)
    return false;
  for (var c = 0; c < b.length && c < a.length; c++)
    if (!He(a[c], b[c]))
      return false;
  return true;
}
function Ch(a, b, c, d, e, f2) {
  xh = f2;
  R = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  vh.current = a === null || a.memoizedState === null ? Dh : Eh;
  a = c(d, e);
  if (zh) {
    f2 = 0;
    do {
      zh = false;
      if (!(25 > f2))
        throw Error(y(301));
      f2 += 1;
      T = S = null;
      b.updateQueue = null;
      vh.current = Fh;
      a = c(d, e);
    } while (zh);
  }
  vh.current = Gh;
  b = S !== null && S.next !== null;
  xh = 0;
  T = S = R = null;
  yh = false;
  if (b)
    throw Error(y(300));
  return a;
}
function Hh() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  T === null ? R.memoizedState = T = a : T = T.next = a;
  return T;
}
function Ih() {
  if (S === null) {
    var a = R.alternate;
    a = a !== null ? a.memoizedState : null;
  } else
    a = S.next;
  var b = T === null ? R.memoizedState : T.next;
  if (b !== null)
    T = b, S = a;
  else {
    if (a === null)
      throw Error(y(310));
    S = a;
    a = { memoizedState: S.memoizedState, baseState: S.baseState, baseQueue: S.baseQueue, queue: S.queue, next: null };
    T === null ? R.memoizedState = T = a : T = T.next = a;
  }
  return T;
}
function Jh(a, b) {
  return typeof b === "function" ? b(a) : b;
}
function Kh(a) {
  var b = Ih(), c = b.queue;
  if (c === null)
    throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = S, e = d.baseQueue, f2 = c.pending;
  if (f2 !== null) {
    if (e !== null) {
      var g2 = e.next;
      e.next = f2.next;
      f2.next = g2;
    }
    d.baseQueue = e = f2;
    c.pending = null;
  }
  if (e !== null) {
    e = e.next;
    d = d.baseState;
    var h = g2 = f2 = null, k = e;
    do {
      var l2 = k.lane;
      if ((xh & l2) === l2)
        h !== null && (h = h.next = { lane: 0, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null }), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);
      else {
        var n2 = {
          lane: l2,
          action: k.action,
          eagerReducer: k.eagerReducer,
          eagerState: k.eagerState,
          next: null
        };
        h === null ? (g2 = h = n2, f2 = d) : h = h.next = n2;
        R.lanes |= l2;
        Dg |= l2;
      }
      k = k.next;
    } while (k !== null && k !== e);
    h === null ? f2 = d : h.next = g2;
    He(d, b.memoizedState) || (ug = true);
    b.memoizedState = d;
    b.baseState = f2;
    b.baseQueue = h;
    c.lastRenderedState = d;
  }
  return [b.memoizedState, c.dispatch];
}
function Lh(a) {
  var b = Ih(), c = b.queue;
  if (c === null)
    throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch, e = c.pending, f2 = b.memoizedState;
  if (e !== null) {
    c.pending = null;
    var g2 = e = e.next;
    do
      f2 = a(f2, g2.action), g2 = g2.next;
    while (g2 !== e);
    He(f2, b.memoizedState) || (ug = true);
    b.memoizedState = f2;
    b.baseQueue === null && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function Mh(a, b, c) {
  var d = b._getVersion;
  d = d(b._source);
  var e = b._workInProgressVersionPrimary;
  if (e !== null)
    a = e === d;
  else if (a = a.mutableReadLanes, a = (xh & a) === a)
    b._workInProgressVersionPrimary = d, th.push(b);
  if (a)
    return c(b._source);
  th.push(b);
  throw Error(y(350));
}
function Nh(a, b, c, d) {
  var e = U;
  if (e === null)
    throw Error(y(349));
  var f2 = b._getVersion, g2 = f2(b._source), h = vh.current, k = h.useState(function() {
    return Mh(e, b, c);
  }), l2 = k[1], n2 = k[0];
  k = T;
  var A2 = a.memoizedState, p2 = A2.refs, C2 = p2.getSnapshot, x2 = A2.source;
  A2 = A2.subscribe;
  var w = R;
  a.memoizedState = { refs: p2, source: b, subscribe: d };
  h.useEffect(function() {
    p2.getSnapshot = c;
    p2.setSnapshot = l2;
    var a2 = f2(b._source);
    if (!He(g2, a2)) {
      a2 = c(b._source);
      He(n2, a2) || (l2(a2), a2 = Ig(w), e.mutableReadLanes |= a2 & e.pendingLanes);
      a2 = e.mutableReadLanes;
      e.entangledLanes |= a2;
      for (var d2 = e.entanglements, h2 = a2; 0 < h2; ) {
        var k2 = 31 - Vc(h2), v2 = 1 << k2;
        d2[k2] |= a2;
        h2 &= ~v2;
      }
    }
  }, [c, b, d]);
  h.useEffect(function() {
    return d(b._source, function() {
      var a2 = p2.getSnapshot, c2 = p2.setSnapshot;
      try {
        c2(a2(b._source));
        var d2 = Ig(w);
        e.mutableReadLanes |= d2 & e.pendingLanes;
      } catch (q2) {
        c2(function() {
          throw q2;
        });
      }
    });
  }, [b, d]);
  He(C2, c) && He(x2, b) && He(A2, d) || (a = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: n2 }, a.dispatch = l2 = Oh.bind(null, R, a), k.queue = a, k.baseQueue = null, n2 = Mh(e, b, c), k.memoizedState = k.baseState = n2);
  return n2;
}
function Ph(a, b, c) {
  var d = Ih();
  return Nh(d, a, b, c);
}
function Qh(a) {
  var b = Hh();
  typeof a === "function" && (a = a());
  b.memoizedState = b.baseState = a;
  a = b.queue = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a };
  a = a.dispatch = Oh.bind(null, R, a);
  return [b.memoizedState, a];
}
function Rh(a, b, c, d) {
  a = { tag: a, create: b, destroy: c, deps: d, next: null };
  b = R.updateQueue;
  b === null ? (b = { lastEffect: null }, R.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, c === null ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function Sh(a) {
  var b = Hh();
  a = { current: a };
  return b.memoizedState = a;
}
function Th() {
  return Ih().memoizedState;
}
function Uh(a, b, c, d) {
  var e = Hh();
  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, void 0, d === void 0 ? null : d);
}
function Vh(a, b, c, d) {
  var e = Ih();
  d = d === void 0 ? null : d;
  var f2 = void 0;
  if (S !== null) {
    var g2 = S.memoizedState;
    f2 = g2.destroy;
    if (d !== null && Bh(d, g2.deps)) {
      Rh(b, c, f2, d);
      return;
    }
  }
  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, f2, d);
}
function Wh(a, b) {
  return Uh(516, 4, a, b);
}
function Xh(a, b) {
  return Vh(516, 4, a, b);
}
function Yh(a, b) {
  return Vh(4, 2, a, b);
}
function Zh(a, b) {
  if (typeof b === "function")
    return a = a(), b(a), function() {
      b(null);
    };
  if (b !== null && b !== void 0)
    return a = a(), b.current = a, function() {
      b.current = null;
    };
}
function $h(a, b, c) {
  c = c !== null && c !== void 0 ? c.concat([a]) : null;
  return Vh(4, 2, Zh.bind(null, b, a), c);
}
function ai() {
}
function bi(a, b) {
  var c = Ih();
  b = b === void 0 ? null : b;
  var d = c.memoizedState;
  if (d !== null && b !== null && Bh(b, d[1]))
    return d[0];
  c.memoizedState = [a, b];
  return a;
}
function ci(a, b) {
  var c = Ih();
  b = b === void 0 ? null : b;
  var d = c.memoizedState;
  if (d !== null && b !== null && Bh(b, d[1]))
    return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function di(a, b) {
  var c = eg();
  gg(98 > c ? 98 : c, function() {
    a(true);
  });
  gg(97 < c ? 97 : c, function() {
    var c2 = wh.transition;
    wh.transition = 1;
    try {
      a(false), b();
    } finally {
      wh.transition = c2;
    }
  });
}
function Oh(a, b, c) {
  var d = Hg(), e = Ig(a), f2 = { lane: e, action: c, eagerReducer: null, eagerState: null, next: null }, g2 = b.pending;
  g2 === null ? f2.next = f2 : (f2.next = g2.next, g2.next = f2);
  b.pending = f2;
  g2 = a.alternate;
  if (a === R || g2 !== null && g2 === R)
    zh = yh = true;
  else {
    if (a.lanes === 0 && (g2 === null || g2.lanes === 0) && (g2 = b.lastRenderedReducer, g2 !== null))
      try {
        var h = b.lastRenderedState, k = g2(h, c);
        f2.eagerReducer = g2;
        f2.eagerState = k;
        if (He(k, h))
          return;
      } catch (l2) {
      } finally {
      }
    Jg(a, e, d);
  }
}
var Gh = { readContext: vg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: false }, Dh = { readContext: vg, useCallback: function(a, b) {
  Hh().memoizedState = [a, b === void 0 ? null : b];
  return a;
}, useContext: vg, useEffect: Wh, useImperativeHandle: function(a, b, c) {
  c = c !== null && c !== void 0 ? c.concat([a]) : null;
  return Uh(4, 2, Zh.bind(null, b, a), c);
}, useLayoutEffect: function(a, b) {
  return Uh(4, 2, a, b);
}, useMemo: function(a, b) {
  var c = Hh();
  b = b === void 0 ? null : b;
  a = a();
  c.memoizedState = [a, b];
  return a;
}, useReducer: function(a, b, c) {
  var d = Hh();
  b = c !== void 0 ? c(b) : b;
  d.memoizedState = d.baseState = b;
  a = d.queue = { pending: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
  a = a.dispatch = Oh.bind(null, R, a);
  return [d.memoizedState, a];
}, useRef: Sh, useState: Qh, useDebugValue: ai, useDeferredValue: function(a) {
  var b = Qh(a), c = b[0], d = b[1];
  Wh(function() {
    var b2 = wh.transition;
    wh.transition = 1;
    try {
      d(a);
    } finally {
      wh.transition = b2;
    }
  }, [a]);
  return c;
}, useTransition: function() {
  var a = Qh(false), b = a[0];
  a = di.bind(null, a[1]);
  Sh(a);
  return [a, b];
}, useMutableSource: function(a, b, c) {
  var d = Hh();
  d.memoizedState = { refs: { getSnapshot: b, setSnapshot: null }, source: a, subscribe: c };
  return Nh(d, a, b, c);
}, useOpaqueIdentifier: function() {
  if (lh) {
    var a = false, b = uf(function() {
      a || (a = true, c("r:" + (tf++).toString(36)));
      throw Error(y(355));
    }), c = Qh(b)[1];
    (R.mode & 2) === 0 && (R.flags |= 516, Rh(5, function() {
      c("r:" + (tf++).toString(36));
    }, void 0, null));
    return b;
  }
  b = "r:" + (tf++).toString(36);
  Qh(b);
  return b;
}, unstable_isNewReconciler: false }, Eh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Kh, useRef: Th, useState: function() {
  return Kh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a) {
  var b = Kh(Jh), c = b[0], d = b[1];
  Xh(function() {
    var b2 = wh.transition;
    wh.transition = 1;
    try {
      d(a);
    } finally {
      wh.transition = b2;
    }
  }, [a]);
  return c;
}, useTransition: function() {
  var a = Kh(Jh)[0];
  return [
    Th().current,
    a
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Kh(Jh)[0];
}, unstable_isNewReconciler: false }, Fh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Lh, useRef: Th, useState: function() {
  return Lh(Jh);
}, useDebugValue: ai, useDeferredValue: function(a) {
  var b = Lh(Jh), c = b[0], d = b[1];
  Xh(function() {
    var b2 = wh.transition;
    wh.transition = 1;
    try {
      d(a);
    } finally {
      wh.transition = b2;
    }
  }, [a]);
  return c;
}, useTransition: function() {
  var a = Lh(Jh)[0];
  return [
    Th().current,
    a
  ];
}, useMutableSource: Ph, useOpaqueIdentifier: function() {
  return Lh(Jh)[0];
}, unstable_isNewReconciler: false }, ei = ra.ReactCurrentOwner, ug = false;
function fi(a, b, c, d) {
  b.child = a === null ? Zg(b, null, c, d) : Yg(b, a.child, c, d);
}
function gi(a, b, c, d, e) {
  c = c.render;
  var f2 = b.ref;
  tg(b, e);
  d = Ch(a, b, c, d, f2, e);
  if (a !== null && !ug)
    return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, d, e);
  return b.child;
}
function ii(a, b, c, d, e, f2) {
  if (a === null) {
    var g2 = c.type;
    if (typeof g2 === "function" && !ji(g2) && g2.defaultProps === void 0 && c.compare === null && c.defaultProps === void 0)
      return b.tag = 15, b.type = g2, ki(a, b, g2, d, e, f2);
    a = Vg(c.type, null, d, b, b.mode, f2);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  g2 = a.child;
  if ((e & f2) === 0 && (e = g2.memoizedProps, c = c.compare, c = c !== null ? c : Je, c(e, d) && a.ref === b.ref))
    return hi(a, b, f2);
  b.flags |= 1;
  a = Tg(g2, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function ki(a, b, c, d, e, f2) {
  if (a !== null && Je(a.memoizedProps, d) && a.ref === b.ref)
    if (ug = false, (f2 & e) !== 0)
      (a.flags & 16384) !== 0 && (ug = true);
    else
      return b.lanes = a.lanes, hi(a, b, f2);
  return li(a, b, c, d, f2);
}
function mi(a, b, c) {
  var d = b.pendingProps, e = d.children, f2 = a !== null ? a.memoizedState : null;
  if (d.mode === "hidden" || d.mode === "unstable-defer-without-hiding")
    if ((b.mode & 4) === 0)
      b.memoizedState = { baseLanes: 0 }, ni(b, c);
    else if ((c & 1073741824) !== 0)
      b.memoizedState = { baseLanes: 0 }, ni(b, f2 !== null ? f2.baseLanes : c);
    else
      return a = f2 !== null ? f2.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a }, ni(b, a), null;
  else
    f2 !== null ? (d = f2.baseLanes | c, b.memoizedState = null) : d = c, ni(b, d);
  fi(a, b, e, c);
  return b.child;
}
function oi(a, b) {
  var c = b.ref;
  if (a === null && c !== null || a !== null && a.ref !== c)
    b.flags |= 128;
}
function li(a, b, c, d, e) {
  var f2 = Ff(c) ? Df : M.current;
  f2 = Ef(b, f2);
  tg(b, e);
  c = Ch(a, b, c, d, f2, e);
  if (a !== null && !ug)
    return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, c, e);
  return b.child;
}
function pi(a, b, c, d, e) {
  if (Ff(c)) {
    var f2 = true;
    Jf(b);
  } else
    f2 = false;
  tg(b, e);
  if (b.stateNode === null)
    a !== null && (a.alternate = null, b.alternate = null, b.flags |= 2), Mg(b, c, d), Og(b, c, d, e), d = true;
  else if (a === null) {
    var g2 = b.stateNode, h = b.memoizedProps;
    g2.props = h;
    var k = g2.context, l2 = c.contextType;
    typeof l2 === "object" && l2 !== null ? l2 = vg(l2) : (l2 = Ff(c) ? Df : M.current, l2 = Ef(b, l2));
    var n2 = c.getDerivedStateFromProps, A2 = typeof n2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
    A2 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h !== d || k !== l2) && Ng(b, g2, d, l2);
    wg = false;
    var p2 = b.memoizedState;
    g2.state = p2;
    Cg(b, d, g2, e);
    k = b.memoizedState;
    h !== d || p2 !== k || N.current || wg ? (typeof n2 === "function" && (Gg(b, c, n2, d), k = b.memoizedState), (h = wg || Lg(b, c, h, d, p2, k, l2)) ? (A2 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b.flags |= 4)) : (typeof g2.componentDidMount === "function" && (b.flags |= 4), b.memoizedProps = d, b.memoizedState = k), g2.props = d, g2.state = k, g2.context = l2, d = h) : (typeof g2.componentDidMount === "function" && (b.flags |= 4), d = false);
  } else {
    g2 = b.stateNode;
    yg(a, b);
    h = b.memoizedProps;
    l2 = b.type === b.elementType ? h : lg(b.type, h);
    g2.props = l2;
    A2 = b.pendingProps;
    p2 = g2.context;
    k = c.contextType;
    typeof k === "object" && k !== null ? k = vg(k) : (k = Ff(c) ? Df : M.current, k = Ef(b, k));
    var C2 = c.getDerivedStateFromProps;
    (n2 = typeof C2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h !== A2 || p2 !== k) && Ng(b, g2, d, k);
    wg = false;
    p2 = b.memoizedState;
    g2.state = p2;
    Cg(b, d, g2, e);
    var x2 = b.memoizedState;
    h !== A2 || p2 !== x2 || N.current || wg ? (typeof C2 === "function" && (Gg(b, c, C2, d), x2 = b.memoizedState), (l2 = wg || Lg(b, c, l2, d, p2, x2, k)) ? (n2 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d, x2, k), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d, x2, k)), typeof g2.componentDidUpdate === "function" && (b.flags |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b.flags |= 256)) : (typeof g2.componentDidUpdate !== "function" || h === a.memoizedProps && p2 === a.memoizedState || (b.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h === a.memoizedProps && p2 === a.memoizedState || (b.flags |= 256), b.memoizedProps = d, b.memoizedState = x2), g2.props = d, g2.state = x2, g2.context = k, d = l2) : (typeof g2.componentDidUpdate !== "function" || h === a.memoizedProps && p2 === a.memoizedState || (b.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h === a.memoizedProps && p2 === a.memoizedState || (b.flags |= 256), d = false);
  }
  return qi(a, b, c, d, f2, e);
}
function qi(a, b, c, d, e, f2) {
  oi(a, b);
  var g2 = (b.flags & 64) !== 0;
  if (!d && !g2)
    return e && Kf(b, c, false), hi(a, b, f2);
  d = b.stateNode;
  ei.current = b;
  var h = g2 && typeof c.getDerivedStateFromError !== "function" ? null : d.render();
  b.flags |= 1;
  a !== null && g2 ? (b.child = Yg(b, a.child, null, f2), b.child = Yg(b, null, h, f2)) : fi(a, b, h, f2);
  b.memoizedState = d.state;
  e && Kf(b, c, true);
  return b.child;
}
function ri(a) {
  var b = a.stateNode;
  b.pendingContext ? Hf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Hf(a, b.context, false);
  eh(a, b.containerInfo);
}
var si = { dehydrated: null, retryLane: 0 };
function ti(a, b, c) {
  var d = b.pendingProps, e = P.current, f2 = false, g2;
  (g2 = (b.flags & 64) !== 0) || (g2 = a !== null && a.memoizedState === null ? false : (e & 2) !== 0);
  g2 ? (f2 = true, b.flags &= -65) : a !== null && a.memoizedState === null || d.fallback === void 0 || d.unstable_avoidThisFallback === true || (e |= 1);
  I(P, e & 1);
  if (a === null) {
    d.fallback !== void 0 && ph(b);
    a = d.children;
    e = d.fallback;
    if (f2)
      return a = ui(b, a, e, c), b.child.memoizedState = { baseLanes: c }, b.memoizedState = si, a;
    if (typeof d.unstable_expectedLoadTime === "number")
      return a = ui(b, a, e, c), b.child.memoizedState = { baseLanes: c }, b.memoizedState = si, b.lanes = 33554432, a;
    c = vi({ mode: "visible", children: a }, b.mode, c, null);
    c.return = b;
    return b.child = c;
  }
  if (a.memoizedState !== null) {
    if (f2)
      return d = wi(a, b, d.children, d.fallback, c), f2 = b.child, e = a.child.memoizedState, f2.memoizedState = e === null ? { baseLanes: c } : { baseLanes: e.baseLanes | c }, f2.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
    c = xi(a, b, d.children, c);
    b.memoizedState = null;
    return c;
  }
  if (f2)
    return d = wi(a, b, d.children, d.fallback, c), f2 = b.child, e = a.child.memoizedState, f2.memoizedState = e === null ? { baseLanes: c } : { baseLanes: e.baseLanes | c }, f2.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
  c = xi(a, b, d.children, c);
  b.memoizedState = null;
  return c;
}
function ui(a, b, c, d) {
  var e = a.mode, f2 = a.child;
  b = { mode: "hidden", children: b };
  (e & 2) === 0 && f2 !== null ? (f2.childLanes = 0, f2.pendingProps = b) : f2 = vi(b, e, 0, null);
  c = Xg(c, e, d, null);
  f2.return = a;
  c.return = a;
  f2.sibling = c;
  a.child = f2;
  return c;
}
function xi(a, b, c, d) {
  var e = a.child;
  a = e.sibling;
  c = Tg(e, { mode: "visible", children: c });
  (b.mode & 2) === 0 && (c.lanes = d);
  c.return = b;
  c.sibling = null;
  a !== null && (a.nextEffect = null, a.flags = 8, b.firstEffect = b.lastEffect = a);
  return b.child = c;
}
function wi(a, b, c, d, e) {
  var f2 = b.mode, g2 = a.child;
  a = g2.sibling;
  var h = { mode: "hidden", children: c };
  (f2 & 2) === 0 && b.child !== g2 ? (c = b.child, c.childLanes = 0, c.pendingProps = h, g2 = c.lastEffect, g2 !== null ? (b.firstEffect = c.firstEffect, b.lastEffect = g2, g2.nextEffect = null) : b.firstEffect = b.lastEffect = null) : c = Tg(g2, h);
  a !== null ? d = Tg(a, d) : (d = Xg(d, f2, e, null), d.flags |= 2);
  d.return = b;
  c.return = b;
  c.sibling = d;
  b.child = c;
  return d;
}
function yi(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  c !== null && (c.lanes |= b);
  sg(a.return, b);
}
function zi(a, b, c, d, e, f2) {
  var g2 = a.memoizedState;
  g2 === null ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e, lastEffect: f2 } : (g2.isBackwards = b, g2.rendering = null, g2.renderingStartTime = 0, g2.last = d, g2.tail = c, g2.tailMode = e, g2.lastEffect = f2);
}
function Ai(a, b, c) {
  var d = b.pendingProps, e = d.revealOrder, f2 = d.tail;
  fi(a, b, d.children, c);
  d = P.current;
  if ((d & 2) !== 0)
    d = d & 1 | 2, b.flags |= 64;
  else {
    if (a !== null && (a.flags & 64) !== 0)
      a:
        for (a = b.child; a !== null; ) {
          if (a.tag === 13)
            a.memoizedState !== null && yi(a, c);
          else if (a.tag === 19)
            yi(a, c);
          else if (a.child !== null) {
            a.child.return = a;
            a = a.child;
            continue;
          }
          if (a === b)
            break a;
          for (; a.sibling === null; ) {
            if (a.return === null || a.return === b)
              break a;
            a = a.return;
          }
          a.sibling.return = a.return;
          a = a.sibling;
        }
    d &= 1;
  }
  I(P, d);
  if ((b.mode & 2) === 0)
    b.memoizedState = null;
  else
    switch (e) {
      case "forwards":
        c = b.child;
        for (e = null; c !== null; )
          a = c.alternate, a !== null && ih(a) === null && (e = c), c = c.sibling;
        c = e;
        c === null ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
        zi(b, false, e, c, f2, b.lastEffect);
        break;
      case "backwards":
        c = null;
        e = b.child;
        for (b.child = null; e !== null; ) {
          a = e.alternate;
          if (a !== null && ih(a) === null) {
            b.child = e;
            break;
          }
          a = e.sibling;
          e.sibling = c;
          c = e;
          e = a;
        }
        zi(b, true, c, null, f2, b.lastEffect);
        break;
      case "together":
        zi(b, false, null, null, void 0, b.lastEffect);
        break;
      default:
        b.memoizedState = null;
    }
  return b.child;
}
function hi(a, b, c) {
  a !== null && (b.dependencies = a.dependencies);
  Dg |= b.lanes;
  if ((c & b.childLanes) !== 0) {
    if (a !== null && b.child !== a.child)
      throw Error(y(153));
    if (b.child !== null) {
      a = b.child;
      c = Tg(a, a.pendingProps);
      b.child = c;
      for (c.return = b; a.sibling !== null; )
        a = a.sibling, c = c.sibling = Tg(a, a.pendingProps), c.return = b;
      c.sibling = null;
    }
    return b.child;
  }
  return null;
}
var Bi, Ci, Di, Ei;
Bi = function(a, b) {
  for (var c = b.child; c !== null; ) {
    if (c.tag === 5 || c.tag === 6)
      a.appendChild(c.stateNode);
    else if (c.tag !== 4 && c.child !== null) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b)
      break;
    for (; c.sibling === null; ) {
      if (c.return === null || c.return === b)
        return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Ci = function() {
};
Di = function(a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    dh(ah.current);
    var f2 = null;
    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f2 = [];
        break;
      case "option":
        e = eb(a, e);
        d = eb(a, d);
        f2 = [];
        break;
      case "select":
        e = m({}, e, { value: void 0 });
        d = m({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f2 = [];
        break;
      default:
        typeof e.onClick !== "function" && typeof d.onClick === "function" && (a.onclick = jf);
    }
    vb(c, d);
    var g2;
    c = null;
    for (l2 in e)
      if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && e[l2] != null)
        if (l2 === "style") {
          var h = e[l2];
          for (g2 in h)
            h.hasOwnProperty(g2) && (c || (c = {}), c[g2] = "");
        } else
          l2 !== "dangerouslySetInnerHTML" && l2 !== "children" && l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && l2 !== "autoFocus" && (ca.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k = d[l2];
      h = e != null ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k !== h && (k != null || h != null))
        if (l2 === "style")
          if (h) {
            for (g2 in h)
              !h.hasOwnProperty(g2) || k && k.hasOwnProperty(g2) || (c || (c = {}), c[g2] = "");
            for (g2 in k)
              k.hasOwnProperty(g2) && h[g2] !== k[g2] && (c || (c = {}), c[g2] = k[g2]);
          } else
            c || (f2 || (f2 = []), f2.push(l2, c)), c = k;
        else
          l2 === "dangerouslySetInnerHTML" ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, k != null && h !== k && (f2 = f2 || []).push(l2, k)) : l2 === "children" ? typeof k !== "string" && typeof k !== "number" || (f2 = f2 || []).push(l2, "" + k) : l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && (ca.hasOwnProperty(l2) ? (k != null && l2 === "onScroll" && G("scroll", a), f2 || h === k || (f2 = [])) : typeof k === "object" && k !== null && k.$$typeof === Ga ? k.toString() : (f2 = f2 || []).push(l2, k));
    }
    c && (f2 = f2 || []).push("style", c);
    var l2 = f2;
    if (b.updateQueue = l2)
      b.flags |= 4;
  }
};
Ei = function(a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Fi(a, b) {
  if (!lh)
    switch (a.tailMode) {
      case "hidden":
        b = a.tail;
        for (var c = null; b !== null; )
          b.alternate !== null && (c = b), b = b.sibling;
        c === null ? a.tail = null : c.sibling = null;
        break;
      case "collapsed":
        c = a.tail;
        for (var d = null; c !== null; )
          c.alternate !== null && (d = c), c = c.sibling;
        d === null ? b || a.tail === null ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function Gi(a, b, c) {
  var d = b.pendingProps;
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return null;
    case 1:
      return Ff(b.type) && Gf(), null;
    case 3:
      fh();
      H(N);
      H(M);
      uh();
      d = b.stateNode;
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (a === null || a.child === null)
        rh(b) ? b.flags |= 4 : d.hydrate || (b.flags |= 256);
      Ci(b);
      return null;
    case 5:
      hh(b);
      var e = dh(ch.current);
      c = b.type;
      if (a !== null && b.stateNode != null)
        Di(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 128);
      else {
        if (!d) {
          if (b.stateNode === null)
            throw Error(y(166));
          return null;
        }
        a = dh(ah.current);
        if (rh(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[wf] = b;
          d[xf] = f2;
          switch (c) {
            case "dialog":
              G("cancel", d);
              G("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", d);
              break;
            case "video":
            case "audio":
              for (a = 0; a < Xe.length; a++)
                G(Xe[a], d);
              break;
            case "source":
              G("error", d);
              break;
            case "img":
            case "image":
            case "link":
              G("error", d);
              G("load", d);
              break;
            case "details":
              G("toggle", d);
              break;
            case "input":
              Za(d, f2);
              G("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              G("invalid", d);
              break;
            case "textarea":
              hb(d, f2), G("invalid", d);
          }
          vb(c, f2);
          a = null;
          for (var g2 in f2)
            f2.hasOwnProperty(g2) && (e = f2[g2], g2 === "children" ? typeof e === "string" ? d.textContent !== e && (a = ["children", e]) : typeof e === "number" && d.textContent !== "" + e && (a = ["children", "" + e]) : ca.hasOwnProperty(g2) && e != null && g2 === "onScroll" && G("scroll", d));
          switch (c) {
            case "input":
              Va(d);
              cb(d, f2, true);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f2.onClick === "function" && (d.onclick = jf);
          }
          d = a;
          b.updateQueue = d;
          d !== null && (b.flags |= 4);
        } else {
          g2 = e.nodeType === 9 ? e : e.ownerDocument;
          a === kb.html && (a = lb(c));
          a === kb.html ? c === "script" ? (a = g2.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof d.is === "string" ? a = g2.createElement(c, { is: d.is }) : (a = g2.createElement(c), c === "select" && (g2 = a, d.multiple ? g2.multiple = true : d.size && (g2.size = d.size))) : a = g2.createElementNS(a, c);
          a[wf] = b;
          a[xf] = d;
          Bi(a, b, false, false);
          b.stateNode = a;
          g2 = wb(c, d);
          switch (c) {
            case "dialog":
              G("cancel", a);
              G("close", a);
              e = d;
              break;
            case "iframe":
            case "object":
            case "embed":
              G("load", a);
              e = d;
              break;
            case "video":
            case "audio":
              for (e = 0; e < Xe.length; e++)
                G(Xe[e], a);
              e = d;
              break;
            case "source":
              G("error", a);
              e = d;
              break;
            case "img":
            case "image":
            case "link":
              G("error", a);
              G("load", a);
              e = d;
              break;
            case "details":
              G("toggle", a);
              e = d;
              break;
            case "input":
              Za(a, d);
              e = Ya(a, d);
              G("invalid", a);
              break;
            case "option":
              e = eb(a, d);
              break;
            case "select":
              a._wrapperState = { wasMultiple: !!d.multiple };
              e = m({}, d, { value: void 0 });
              G("invalid", a);
              break;
            case "textarea":
              hb(a, d);
              e = gb(a, d);
              G("invalid", a);
              break;
            default:
              e = d;
          }
          vb(c, e);
          var h = e;
          for (f2 in h)
            if (h.hasOwnProperty(f2)) {
              var k = h[f2];
              f2 === "style" ? tb(a, k) : f2 === "dangerouslySetInnerHTML" ? (k = k ? k.__html : void 0, k != null && ob(a, k)) : f2 === "children" ? typeof k === "string" ? (c !== "textarea" || k !== "") && pb(a, k) : typeof k === "number" && pb(a, "" + k) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (ca.hasOwnProperty(f2) ? k != null && f2 === "onScroll" && G("scroll", a) : k != null && qa(a, f2, k, g2));
            }
          switch (c) {
            case "input":
              Va(a);
              cb(a, d, false);
              break;
            case "textarea":
              Va(a);
              jb(a);
              break;
            case "option":
              d.value != null && a.setAttribute("value", "" + Sa(d.value));
              break;
            case "select":
              a.multiple = !!d.multiple;
              f2 = d.value;
              f2 != null ? fb(a, !!d.multiple, f2, false) : d.defaultValue != null && fb(a, !!d.multiple, d.defaultValue, true);
              break;
            default:
              typeof e.onClick === "function" && (a.onclick = jf);
          }
          mf(c, d) && (b.flags |= 4);
        }
        b.ref !== null && (b.flags |= 128);
      }
      return null;
    case 6:
      if (a && b.stateNode != null)
        Ei(a, b, a.memoizedProps, d);
      else {
        if (typeof d !== "string" && b.stateNode === null)
          throw Error(y(166));
        c = dh(ch.current);
        dh(ah.current);
        rh(b) ? (d = b.stateNode, c = b.memoizedProps, d[wf] = b, d.nodeValue !== c && (b.flags |= 4)) : (d = (c.nodeType === 9 ? c : c.ownerDocument).createTextNode(d), d[wf] = b, b.stateNode = d);
      }
      return null;
    case 13:
      H(P);
      d = b.memoizedState;
      if ((b.flags & 64) !== 0)
        return b.lanes = c, b;
      d = d !== null;
      c = false;
      a === null ? b.memoizedProps.fallback !== void 0 && rh(b) : c = a.memoizedState !== null;
      if (d && !c && (b.mode & 2) !== 0)
        if (a === null && b.memoizedProps.unstable_avoidThisFallback !== true || (P.current & 1) !== 0)
          V === 0 && (V = 3);
        else {
          if (V === 0 || V === 3)
            V = 4;
          U === null || (Dg & 134217727) === 0 && (Hi & 134217727) === 0 || Ii(U, W);
        }
      if (d || c)
        b.flags |= 4;
      return null;
    case 4:
      return fh(), Ci(b), a === null && cf(b.stateNode.containerInfo), null;
    case 10:
      return rg(b), null;
    case 17:
      return Ff(b.type) && Gf(), null;
    case 19:
      H(P);
      d = b.memoizedState;
      if (d === null)
        return null;
      f2 = (b.flags & 64) !== 0;
      g2 = d.rendering;
      if (g2 === null)
        if (f2)
          Fi(d, false);
        else {
          if (V !== 0 || a !== null && (a.flags & 64) !== 0)
            for (a = b.child; a !== null; ) {
              g2 = ih(a);
              if (g2 !== null) {
                b.flags |= 64;
                Fi(d, false);
                f2 = g2.updateQueue;
                f2 !== null && (b.updateQueue = f2, b.flags |= 4);
                d.lastEffect === null && (b.firstEffect = null);
                b.lastEffect = d.lastEffect;
                d = c;
                for (c = b.child; c !== null; )
                  f2 = c, a = d, f2.flags &= 2, f2.nextEffect = null, f2.firstEffect = null, f2.lastEffect = null, g2 = f2.alternate, g2 === null ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a = g2.dependencies, f2.dependencies = a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }), c = c.sibling;
                I(P, P.current & 1 | 2);
                return b.child;
              }
              a = a.sibling;
            }
          d.tail !== null && O() > Ji && (b.flags |= 64, f2 = true, Fi(d, false), b.lanes = 33554432);
        }
      else {
        if (!f2)
          if (a = ih(g2), a !== null) {
            if (b.flags |= 64, f2 = true, c = a.updateQueue, c !== null && (b.updateQueue = c, b.flags |= 4), Fi(d, true), d.tail === null && d.tailMode === "hidden" && !g2.alternate && !lh)
              return b = b.lastEffect = d.lastEffect, b !== null && (b.nextEffect = null), null;
          } else
            2 * O() - d.renderingStartTime > Ji && c !== 1073741824 && (b.flags |= 64, f2 = true, Fi(d, false), b.lanes = 33554432);
        d.isBackwards ? (g2.sibling = b.child, b.child = g2) : (c = d.last, c !== null ? c.sibling = g2 : b.child = g2, d.last = g2);
      }
      return d.tail !== null ? (c = d.tail, d.rendering = c, d.tail = c.sibling, d.lastEffect = b.lastEffect, d.renderingStartTime = O(), c.sibling = null, b = P.current, I(P, f2 ? b & 1 | 2 : b & 1), c) : null;
    case 23:
    case 24:
      return Ki(), a !== null && a.memoizedState !== null !== (b.memoizedState !== null) && d.mode !== "unstable-defer-without-hiding" && (b.flags |= 4), null;
  }
  throw Error(y(156, b.tag));
}
function Li(a) {
  switch (a.tag) {
    case 1:
      Ff(a.type) && Gf();
      var b = a.flags;
      return b & 4096 ? (a.flags = b & -4097 | 64, a) : null;
    case 3:
      fh();
      H(N);
      H(M);
      uh();
      b = a.flags;
      if ((b & 64) !== 0)
        throw Error(y(285));
      a.flags = b & -4097 | 64;
      return a;
    case 5:
      return hh(a), null;
    case 13:
      return H(P), b = a.flags, b & 4096 ? (a.flags = b & -4097 | 64, a) : null;
    case 19:
      return H(P), null;
    case 4:
      return fh(), null;
    case 10:
      return rg(a), null;
    case 23:
    case 24:
      return Ki(), null;
    default:
      return null;
  }
}
function Mi(a, b) {
  try {
    var c = "", d = b;
    do
      c += Qa(d), d = d.return;
    while (d);
    var e = c;
  } catch (f2) {
    e = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b, stack: e };
}
function Ni(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function() {
      throw c;
    });
  }
}
var Oi = typeof WeakMap === "function" ? WeakMap : Map;
function Pi(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function() {
    Qi || (Qi = true, Ri = d);
    Ni(a, b);
  };
  return c;
}
function Si(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if (typeof d === "function") {
    var e = b.value;
    c.payload = function() {
      Ni(a, b);
      return d(e);
    };
  }
  var f2 = a.stateNode;
  f2 !== null && typeof f2.componentDidCatch === "function" && (c.callback = function() {
    typeof d !== "function" && (Ti === null ? Ti = /* @__PURE__ */ new Set([this]) : Ti.add(this), Ni(a, b));
    var c2 = b.stack;
    this.componentDidCatch(b.value, { componentStack: c2 !== null ? c2 : "" });
  });
  return c;
}
var Ui = typeof WeakSet === "function" ? WeakSet : Set;
function Vi(a) {
  var b = a.ref;
  if (b !== null)
    if (typeof b === "function")
      try {
        b(null);
      } catch (c) {
        Wi(a, c);
      }
    else
      b.current = null;
}
function Xi(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      return;
    case 1:
      if (b.flags & 256 && a !== null) {
        var c = a.memoizedProps, d = a.memoizedState;
        a = b.stateNode;
        b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : lg(b.type, c), d);
        a.__reactInternalSnapshotBeforeUpdate = b;
      }
      return;
    case 3:
      b.flags & 256 && qf(b.stateNode.containerInfo);
      return;
    case 5:
    case 6:
    case 4:
    case 17:
      return;
  }
  throw Error(y(163));
}
function Yi(a, b, c) {
  switch (c.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      b = c.updateQueue;
      b = b !== null ? b.lastEffect : null;
      if (b !== null) {
        a = b = b.next;
        do {
          if ((a.tag & 3) === 3) {
            var d = a.create;
            a.destroy = d();
          }
          a = a.next;
        } while (a !== b);
      }
      b = c.updateQueue;
      b = b !== null ? b.lastEffect : null;
      if (b !== null) {
        a = b = b.next;
        do {
          var e = a;
          d = e.next;
          e = e.tag;
          (e & 4) !== 0 && (e & 1) !== 0 && (Zi(c, a), $i(c, a));
          a = d;
        } while (a !== b);
      }
      return;
    case 1:
      a = c.stateNode;
      c.flags & 4 && (b === null ? a.componentDidMount() : (d = c.elementType === c.type ? b.memoizedProps : lg(c.type, b.memoizedProps), a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));
      b = c.updateQueue;
      b !== null && Eg(c, b, a);
      return;
    case 3:
      b = c.updateQueue;
      if (b !== null) {
        a = null;
        if (c.child !== null)
          switch (c.child.tag) {
            case 5:
              a = c.child.stateNode;
              break;
            case 1:
              a = c.child.stateNode;
          }
        Eg(c, b, a);
      }
      return;
    case 5:
      a = c.stateNode;
      b === null && c.flags & 4 && mf(c.type, c.memoizedProps) && a.focus();
      return;
    case 6:
      return;
    case 4:
      return;
    case 12:
      return;
    case 13:
      c.memoizedState === null && (c = c.alternate, c !== null && (c = c.memoizedState, c !== null && (c = c.dehydrated, c !== null && Cc(c))));
      return;
    case 19:
    case 17:
    case 20:
    case 21:
    case 23:
    case 24:
      return;
  }
  throw Error(y(163));
}
function aj(a, b) {
  for (var c = a; ; ) {
    if (c.tag === 5) {
      var d = c.stateNode;
      if (b)
        d = d.style, typeof d.setProperty === "function" ? d.setProperty("display", "none", "important") : d.display = "none";
      else {
        d = c.stateNode;
        var e = c.memoizedProps.style;
        e = e !== void 0 && e !== null && e.hasOwnProperty("display") ? e.display : null;
        d.style.display = sb("display", e);
      }
    } else if (c.tag === 6)
      c.stateNode.nodeValue = b ? "" : c.memoizedProps;
    else if ((c.tag !== 23 && c.tag !== 24 || c.memoizedState === null || c === a) && c.child !== null) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === a)
      break;
    for (; c.sibling === null; ) {
      if (c.return === null || c.return === a)
        return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
}
function bj(a, b) {
  if (Mf && typeof Mf.onCommitFiberUnmount === "function")
    try {
      Mf.onCommitFiberUnmount(Lf, b);
    } catch (f2) {
    }
  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      a = b.updateQueue;
      if (a !== null && (a = a.lastEffect, a !== null)) {
        var c = a = a.next;
        do {
          var d = c, e = d.destroy;
          d = d.tag;
          if (e !== void 0)
            if ((d & 4) !== 0)
              Zi(b, c);
            else {
              d = b;
              try {
                e();
              } catch (f2) {
                Wi(d, f2);
              }
            }
          c = c.next;
        } while (c !== a);
      }
      break;
    case 1:
      Vi(b);
      a = b.stateNode;
      if (typeof a.componentWillUnmount === "function")
        try {
          a.props = b.memoizedProps, a.state = b.memoizedState, a.componentWillUnmount();
        } catch (f2) {
          Wi(b, f2);
        }
      break;
    case 5:
      Vi(b);
      break;
    case 4:
      cj(a, b);
  }
}
function dj(a) {
  a.alternate = null;
  a.child = null;
  a.dependencies = null;
  a.firstEffect = null;
  a.lastEffect = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.return = null;
  a.updateQueue = null;
}
function ej(a) {
  return a.tag === 5 || a.tag === 3 || a.tag === 4;
}
function fj(a) {
  a: {
    for (var b = a.return; b !== null; ) {
      if (ej(b))
        break a;
      b = b.return;
    }
    throw Error(y(160));
  }
  var c = b;
  b = c.stateNode;
  switch (c.tag) {
    case 5:
      var d = false;
      break;
    case 3:
      b = b.containerInfo;
      d = true;
      break;
    case 4:
      b = b.containerInfo;
      d = true;
      break;
    default:
      throw Error(y(161));
  }
  c.flags & 16 && (pb(b, ""), c.flags &= -17);
  a:
    b:
      for (c = a; ; ) {
        for (; c.sibling === null; ) {
          if (c.return === null || ej(c.return)) {
            c = null;
            break a;
          }
          c = c.return;
        }
        c.sibling.return = c.return;
        for (c = c.sibling; c.tag !== 5 && c.tag !== 6 && c.tag !== 18; ) {
          if (c.flags & 2)
            continue b;
          if (c.child === null || c.tag === 4)
            continue b;
          else
            c.child.return = c, c = c.child;
        }
        if (!(c.flags & 2)) {
          c = c.stateNode;
          break a;
        }
      }
  d ? gj(a, c, b) : hj(a, c, b);
}
function gj(a, b, c) {
  var d = a.tag, e = d === 5 || d === 6;
  if (e)
    a = e ? a.stateNode : a.stateNode.instance, b ? c.nodeType === 8 ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (c.nodeType === 8 ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, c !== null && c !== void 0 || b.onclick !== null || (b.onclick = jf));
  else if (d !== 4 && (a = a.child, a !== null))
    for (gj(a, b, c), a = a.sibling; a !== null; )
      gj(a, b, c), a = a.sibling;
}
function hj(a, b, c) {
  var d = a.tag, e = d === 5 || d === 6;
  if (e)
    a = e ? a.stateNode : a.stateNode.instance, b ? c.insertBefore(a, b) : c.appendChild(a);
  else if (d !== 4 && (a = a.child, a !== null))
    for (hj(a, b, c), a = a.sibling; a !== null; )
      hj(a, b, c), a = a.sibling;
}
function cj(a, b) {
  for (var c = b, d = false, e, f2; ; ) {
    if (!d) {
      d = c.return;
      a:
        for (; ; ) {
          if (d === null)
            throw Error(y(160));
          e = d.stateNode;
          switch (d.tag) {
            case 5:
              f2 = false;
              break a;
            case 3:
              e = e.containerInfo;
              f2 = true;
              break a;
            case 4:
              e = e.containerInfo;
              f2 = true;
              break a;
          }
          d = d.return;
        }
      d = true;
    }
    if (c.tag === 5 || c.tag === 6) {
      a:
        for (var g2 = a, h = c, k = h; ; )
          if (bj(g2, k), k.child !== null && k.tag !== 4)
            k.child.return = k, k = k.child;
          else {
            if (k === h)
              break a;
            for (; k.sibling === null; ) {
              if (k.return === null || k.return === h)
                break a;
              k = k.return;
            }
            k.sibling.return = k.return;
            k = k.sibling;
          }
      f2 ? (g2 = e, h = c.stateNode, g2.nodeType === 8 ? g2.parentNode.removeChild(h) : g2.removeChild(h)) : e.removeChild(c.stateNode);
    } else if (c.tag === 4) {
      if (c.child !== null) {
        e = c.stateNode.containerInfo;
        f2 = true;
        c.child.return = c;
        c = c.child;
        continue;
      }
    } else if (bj(a, c), c.child !== null) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b)
      break;
    for (; c.sibling === null; ) {
      if (c.return === null || c.return === b)
        return;
      c = c.return;
      c.tag === 4 && (d = false);
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
}
function ij(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      var c = b.updateQueue;
      c = c !== null ? c.lastEffect : null;
      if (c !== null) {
        var d = c = c.next;
        do
          (d.tag & 3) === 3 && (a = d.destroy, d.destroy = void 0, a !== void 0 && a()), d = d.next;
        while (d !== c);
      }
      return;
    case 1:
      return;
    case 5:
      c = b.stateNode;
      if (c != null) {
        d = b.memoizedProps;
        var e = a !== null ? a.memoizedProps : d;
        a = b.type;
        var f2 = b.updateQueue;
        b.updateQueue = null;
        if (f2 !== null) {
          c[xf] = d;
          a === "input" && d.type === "radio" && d.name != null && $a(c, d);
          wb(a, e);
          b = wb(a, d);
          for (e = 0; e < f2.length; e += 2) {
            var g2 = f2[e], h = f2[e + 1];
            g2 === "style" ? tb(c, h) : g2 === "dangerouslySetInnerHTML" ? ob(c, h) : g2 === "children" ? pb(c, h) : qa(c, g2, h, b);
          }
          switch (a) {
            case "input":
              ab(c, d);
              break;
            case "textarea":
              ib(c, d);
              break;
            case "select":
              a = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, f2 = d.value, f2 != null ? fb(c, !!d.multiple, f2, false) : a !== !!d.multiple && (d.defaultValue != null ? fb(c, !!d.multiple, d.defaultValue, true) : fb(c, !!d.multiple, d.multiple ? [] : "", false));
          }
        }
      }
      return;
    case 6:
      if (b.stateNode === null)
        throw Error(y(162));
      b.stateNode.nodeValue = b.memoizedProps;
      return;
    case 3:
      c = b.stateNode;
      c.hydrate && (c.hydrate = false, Cc(c.containerInfo));
      return;
    case 12:
      return;
    case 13:
      b.memoizedState !== null && (jj = O(), aj(b.child, true));
      kj(b);
      return;
    case 19:
      kj(b);
      return;
    case 17:
      return;
    case 23:
    case 24:
      aj(b, b.memoizedState !== null);
      return;
  }
  throw Error(y(163));
}
function kj(a) {
  var b = a.updateQueue;
  if (b !== null) {
    a.updateQueue = null;
    var c = a.stateNode;
    c === null && (c = a.stateNode = new Ui());
    b.forEach(function(b2) {
      var d = lj.bind(null, a, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function mj(a, b) {
  return a !== null && (a = a.memoizedState, a === null || a.dehydrated !== null) ? (b = b.memoizedState, b !== null && b.dehydrated === null) : false;
}
var nj = Math.ceil, oj = ra.ReactCurrentDispatcher, pj = ra.ReactCurrentOwner, X = 0, U = null, Y = null, W = 0, qj = 0, rj = Bf(0), V = 0, sj = null, tj = 0, Dg = 0, Hi = 0, uj = 0, vj = null, jj = 0, Ji = Infinity;
function wj() {
  Ji = O() + 500;
}
var Z = null, Qi = false, Ri = null, Ti = null, xj = false, yj = null, zj = 90, Aj = [], Bj = [], Cj = null, Dj = 0, Ej = null, Fj = -1, Gj = 0, Hj = 0, Ij = null, Jj = false;
function Hg() {
  return (X & 48) !== 0 ? O() : Fj !== -1 ? Fj : Fj = O();
}
function Ig(a) {
  a = a.mode;
  if ((a & 2) === 0)
    return 1;
  if ((a & 4) === 0)
    return eg() === 99 ? 1 : 2;
  Gj === 0 && (Gj = tj);
  if (kg.transition !== 0) {
    Hj !== 0 && (Hj = vj !== null ? vj.pendingLanes : 0);
    a = Gj;
    var b = 4186112 & ~Hj;
    b &= -b;
    b === 0 && (a = 4186112 & ~a, b = a & -a, b === 0 && (b = 8192));
    return b;
  }
  a = eg();
  (X & 4) !== 0 && a === 98 ? a = Xc(12, Gj) : (a = Sc(a), a = Xc(a, Gj));
  return a;
}
function Jg(a, b, c) {
  if (50 < Dj)
    throw Dj = 0, Ej = null, Error(y(185));
  a = Kj(a, b);
  if (a === null)
    return null;
  $c(a, b, c);
  a === U && (Hi |= b, V === 4 && Ii(a, W));
  var d = eg();
  b === 1 ? (X & 8) !== 0 && (X & 48) === 0 ? Lj(a) : (Mj(a, c), X === 0 && (wj(), ig())) : ((X & 4) === 0 || d !== 98 && d !== 99 || (Cj === null ? Cj = /* @__PURE__ */ new Set([a]) : Cj.add(a)), Mj(a, c));
  vj = a;
}
function Kj(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  c !== null && (c.lanes |= b);
  c = a;
  for (a = a.return; a !== null; )
    a.childLanes |= b, c = a.alternate, c !== null && (c.childLanes |= b), c = a, a = a.return;
  return c.tag === 3 ? c.stateNode : null;
}
function Mj(a, b) {
  for (var c = a.callbackNode, d = a.suspendedLanes, e = a.pingedLanes, f2 = a.expirationTimes, g2 = a.pendingLanes; 0 < g2; ) {
    var h = 31 - Vc(g2), k = 1 << h, l2 = f2[h];
    if (l2 === -1) {
      if ((k & d) === 0 || (k & e) !== 0) {
        l2 = b;
        Rc(k);
        var n2 = F;
        f2[h] = 10 <= n2 ? l2 + 250 : 6 <= n2 ? l2 + 5e3 : -1;
      }
    } else
      l2 <= b && (a.expiredLanes |= k);
    g2 &= ~k;
  }
  d = Uc(a, a === U ? W : 0);
  b = F;
  if (d === 0)
    c !== null && (c !== Zf && Pf(c), a.callbackNode = null, a.callbackPriority = 0);
  else {
    if (c !== null) {
      if (a.callbackPriority === b)
        return;
      c !== Zf && Pf(c);
    }
    b === 15 ? (c = Lj.bind(null, a), ag === null ? (ag = [c], bg = Of(Uf, jg)) : ag.push(c), c = Zf) : b === 14 ? c = hg(99, Lj.bind(null, a)) : (c = Tc(b), c = hg(c, Nj.bind(null, a)));
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Nj(a) {
  Fj = -1;
  Hj = Gj = 0;
  if ((X & 48) !== 0)
    throw Error(y(327));
  var b = a.callbackNode;
  if (Oj() && a.callbackNode !== b)
    return null;
  var c = Uc(a, a === U ? W : 0);
  if (c === 0)
    return null;
  var d = c;
  var e = X;
  X |= 16;
  var f2 = Pj();
  if (U !== a || W !== d)
    wj(), Qj(a, d);
  do
    try {
      Rj();
      break;
    } catch (h) {
      Sj(a, h);
    }
  while (1);
  qg();
  oj.current = f2;
  X = e;
  Y !== null ? d = 0 : (U = null, W = 0, d = V);
  if ((tj & Hi) !== 0)
    Qj(a, 0);
  else if (d !== 0) {
    d === 2 && (X |= 64, a.hydrate && (a.hydrate = false, qf(a.containerInfo)), c = Wc(a), c !== 0 && (d = Tj(a, c)));
    if (d === 1)
      throw b = sj, Qj(a, 0), Ii(a, c), Mj(a, O()), b;
    a.finishedWork = a.current.alternate;
    a.finishedLanes = c;
    switch (d) {
      case 0:
      case 1:
        throw Error(y(345));
      case 2:
        Uj(a);
        break;
      case 3:
        Ii(a, c);
        if ((c & 62914560) === c && (d = jj + 500 - O(), 10 < d)) {
          if (Uc(a, 0) !== 0)
            break;
          e = a.suspendedLanes;
          if ((e & c) !== c) {
            Hg();
            a.pingedLanes |= a.suspendedLanes & e;
            break;
          }
          a.timeoutHandle = of(Uj.bind(null, a), d);
          break;
        }
        Uj(a);
        break;
      case 4:
        Ii(a, c);
        if ((c & 4186112) === c)
          break;
        d = a.eventTimes;
        for (e = -1; 0 < c; ) {
          var g2 = 31 - Vc(c);
          f2 = 1 << g2;
          g2 = d[g2];
          g2 > e && (e = g2);
          c &= ~f2;
        }
        c = e;
        c = O() - c;
        c = (120 > c ? 120 : 480 > c ? 480 : 1080 > c ? 1080 : 1920 > c ? 1920 : 3e3 > c ? 3e3 : 4320 > c ? 4320 : 1960 * nj(c / 1960)) - c;
        if (10 < c) {
          a.timeoutHandle = of(Uj.bind(null, a), c);
          break;
        }
        Uj(a);
        break;
      case 5:
        Uj(a);
        break;
      default:
        throw Error(y(329));
    }
  }
  Mj(a, O());
  return a.callbackNode === b ? Nj.bind(null, a) : null;
}
function Ii(a, b) {
  b &= ~uj;
  b &= ~Hi;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b; ) {
    var c = 31 - Vc(b), d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Lj(a) {
  if ((X & 48) !== 0)
    throw Error(y(327));
  Oj();
  if (a === U && (a.expiredLanes & W) !== 0) {
    var b = W;
    var c = Tj(a, b);
    (tj & Hi) !== 0 && (b = Uc(a, b), c = Tj(a, b));
  } else
    b = Uc(a, 0), c = Tj(a, b);
  a.tag !== 0 && c === 2 && (X |= 64, a.hydrate && (a.hydrate = false, qf(a.containerInfo)), b = Wc(a), b !== 0 && (c = Tj(a, b)));
  if (c === 1)
    throw c = sj, Qj(a, 0), Ii(a, b), Mj(a, O()), c;
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Uj(a);
  Mj(a, O());
  return null;
}
function Vj() {
  if (Cj !== null) {
    var a = Cj;
    Cj = null;
    a.forEach(function(a2) {
      a2.expiredLanes |= 24 & a2.pendingLanes;
      Mj(a2, O());
    });
  }
  ig();
}
function Wj(a, b) {
  var c = X;
  X |= 1;
  try {
    return a(b);
  } finally {
    X = c, X === 0 && (wj(), ig());
  }
}
function Xj(a, b) {
  var c = X;
  X &= -2;
  X |= 8;
  try {
    return a(b);
  } finally {
    X = c, X === 0 && (wj(), ig());
  }
}
function ni(a, b) {
  I(rj, qj);
  qj |= b;
  tj |= b;
}
function Ki() {
  qj = rj.current;
  H(rj);
}
function Qj(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  c !== -1 && (a.timeoutHandle = -1, pf(c));
  if (Y !== null)
    for (c = Y.return; c !== null; ) {
      var d = c;
      switch (d.tag) {
        case 1:
          d = d.type.childContextTypes;
          d !== null && d !== void 0 && Gf();
          break;
        case 3:
          fh();
          H(N);
          H(M);
          uh();
          break;
        case 5:
          hh(d);
          break;
        case 4:
          fh();
          break;
        case 13:
          H(P);
          break;
        case 19:
          H(P);
          break;
        case 10:
          rg(d);
          break;
        case 23:
        case 24:
          Ki();
      }
      c = c.return;
    }
  U = a;
  Y = Tg(a.current, null);
  W = qj = tj = b;
  V = 0;
  sj = null;
  uj = Hi = Dg = 0;
}
function Sj(a, b) {
  do {
    var c = Y;
    try {
      qg();
      vh.current = Gh;
      if (yh) {
        for (var d = R.memoizedState; d !== null; ) {
          var e = d.queue;
          e !== null && (e.pending = null);
          d = d.next;
        }
        yh = false;
      }
      xh = 0;
      T = S = R = null;
      zh = false;
      pj.current = null;
      if (c === null || c.return === null) {
        V = 1;
        sj = b;
        Y = null;
        break;
      }
      a: {
        var f2 = a, g2 = c.return, h = c, k = b;
        b = W;
        h.flags |= 2048;
        h.firstEffect = h.lastEffect = null;
        if (k !== null && typeof k === "object" && typeof k.then === "function") {
          var l2 = k;
          if ((h.mode & 2) === 0) {
            var n2 = h.alternate;
            n2 ? (h.updateQueue = n2.updateQueue, h.memoizedState = n2.memoizedState, h.lanes = n2.lanes) : (h.updateQueue = null, h.memoizedState = null);
          }
          var A2 = (P.current & 1) !== 0, p2 = g2;
          do {
            var C2;
            if (C2 = p2.tag === 13) {
              var x2 = p2.memoizedState;
              if (x2 !== null)
                C2 = x2.dehydrated !== null ? true : false;
              else {
                var w = p2.memoizedProps;
                C2 = w.fallback === void 0 ? false : w.unstable_avoidThisFallback !== true ? true : A2 ? false : true;
              }
            }
            if (C2) {
              var z2 = p2.updateQueue;
              if (z2 === null) {
                var u2 = /* @__PURE__ */ new Set();
                u2.add(l2);
                p2.updateQueue = u2;
              } else
                z2.add(l2);
              if ((p2.mode & 2) === 0) {
                p2.flags |= 64;
                h.flags |= 16384;
                h.flags &= -2981;
                if (h.tag === 1)
                  if (h.alternate === null)
                    h.tag = 17;
                  else {
                    var t2 = zg(-1, 1);
                    t2.tag = 2;
                    Ag(h, t2);
                  }
                h.lanes |= 1;
                break a;
              }
              k = void 0;
              h = b;
              var q2 = f2.pingCache;
              q2 === null ? (q2 = f2.pingCache = new Oi(), k = /* @__PURE__ */ new Set(), q2.set(l2, k)) : (k = q2.get(l2), k === void 0 && (k = /* @__PURE__ */ new Set(), q2.set(l2, k)));
              if (!k.has(h)) {
                k.add(h);
                var v2 = Yj.bind(null, f2, l2, h);
                l2.then(v2, v2);
              }
              p2.flags |= 4096;
              p2.lanes = b;
              break a;
            }
            p2 = p2.return;
          } while (p2 !== null);
          k = Error((Ra(h.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }
        V !== 5 && (V = 2);
        k = Mi(k, h);
        p2 = g2;
        do {
          switch (p2.tag) {
            case 3:
              f2 = k;
              p2.flags |= 4096;
              b &= -b;
              p2.lanes |= b;
              var J2 = Pi(p2, f2, b);
              Bg(p2, J2);
              break a;
            case 1:
              f2 = k;
              var K2 = p2.type, Q2 = p2.stateNode;
              if ((p2.flags & 64) === 0 && (typeof K2.getDerivedStateFromError === "function" || Q2 !== null && typeof Q2.componentDidCatch === "function" && (Ti === null || !Ti.has(Q2)))) {
                p2.flags |= 4096;
                b &= -b;
                p2.lanes |= b;
                var L2 = Si(p2, f2, b);
                Bg(p2, L2);
                break a;
              }
          }
          p2 = p2.return;
        } while (p2 !== null);
      }
      Zj(c);
    } catch (va) {
      b = va;
      Y === c && c !== null && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Pj() {
  var a = oj.current;
  oj.current = Gh;
  return a === null ? Gh : a;
}
function Tj(a, b) {
  var c = X;
  X |= 16;
  var d = Pj();
  U === a && W === b || Qj(a, b);
  do
    try {
      ak();
      break;
    } catch (e) {
      Sj(a, e);
    }
  while (1);
  qg();
  X = c;
  oj.current = d;
  if (Y !== null)
    throw Error(y(261));
  U = null;
  W = 0;
  return V;
}
function ak() {
  for (; Y !== null; )
    bk(Y);
}
function Rj() {
  for (; Y !== null && !Qf(); )
    bk(Y);
}
function bk(a) {
  var b = ck(a.alternate, a, qj);
  a.memoizedProps = a.pendingProps;
  b === null ? Zj(a) : Y = b;
  pj.current = null;
}
function Zj(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if ((b.flags & 2048) === 0) {
      c = Gi(c, b, qj);
      if (c !== null) {
        Y = c;
        return;
      }
      c = b;
      if (c.tag !== 24 && c.tag !== 23 || c.memoizedState === null || (qj & 1073741824) !== 0 || (c.mode & 4) === 0) {
        for (var d = 0, e = c.child; e !== null; )
          d |= e.lanes | e.childLanes, e = e.sibling;
        c.childLanes = d;
      }
      a !== null && (a.flags & 2048) === 0 && (a.firstEffect === null && (a.firstEffect = b.firstEffect), b.lastEffect !== null && (a.lastEffect !== null && (a.lastEffect.nextEffect = b.firstEffect), a.lastEffect = b.lastEffect), 1 < b.flags && (a.lastEffect !== null ? a.lastEffect.nextEffect = b : a.firstEffect = b, a.lastEffect = b));
    } else {
      c = Li(b);
      if (c !== null) {
        c.flags &= 2047;
        Y = c;
        return;
      }
      a !== null && (a.firstEffect = a.lastEffect = null, a.flags |= 2048);
    }
    b = b.sibling;
    if (b !== null) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (b !== null);
  V === 0 && (V = 5);
}
function Uj(a) {
  var b = eg();
  gg(99, dk.bind(null, a, b));
  return null;
}
function dk(a, b) {
  do
    Oj();
  while (yj !== null);
  if ((X & 48) !== 0)
    throw Error(y(327));
  var c = a.finishedWork;
  if (c === null)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current)
    throw Error(y(177));
  a.callbackNode = null;
  var d = c.lanes | c.childLanes, e = d, f2 = a.pendingLanes & ~e;
  a.pendingLanes = e;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= e;
  a.mutableReadLanes &= e;
  a.entangledLanes &= e;
  e = a.entanglements;
  for (var g2 = a.eventTimes, h = a.expirationTimes; 0 < f2; ) {
    var k = 31 - Vc(f2), l2 = 1 << k;
    e[k] = 0;
    g2[k] = -1;
    h[k] = -1;
    f2 &= ~l2;
  }
  Cj !== null && (d & 24) === 0 && Cj.has(a) && Cj.delete(a);
  a === U && (Y = U = null, W = 0);
  1 < c.flags ? c.lastEffect !== null ? (c.lastEffect.nextEffect = c, d = c.firstEffect) : d = c : d = c.firstEffect;
  if (d !== null) {
    e = X;
    X |= 32;
    pj.current = null;
    kf = fd;
    g2 = Ne();
    if (Oe(g2)) {
      if ("selectionStart" in g2)
        h = { start: g2.selectionStart, end: g2.selectionEnd };
      else
        a:
          if (h = (h = g2.ownerDocument) && h.defaultView || window, (l2 = h.getSelection && h.getSelection()) && l2.rangeCount !== 0) {
            h = l2.anchorNode;
            f2 = l2.anchorOffset;
            k = l2.focusNode;
            l2 = l2.focusOffset;
            try {
              h.nodeType, k.nodeType;
            } catch (va) {
              h = null;
              break a;
            }
            var n2 = 0, A2 = -1, p2 = -1, C2 = 0, x2 = 0, w = g2, z2 = null;
            b:
              for (; ; ) {
                for (var u2; ; ) {
                  w !== h || f2 !== 0 && w.nodeType !== 3 || (A2 = n2 + f2);
                  w !== k || l2 !== 0 && w.nodeType !== 3 || (p2 = n2 + l2);
                  w.nodeType === 3 && (n2 += w.nodeValue.length);
                  if ((u2 = w.firstChild) === null)
                    break;
                  z2 = w;
                  w = u2;
                }
                for (; ; ) {
                  if (w === g2)
                    break b;
                  z2 === h && ++C2 === f2 && (A2 = n2);
                  z2 === k && ++x2 === l2 && (p2 = n2);
                  if ((u2 = w.nextSibling) !== null)
                    break;
                  w = z2;
                  z2 = w.parentNode;
                }
                w = u2;
              }
            h = A2 === -1 || p2 === -1 ? null : { start: A2, end: p2 };
          } else
            h = null;
      h = h || { start: 0, end: 0 };
    } else
      h = null;
    lf = { focusedElem: g2, selectionRange: h };
    fd = false;
    Ij = null;
    Jj = false;
    Z = d;
    do
      try {
        ek();
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Ij = null;
    Z = d;
    do
      try {
        for (g2 = a; Z !== null; ) {
          var t2 = Z.flags;
          t2 & 16 && pb(Z.stateNode, "");
          if (t2 & 128) {
            var q2 = Z.alternate;
            if (q2 !== null) {
              var v2 = q2.ref;
              v2 !== null && (typeof v2 === "function" ? v2(null) : v2.current = null);
            }
          }
          switch (t2 & 1038) {
            case 2:
              fj(Z);
              Z.flags &= -3;
              break;
            case 6:
              fj(Z);
              Z.flags &= -3;
              ij(Z.alternate, Z);
              break;
            case 1024:
              Z.flags &= -1025;
              break;
            case 1028:
              Z.flags &= -1025;
              ij(Z.alternate, Z);
              break;
            case 4:
              ij(Z.alternate, Z);
              break;
            case 8:
              h = Z;
              cj(g2, h);
              var J2 = h.alternate;
              dj(h);
              J2 !== null && dj(J2);
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    v2 = lf;
    q2 = Ne();
    t2 = v2.focusedElem;
    g2 = v2.selectionRange;
    if (q2 !== t2 && t2 && t2.ownerDocument && Me(t2.ownerDocument.documentElement, t2)) {
      g2 !== null && Oe(t2) && (q2 = g2.start, v2 = g2.end, v2 === void 0 && (v2 = q2), "selectionStart" in t2 ? (t2.selectionStart = q2, t2.selectionEnd = Math.min(v2, t2.value.length)) : (v2 = (q2 = t2.ownerDocument || document) && q2.defaultView || window, v2.getSelection && (v2 = v2.getSelection(), h = t2.textContent.length, J2 = Math.min(g2.start, h), g2 = g2.end === void 0 ? J2 : Math.min(g2.end, h), !v2.extend && J2 > g2 && (h = g2, g2 = J2, J2 = h), h = Le(t2, J2), f2 = Le(t2, g2), h && f2 && (v2.rangeCount !== 1 || v2.anchorNode !== h.node || v2.anchorOffset !== h.offset || v2.focusNode !== f2.node || v2.focusOffset !== f2.offset) && (q2 = q2.createRange(), q2.setStart(h.node, h.offset), v2.removeAllRanges(), J2 > g2 ? (v2.addRange(q2), v2.extend(f2.node, f2.offset)) : (q2.setEnd(f2.node, f2.offset), v2.addRange(q2))))));
      q2 = [];
      for (v2 = t2; v2 = v2.parentNode; )
        v2.nodeType === 1 && q2.push({ element: v2, left: v2.scrollLeft, top: v2.scrollTop });
      typeof t2.focus === "function" && t2.focus();
      for (t2 = 0; t2 < q2.length; t2++)
        v2 = q2[t2], v2.element.scrollLeft = v2.left, v2.element.scrollTop = v2.top;
    }
    fd = !!kf;
    lf = kf = null;
    a.current = c;
    Z = d;
    do
      try {
        for (t2 = a; Z !== null; ) {
          var K2 = Z.flags;
          K2 & 36 && Yi(t2, Z.alternate, Z);
          if (K2 & 128) {
            q2 = void 0;
            var Q2 = Z.ref;
            if (Q2 !== null) {
              var L2 = Z.stateNode;
              switch (Z.tag) {
                case 5:
                  q2 = L2;
                  break;
                default:
                  q2 = L2;
              }
              typeof Q2 === "function" ? Q2(q2) : Q2.current = q2;
            }
          }
          Z = Z.nextEffect;
        }
      } catch (va) {
        if (Z === null)
          throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    while (Z !== null);
    Z = null;
    $f();
    X = e;
  } else
    a.current = c;
  if (xj)
    xj = false, yj = a, zj = b;
  else
    for (Z = d; Z !== null; )
      b = Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K2 = Z, K2.sibling = null, K2.stateNode = null), Z = b;
  d = a.pendingLanes;
  d === 0 && (Ti = null);
  d === 1 ? a === Ej ? Dj++ : (Dj = 0, Ej = a) : Dj = 0;
  c = c.stateNode;
  if (Mf && typeof Mf.onCommitFiberRoot === "function")
    try {
      Mf.onCommitFiberRoot(Lf, c, void 0, (c.current.flags & 64) === 64);
    } catch (va) {
    }
  Mj(a, O());
  if (Qi)
    throw Qi = false, a = Ri, Ri = null, a;
  if ((X & 8) !== 0)
    return null;
  ig();
  return null;
}
function ek() {
  for (; Z !== null; ) {
    var a = Z.alternate;
    Jj || Ij === null || ((Z.flags & 8) !== 0 ? dc(Z, Ij) && (Jj = true) : Z.tag === 13 && mj(a, Z) && dc(Z, Ij) && (Jj = true));
    var b = Z.flags;
    (b & 256) !== 0 && Xi(a, Z);
    (b & 512) === 0 || xj || (xj = true, hg(97, function() {
      Oj();
      return null;
    }));
    Z = Z.nextEffect;
  }
}
function Oj() {
  if (zj !== 90) {
    var a = 97 < zj ? 97 : zj;
    zj = 90;
    return gg(a, fk);
  }
  return false;
}
function $i(a, b) {
  Aj.push(b, a);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function Zi(a, b) {
  Bj.push(b, a);
  xj || (xj = true, hg(97, function() {
    Oj();
    return null;
  }));
}
function fk() {
  if (yj === null)
    return false;
  var a = yj;
  yj = null;
  if ((X & 48) !== 0)
    throw Error(y(331));
  var b = X;
  X |= 32;
  var c = Bj;
  Bj = [];
  for (var d = 0; d < c.length; d += 2) {
    var e = c[d], f2 = c[d + 1], g2 = e.destroy;
    e.destroy = void 0;
    if (typeof g2 === "function")
      try {
        g2();
      } catch (k) {
        if (f2 === null)
          throw Error(y(330));
        Wi(f2, k);
      }
  }
  c = Aj;
  Aj = [];
  for (d = 0; d < c.length; d += 2) {
    e = c[d];
    f2 = c[d + 1];
    try {
      var h = e.create;
      e.destroy = h();
    } catch (k) {
      if (f2 === null)
        throw Error(y(330));
      Wi(f2, k);
    }
  }
  for (h = a.current.firstEffect; h !== null; )
    a = h.nextEffect, h.nextEffect = null, h.flags & 8 && (h.sibling = null, h.stateNode = null), h = a;
  X = b;
  ig();
  return true;
}
function gk(a, b, c) {
  b = Mi(c, b);
  b = Pi(a, b, 1);
  Ag(a, b);
  b = Hg();
  a = Kj(a, 1);
  a !== null && ($c(a, 1, b), Mj(a, b));
}
function Wi(a, b) {
  if (a.tag === 3)
    gk(a, a, b);
  else
    for (var c = a.return; c !== null; ) {
      if (c.tag === 3) {
        gk(c, a, b);
        break;
      } else if (c.tag === 1) {
        var d = c.stateNode;
        if (typeof c.type.getDerivedStateFromError === "function" || typeof d.componentDidCatch === "function" && (Ti === null || !Ti.has(d))) {
          a = Mi(b, a);
          var e = Si(c, a, 1);
          Ag(c, e);
          e = Hg();
          c = Kj(c, 1);
          if (c !== null)
            $c(c, 1, e), Mj(c, e);
          else if (typeof d.componentDidCatch === "function" && (Ti === null || !Ti.has(d)))
            try {
              d.componentDidCatch(b, a);
            } catch (f2) {
            }
          break;
        }
      }
      c = c.return;
    }
}
function Yj(a, b, c) {
  var d = a.pingCache;
  d !== null && d.delete(b);
  b = Hg();
  a.pingedLanes |= a.suspendedLanes & c;
  U === a && (W & c) === c && (V === 4 || V === 3 && (W & 62914560) === W && 500 > O() - jj ? Qj(a, 0) : uj |= c);
  Mj(a, b);
}
function lj(a, b) {
  var c = a.stateNode;
  c !== null && c.delete(b);
  b = 0;
  b === 0 && (b = a.mode, (b & 2) === 0 ? b = 1 : (b & 4) === 0 ? b = eg() === 99 ? 1 : 2 : (Gj === 0 && (Gj = tj), b = Yc(62914560 & ~Gj), b === 0 && (b = 4194304)));
  c = Hg();
  a = Kj(a, b);
  a !== null && ($c(a, b, c), Mj(a, c));
}
var ck;
ck = function(a, b, c) {
  var d = b.lanes;
  if (a !== null)
    if (a.memoizedProps !== b.pendingProps || N.current)
      ug = true;
    else if ((c & d) !== 0)
      ug = (a.flags & 16384) !== 0 ? true : false;
    else {
      ug = false;
      switch (b.tag) {
        case 3:
          ri(b);
          sh();
          break;
        case 5:
          gh(b);
          break;
        case 1:
          Ff(b.type) && Jf(b);
          break;
        case 4:
          eh(b, b.stateNode.containerInfo);
          break;
        case 10:
          d = b.memoizedProps.value;
          var e = b.type._context;
          I(mg, e._currentValue);
          e._currentValue = d;
          break;
        case 13:
          if (b.memoizedState !== null) {
            if ((c & b.child.childLanes) !== 0)
              return ti(a, b, c);
            I(P, P.current & 1);
            b = hi(a, b, c);
            return b !== null ? b.sibling : null;
          }
          I(P, P.current & 1);
          break;
        case 19:
          d = (c & b.childLanes) !== 0;
          if ((a.flags & 64) !== 0) {
            if (d)
              return Ai(a, b, c);
            b.flags |= 64;
          }
          e = b.memoizedState;
          e !== null && (e.rendering = null, e.tail = null, e.lastEffect = null);
          I(P, P.current);
          if (d)
            break;
          else
            return null;
        case 23:
        case 24:
          return b.lanes = 0, mi(a, b, c);
      }
      return hi(a, b, c);
    }
  else
    ug = false;
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      d = b.type;
      a !== null && (a.alternate = null, b.alternate = null, b.flags |= 2);
      a = b.pendingProps;
      e = Ef(b, M.current);
      tg(b, c);
      e = Ch(null, b, d, a, e, c);
      b.flags |= 1;
      if (typeof e === "object" && e !== null && typeof e.render === "function" && e.$$typeof === void 0) {
        b.tag = 1;
        b.memoizedState = null;
        b.updateQueue = null;
        if (Ff(d)) {
          var f2 = true;
          Jf(b);
        } else
          f2 = false;
        b.memoizedState = e.state !== null && e.state !== void 0 ? e.state : null;
        xg(b);
        var g2 = d.getDerivedStateFromProps;
        typeof g2 === "function" && Gg(b, d, g2, a);
        e.updater = Kg;
        b.stateNode = e;
        e._reactInternals = b;
        Og(b, d, a, c);
        b = qi(null, b, d, true, f2, c);
      } else
        b.tag = 0, fi(null, b, e, c), b = b.child;
      return b;
    case 16:
      e = b.elementType;
      a: {
        a !== null && (a.alternate = null, b.alternate = null, b.flags |= 2);
        a = b.pendingProps;
        f2 = e._init;
        e = f2(e._payload);
        b.type = e;
        f2 = b.tag = hk(e);
        a = lg(e, a);
        switch (f2) {
          case 0:
            b = li(null, b, e, a, c);
            break a;
          case 1:
            b = pi(null, b, e, a, c);
            break a;
          case 11:
            b = gi(null, b, e, a, c);
            break a;
          case 14:
            b = ii(null, b, e, lg(e.type, a), d, c);
            break a;
        }
        throw Error(y(306, e, ""));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), li(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), pi(a, b, d, e, c);
    case 3:
      ri(b);
      d = b.updateQueue;
      if (a === null || d === null)
        throw Error(y(282));
      d = b.pendingProps;
      e = b.memoizedState;
      e = e !== null ? e.element : null;
      yg(a, b);
      Cg(b, d, null, c);
      d = b.memoizedState.element;
      if (d === e)
        sh(), b = hi(a, b, c);
      else {
        e = b.stateNode;
        if (f2 = e.hydrate)
          kh = rf(b.stateNode.containerInfo.firstChild), jh = b, f2 = lh = true;
        if (f2) {
          a = e.mutableSourceEagerHydrationData;
          if (a != null)
            for (e = 0; e < a.length; e += 2)
              f2 = a[e], f2._workInProgressVersionPrimary = a[e + 1], th.push(f2);
          c = Zg(b, null, d, c);
          for (b.child = c; c; )
            c.flags = c.flags & -3 | 1024, c = c.sibling;
        } else
          fi(a, b, d, c), sh();
        b = b.child;
      }
      return b;
    case 5:
      return gh(b), a === null && ph(b), d = b.type, e = b.pendingProps, f2 = a !== null ? a.memoizedProps : null, g2 = e.children, nf(d, e) ? g2 = null : f2 !== null && nf(d, f2) && (b.flags |= 16), oi(a, b), fi(a, b, g2, c), b.child;
    case 6:
      return a === null && ph(b), null;
    case 13:
      return ti(a, b, c);
    case 4:
      return eh(b, b.stateNode.containerInfo), d = b.pendingProps, a === null ? b.child = Yg(b, null, d, c) : fi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), gi(a, b, d, e, c);
    case 7:
      return fi(a, b, b.pendingProps, c), b.child;
    case 8:
      return fi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return fi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        g2 = b.memoizedProps;
        f2 = e.value;
        var h = b.type._context;
        I(mg, h._currentValue);
        h._currentValue = f2;
        if (g2 !== null)
          if (h = g2.value, f2 = He(h, f2) ? 0 : (typeof d._calculateChangedBits === "function" ? d._calculateChangedBits(h, f2) : 1073741823) | 0, f2 === 0) {
            if (g2.children === e.children && !N.current) {
              b = hi(a, b, c);
              break a;
            }
          } else
            for (h = b.child, h !== null && (h.return = b); h !== null; ) {
              var k = h.dependencies;
              if (k !== null) {
                g2 = h.child;
                for (var l2 = k.firstContext; l2 !== null; ) {
                  if (l2.context === d && (l2.observedBits & f2) !== 0) {
                    h.tag === 1 && (l2 = zg(-1, c & -c), l2.tag = 2, Ag(h, l2));
                    h.lanes |= c;
                    l2 = h.alternate;
                    l2 !== null && (l2.lanes |= c);
                    sg(h.return, c);
                    k.lanes |= c;
                    break;
                  }
                  l2 = l2.next;
                }
              } else
                g2 = h.tag === 10 ? h.type === b.type ? null : h.child : h.child;
              if (g2 !== null)
                g2.return = h;
              else
                for (g2 = h; g2 !== null; ) {
                  if (g2 === b) {
                    g2 = null;
                    break;
                  }
                  h = g2.sibling;
                  if (h !== null) {
                    h.return = g2.return;
                    g2 = h;
                    break;
                  }
                  g2 = g2.return;
                }
              h = g2;
            }
        fi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, f2 = b.pendingProps, d = f2.children, tg(b, c), e = vg(e, f2.unstable_observedBits), d = d(e), b.flags |= 1, fi(a, b, d, c), b.child;
    case 14:
      return e = b.type, f2 = lg(e, b.pendingProps), f2 = lg(e.type, f2), ii(a, b, e, f2, d, c);
    case 15:
      return ki(a, b, b.type, b.pendingProps, d, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), a !== null && (a.alternate = null, b.alternate = null, b.flags |= 2), b.tag = 1, Ff(d) ? (a = true, Jf(b)) : a = false, tg(b, c), Mg(b, d, e), Og(b, d, e, c), qi(null, b, d, true, a, c);
    case 19:
      return Ai(a, b, c);
    case 23:
      return mi(a, b, c);
    case 24:
      return mi(a, b, c);
  }
  throw Error(y(156, b.tag));
};
function ik(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.flags = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function nh(a, b, c, d) {
  return new ik(a, b, c, d);
}
function ji(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function hk(a) {
  if (typeof a === "function")
    return ji(a) ? 1 : 0;
  if (a !== void 0 && a !== null) {
    a = a.$$typeof;
    if (a === Aa)
      return 11;
    if (a === Da)
      return 14;
  }
  return 2;
}
function Tg(a, b) {
  var c = a.alternate;
  c === null ? (c = nh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = b === null ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function Vg(a, b, c, d, e, f2) {
  var g2 = 2;
  d = a;
  if (typeof a === "function")
    ji(a) && (g2 = 1);
  else if (typeof a === "string")
    g2 = 5;
  else
    a:
      switch (a) {
        case ua:
          return Xg(c.children, e, f2, b);
        case Ha:
          g2 = 8;
          e |= 16;
          break;
        case wa:
          g2 = 8;
          e |= 1;
          break;
        case xa:
          return a = nh(12, c, b, e | 8), a.elementType = xa, a.type = xa, a.lanes = f2, a;
        case Ba:
          return a = nh(13, c, b, e), a.type = Ba, a.elementType = Ba, a.lanes = f2, a;
        case Ca:
          return a = nh(19, c, b, e), a.elementType = Ca, a.lanes = f2, a;
        case Ia:
          return vi(c, e, f2, b);
        case Ja:
          return a = nh(24, c, b, e), a.elementType = Ja, a.lanes = f2, a;
        default:
          if (typeof a === "object" && a !== null)
            switch (a.$$typeof) {
              case ya:
                g2 = 10;
                break a;
              case za:
                g2 = 9;
                break a;
              case Aa:
                g2 = 11;
                break a;
              case Da:
                g2 = 14;
                break a;
              case Ea:
                g2 = 16;
                d = null;
                break a;
              case Fa:
                g2 = 22;
                break a;
            }
          throw Error(y(130, a == null ? a : typeof a, ""));
      }
  b = nh(g2, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Xg(a, b, c, d) {
  a = nh(7, a, d, b);
  a.lanes = c;
  return a;
}
function vi(a, b, c, d) {
  a = nh(23, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  return a;
}
function Ug(a, b, c) {
  a = nh(6, a, null, b);
  a.lanes = c;
  return a;
}
function Wg(a, b, c) {
  b = nh(4, a.children !== null ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b;
}
function jk(a, b, c) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = Zc(0);
  this.expirationTimes = Zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = Zc(0);
  this.mutableSourceEagerHydrationData = null;
}
function kk(a, b, c) {
  var d = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return { $$typeof: ta, key: d == null ? null : "" + d, children: a, containerInfo: b, implementation: c };
}
function lk(a, b, c, d) {
  var e = b.current, f2 = Hg(), g2 = Ig(e);
  a:
    if (c) {
      c = c._reactInternals;
      b: {
        if (Zb(c) !== c || c.tag !== 1)
          throw Error(y(170));
        var h = c;
        do {
          switch (h.tag) {
            case 3:
              h = h.stateNode.context;
              break b;
            case 1:
              if (Ff(h.type)) {
                h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }
          }
          h = h.return;
        } while (h !== null);
        throw Error(y(171));
      }
      if (c.tag === 1) {
        var k = c.type;
        if (Ff(k)) {
          c = If(c, k, h);
          break a;
        }
      }
      c = h;
    } else
      c = Cf;
  b.context === null ? b.context = c : b.pendingContext = c;
  b = zg(f2, g2);
  b.payload = { element: a };
  d = d === void 0 ? null : d;
  d !== null && (b.callback = d);
  Ag(e, b);
  Jg(e, g2, f2);
  return g2;
}
function mk(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function nk(a, b) {
  a = a.memoizedState;
  if (a !== null && a.dehydrated !== null) {
    var c = a.retryLane;
    a.retryLane = c !== 0 && c < b ? c : b;
  }
}
function ok(a, b) {
  nk(a, b);
  (a = a.alternate) && nk(a, b);
}
function pk() {
  return null;
}
function qk(a, b, c) {
  var d = c != null && c.hydrationOptions != null && c.hydrationOptions.mutableSources || null;
  c = new jk(a, b, c != null && c.hydrate === true);
  b = nh(3, null, null, b === 2 ? 7 : b === 1 ? 3 : 0);
  c.current = b;
  b.stateNode = c;
  xg(b);
  a[ff] = c.current;
  cf(a.nodeType === 8 ? a.parentNode : a);
  if (d)
    for (a = 0; a < d.length; a++) {
      b = d[a];
      var e = b._getVersion;
      e = e(b._source);
      c.mutableSourceEagerHydrationData == null ? c.mutableSourceEagerHydrationData = [b, e] : c.mutableSourceEagerHydrationData.push(b, e);
    }
  this._internalRoot = c;
}
qk.prototype.render = function(a) {
  lk(a, this._internalRoot, null, null);
};
qk.prototype.unmount = function() {
  var a = this._internalRoot, b = a.containerInfo;
  lk(null, a, null, function() {
    b[ff] = null;
  });
};
function rk(a) {
  return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
}
function sk(a, b) {
  b || (b = a ? a.nodeType === 9 ? a.documentElement : a.firstChild : null, b = !(!b || b.nodeType !== 1 || !b.hasAttribute("data-reactroot")));
  if (!b)
    for (var c; c = a.lastChild; )
      a.removeChild(c);
  return new qk(a, 0, b ? { hydrate: true } : void 0);
}
function tk(a, b, c, d, e) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g2 = f2._internalRoot;
    if (typeof e === "function") {
      var h = e;
      e = function() {
        var a2 = mk(g2);
        h.call(a2);
      };
    }
    lk(b, g2, a, e);
  } else {
    f2 = c._reactRootContainer = sk(c, d);
    g2 = f2._internalRoot;
    if (typeof e === "function") {
      var k = e;
      e = function() {
        var a2 = mk(g2);
        k.call(a2);
      };
    }
    Xj(function() {
      lk(b, g2, a, e);
    });
  }
  return mk(g2);
}
ec = function(a) {
  if (a.tag === 13) {
    var b = Hg();
    Jg(a, 4, b);
    ok(a, 4);
  }
};
fc = function(a) {
  if (a.tag === 13) {
    var b = Hg();
    Jg(a, 67108864, b);
    ok(a, 67108864);
  }
};
gc = function(a) {
  if (a.tag === 13) {
    var b = Hg(), c = Ig(a);
    Jg(a, c, b);
    ok(a, c);
  }
};
hc = function(a, b) {
  return b();
};
yb = function(a, b, c) {
  switch (b) {
    case "input":
      ab(a, c);
      b = c.name;
      if (c.type === "radio" && b != null) {
        for (c = a; c.parentNode; )
          c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e)
              throw Error(y(90));
            Wa(d);
            ab(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, b != null && fb(a, !!c.multiple, b, false);
  }
};
Gb = Wj;
Hb = function(a, b, c, d, e) {
  var f2 = X;
  X |= 4;
  try {
    return gg(98, a.bind(null, b, c, d, e));
  } finally {
    X = f2, X === 0 && (wj(), ig());
  }
};
Ib = function() {
  (X & 49) === 0 && (Vj(), Oj());
};
Jb = function(a, b) {
  var c = X;
  X |= 2;
  try {
    return a(b);
  } finally {
    X = c, X === 0 && (wj(), ig());
  }
};
function uk(a, b) {
  var c = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!rk(b))
    throw Error(y(200));
  return kk(a, b, null, c);
}
var vk = { Events: [Cb, ue, Db, Eb, Fb, Oj, { current: false }] }, wk = { findFiberByHostInstance: wc, bundleType: 0, version: "17.0.2", rendererPackageName: "react-dom" };
var xk = { bundleType: wk.bundleType, version: wk.version, rendererPackageName: wk.rendererPackageName, rendererConfig: wk.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ra.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = cc(a);
  return a === null ? null : a.stateNode;
}, findFiberByHostInstance: wk.findFiberByHostInstance || pk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
  var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!yk.isDisabled && yk.supportsFiber)
    try {
      Lf = yk.inject(xk), Mf = yk;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
reactDom_production_min.createPortal = uk;
reactDom_production_min.findDOMNode = function(a) {
  if (a == null)
    return null;
  if (a.nodeType === 1)
    return a;
  var b = a._reactInternals;
  if (b === void 0) {
    if (typeof a.render === "function")
      throw Error(y(188));
    throw Error(y(268, Object.keys(a)));
  }
  a = cc(b);
  a = a === null ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a, b) {
  var c = X;
  if ((c & 48) !== 0)
    return a(b);
  X |= 1;
  try {
    if (a)
      return gg(99, a.bind(null, b));
  } finally {
    X = c, ig();
  }
};
reactDom_production_min.hydrate = function(a, b, c) {
  if (!rk(b))
    throw Error(y(200));
  return tk(null, a, b, true, c);
};
reactDom_production_min.render = function(a, b, c) {
  if (!rk(b))
    throw Error(y(200));
  return tk(null, a, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!rk(a))
    throw Error(y(40));
  return a._reactRootContainer ? (Xj(function() {
    tk(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[ff] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Wj;
reactDom_production_min.unstable_createPortal = function(a, b) {
  return uk(a, b, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
};
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b, c, d) {
  if (!rk(c))
    throw Error(y(200));
  if (a == null || a._reactInternals === void 0)
    throw Error(y(38));
  return tk(a, b, c, false, d);
};
reactDom_production_min.version = "17.0.2";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var ReactDOM = reactDom.exports;
const AllMenuItem = {
  separate: {
    type: "separate",
    separator: true
  },
  cut: {
    type: "cut",
    label: "cut",
    icon: "pi pi-box"
  },
  copy: {
    type: "copy",
    label: "copy",
    icon: "pi pi-copy"
  },
  paste: {
    type: "paste",
    label: "paste node",
    icon: "pi pi-file"
  },
  delete: {
    type: "delete",
    label: "delete",
    icon: "pi pi-trash"
  },
  draw: {
    type: "draw",
    label: "start free draw",
    icon: "pi pi-palette"
  },
  select: {
    type: "select",
    label: "stop free draw",
    icon: "pi pi-pencil"
  },
  zoom: {
    type: "zoom",
    label: "zoom to fit",
    icon: "pi pi-window-minimize"
  },
  clear: {
    type: "clear",
    label: "clear canvas",
    icon: "pi pi-desktop"
  },
  download: {
    type: "download",
    label: "download diagram (as png)",
    icon: "pi pi-download"
  },
  load: {
    type: "load",
    label: "load diagram (from file)",
    icon: "pi pi-image"
  },
  store: {
    type: "store",
    label: "store diagram (to file)",
    icon: "pi pi-save"
  }
};
const ContextMenu = (props) => {
  const MenuItemMap = {
    node: [AllMenuItem.cut, AllMenuItem.copy, AllMenuItem.paste, AllMenuItem.delete],
    link: [AllMenuItem.delete],
    blank: [AllMenuItem.paste, AllMenuItem.separate, AllMenuItem.draw, AllMenuItem.select, AllMenuItem.separate, AllMenuItem.zoom, AllMenuItem.clear, AllMenuItem.download, AllMenuItem.separate, AllMenuItem.load, AllMenuItem.store]
  };
  const [menuItems, setMenuItems] = react.exports.useState([]);
  const [visible, setVisible] = react.exports.useState(false);
  const [position, setPosition] = react.exports.useState([-1e3, -1e3]);
  const controlFunction = (type, position2) => {
    if (type === "hide") {
      setVisible(false);
      setPosition(position2);
    } else {
      setMenuItems(MenuItemMap[type]);
      setVisible(true);
      setPosition(position2);
    }
  };
  const doMenuCmd = (type) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
    switch (type) {
      case "separate":
        break;
      case "cut":
        (_a = props.instance) == null ? void 0 : _a.doCut();
        break;
      case "copy":
        (_b = props.instance) == null ? void 0 : _b.doCopy();
        break;
      case "paste":
        (_c = props.instance) == null ? void 0 : _c.doPaste();
        break;
      case "delete":
        (_d = props.instance) == null ? void 0 : _d.doDelete();
        break;
      case "draw":
        (_e = props.instance) == null ? void 0 : _e.doDrawMode();
        break;
      case "select":
        (_f = props.instance) == null ? void 0 : _f.doSelectMode();
        break;
      case "zoom":
        (_g = props.instance) == null ? void 0 : _g.doZoomToFit();
        break;
      case "clear":
        (_h = props.instance) == null ? void 0 : _h.doClear();
        break;
      case "download":
        (_i = props.instance) == null ? void 0 : _i.doDownload();
        break;
      case "load":
        (_j = props.instance) == null ? void 0 : _j.doLoad();
        break;
      case "store":
        (_k = props.instance) == null ? void 0 : _k.doStore();
        break;
    }
    controlFunction("hide", [-1e3, -1e3]);
  };
  react.exports.useEffect(() => {
    props.onLoad(controlFunction);
  }, []);
  return /* @__PURE__ */ jsx("div", {
    style: {
      position: "absolute",
      zIndex: "1000",
      left: position[0] + 5,
      top: position[1] + 5,
      width: "200px",
      padding: "10px",
      border: "solid 2px #aaaaaa",
      borderRadius: "10px",
      backgroundColor: "#ffffff",
      display: visible ? "block" : "none"
    },
    onContextMenu: (e) => {
      e.preventDefault();
    },
    children: menuItems.map((item, index) => {
      if (item.separator) {
        return /* @__PURE__ */ jsx("div", {
          style: {
            position: "relative",
            width: "calc(100% - 10px)",
            height: "1px",
            margin: "5px",
            backgroundColor: "#777777"
          }
        }, index);
      } else {
        return /* @__PURE__ */ jsxs("div", {
          className: "custom-hover-highlight",
          style: {
            position: "relative",
            width: "100%",
            height: "30px",
            display: "flex",
            alignItems: "center",
            justifyContent: "flex-start"
          },
          onClick: () => {
            doMenuCmd(item.type);
          },
          children: [/* @__PURE__ */ jsx("i", {
            className: item.icon,
            style: {
              margin: "0 5px"
            }
          }), /* @__PURE__ */ jsx("span", {
            style: {
              fontSize: "12px"
            },
            children: item.label
          })]
        }, index);
      }
    })
  });
};
var sha256 = { exports: {} };
var core = { exports: {} };
(function(module2, exports) {
  (function(root, factory) {
    {
      module2.exports = factory();
    }
  })(commonjsGlobal, function() {
    var CryptoJS = CryptoJS || function(Math2, undefined$1) {
      var crypto2;
      if (typeof window !== "undefined" && window.crypto) {
        crypto2 = window.crypto;
      }
      if (typeof self !== "undefined" && self.crypto) {
        crypto2 = self.crypto;
      }
      if (typeof globalThis !== "undefined" && globalThis.crypto) {
        crypto2 = globalThis.crypto;
      }
      if (!crypto2 && typeof window !== "undefined" && window.msCrypto) {
        crypto2 = window.msCrypto;
      }
      if (!crypto2 && typeof commonjsGlobal !== "undefined" && commonjsGlobal.crypto) {
        crypto2 = commonjsGlobal.crypto;
      }
      if (!crypto2 && typeof commonjsRequire === "function") {
        try {
          crypto2 = require("crypto");
        } catch (err) {
        }
      }
      var cryptoSecureRandomInt = function() {
        if (crypto2) {
          if (typeof crypto2.getRandomValues === "function") {
            try {
              return crypto2.getRandomValues(new Uint32Array(1))[0];
            } catch (err) {
            }
          }
          if (typeof crypto2.randomBytes === "function") {
            try {
              return crypto2.randomBytes(4).readInt32LE();
            } catch (err) {
            }
          }
        }
        throw new Error("Native crypto module could not be used to get secure random number.");
      };
      var create = Object.create || function() {
        function F2() {
        }
        return function(obj) {
          var subtype;
          F2.prototype = obj;
          subtype = new F2();
          F2.prototype = null;
          return subtype;
        };
      }();
      var C2 = {};
      var C_lib = C2.lib = {};
      var Base = C_lib.Base = function() {
        return {
          extend: function(overrides) {
            var subtype = create(this);
            if (overrides) {
              subtype.mixIn(overrides);
            }
            if (!subtype.hasOwnProperty("init") || this.init === subtype.init) {
              subtype.init = function() {
                subtype.$super.init.apply(this, arguments);
              };
            }
            subtype.init.prototype = subtype;
            subtype.$super = this;
            return subtype;
          },
          create: function() {
            var instance = this.extend();
            instance.init.apply(instance, arguments);
            return instance;
          },
          init: function() {
          },
          mixIn: function(properties) {
            for (var propertyName in properties) {
              if (properties.hasOwnProperty(propertyName)) {
                this[propertyName] = properties[propertyName];
              }
            }
            if (properties.hasOwnProperty("toString")) {
              this.toString = properties.toString;
            }
          },
          clone: function() {
            return this.init.prototype.extend(this);
          }
        };
      }();
      var WordArray = C_lib.WordArray = Base.extend({
        init: function(words, sigBytes) {
          words = this.words = words || [];
          if (sigBytes != undefined$1) {
            this.sigBytes = sigBytes;
          } else {
            this.sigBytes = words.length * 4;
          }
        },
        toString: function(encoder) {
          return (encoder || Hex).stringify(this);
        },
        concat: function(wordArray) {
          var thisWords = this.words;
          var thatWords = wordArray.words;
          var thisSigBytes = this.sigBytes;
          var thatSigBytes = wordArray.sigBytes;
          this.clamp();
          if (thisSigBytes % 4) {
            for (var i = 0; i < thatSigBytes; i++) {
              var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
            }
          } else {
            for (var j = 0; j < thatSigBytes; j += 4) {
              thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];
            }
          }
          this.sigBytes += thatSigBytes;
          return this;
        },
        clamp: function() {
          var words = this.words;
          var sigBytes = this.sigBytes;
          words[sigBytes >>> 2] &= 4294967295 << 32 - sigBytes % 4 * 8;
          words.length = Math2.ceil(sigBytes / 4);
        },
        clone: function() {
          var clone = Base.clone.call(this);
          clone.words = this.words.slice(0);
          return clone;
        },
        random: function(nBytes) {
          var words = [];
          for (var i = 0; i < nBytes; i += 4) {
            words.push(cryptoSecureRandomInt());
          }
          return new WordArray.init(words, nBytes);
        }
      });
      var C_enc = C2.enc = {};
      var Hex = C_enc.Hex = {
        stringify: function(wordArray) {
          var words = wordArray.words;
          var sigBytes = wordArray.sigBytes;
          var hexChars = [];
          for (var i = 0; i < sigBytes; i++) {
            var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
            hexChars.push((bite >>> 4).toString(16));
            hexChars.push((bite & 15).toString(16));
          }
          return hexChars.join("");
        },
        parse: function(hexStr) {
          var hexStrLength = hexStr.length;
          var words = [];
          for (var i = 0; i < hexStrLength; i += 2) {
            words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
          }
          return new WordArray.init(words, hexStrLength / 2);
        }
      };
      var Latin1 = C_enc.Latin1 = {
        stringify: function(wordArray) {
          var words = wordArray.words;
          var sigBytes = wordArray.sigBytes;
          var latin1Chars = [];
          for (var i = 0; i < sigBytes; i++) {
            var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
            latin1Chars.push(String.fromCharCode(bite));
          }
          return latin1Chars.join("");
        },
        parse: function(latin1Str) {
          var latin1StrLength = latin1Str.length;
          var words = [];
          for (var i = 0; i < latin1StrLength; i++) {
            words[i >>> 2] |= (latin1Str.charCodeAt(i) & 255) << 24 - i % 4 * 8;
          }
          return new WordArray.init(words, latin1StrLength);
        }
      };
      var Utf8 = C_enc.Utf8 = {
        stringify: function(wordArray) {
          try {
            return decodeURIComponent(escape(Latin1.stringify(wordArray)));
          } catch (e) {
            throw new Error("Malformed UTF-8 data");
          }
        },
        parse: function(utf8Str) {
          return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
        }
      };
      var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
        reset: function() {
          this._data = new WordArray.init();
          this._nDataBytes = 0;
        },
        _append: function(data) {
          if (typeof data == "string") {
            data = Utf8.parse(data);
          }
          this._data.concat(data);
          this._nDataBytes += data.sigBytes;
        },
        _process: function(doFlush) {
          var processedWords;
          var data = this._data;
          var dataWords = data.words;
          var dataSigBytes = data.sigBytes;
          var blockSize = this.blockSize;
          var blockSizeBytes = blockSize * 4;
          var nBlocksReady = dataSigBytes / blockSizeBytes;
          if (doFlush) {
            nBlocksReady = Math2.ceil(nBlocksReady);
          } else {
            nBlocksReady = Math2.max((nBlocksReady | 0) - this._minBufferSize, 0);
          }
          var nWordsReady = nBlocksReady * blockSize;
          var nBytesReady = Math2.min(nWordsReady * 4, dataSigBytes);
          if (nWordsReady) {
            for (var offset = 0; offset < nWordsReady; offset += blockSize) {
              this._doProcessBlock(dataWords, offset);
            }
            processedWords = dataWords.splice(0, nWordsReady);
            data.sigBytes -= nBytesReady;
          }
          return new WordArray.init(processedWords, nBytesReady);
        },
        clone: function() {
          var clone = Base.clone.call(this);
          clone._data = this._data.clone();
          return clone;
        },
        _minBufferSize: 0
      });
      C_lib.Hasher = BufferedBlockAlgorithm.extend({
        cfg: Base.extend(),
        init: function(cfg) {
          this.cfg = this.cfg.extend(cfg);
          this.reset();
        },
        reset: function() {
          BufferedBlockAlgorithm.reset.call(this);
          this._doReset();
        },
        update: function(messageUpdate) {
          this._append(messageUpdate);
          this._process();
          return this;
        },
        finalize: function(messageUpdate) {
          if (messageUpdate) {
            this._append(messageUpdate);
          }
          var hash = this._doFinalize();
          return hash;
        },
        blockSize: 512 / 32,
        _createHelper: function(hasher) {
          return function(message, cfg) {
            return new hasher.init(cfg).finalize(message);
          };
        },
        _createHmacHelper: function(hasher) {
          return function(message, key) {
            return new C_algo.HMAC.init(hasher, key).finalize(message);
          };
        }
      });
      var C_algo = C2.algo = {};
      return C2;
    }(Math);
    return CryptoJS;
  });
})(core);
(function(module2, exports) {
  (function(root, factory) {
    {
      module2.exports = factory(core.exports);
    }
  })(commonjsGlobal, function(CryptoJS) {
    (function(Math2) {
      var C2 = CryptoJS;
      var C_lib = C2.lib;
      var WordArray = C_lib.WordArray;
      var Hasher = C_lib.Hasher;
      var C_algo = C2.algo;
      var H2 = [];
      var K2 = [];
      (function() {
        function isPrime(n3) {
          var sqrtN = Math2.sqrt(n3);
          for (var factor = 2; factor <= sqrtN; factor++) {
            if (!(n3 % factor)) {
              return false;
            }
          }
          return true;
        }
        function getFractionalBits(n3) {
          return (n3 - (n3 | 0)) * 4294967296 | 0;
        }
        var n2 = 2;
        var nPrime = 0;
        while (nPrime < 64) {
          if (isPrime(n2)) {
            if (nPrime < 8) {
              H2[nPrime] = getFractionalBits(Math2.pow(n2, 1 / 2));
            }
            K2[nPrime] = getFractionalBits(Math2.pow(n2, 1 / 3));
            nPrime++;
          }
          n2++;
        }
      })();
      var W2 = [];
      var SHA2562 = C_algo.SHA256 = Hasher.extend({
        _doReset: function() {
          this._hash = new WordArray.init(H2.slice(0));
        },
        _doProcessBlock: function(M2, offset) {
          var H3 = this._hash.words;
          var a = H3[0];
          var b = H3[1];
          var c = H3[2];
          var d = H3[3];
          var e = H3[4];
          var f2 = H3[5];
          var g2 = H3[6];
          var h = H3[7];
          for (var i = 0; i < 64; i++) {
            if (i < 16) {
              W2[i] = M2[offset + i] | 0;
            } else {
              var gamma0x = W2[i - 15];
              var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
              var gamma1x = W2[i - 2];
              var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
              W2[i] = gamma0 + W2[i - 7] + gamma1 + W2[i - 16];
            }
            var ch2 = e & f2 ^ ~e & g2;
            var maj = a & b ^ a & c ^ b & c;
            var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
            var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
            var t1 = h + sigma1 + ch2 + K2[i] + W2[i];
            var t2 = sigma0 + maj;
            h = g2;
            g2 = f2;
            f2 = e;
            e = d + t1 | 0;
            d = c;
            c = b;
            b = a;
            a = t1 + t2 | 0;
          }
          H3[0] = H3[0] + a | 0;
          H3[1] = H3[1] + b | 0;
          H3[2] = H3[2] + c | 0;
          H3[3] = H3[3] + d | 0;
          H3[4] = H3[4] + e | 0;
          H3[5] = H3[5] + f2 | 0;
          H3[6] = H3[6] + g2 | 0;
          H3[7] = H3[7] + h | 0;
        },
        _doFinalize: function() {
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;
          dataWords[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math2.floor(nBitsTotal / 4294967296);
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
          data.sigBytes = dataWords.length * 4;
          this._process();
          return this._hash;
        },
        clone: function() {
          var clone = Hasher.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        }
      });
      C2.SHA256 = Hasher._createHelper(SHA2562);
      C2.HmacSHA256 = Hasher._createHmacHelper(SHA2562);
    })(Math);
    return CryptoJS.SHA256;
  });
})(sha256);
var SHA256 = sha256.exports;
(function() {
  var t2;
  function aa2(a) {
    var b = 0;
    return function() {
      return b < a.length ? { done: false, value: a[b++] } : { done: true };
    };
  }
  function ba2(a) {
    var b = typeof Symbol != "undefined" && Symbol.iterator && a[Symbol.iterator];
    return b ? b.call(a) : { next: aa2(a) };
  }
  function da2(a) {
    for (var b, c = []; !(b = a.next()).done; )
      c.push(b.value);
    return c;
  }
  var ea2 = typeof Object.create == "function" ? Object.create : function(a) {
    function b() {
    }
    b.prototype = a;
    return new b();
  }, fa2;
  if (typeof Object.setPrototypeOf == "function")
    fa2 = Object.setPrototypeOf;
  else {
    var ha2;
    a: {
      var ia2 = { a: true }, ka2 = {};
      try {
        ka2.__proto__ = ia2;
        ha2 = ka2.a;
        break a;
      } catch (a) {
      }
      ha2 = false;
    }
    fa2 = ha2 ? function(a, b) {
      a.__proto__ = b;
      if (a.__proto__ !== b)
        throw new TypeError(a + " is not extensible");
      return a;
    } : null;
  }
  var la2 = fa2;
  function ma2(a, b) {
    a.prototype = ea2(b.prototype);
    a.prototype.constructor = a;
    if (la2)
      la2(a, b);
    else
      for (var c in b)
        if (c != "prototype")
          if (Object.defineProperties) {
            var d = Object.getOwnPropertyDescriptor(b, c);
            d && Object.defineProperty(a, c, d);
          } else
            a[c] = b[c];
    a.oB = b.prototype;
  }
  var na2 = typeof global != "undefined" && global != null ? global : self, oa2 = typeof Object.assign == "function" ? Object.assign : function(a, b) {
    for (var c = 1; c < arguments.length; c++) {
      var d = arguments[c];
      if (d)
        for (var e in d)
          Object.prototype.hasOwnProperty.call(d, e) && (a[e] = d[e]);
    }
    return a;
  }, qa2 = typeof Object.defineProperties == "function" ? Object.defineProperty : function(a, b, c) {
    a != Array.prototype && a != Object.prototype && (a[b] = c.value);
  };
  function ra2(a, b) {
    if (b) {
      var c = na2;
      a = a.split(".");
      for (var d = 0; d < a.length - 1; d++) {
        var e = a[d];
        e in c || (c[e] = {});
        c = c[e];
      }
      a = a[a.length - 1];
      d = c[a];
      b = b(d);
      b != d && b != null && qa2(c, a, { writable: true, value: b });
    }
  }
  ra2("Object.assign", function(a) {
    return a || oa2;
  });
  ra2("Array.prototype.fill", function(a) {
    return a ? a : function(a2, c, d) {
      var b = this.length || 0;
      0 > c && (c = Math.max(0, b + c));
      if (d == null || d > b)
        d = b;
      d = Number(d);
      0 > d && (d = Math.max(0, b + d));
      for (c = Number(c || 0); c < d; c++)
        this[c] = a2;
      return this;
    };
  });
  var x2 = typeof globalThis === "object" && globalThis || typeof global === "object" && global.global === global && global || typeof self === "object" && self.self === self && self || {};
  x2.requestAnimationFrame === void 0 && (x2.setImmediate === void 0 ? x2.requestAnimationFrame = function(a) {
    x2.setTimeout(a, 0);
  } : x2.requestAnimationFrame = x2.setImmediate);
  function sa2() {
  }
  function ta2(a, b) {
    var c = -1;
    return function() {
      var d = this, e = arguments;
      c !== -1 && x2.clearTimeout(c);
      c = ua2(function() {
        c = -1;
        a.apply(d, e);
      }, b);
    };
  }
  function ua2(a, b) {
    return x2.setTimeout(a, b);
  }
  function va(a) {
    return x2.document.createElement(a);
  }
  function C2(a) {
    throw Error(a);
  }
  function wa2(a, b) {
    a = "The object is frozen, so its properties cannot be set: " + a.toString();
    b !== void 0 && (a += "  to value: " + b);
    C2(a);
  }
  function xa2(a, b, c, d) {
    c = c === null ? "*" : typeof c === "string" ? c : typeof c === "function" && typeof c.className === "string" ? c.className : "";
    d !== void 0 && (c += "." + d);
    C2(c + " is not in the range " + b + ": " + a);
  }
  function ya2(a) {
    x2.console && x2.console.log(a);
  }
  function za2(a) {
    return typeof a === "object" && a !== null;
  }
  function Aa2(a) {
    return Array.isArray(a) || x2.NodeList && a instanceof x2.NodeList || x2.HTMLCollection && a instanceof x2.HTMLCollection;
  }
  function Ba2(a) {
    return Array.prototype.slice.call(a);
  }
  function Ca2(a, b, c) {
    Array.isArray(a) ? b >= a.length ? a.push(c) : a.splice(b, 0, c) : C2("Cannot insert an object into an HTMLCollection or NodeList: " + c + " at " + b);
  }
  function Da2(a, b) {
    Array.isArray(a) ? b >= a.length ? a.pop() : a.splice(b, 1) : C2("Cannot remove an object from an HTMLCollection or NodeList at " + b);
  }
  function Ea2() {
    var a = Fa2.pop();
    return a === void 0 ? [] : a;
  }
  function Ia2(a) {
    a.length = 0;
    Fa2.push(a);
  }
  function Ja2(a) {
    if (typeof a === "function") {
      if (a.className)
        return a.className;
      if (a.name)
        return a.name;
      var b = a.toString();
      b = b.substring(9, b.indexOf("(")).trim();
      if (b !== "")
        return a._className = b;
    } else if (za2(a) && a.constructor)
      return Ja2(a.constructor);
    return typeof a;
  }
  function Ka2(a) {
    var b = a;
    za2(a) && (a.text ? b = a.text : a.name ? b = a.name : a.key !== void 0 ? b = a.key : a.id !== void 0 ? b = a.id : a.constructor === Object && (a.Text ? b = a.Text : a.Name ? b = a.Name : a.Key !== void 0 ? b = a.Key : a.Id !== void 0 ? b = a.Id : a.ID !== void 0 && (b = a.ID)));
    return b === void 0 ? "undefined" : b === null ? "null" : b.toString();
  }
  function La2(a, b) {
    if (a.hasOwnProperty(b))
      return true;
    for (a = Object.getPrototypeOf(a); a && a !== Function; ) {
      if (a.hasOwnProperty(b))
        return true;
      var c = a.aB;
      if (c && c[b])
        return true;
      a = Object.getPrototypeOf(a);
    }
    return false;
  }
  function Ma2(a, b, c) {
    Object.defineProperty(Pa2.prototype, a, { get: b, set: c });
  }
  function Qa2(a) {
    for (var b = [], c = 0; 256 > c; c++)
      b["0123456789abcdef".charAt(c >> 4) + "0123456789abcdef".charAt(c & 15)] = String.fromCharCode(c);
    a.length % 2 && (a = "0" + a);
    c = [];
    for (var d = 0, e = 0; e < a.length; e += 2)
      c[d++] = b[a.substr(e, 2)];
    a = c.join("");
    a = a === "" ? "0" : a;
    b = [];
    for (c = 0; 256 > c; c++)
      b[c] = c;
    for (c = d = 0; 256 > c; c++)
      d = (d + b[c] + 119) % 256, e = b[c], b[c] = b[d], b[d] = e;
    d = c = 0;
    for (var f2 = "", g2 = 0; g2 < a.length; g2++)
      c = (c + 1) % 256, d = (d + b[c]) % 256, e = b[c], b[c] = b[d], b[d] = e, f2 += String.fromCharCode(a.charCodeAt(g2) ^ b[(b[c] + b[d]) % 256]);
    return f2;
  }
  var Ra2 = x2.navigator !== void 0 && 0 < x2.navigator.userAgent.indexOf("Trident/7"), Sa2 = x2.navigator !== void 0 && 0 < x2.navigator.userAgent.indexOf("Edge/"), Ta2 = x2.navigator !== void 0 && x2.navigator.platform !== void 0 && 0 <= x2.navigator.platform.toUpperCase().indexOf("MAC"), Ua2 = x2.navigator !== void 0 && x2.navigator.platform !== void 0 && x2.navigator.platform.match(/(iPhone|iPod|iPad)/i) !== null, Fa2 = [];
  Object.freeze([]);
  sa2.className = "Util";
  sa2.Dx = "32ab5ff3b26f42dc0ed90f21462913b5";
  sa2.adym = "gojs.net";
  sa2.vfo = "28e644fdb6";
  sa2.className = "Util";
  function D2(a, b, c) {
    Va2(this);
    this.j = a;
    this.na = b;
    this.o = c;
  }
  D2.prototype.toString = function() {
    return "EnumValue." + this.na;
  };
  function Wa2(a, b) {
    return b === void 0 || b === null || b === "" ? null : a[b];
  }
  na2.Object.defineProperties(D2.prototype, { classType: { get: function() {
    return this.j;
  } }, name: { get: function() {
    return this.na;
  } }, value: { get: function() {
    return this.o;
  } } });
  D2.className = "EnumValue";
  function Xa2() {
    this.Gw = [];
  }
  Xa2.prototype.toString = function() {
    return this.Gw.join("");
  };
  Xa2.prototype.add = function(a) {
    a !== "" && this.Gw.push(a);
  };
  Xa2.className = "StringBuilder";
  function Ya2() {
  }
  Ya2.className = "PropertyCollection";
  var Za2 = { cB: false, hB: false, eB: false, gB: false, mB: false, kB: false, Ox: false, dB: null, trace: function(a) {
    x2.console && x2.console.log(a);
  }, fB: function(a, b, c, d) {
    a.strokeStyle = "red";
    a.fillStyle = "red";
    a.font = "8px sans-serif";
    a.beginPath();
    a.moveTo(-10, 0);
    a.lineTo(10, 0);
    a.moveTo(0, -10);
    a.lineTo(0, 10);
    a.stroke();
    a.setTransform(1, 0, 0, 1, 0, 0);
    a.scale(c, c);
    a.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy);
    a.lineWidth = 2;
    a.beginPath();
    a.moveTo(d.left, d.top + 20);
    a.lineTo(d.left, d.top);
    a.lineTo(d.left + 20, d.top);
    a.moveTo(d.right, d.bottom - 20);
    a.lineTo(d.right, d.bottom);
    a.lineTo(d.right - 20, d.bottom);
    a.stroke();
    a.fillText("DB: " + Math.round(d.x) + ", " + Math.round(d.y) + ", " + Math.round(d.width) + ", " + Math.round(d.height), d.left, d.top - 5);
  }, bB: function(a) {
    var b = {}, c;
    for (c in a) {
      b.x = c;
      if (b.x !== "licenseKey") {
        var d = a[b.x];
        if (d.prototype !== void 0) {
          b.km = Object.getOwnPropertyNames(d.prototype);
          for (var e = { bk: 0 }; e.bk < b.km.length; e = { bk: e.bk }, e.bk++) {
            var f2 = Object.getOwnPropertyDescriptor(d.prototype, b.km[e.bk]);
            f2.get !== void 0 && f2.set === void 0 && Object.defineProperty(d.prototype, b.km[e.bk], { set: function(a2, b2) {
              return function() {
                throw Error("Property " + a2.km[b2.bk] + " of " + a2.x + " is read-only.");
              };
            }(b, e) });
          }
        }
      }
      b = { km: b.km, x: b.x };
    }
  } };
  function $a2() {
  }
  $a2.prototype.reset = function() {
  };
  $a2.prototype.next = function() {
    return false;
  };
  $a2.prototype.qd = function() {
    return false;
  };
  $a2.prototype.first = function() {
    return null;
  };
  $a2.prototype.any = function() {
    return false;
  };
  $a2.prototype.all = function() {
    return true;
  };
  $a2.prototype.each = function() {
    return this;
  };
  $a2.prototype.map = function() {
    return this;
  };
  $a2.prototype.filter = function() {
    return this;
  };
  $a2.prototype.Ud = function() {
  };
  $a2.prototype.toString = function() {
    return "EmptyIterator";
  };
  na2.Object.defineProperties($a2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return 0;
  } } });
  $a2.prototype.first = $a2.prototype.first;
  $a2.prototype.hasNext = $a2.prototype.qd;
  $a2.prototype.next = $a2.prototype.next;
  $a2.prototype.reset = $a2.prototype.reset;
  var ab2 = null;
  $a2.className = "EmptyIterator";
  ab2 = new $a2();
  function bb2(a) {
    this.key = -1;
    this.value = a;
  }
  bb2.prototype.reset = function() {
    this.key = -1;
  };
  bb2.prototype.next = function() {
    return this.key === -1 ? (this.key = 0, true) : false;
  };
  bb2.prototype.qd = function() {
    return this.next();
  };
  bb2.prototype.first = function() {
    this.key = 0;
    return this.value;
  };
  bb2.prototype.any = function(a) {
    this.key = -1;
    return a(this.value);
  };
  bb2.prototype.all = function(a) {
    this.key = -1;
    return a(this.value);
  };
  bb2.prototype.each = function(a) {
    this.key = -1;
    a(this.value);
    return this;
  };
  bb2.prototype.map = function(a) {
    return new bb2(a(this.value));
  };
  bb2.prototype.filter = function(a) {
    return a(this.value) ? new bb2(this.value) : ab2;
  };
  bb2.prototype.Ud = function() {
    this.value = null;
  };
  bb2.prototype.toString = function() {
    return "SingletonIterator(" + this.value + ")";
  };
  na2.Object.defineProperties(bb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return 1;
  } } });
  bb2.prototype.first = bb2.prototype.first;
  bb2.prototype.hasNext = bb2.prototype.qd;
  bb2.prototype.next = bb2.prototype.next;
  bb2.prototype.reset = bb2.prototype.reset;
  bb2.className = "SingletonIterator";
  function db2(a) {
    this.rb = a;
    this.ef = null;
    a.Ja = null;
    this.ia = a.Da;
    this.Ra = -1;
  }
  db2.prototype.reset = function() {
    var a = this.rb;
    a.Ja = null;
    this.ia = a.Da;
    this.Ra = -1;
  };
  db2.prototype.next = function() {
    var a = this.rb;
    if (a.Da !== this.ia && 0 > this.key)
      return false;
    a = a.m;
    var b = a.length, c = ++this.Ra, d = this.ef;
    if (d !== null)
      for (; c < b; ) {
        var e = a[c];
        if (d(e))
          return this.key = this.Ra = c, this.value = e, true;
        c++;
      }
    else {
      if (c < b)
        return this.key = c, this.value = a[c], true;
      this.Ud();
    }
    return false;
  };
  db2.prototype.qd = function() {
    return this.next();
  };
  db2.prototype.first = function() {
    var a = this.rb;
    this.ia = a.Da;
    this.Ra = 0;
    a = a.m;
    var b = a.length, c = this.ef;
    if (c !== null) {
      for (var d = 0; d < b; ) {
        var e = a[d];
        if (c(e))
          return this.key = this.Ra = d, this.value = e;
        d++;
      }
      return null;
    }
    return 0 < b ? (a = a[0], this.key = 0, this.value = a) : null;
  };
  db2.prototype.any = function(a) {
    var b = this.rb;
    b.Ja = null;
    this.Ra = -1;
    b = b.m;
    for (var c = b.length, d = this.ef, e = 0; e < c; e++) {
      var f2 = b[e];
      if ((d === null || d(f2)) && a(f2))
        return true;
    }
    return false;
  };
  db2.prototype.all = function(a) {
    var b = this.rb;
    b.Ja = null;
    this.Ra = -1;
    b = b.m;
    for (var c = b.length, d = this.ef, e = 0; e < c; e++) {
      var f2 = b[e];
      if ((d === null || d(f2)) && !a(f2))
        return false;
    }
    return true;
  };
  db2.prototype.each = function(a) {
    var b = this.rb;
    b.Ja = null;
    this.Ra = -1;
    b = b.m;
    for (var c = b.length, d = this.ef, e = 0; e < c; e++) {
      var f2 = b[e];
      (d === null || d(f2)) && a(f2);
    }
    return this;
  };
  db2.prototype.map = function(a) {
    var b = this.rb;
    b.Ja = null;
    this.Ra = -1;
    var c = [];
    b = b.m;
    for (var d = b.length, e = this.ef, f2 = 0; f2 < d; f2++) {
      var g2 = b[f2];
      (e === null || e(g2)) && c.push(a(g2));
    }
    a = new F2();
    a.m = c;
    a.lb();
    return a.iterator;
  };
  db2.prototype.filter = function(a) {
    var b = this.rb;
    b.Ja = null;
    this.Ra = -1;
    var c = [];
    b = b.m;
    for (var d = b.length, e = this.ef, f2 = 0; f2 < d; f2++) {
      var g2 = b[f2];
      (e === null || e(g2)) && a(g2) && c.push(g2);
    }
    a = new F2();
    a.m = c;
    a.lb();
    return a.iterator;
  };
  db2.prototype.Ud = function() {
    this.key = -1;
    this.value = null;
    this.ia = -1;
    this.ef = null;
    this.rb.Ja = this;
  };
  db2.prototype.toString = function() {
    return "ListIterator@" + this.Ra + "/" + this.rb.count;
  };
  na2.Object.defineProperties(db2.prototype, { iterator: { get: function() {
    return this;
  } }, predicate: { get: function() {
    return this.ef;
  }, set: function(a) {
    this.ef = a;
  } }, count: { get: function() {
    var a = this.ef;
    if (a !== null) {
      for (var b = 0, c = this.rb.m, d = c.length, e = 0; e < d; e++)
        a(c[e]) && b++;
      return b;
    }
    return this.rb.m.length;
  } } });
  db2.prototype.first = db2.prototype.first;
  db2.prototype.hasNext = db2.prototype.qd;
  db2.prototype.next = db2.prototype.next;
  db2.prototype.reset = db2.prototype.reset;
  db2.className = "ListIterator";
  function eb2(a) {
    this.rb = a;
    a.Tg = null;
    this.ia = a.Da;
    this.Ra = a.m.length;
  }
  eb2.prototype.reset = function() {
    var a = this.rb;
    a.Tg = null;
    this.ia = a.Da;
    this.Ra = a.m.length;
  };
  eb2.prototype.next = function() {
    var a = this.rb;
    if (a.Da !== this.ia && 0 > this.key)
      return false;
    var b = --this.Ra;
    if (0 <= b)
      return this.key = b, this.value = a.m[b], true;
    this.Ud();
    return false;
  };
  eb2.prototype.qd = function() {
    return this.next();
  };
  eb2.prototype.first = function() {
    var a = this.rb;
    this.ia = a.Da;
    var b = a.m;
    this.Ra = a = b.length - 1;
    return 0 <= a ? (b = b[a], this.key = a, this.value = b) : null;
  };
  eb2.prototype.any = function(a) {
    var b = this.rb;
    b.Tg = null;
    b = b.m;
    var c = b.length;
    this.Ra = c;
    for (--c; 0 <= c; c--)
      if (a(b[c]))
        return true;
    return false;
  };
  eb2.prototype.all = function(a) {
    var b = this.rb;
    b.Tg = null;
    b = b.m;
    var c = b.length;
    this.Ra = c;
    for (--c; 0 <= c; c--)
      if (!a(b[c]))
        return false;
    return true;
  };
  eb2.prototype.each = function(a) {
    var b = this.rb;
    b.Tg = null;
    b = b.m;
    var c = b.length;
    this.Ra = c;
    for (--c; 0 <= c; c--)
      a(b[c]);
    return this;
  };
  eb2.prototype.map = function(a) {
    var b = this.rb;
    b.Tg = null;
    var c = [];
    b = b.m;
    var d = b.length;
    this.Ra = d;
    for (--d; 0 <= d; d--)
      c.push(a(b[d]));
    a = new F2();
    a.m = c;
    a.lb();
    return a.iterator;
  };
  eb2.prototype.filter = function(a) {
    var b = this.rb;
    b.Tg = null;
    var c = [];
    b = b.m;
    var d = b.length;
    this.Ra = d;
    for (--d; 0 <= d; d--) {
      var e = b[d];
      a(e) && c.push(e);
    }
    a = new F2();
    a.m = c;
    a.lb();
    return a.iterator;
  };
  eb2.prototype.Ud = function() {
    this.key = -1;
    this.value = null;
    this.ia = -1;
    this.rb.Tg = this;
  };
  eb2.prototype.toString = function() {
    return "ListIteratorBackwards(" + this.Ra + "/" + this.rb.count + ")";
  };
  na2.Object.defineProperties(eb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return this.rb.m.length;
  } } });
  eb2.prototype.first = eb2.prototype.first;
  eb2.prototype.hasNext = eb2.prototype.qd;
  eb2.prototype.next = eb2.prototype.next;
  eb2.prototype.reset = eb2.prototype.reset;
  eb2.className = "ListIteratorBackwards";
  function F2(a) {
    Va2(this);
    this.v = false;
    this.m = [];
    this.Da = 0;
    this.Tg = this.Ja = null;
    typeof a === "string" && C2("Error: Since 2.0 List/Map/Set constructors no longer take an argument that enforces type.");
    a !== void 0 && this.addAll(a);
  }
  t2 = F2.prototype;
  t2.lb = function() {
    var a = this.Da;
    a++;
    999999999 < a && (a = 0);
    this.Da = a;
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    this.v = false;
    return this;
  };
  t2.toString = function() {
    return "List()#" + ib2(this);
  };
  t2.add = function(a) {
    if (a === null)
      return this;
    this.v && wa2(this, a);
    this.m.push(a);
    this.lb();
    return this;
  };
  t2.push = function(a) {
    this.add(a);
  };
  t2.addAll = function(a) {
    if (a === null)
      return this;
    this.v && wa2(this);
    var b = this.m;
    if (Aa2(a))
      for (var c = a.length, d = 0; d < c; d++)
        b.push(a[d]);
    else
      for (a = a.iterator; a.next(); )
        b.push(a.value);
    this.lb();
    return this;
  };
  t2.clear = function() {
    this.v && wa2(this);
    this.m.length = 0;
    this.lb();
  };
  t2.contains = function(a) {
    return a === null ? false : this.m.indexOf(a) !== -1;
  };
  t2.has = function(a) {
    return this.contains(a);
  };
  t2.indexOf = function(a) {
    return a === null ? -1 : this.m.indexOf(a);
  };
  t2.J = function(a) {
    var b = this.m;
    (0 > a || a >= b.length) && xa2(a, "0 <= i < length", F2, "elt:i");
    return b[a];
  };
  t2.get = function(a) {
    return this.J(a);
  };
  t2.Oc = function(a, b) {
    var c = this.m;
    (0 > a || a >= c.length) && xa2(a, "0 <= i < length", F2, "setElt:i");
    this.v && wa2(this, a);
    c[a] = b;
  };
  t2.set = function(a, b) {
    this.Oc(a, b);
  };
  t2.first = function() {
    var a = this.m;
    return a.length === 0 ? null : a[0];
  };
  t2.$b = function() {
    var a = this.m, b = a.length;
    return 0 < b ? a[b - 1] : null;
  };
  t2.pop = function() {
    this.v && wa2(this);
    var a = this.m;
    return 0 < a.length ? a.pop() : null;
  };
  F2.prototype.any = function(a) {
    for (var b = this.m, c = b.length, d = 0; d < c; d++)
      if (a(b[d]))
        return true;
    return false;
  };
  F2.prototype.all = function(a) {
    for (var b = this.m, c = b.length, d = 0; d < c; d++)
      if (!a(b[d]))
        return false;
    return true;
  };
  F2.prototype.each = function(a) {
    for (var b = this.m, c = b.length, d = 0; d < c; d++)
      a(b[d]);
    return this;
  };
  F2.prototype.map = function(a) {
    for (var b = new F2(), c = [], d = this.m, e = d.length, f2 = 0; f2 < e; f2++)
      c.push(a(d[f2]));
    b.m = c;
    b.lb();
    return b;
  };
  F2.prototype.filter = function(a) {
    for (var b = new F2(), c = [], d = this.m, e = d.length, f2 = 0; f2 < e; f2++) {
      var g2 = d[f2];
      a(g2) && c.push(g2);
    }
    b.m = c;
    b.lb();
    return b;
  };
  t2 = F2.prototype;
  t2.wb = function(a, b) {
    0 > a && xa2(a, ">= 0", F2, "insertAt:i");
    this.v && wa2(this, a);
    var c = this.m;
    a >= c.length ? c.push(b) : c.splice(a, 0, b);
    this.lb();
  };
  t2.remove = function(a) {
    if (a === null)
      return false;
    this.v && wa2(this, a);
    var b = this.m;
    a = b.indexOf(a);
    if (a === -1)
      return false;
    a === b.length - 1 ? b.pop() : b.splice(a, 1);
    this.lb();
    return true;
  };
  t2.delete = function(a) {
    return this.remove(a);
  };
  t2.eb = function(a) {
    var b = this.m;
    (0 > a || a >= b.length) && xa2(a, "0 <= i < length", F2, "removeAt:i");
    this.v && wa2(this, a);
    a === b.length - 1 ? b.pop() : b.splice(a, 1);
    this.lb();
  };
  t2.removeRange = function(a, b) {
    var c = this.m, d = c.length;
    if (0 > a)
      a = 0;
    else if (a >= d)
      return this;
    if (0 > b)
      return this;
    b >= d && (b = d - 1);
    if (a > b)
      return this;
    this.v && wa2(this);
    for (var e = a, f2 = b + 1; f2 < d; )
      c[e++] = c[f2++];
    c.length = d - (b - a + 1);
    this.lb();
    return this;
  };
  F2.prototype.copy = function() {
    var a = new F2(), b = this.m;
    0 < b.length && (a.m = Array.prototype.slice.call(b));
    return a;
  };
  t2 = F2.prototype;
  t2.ya = function() {
    for (var a = this.m, b = this.count, c = Array(b), d = 0; d < b; d++)
      c[d] = a[d];
    return c;
  };
  t2.Yv = function() {
    for (var a = new G2(), b = this.m, c = this.count, d = 0; d < c; d++)
      a.add(b[d]);
    return a;
  };
  t2.sort = function(a) {
    this.v && wa2(this);
    this.m.sort(a);
    this.lb();
    return this;
  };
  t2.Vi = function(a, b, c) {
    var d = this.m, e = d.length;
    b === void 0 && (b = 0);
    c === void 0 && (c = e);
    this.v && wa2(this);
    var f2 = c - b;
    if (1 >= f2)
      return this;
    (0 > b || b >= e - 1) && xa2(b, "0 <= from < length", F2, "sortRange:from");
    if (f2 === 2)
      return c = d[b], e = d[b + 1], 0 < a(c, e) && (d[b] = e, d[b + 1] = c, this.lb()), this;
    if (b === 0)
      if (c >= e)
        d.sort(a);
      else
        for (b = d.slice(0, c), b.sort(a), a = 0; a < c; a++)
          d[a] = b[a];
    else if (c >= e)
      for (c = d.slice(b), c.sort(a), a = b; a < e; a++)
        d[a] = c[a - b];
    else
      for (e = d.slice(b, c), e.sort(a), a = b; a < c; a++)
        d[a] = e[a - b];
    this.lb();
    return this;
  };
  t2.reverse = function() {
    this.v && wa2(this);
    this.m.reverse();
    this.lb();
    return this;
  };
  na2.Object.defineProperties(F2.prototype, { _dataArray: { get: function() {
    return this.m;
  } }, count: { get: function() {
    return this.m.length;
  } }, size: { get: function() {
    return this.m.length;
  } }, length: { get: function() {
    return this.m.length;
  } }, iterator: { get: function() {
    if (0 >= this.m.length)
      return ab2;
    var a = this.Ja;
    return a !== null ? (a.reset(), a) : new db2(this);
  } }, iteratorBackwards: {
    get: function() {
      if (0 >= this.m.length)
        return ab2;
      var a = this.Tg;
      return a !== null ? (a.reset(), a) : new eb2(this);
    }
  } });
  F2.prototype.reverse = F2.prototype.reverse;
  F2.prototype.sortRange = F2.prototype.Vi;
  F2.prototype.sort = F2.prototype.sort;
  F2.prototype.toSet = F2.prototype.Yv;
  F2.prototype.toArray = F2.prototype.ya;
  F2.prototype.removeRange = F2.prototype.removeRange;
  F2.prototype.removeAt = F2.prototype.eb;
  F2.prototype["delete"] = F2.prototype.delete;
  F2.prototype.remove = F2.prototype.remove;
  F2.prototype.insertAt = F2.prototype.wb;
  F2.prototype.pop = F2.prototype.pop;
  F2.prototype.last = F2.prototype.$b;
  F2.prototype.first = F2.prototype.first;
  F2.prototype.set = F2.prototype.set;
  F2.prototype.setElt = F2.prototype.Oc;
  F2.prototype.get = F2.prototype.get;
  F2.prototype.elt = F2.prototype.J;
  F2.prototype.indexOf = F2.prototype.indexOf;
  F2.prototype.has = F2.prototype.has;
  F2.prototype.contains = F2.prototype.contains;
  F2.prototype.clear = F2.prototype.clear;
  F2.prototype.addAll = F2.prototype.addAll;
  F2.prototype.push = F2.prototype.push;
  F2.prototype.add = F2.prototype.add;
  F2.prototype.thaw = F2.prototype.ea;
  F2.prototype.freeze = F2.prototype.freeze;
  F2.className = "List";
  function jb2(a) {
    this.gg = a;
    a.Ja = null;
    this.ia = a.Da;
    this.ka = null;
  }
  jb2.prototype.reset = function() {
    var a = this.gg;
    a.Ja = null;
    this.ia = a.Da;
    this.ka = null;
  };
  jb2.prototype.next = function() {
    var a = this.gg;
    if (a.Da !== this.ia && this.key === null)
      return false;
    var b = this.ka;
    b = b === null ? a.ba : b.oa;
    if (b !== null)
      return this.ka = b, this.value = b.value, this.key = b.key, true;
    this.Ud();
    return false;
  };
  jb2.prototype.qd = function() {
    return this.next();
  };
  jb2.prototype.first = function() {
    var a = this.gg;
    this.ia = a.Da;
    a = a.ba;
    if (a !== null) {
      this.ka = a;
      var b = a.value;
      this.key = a.key;
      return this.value = b;
    }
    return null;
  };
  jb2.prototype.any = function(a) {
    var b = this.gg;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; ) {
      if (a(b.value))
        return true;
      b = b.oa;
    }
    return false;
  };
  jb2.prototype.all = function(a) {
    var b = this.gg;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; ) {
      if (!a(b.value))
        return false;
      b = b.oa;
    }
    return true;
  };
  jb2.prototype.each = function(a) {
    var b = this.gg;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; )
      a(b.value), b = b.oa;
    return this;
  };
  jb2.prototype.map = function(a) {
    var b = this.gg;
    b.Ja = null;
    var c = new F2();
    for (b = b.ba; b !== null; )
      c.add(a(b.value)), b = b.oa;
    return c.iterator;
  };
  jb2.prototype.filter = function(a) {
    var b = this.gg;
    b.Ja = null;
    var c = new F2();
    for (b = b.ba; b !== null; ) {
      var d = b.value;
      a(d) && c.add(d);
      b = b.oa;
    }
    return c.iterator;
  };
  jb2.prototype.Ud = function() {
    this.value = this.key = null;
    this.ia = -1;
    this.gg.Ja = this;
  };
  jb2.prototype.toString = function() {
    return this.ka !== null ? "SetIterator@" + this.ka.value : "SetIterator";
  };
  na2.Object.defineProperties(jb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return this.gg.Jb;
  } } });
  jb2.prototype.first = jb2.prototype.first;
  jb2.prototype.hasNext = jb2.prototype.qd;
  jb2.prototype.next = jb2.prototype.next;
  jb2.prototype.reset = jb2.prototype.reset;
  jb2.className = "SetIterator";
  function G2(a) {
    Va2(this);
    this.v = false;
    this.Kb = {};
    this.Jb = 0;
    this.Ja = null;
    this.Da = 0;
    this.$e = this.ba = null;
    typeof a === "string" && C2("Error: Since 2.0 List/Map/Set constructors no longer take an argument that enforces type.");
    a !== void 0 && this.addAll(a);
  }
  t2 = G2.prototype;
  t2.lb = function() {
    var a = this.Da;
    a++;
    999999999 < a && (a = 0);
    this.Da = a;
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    this.v = false;
    return this;
  };
  t2.toString = function() {
    return "Set()#" + ib2(this);
  };
  t2.add = function(a) {
    if (a === null)
      return this;
    this.v && wa2(this, a);
    var b = a;
    za2(a) && (b = kb2(a));
    this.Kb[b] === void 0 && (this.Jb++, a = new lb2(a, a), this.Kb[b] = a, b = this.$e, b === null ? this.ba = a : (a.xl = b, b.oa = a), this.$e = a, this.lb());
    return this;
  };
  t2.addAll = function(a) {
    if (a === null)
      return this;
    this.v && wa2(this);
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.add(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.add(a.value);
    return this;
  };
  t2.contains = function(a) {
    if (a === null)
      return false;
    var b = a;
    return za2(a) && (b = ib2(a), b === void 0) ? false : this.Kb[b] !== void 0;
  };
  t2.has = function(a) {
    return this.contains(a);
  };
  t2.oz = function(a) {
    if (a === null)
      return true;
    for (a = a.iterator; a.next(); )
      if (!this.contains(a.value))
        return false;
    return true;
  };
  t2.pz = function(a) {
    if (a === null)
      return true;
    for (a = a.iterator; a.next(); )
      if (this.contains(a.value))
        return true;
    return false;
  };
  t2.first = function() {
    var a = this.ba;
    return a === null ? null : a.value;
  };
  G2.prototype.any = function(a) {
    for (var b = this.ba; b !== null; ) {
      if (a(b.value))
        return true;
      b = b.oa;
    }
    return false;
  };
  G2.prototype.all = function(a) {
    for (var b = this.ba; b !== null; ) {
      if (!a(b.value))
        return false;
      b = b.oa;
    }
    return true;
  };
  G2.prototype.each = function(a) {
    for (var b = this.ba; b !== null; )
      a(b.value), b = b.oa;
    return this;
  };
  G2.prototype.map = function(a) {
    for (var b = new G2(), c = this.ba; c !== null; )
      b.add(a(c.value)), c = c.oa;
    return b;
  };
  G2.prototype.filter = function(a) {
    for (var b = new G2(), c = this.ba; c !== null; ) {
      var d = c.value;
      a(d) && b.add(d);
      c = c.oa;
    }
    return b;
  };
  t2 = G2.prototype;
  t2.remove = function(a) {
    if (a === null)
      return false;
    this.v && wa2(this, a);
    var b = a;
    if (za2(a) && (b = ib2(a), b === void 0))
      return false;
    a = this.Kb[b];
    if (a === void 0)
      return false;
    var c = a.oa, d = a.xl;
    c !== null && (c.xl = d);
    d !== null && (d.oa = c);
    this.ba === a && (this.ba = c);
    this.$e === a && (this.$e = d);
    delete this.Kb[b];
    this.Jb--;
    this.lb();
    return true;
  };
  t2.delete = function(a) {
    return this.remove(a);
  };
  t2.pq = function(a) {
    if (a === null)
      return this;
    this.v && wa2(this);
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.remove(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.remove(a.value);
    return this;
  };
  t2.LA = function(a) {
    if (a === null || this.count === 0)
      return this;
    this.v && wa2(this);
    var b = new G2();
    b.addAll(a);
    a = [];
    for (var c = this.iterator; c.next(); ) {
      var d = c.value;
      b.contains(d) || a.push(d);
    }
    this.pq(a);
    return this;
  };
  t2.clear = function() {
    this.v && wa2(this);
    this.Kb = {};
    this.Jb = 0;
    this.Ja !== null && this.Ja.reset();
    this.$e = this.ba = null;
    this.lb();
  };
  G2.prototype.copy = function() {
    var a = new G2(), b = this.Kb, c;
    for (c in b)
      a.add(b[c].value);
    return a;
  };
  G2.prototype.ya = function() {
    var a = Array(this.Jb), b = this.Kb, c = 0, d;
    for (d in b)
      a[c] = b[d].value, c++;
    return a;
  };
  G2.prototype.Xv = function() {
    var a = new F2(), b = this.Kb, c;
    for (c in b)
      a.add(b[c].value);
    return a;
  };
  function Va2(a) {
    a.__gohashid = mb2++;
  }
  function kb2(a) {
    var b = a.__gohashid;
    b === void 0 && (b = mb2++, a.__gohashid = b);
    return b;
  }
  function ib2(a) {
    return a.__gohashid;
  }
  na2.Object.defineProperties(G2.prototype, { count: { get: function() {
    return this.Jb;
  } }, size: { get: function() {
    return this.Jb;
  } }, iterator: { get: function() {
    if (0 >= this.Jb)
      return ab2;
    var a = this.Ja;
    return a !== null ? (a.reset(), a) : new jb2(this);
  } } });
  G2.prototype.toList = G2.prototype.Xv;
  G2.prototype.toArray = G2.prototype.ya;
  G2.prototype.clear = G2.prototype.clear;
  G2.prototype.retainAll = G2.prototype.LA;
  G2.prototype.removeAll = G2.prototype.pq;
  G2.prototype["delete"] = G2.prototype.delete;
  G2.prototype.remove = G2.prototype.remove;
  G2.prototype.first = G2.prototype.first;
  G2.prototype.containsAny = G2.prototype.pz;
  G2.prototype.containsAll = G2.prototype.oz;
  G2.prototype.has = G2.prototype.has;
  G2.prototype.contains = G2.prototype.contains;
  G2.prototype.addAll = G2.prototype.addAll;
  G2.prototype.add = G2.prototype.add;
  G2.prototype.thaw = G2.prototype.ea;
  G2.prototype.freeze = G2.prototype.freeze;
  var mb2 = 1;
  G2.className = "Set";
  G2.uniqueHash = Va2;
  G2.hashIdUnique = kb2;
  G2.hashId = ib2;
  function nb2(a) {
    this.ga = a;
    this.ia = a.Da;
    this.ka = null;
  }
  nb2.prototype.reset = function() {
    this.ia = this.ga.Da;
    this.ka = null;
  };
  nb2.prototype.next = function() {
    var a = this.ga;
    if (a.Da !== this.ia && this.key === null)
      return false;
    var b = this.ka;
    b = b === null ? a.ba : b.oa;
    if (b !== null)
      return this.ka = b, this.value = this.key = a = b.key, true;
    this.Ud();
    return false;
  };
  nb2.prototype.qd = function() {
    return this.next();
  };
  nb2.prototype.first = function() {
    var a = this.ga;
    this.ia = a.Da;
    a = a.ba;
    return a !== null ? (this.ka = a, this.value = this.key = a = a.key) : null;
  };
  nb2.prototype.any = function(a) {
    var b = this.ga;
    this.ka = null;
    for (b = b.ba; b !== null; ) {
      if (a(b.key))
        return true;
      b = b.oa;
    }
    return false;
  };
  nb2.prototype.all = function(a) {
    var b = this.ga;
    this.ka = null;
    for (b = b.ba; b !== null; ) {
      if (!a(b.key))
        return false;
      b = b.oa;
    }
    return true;
  };
  nb2.prototype.each = function(a) {
    var b = this.ga;
    this.ka = null;
    for (b = b.ba; b !== null; )
      a(b.key), b = b.oa;
    return this;
  };
  nb2.prototype.map = function(a) {
    var b = this.ga;
    this.ka = null;
    var c = new F2();
    for (b = b.ba; b !== null; )
      c.add(a(b.key)), b = b.oa;
    return c.iterator;
  };
  nb2.prototype.filter = function(a) {
    var b = this.ga;
    this.ka = null;
    var c = new F2();
    for (b = b.ba; b !== null; ) {
      var d = b.key;
      a(d) && c.add(d);
      b = b.oa;
    }
    return c.iterator;
  };
  nb2.prototype.Ud = function() {
    this.value = this.key = null;
    this.ia = -1;
  };
  nb2.prototype.toString = function() {
    return this.ka !== null ? "MapKeySetIterator@" + this.ka.value : "MapKeySetIterator";
  };
  na2.Object.defineProperties(nb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return this.ga.Jb;
  } } });
  nb2.prototype.first = nb2.prototype.first;
  nb2.prototype.hasNext = nb2.prototype.qd;
  nb2.prototype.next = nb2.prototype.next;
  nb2.prototype.reset = nb2.prototype.reset;
  nb2.className = "MapKeySetIterator";
  function ob2(a) {
    G2.call(this);
    Va2(this);
    this.v = true;
    this.ga = a;
  }
  ma2(ob2, G2);
  t2 = ob2.prototype;
  t2.freeze = function() {
    return this;
  };
  t2.ea = function() {
    return this;
  };
  t2.toString = function() {
    return "MapKeySet(" + this.ga.toString() + ")";
  };
  t2.add = function() {
    C2("This Set is read-only: " + this.toString());
  };
  t2.contains = function(a) {
    return this.ga.contains(a);
  };
  t2.has = function(a) {
    return this.contains(a);
  };
  t2.remove = function() {
    C2("This Set is read-only: " + this.toString());
  };
  t2.delete = function(a) {
    return this.remove(a);
  };
  t2.clear = function() {
    C2("This Set is read-only: " + this.toString());
  };
  t2.first = function() {
    var a = this.ga.ba;
    return a !== null ? a.key : null;
  };
  ob2.prototype.any = function(a) {
    for (var b = this.ga.ba; b !== null; ) {
      if (a(b.key))
        return true;
      b = b.oa;
    }
    return false;
  };
  ob2.prototype.all = function(a) {
    for (var b = this.ga.ba; b !== null; ) {
      if (!a(b.key))
        return false;
      b = b.oa;
    }
    return true;
  };
  ob2.prototype.each = function(a) {
    for (var b = this.ga.ba; b !== null; )
      a(b.key), b = b.oa;
    return this;
  };
  ob2.prototype.map = function(a) {
    for (var b = new G2(), c = this.ga.ba; c !== null; )
      b.add(a(c.key)), c = c.oa;
    return b;
  };
  ob2.prototype.filter = function(a) {
    for (var b = new G2(), c = this.ga.ba; c !== null; ) {
      var d = c.key;
      a(d) && b.add(d);
      c = c.oa;
    }
    return b;
  };
  ob2.prototype.copy = function() {
    return new ob2(this.ga);
  };
  ob2.prototype.Yv = function() {
    var a = new G2(), b = this.ga.Kb, c;
    for (c in b)
      a.add(b[c].key);
    return a;
  };
  ob2.prototype.ya = function() {
    var a = this.ga.Kb, b = Array(this.ga.Jb), c = 0, d;
    for (d in a)
      b[c] = a[d].key, c++;
    return b;
  };
  ob2.prototype.Xv = function() {
    var a = new F2(), b = this.ga.Kb, c;
    for (c in b)
      a.add(b[c].key);
    return a;
  };
  na2.Object.defineProperties(ob2.prototype, { count: { get: function() {
    return this.ga.Jb;
  } }, size: { get: function() {
    return this.ga.Jb;
  } }, iterator: { get: function() {
    return 0 >= this.ga.Jb ? ab2 : new nb2(this.ga);
  } } });
  ob2.prototype.toList = ob2.prototype.Xv;
  ob2.prototype.toArray = ob2.prototype.ya;
  ob2.prototype.toSet = ob2.prototype.Yv;
  ob2.prototype.first = ob2.prototype.first;
  ob2.prototype.clear = ob2.prototype.clear;
  ob2.prototype["delete"] = ob2.prototype.delete;
  ob2.prototype.remove = ob2.prototype.remove;
  ob2.prototype.has = ob2.prototype.has;
  ob2.prototype.contains = ob2.prototype.contains;
  ob2.prototype.add = ob2.prototype.add;
  ob2.prototype.thaw = ob2.prototype.ea;
  ob2.prototype.freeze = ob2.prototype.freeze;
  ob2.className = "MapKeySet";
  function pb2(a) {
    this.ga = a;
    a.Ze = null;
    this.ia = a.Da;
    this.ka = null;
  }
  pb2.prototype.reset = function() {
    var a = this.ga;
    a.Ze = null;
    this.ia = a.Da;
    this.ka = null;
  };
  pb2.prototype.next = function() {
    var a = this.ga;
    if (a.Da !== this.ia && this.key === null)
      return false;
    var b = this.ka;
    b = b === null ? a.ba : b.oa;
    if (b !== null)
      return this.ka = b, this.value = b.value, this.key = b.key, true;
    this.Ud();
    return false;
  };
  pb2.prototype.qd = function() {
    return this.next();
  };
  pb2.prototype.first = function() {
    var a = this.ga;
    this.ia = a.Da;
    a = a.ba;
    if (a !== null) {
      this.ka = a;
      var b = a.value;
      this.key = a.key;
      return this.value = b;
    }
    return null;
  };
  pb2.prototype.any = function(a) {
    var b = this.ga;
    this.ka = b.Ze = null;
    for (b = b.ba; b !== null; ) {
      if (a(b.value))
        return true;
      b = b.oa;
    }
    return false;
  };
  pb2.prototype.all = function(a) {
    var b = this.ga;
    this.ka = b.Ze = null;
    for (b = b.ba; b !== null; ) {
      if (!a(b.value))
        return false;
      b = b.oa;
    }
    return true;
  };
  pb2.prototype.each = function(a) {
    var b = this.ga;
    this.ka = b.Ze = null;
    for (b = b.ba; b !== null; )
      a(b.value), b = b.oa;
    return this;
  };
  pb2.prototype.map = function(a) {
    var b = this.ga;
    this.ka = b.Ze = null;
    var c = new F2();
    for (b = b.ba; b !== null; )
      c.add(a(b.value)), b = b.oa;
    return c.iterator;
  };
  pb2.prototype.filter = function(a) {
    var b = this.ga;
    this.ka = b.Ze = null;
    var c = new F2();
    for (b = b.ba; b !== null; ) {
      var d = b.value;
      a(d) && c.add(d);
      b = b.oa;
    }
    return c.iterator;
  };
  pb2.prototype.Ud = function() {
    this.value = this.key = null;
    this.ia = -1;
    this.ga.Ze = this;
  };
  pb2.prototype.toString = function() {
    return this.ka !== null ? "MapValueSetIterator@" + this.ka.value : "MapValueSetIterator";
  };
  na2.Object.defineProperties(pb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return this.ga.Jb;
  } } });
  pb2.prototype.first = pb2.prototype.first;
  pb2.prototype.hasNext = pb2.prototype.qd;
  pb2.prototype.next = pb2.prototype.next;
  pb2.prototype.reset = pb2.prototype.reset;
  pb2.className = "MapValueSetIterator";
  function lb2(a, b) {
    this.key = a;
    this.value = b;
    this.xl = this.oa = null;
  }
  lb2.prototype.toString = function() {
    return "{" + this.key + ":" + this.value + "}";
  };
  lb2.className = "KeyValuePair";
  function qb2(a) {
    this.ga = a;
    a.Ja = null;
    this.ia = a.Da;
    this.ka = null;
  }
  qb2.prototype.reset = function() {
    var a = this.ga;
    a.Ja = null;
    this.ia = a.Da;
    this.ka = null;
  };
  qb2.prototype.next = function() {
    var a = this.ga;
    if (a.Da !== this.ia && this.key === null)
      return false;
    var b = this.ka;
    b = b === null ? a.ba : b.oa;
    if (b !== null)
      return this.ka = b, this.key = b.key, this.value = b.value, true;
    this.Ud();
    return false;
  };
  qb2.prototype.qd = function() {
    return this.next();
  };
  qb2.prototype.first = function() {
    var a = this.ga;
    this.ia = a.Da;
    a = a.ba;
    return a !== null ? (this.ka = a, this.key = a.key, this.value = a.value, a) : null;
  };
  qb2.prototype.any = function(a) {
    var b = this.ga;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; ) {
      if (a(b))
        return true;
      b = b.oa;
    }
    return false;
  };
  qb2.prototype.all = function(a) {
    var b = this.ga;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; ) {
      if (!a(b))
        return false;
      b = b.oa;
    }
    return true;
  };
  qb2.prototype.each = function(a) {
    var b = this.ga;
    this.ka = b.Ja = null;
    for (b = b.ba; b !== null; )
      a(b), b = b.oa;
    return this;
  };
  qb2.prototype.map = function(a) {
    var b = this.ga;
    this.ka = b.Ja = null;
    var c = new F2();
    for (b = b.ba; b !== null; )
      c.add(a(b)), b = b.oa;
    return c.iterator;
  };
  qb2.prototype.filter = function(a) {
    var b = this.ga;
    this.ka = b.Ja = null;
    var c = new F2();
    for (b = b.ba; b !== null; )
      a(b) && c.add(b), b = b.oa;
    return c.iterator;
  };
  qb2.prototype.Ud = function() {
    this.value = this.key = null;
    this.ia = -1;
    this.ga.Ja = this;
  };
  qb2.prototype.toString = function() {
    return this.ka !== null ? "MapIterator@" + this.ka : "MapIterator";
  };
  na2.Object.defineProperties(qb2.prototype, { iterator: { get: function() {
    return this;
  } }, count: { get: function() {
    return this.ga.Jb;
  } } });
  qb2.prototype.first = qb2.prototype.first;
  qb2.prototype.hasNext = qb2.prototype.qd;
  qb2.prototype.next = qb2.prototype.next;
  qb2.prototype.reset = qb2.prototype.reset;
  qb2.className = "MapIterator";
  function H2(a) {
    Va2(this);
    this.v = false;
    this.Kb = {};
    this.Jb = 0;
    this.Ze = this.Ja = null;
    this.Da = 0;
    this.$e = this.ba = null;
    typeof a === "string" && C2("Error: Since 2.0 List/Map/Set constructors no longer take an argument that enforces type.");
    a !== void 0 && this.addAll(a);
  }
  t2 = H2.prototype;
  t2.lb = function() {
    var a = this.Da;
    a++;
    999999999 < a && (a = 0);
    this.Da = a;
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    this.v = false;
    return this;
  };
  t2.toString = function() {
    return "Map()#" + ib2(this);
  };
  t2.add = function(a, b) {
    this.v && wa2(this, a);
    var c = a;
    za2(a) && (c = kb2(a));
    var d = this.Kb[c];
    d === void 0 ? (this.Jb++, a = new lb2(a, b), this.Kb[c] = a, c = this.$e, c === null ? this.ba = a : (a.xl = c, c.oa = a), this.$e = a, this.lb()) : d.value = b;
    return this;
  };
  t2.set = function(a, b) {
    return this.add(a, b);
  };
  t2.addAll = function(a) {
    if (a === null)
      return this;
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++) {
        var d = a[c];
        this.add(d.key, d.value);
      }
    else if (a instanceof H2)
      for (a = a.iterator; a.next(); )
        this.add(a.key, a.value);
    else
      for (a = a.iterator; a.next(); )
        b = a.value, this.add(b.key, b.value);
    return this;
  };
  t2.first = function() {
    return this.ba;
  };
  H2.prototype.any = function(a) {
    for (var b = this.ba; b !== null; ) {
      if (a(b))
        return true;
      b = b.oa;
    }
    return false;
  };
  H2.prototype.all = function(a) {
    for (var b = this.ba; b !== null; ) {
      if (!a(b))
        return false;
      b = b.oa;
    }
    return true;
  };
  H2.prototype.each = function(a) {
    for (var b = this.ba; b !== null; )
      a(b), b = b.oa;
    return this;
  };
  H2.prototype.map = function(a) {
    for (var b = new H2(), c = this.ba; c !== null; )
      b.add(c.key, a(c)), c = c.oa;
    return b;
  };
  H2.prototype.filter = function(a) {
    for (var b = new H2(), c = this.ba; c !== null; )
      a(c) && b.add(c.key, c.value), c = c.oa;
    return b;
  };
  t2 = H2.prototype;
  t2.contains = function(a) {
    var b = a;
    return za2(a) && (b = ib2(a), b === void 0) ? false : this.Kb[b] !== void 0;
  };
  t2.has = function(a) {
    return this.contains(a);
  };
  t2.H = function(a) {
    var b = a;
    if (za2(a) && (b = ib2(a), b === void 0))
      return null;
    a = this.Kb[b];
    return a === void 0 ? null : a.value;
  };
  t2.get = function(a) {
    return this.H(a);
  };
  t2.remove = function(a) {
    if (a === null)
      return false;
    this.v && wa2(this, a);
    var b = a;
    if (za2(a) && (b = ib2(a), b === void 0))
      return false;
    a = this.Kb[b];
    if (a === void 0)
      return false;
    var c = a.oa, d = a.xl;
    c !== null && (c.xl = d);
    d !== null && (d.oa = c);
    this.ba === a && (this.ba = c);
    this.$e === a && (this.$e = d);
    delete this.Kb[b];
    this.Jb--;
    this.lb();
    return true;
  };
  t2.delete = function(a) {
    return this.remove(a);
  };
  t2.clear = function() {
    this.v && wa2(this);
    this.Kb = {};
    this.Jb = 0;
    this.Ja !== null && this.Ja.reset();
    this.Ze !== null && this.Ze.reset();
    this.$e = this.ba = null;
    this.lb();
  };
  H2.prototype.copy = function() {
    var a = new H2(), b = this.Kb, c;
    for (c in b) {
      var d = b[c];
      a.add(d.key, d.value);
    }
    return a;
  };
  H2.prototype.ya = function() {
    var a = this.Kb, b = Array(this.Jb), c = 0, d;
    for (d in a) {
      var e = a[d];
      b[c] = new lb2(e.key, e.value);
      c++;
    }
    return b;
  };
  H2.prototype.If = function() {
    return new ob2(this);
  };
  na2.Object.defineProperties(H2.prototype, { count: { get: function() {
    return this.Jb;
  } }, size: { get: function() {
    return this.Jb;
  } }, iterator: { get: function() {
    if (0 >= this.count)
      return ab2;
    var a = this.Ja;
    return a !== null ? (a.reset(), a) : new qb2(this);
  } }, iteratorKeys: { get: function() {
    return 0 >= this.count ? ab2 : new nb2(this);
  } }, iteratorValues: { get: function() {
    if (0 >= this.count)
      return ab2;
    var a = this.Ze;
    return a !== null ? (a.reset(), a) : new pb2(this);
  } } });
  H2.prototype.toKeySet = H2.prototype.If;
  H2.prototype.toArray = H2.prototype.ya;
  H2.prototype.clear = H2.prototype.clear;
  H2.prototype["delete"] = H2.prototype.delete;
  H2.prototype.remove = H2.prototype.remove;
  H2.prototype.get = H2.prototype.get;
  H2.prototype.getValue = H2.prototype.H;
  H2.prototype.has = H2.prototype.has;
  H2.prototype.contains = H2.prototype.contains;
  H2.prototype.first = H2.prototype.first;
  H2.prototype.addAll = H2.prototype.addAll;
  H2.prototype.set = H2.prototype.set;
  H2.prototype.add = H2.prototype.add;
  H2.prototype.thaw = H2.prototype.ea;
  H2.prototype.freeze = H2.prototype.freeze;
  H2.className = "Map";
  function K2(a, b) {
    a === void 0 ? this.y = this.x = 0 : typeof a === "number" && typeof b === "number" ? (this.x = a, this.y = b) : C2("Invalid arguments to Point constructor: " + a + ", " + b);
    this.v = false;
  }
  K2.prototype.assign = function(a) {
    this.x = a.x;
    this.y = a.y;
    return this;
  };
  K2.prototype.h = function(a, b) {
    this.x = a;
    this.y = b;
    return this;
  };
  K2.prototype.tg = function(a, b) {
    this.x = a;
    this.y = b;
    return this;
  };
  K2.prototype.set = function(a) {
    this.x = a.x;
    this.y = a.y;
    return this;
  };
  K2.prototype.copy = function() {
    var a = new K2();
    a.x = this.x;
    a.y = this.y;
    return a;
  };
  t2 = K2.prototype;
  t2.ca = function() {
    this.v = true;
    Object.freeze(this);
    return this;
  };
  t2.I = function() {
    return this.v || Object.isFrozen(this) ? this : this.copy().freeze();
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    return this;
  };
  function rb2(a) {
    if (typeof a === "string") {
      a = a.split(" ");
      for (var b = 0, c = 0; a[b] === ""; )
        b++;
      var d = a[b++];
      d && (c = parseFloat(d));
      for (var e = 0; a[b] === ""; )
        b++;
      (d = a[b++]) && (e = parseFloat(d));
      return new K2(c, e);
    }
    return new K2();
  }
  function sb2(a) {
    return a.x.toString() + " " + a.y.toString();
  }
  t2.toString = function() {
    return "Point(" + this.x + "," + this.y + ")";
  };
  t2.A = function(a) {
    return a instanceof K2 ? this.x === a.x && this.y === a.y : false;
  };
  t2.Fi = function(a, b) {
    return this.x === a && this.y === b;
  };
  t2.Ua = function(a) {
    return M2.w(this.x, a.x) && M2.w(this.y, a.y);
  };
  t2.add = function(a) {
    this.x += a.x;
    this.y += a.y;
    return this;
  };
  t2.ie = function(a) {
    this.x -= a.x;
    this.y -= a.y;
    return this;
  };
  t2.offset = function(a, b) {
    this.x += a;
    this.y += b;
    return this;
  };
  K2.prototype.rotate = function(a) {
    if (a === 0)
      return this;
    var b = this.x, c = this.y;
    if (b === 0 && c === 0)
      return this;
    360 <= a ? a -= 360 : 0 > a && (a += 360);
    if (a === 90) {
      a = 0;
      var d = 1;
    } else
      a === 180 ? (a = -1, d = 0) : a === 270 ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
    this.x = a * b - d * c;
    this.y = d * b + a * c;
    return this;
  };
  t2 = K2.prototype;
  t2.scale = function(a, b) {
    this.x *= a;
    this.y *= b;
    return this;
  };
  t2.xf = function(a) {
    var b = a.x - this.x;
    a = a.y - this.y;
    return b * b + a * a;
  };
  t2.pd = function(a, b) {
    a -= this.x;
    b -= this.y;
    return a * a + b * b;
  };
  t2.normalize = function() {
    var a = this.x, b = this.y, c = Math.sqrt(a * a + b * b);
    0 < c && (this.x = a / c, this.y = b / c);
    return this;
  };
  t2.Pa = function(a) {
    return tb2(a.x - this.x, a.y - this.y);
  };
  t2.direction = function(a, b) {
    return tb2(a - this.x, b - this.y);
  };
  function tb2(a, b) {
    if (a === 0)
      return 0 < b ? 90 : 0 > b ? 270 : 0;
    if (b === 0)
      return 0 < a ? 0 : 180;
    if (isNaN(a) || isNaN(b))
      return 0;
    var c = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
    0 > a ? c = 0 > b ? c + 180 : 180 - c : 0 > b && (c = 360 - c);
    return c;
  }
  t2.nz = function(a, b) {
    return M2.Xl(a.x, a.y, b.x, b.y, this.x, this.y);
  };
  t2.BA = function(a, b, c, d) {
    M2.Ih(a, b, c, d, this.x, this.y, this);
    return this;
  };
  t2.CA = function(a, b) {
    M2.Ih(a.x, a.y, b.x, b.y, this.x, this.y, this);
    return this;
  };
  t2.QA = function(a, b, c, d) {
    M2.Xp(this.x, this.y, a, b, c, d, this);
    return this;
  };
  t2.RA = function(a, b) {
    M2.Xp(this.x, this.y, a.x, a.y, b.width, b.height, this);
    return this;
  };
  t2.Ti = function(a, b) {
    this.x = a.x + b.x * a.width + b.offsetX;
    this.y = a.y + b.y * a.height + b.offsetY;
    return this;
  };
  t2.Ui = function(a, b, c, d, e) {
    this.x = a + e.x * c + e.offsetX;
    this.y = b + e.y * d + e.offsetY;
    return this;
  };
  t2.transform = function(a) {
    a.Aa(this);
    return this;
  };
  function ub2(a, b) {
    b.Hd(a);
    return a;
  }
  function vb2(a, b, c, d, e, f2) {
    var g2 = e - c, h = f2 - d, k = g2 * g2 + h * h;
    c -= a;
    d -= b;
    var l2 = -c * g2 - d * h;
    if (0 >= l2 || l2 >= k)
      return g2 = e - a, h = f2 - b, Math.min(c * c + d * d, g2 * g2 + h * h);
    a = g2 * d - h * c;
    return a * a / k;
  }
  function wb2(a, b, c, d) {
    a = c - a;
    b = d - b;
    return a * a + b * b;
  }
  function xb2(a, b, c, d) {
    a = c - a;
    b = d - b;
    if (a === 0)
      return 0 < b ? 90 : 0 > b ? 270 : 0;
    if (b === 0)
      return 0 < a ? 0 : 180;
    if (isNaN(a) || isNaN(b))
      return 0;
    d = 180 * Math.atan(Math.abs(b / a)) / Math.PI;
    0 > a ? d = 0 > b ? d + 180 : 180 - d : 0 > b && (d = 360 - d);
    return d;
  }
  t2.u = function() {
    return isFinite(this.x) && isFinite(this.y);
  };
  K2.alloc = function() {
    var a = yb2.pop();
    return a === void 0 ? new K2() : a;
  };
  K2.allocAt = function(a, b) {
    var c = yb2.pop();
    if (c === void 0)
      return new K2(a, b);
    c.x = a;
    c.y = b;
    return c;
  };
  K2.free = function(a) {
    yb2.push(a);
  };
  K2.prototype.isReal = K2.prototype.u;
  K2.prototype.setSpot = K2.prototype.Ui;
  K2.prototype.setRectSpot = K2.prototype.Ti;
  K2.prototype.snapToGridPoint = K2.prototype.RA;
  K2.prototype.snapToGrid = K2.prototype.QA;
  K2.prototype.projectOntoLineSegmentPoint = K2.prototype.CA;
  K2.prototype.projectOntoLineSegment = K2.prototype.BA;
  K2.intersectingLineSegments = function(a, b, c, d, e, f2, g2, h) {
    return M2.dm(a, b, c, d, e, f2, g2, h);
  };
  K2.prototype.compareWithLineSegmentPoint = K2.prototype.nz;
  K2.compareWithLineSegment = function(a, b, c, d, e, f2) {
    return M2.Xl(a, b, c, d, e, f2);
  };
  K2.prototype.direction = K2.prototype.direction;
  K2.prototype.directionPoint = K2.prototype.Pa;
  K2.prototype.normalize = K2.prototype.normalize;
  K2.prototype.distanceSquared = K2.prototype.pd;
  K2.prototype.distanceSquaredPoint = K2.prototype.xf;
  K2.prototype.scale = K2.prototype.scale;
  K2.prototype.rotate = K2.prototype.rotate;
  K2.prototype.offset = K2.prototype.offset;
  K2.prototype.subtract = K2.prototype.ie;
  K2.prototype.add = K2.prototype.add;
  K2.prototype.equalsApprox = K2.prototype.Ua;
  K2.prototype.equalTo = K2.prototype.Fi;
  K2.prototype.equals = K2.prototype.A;
  K2.prototype.set = K2.prototype.set;
  K2.prototype.setTo = K2.prototype.tg;
  var zb2 = null, Ab2 = null, Db2 = null, Eb2 = null, Fb2 = null, yb2 = [];
  K2.className = "Point";
  K2.parse = rb2;
  K2.stringify = sb2;
  K2.distanceLineSegmentSquared = vb2;
  K2.distanceSquared = wb2;
  K2.direction = xb2;
  K2.Origin = zb2 = new K2(0, 0).ca();
  K2.InfiniteTopLeft = Ab2 = new K2(-Infinity, -Infinity).ca();
  K2.InfiniteBottomRight = Db2 = new K2(Infinity, Infinity).ca();
  K2.SixPoint = Eb2 = new K2(6, 6).ca();
  K2.NoPoint = Fb2 = new K2(NaN, NaN).ca();
  K2.parse = rb2;
  K2.stringify = sb2;
  K2.distanceLineSegmentSquared = vb2;
  K2.distanceSquared = wb2;
  K2.direction = xb2;
  function Gb2(a, b) {
    a === void 0 ? this.height = this.width = 0 : typeof a === "number" && (0 <= a || isNaN(a)) && typeof b === "number" && (0 <= b || isNaN(b)) ? (this.width = a, this.height = b) : C2("Invalid arguments to Size constructor: " + a + ", " + b);
    this.v = false;
  }
  var Hb2, Ib2, Jb2, Kb2, Lb2, Mb2, Nb2;
  Gb2.prototype.assign = function(a) {
    this.width = a.width;
    this.height = a.height;
    return this;
  };
  Gb2.prototype.h = function(a, b) {
    this.width = a;
    this.height = b;
    return this;
  };
  Gb2.prototype.tg = function(a, b) {
    this.width = a;
    this.height = b;
    return this;
  };
  Gb2.prototype.set = function(a) {
    this.width = a.width;
    this.height = a.height;
    return this;
  };
  Gb2.prototype.copy = function() {
    var a = new Gb2();
    a.width = this.width;
    a.height = this.height;
    return a;
  };
  t2 = Gb2.prototype;
  t2.ca = function() {
    this.v = true;
    Object.freeze(this);
    return this;
  };
  t2.I = function() {
    return this.v || Object.isFrozen(this) ? this : this.copy().freeze();
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    return this;
  };
  function Ob2(a) {
    if (typeof a === "string") {
      a = a.split(" ");
      for (var b = 0, c = 0; a[b] === ""; )
        b++;
      var d = a[b++];
      d && (c = parseFloat(d));
      for (var e = 0; a[b] === ""; )
        b++;
      (d = a[b++]) && (e = parseFloat(d));
      return new Gb2(c, e);
    }
    return new Gb2();
  }
  function Pb2(a) {
    return a.width.toString() + " " + a.height.toString();
  }
  t2.toString = function() {
    return "Size(" + this.width + "," + this.height + ")";
  };
  t2.A = function(a) {
    return a instanceof Gb2 ? this.width === a.width && this.height === a.height : false;
  };
  t2.Fi = function(a, b) {
    return this.width === a && this.height === b;
  };
  t2.Ua = function(a) {
    return M2.w(this.width, a.width) && M2.w(this.height, a.height);
  };
  t2.u = function() {
    return isFinite(this.width) && isFinite(this.height);
  };
  Gb2.alloc = function() {
    var a = Qb.pop();
    return a === void 0 ? new Gb2() : a;
  };
  Gb2.free = function(a) {
    Qb.push(a);
  };
  Gb2.prototype.isReal = Gb2.prototype.u;
  Gb2.prototype.equalsApprox = Gb2.prototype.Ua;
  Gb2.prototype.equalTo = Gb2.prototype.Fi;
  Gb2.prototype.equals = Gb2.prototype.A;
  Gb2.prototype.set = Gb2.prototype.set;
  Gb2.prototype.setTo = Gb2.prototype.tg;
  var Qb = [];
  Gb2.className = "Size";
  Gb2.parse = Ob2;
  Gb2.stringify = Pb2;
  Gb2.ZeroSize = Hb2 = new Gb2(0, 0).ca();
  Gb2.OneSize = Ib2 = new Gb2(1, 1).ca();
  Gb2.SixSize = Jb2 = new Gb2(6, 6).ca();
  Gb2.EightSize = Kb2 = new Gb2(8, 8).ca();
  Gb2.TenSize = Lb2 = new Gb2(10, 10).ca();
  Gb2.InfiniteSize = Mb2 = new Gb2(Infinity, Infinity).ca();
  Gb2.NoSize = Nb2 = new Gb2(NaN, NaN).ca();
  Gb2.parse = Ob2;
  Gb2.stringify = Pb2;
  function N2(a, b, c, d) {
    a === void 0 ? this.height = this.width = this.y = this.x = 0 : typeof a === "number" && typeof b === "number" && typeof c === "number" && (0 <= c || isNaN(c)) && typeof d === "number" && (0 <= d || isNaN(d)) ? (this.x = a, this.y = b, this.width = c, this.height = d) : a instanceof K2 ? (c = a.x, a = a.y, b instanceof K2 ? (d = b.x, b = b.y, this.x = Math.min(c, d), this.y = Math.min(a, b), this.width = Math.abs(c - d), this.height = Math.abs(a - b)) : b instanceof Gb2 ? (this.x = c, this.y = a, this.width = b.width, this.height = b.height) : C2("Incorrect second argument supplied to Rect constructor " + b)) : C2("Invalid arguments to Rect constructor: " + a + ", " + b + ", " + c + ", " + d);
    this.v = false;
  }
  t2 = N2.prototype;
  t2.assign = function(a) {
    this.x = a.x;
    this.y = a.y;
    this.width = a.width;
    this.height = a.height;
    return this;
  };
  t2.h = function(a, b, c, d) {
    this.x = a;
    this.y = b;
    this.width = c;
    this.height = d;
    return this;
  };
  function Rb2(a, b, c) {
    a.width = b;
    a.height = c;
  }
  t2.tg = function(a, b, c, d) {
    this.x = a;
    this.y = b;
    this.width = c;
    this.height = d;
    return this;
  };
  t2.set = function(a) {
    this.x = a.x;
    this.y = a.y;
    this.width = a.width;
    this.height = a.height;
    return this;
  };
  t2.Pc = function(a) {
    this.x = a.x;
    this.y = a.y;
    return this;
  };
  t2.PA = function(a) {
    this.width = a.width;
    this.height = a.height;
    return this;
  };
  N2.prototype.copy = function() {
    var a = new N2();
    a.x = this.x;
    a.y = this.y;
    a.width = this.width;
    a.height = this.height;
    return a;
  };
  t2 = N2.prototype;
  t2.ca = function() {
    this.v = true;
    Object.freeze(this);
    return this;
  };
  t2.I = function() {
    return this.v || Object.isFrozen(this) ? this : this.copy().freeze();
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    return this;
  };
  function Sb2(a) {
    if (typeof a === "string") {
      a = a.split(" ");
      for (var b = 0, c = 0; a[b] === ""; )
        b++;
      var d = a[b++];
      d && (c = parseFloat(d));
      for (var e = 0; a[b] === ""; )
        b++;
      (d = a[b++]) && (e = parseFloat(d));
      for (var f2 = 0; a[b] === ""; )
        b++;
      (d = a[b++]) && (f2 = parseFloat(d));
      for (var g2 = 0; a[b] === ""; )
        b++;
      (d = a[b++]) && (g2 = parseFloat(d));
      return new N2(c, e, f2, g2);
    }
    return new N2();
  }
  function Tb2(a) {
    return a.x.toString() + " " + a.y.toString() + " " + a.width.toString() + " " + a.height.toString();
  }
  t2.toString = function() {
    return "Rect(" + this.x + "," + this.y + "," + this.width + "," + this.height + ")";
  };
  t2.A = function(a) {
    return a instanceof N2 ? this.x === a.x && this.y === a.y && this.width === a.width && this.height === a.height : false;
  };
  t2.Fi = function(a, b, c, d) {
    return this.x === a && this.y === b && this.width === c && this.height === d;
  };
  t2.Ua = function(a) {
    return M2.w(this.x, a.x) && M2.w(this.y, a.y) && M2.w(this.width, a.width) && M2.w(this.height, a.height);
  };
  function Ub2(a, b) {
    return M2.aa(a.x, b.x) && M2.aa(a.y, b.y) && M2.aa(a.width, b.width) && M2.aa(a.height, b.height);
  }
  t2.$ = function(a) {
    return this.x <= a.x && this.x + this.width >= a.x && this.y <= a.y && this.y + this.height >= a.y;
  };
  t2.Ge = function(a) {
    return this.x <= a.x && a.x + a.width <= this.x + this.width && this.y <= a.y && a.y + a.height <= this.y + this.height;
  };
  t2.contains = function(a, b, c, d) {
    c === void 0 && (c = 0);
    d === void 0 && (d = 0);
    return this.x <= a && a + c <= this.x + this.width && this.y <= b && b + d <= this.y + this.height;
  };
  t2.offset = function(a, b) {
    this.x += a;
    this.y += b;
    return this;
  };
  t2.Jc = function(a, b) {
    return Vb2(this, b, a, b, a);
  };
  t2.Mp = function(a) {
    return Vb2(this, a.top, a.right, a.bottom, a.left);
  };
  t2.Vv = function(a) {
    return Vb2(this, -a.top, -a.right, -a.bottom, -a.left);
  };
  t2.eA = function(a, b, c, d) {
    return Vb2(this, a, b, c, d);
  };
  function Vb2(a, b, c, d, e) {
    var f2 = a.width;
    c + e <= -f2 ? (a.x += f2 / 2, a.width = 0) : (a.x -= e, a.width += c + e);
    c = a.height;
    b + d <= -c ? (a.y += c / 2, a.height = 0) : (a.y -= b, a.height += b + d);
    return a;
  }
  t2.ey = function(a) {
    return Zb2(this, a.x, a.y, a.width, a.height);
  };
  t2.hv = function(a, b, c, d) {
    return Zb2(this, a, b, c, d);
  };
  function Zb2(a, b, c, d, e) {
    var f2 = Math.max(a.x, b), g2 = Math.max(a.y, c);
    b = Math.min(a.x + a.width, b + d);
    c = Math.min(a.y + a.height, c + e);
    a.x = f2;
    a.y = g2;
    a.width = Math.max(0, b - f2);
    a.height = Math.max(0, c - g2);
    return a;
  }
  t2.Lc = function(a) {
    return this.iv(a.x, a.y, a.width, a.height);
  };
  t2.iv = function(a, b, c, d) {
    var e = this.width, f2 = this.x;
    if (e !== Infinity && c !== Infinity && (e += f2, c += a, isNaN(c) || isNaN(e) || f2 > c || a > e))
      return false;
    a = this.height;
    c = this.y;
    return a !== Infinity && d !== Infinity && (a += c, d += b, isNaN(d) || isNaN(a) || c > d || b > a) ? false : true;
  };
  function $b2(a, b) {
    var c = a.width, d = a.x, e = b.x - 10;
    if (d > b.width + 10 + 10 + e || e > c + d)
      return false;
    c = a.height;
    a = a.y;
    d = b.y - 10;
    return a > b.height + 10 + 10 + d || d > c + a ? false : true;
  }
  t2.Oe = function(a) {
    return ac2(this, a.x, a.y, 0, 0);
  };
  t2.Qc = function(a) {
    return ac2(this, a.x, a.y, a.width, a.height);
  };
  t2.aw = function(a, b, c, d) {
    c === void 0 && (c = 0);
    d === void 0 && (d = 0);
    return ac2(this, a, b, c, d);
  };
  function ac2(a, b, c, d, e) {
    var f2 = Math.min(a.x, b), g2 = Math.min(a.y, c);
    b = Math.max(a.x + a.width, b + d);
    c = Math.max(a.y + a.height, c + e);
    a.x = f2;
    a.y = g2;
    a.width = b - f2;
    a.height = c - g2;
    return a;
  }
  t2.Ui = function(a, b, c) {
    this.x = a - c.offsetX - c.x * this.width;
    this.y = b - c.offsetY - c.y * this.height;
    return this;
  };
  function bc2(a, b, c, d, e, f2, g2, h) {
    g2 === void 0 && (g2 = 0);
    h === void 0 && (h = 0);
    return a <= e && e + g2 <= a + c && b <= f2 && f2 + h <= b + d;
  }
  function fc2(a, b, c, d, e, f2, g2, h) {
    return a > g2 + e || e > c + a ? false : b > h + f2 || f2 > d + b ? false : true;
  }
  t2.u = function() {
    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
  };
  t2.kA = function() {
    return this.width === 0 && this.height === 0;
  };
  N2.alloc = function() {
    var a = gc2.pop();
    return a === void 0 ? new N2() : a;
  };
  N2.allocAt = function(a, b, c, d) {
    var e = gc2.pop();
    return e === void 0 ? new N2(a, b, c, d) : e.h(a, b, c, d);
  };
  N2.free = function(a) {
    gc2.push(a);
  };
  na2.Object.defineProperties(N2.prototype, { left: { get: function() {
    return this.x;
  }, set: function(a) {
    this.x = a;
  } }, top: { get: function() {
    return this.y;
  }, set: function(a) {
    this.y = a;
  } }, right: { get: function() {
    return this.x + this.width;
  }, set: function(a) {
    this.x += a - (this.x + this.width);
  } }, bottom: { get: function() {
    return this.y + this.height;
  }, set: function(a) {
    this.y += a - (this.y + this.height);
  } }, position: {
    get: function() {
      return new K2(this.x, this.y);
    },
    set: function(a) {
      this.x = a.x;
      this.y = a.y;
    }
  }, size: { get: function() {
    return new Gb2(this.width, this.height);
  }, set: function(a) {
    this.width = a.width;
    this.height = a.height;
  } }, center: { get: function() {
    return new K2(this.x + this.width / 2, this.y + this.height / 2);
  }, set: function(a) {
    this.x = a.x - this.width / 2;
    this.y = a.y - this.height / 2;
  } }, centerX: { get: function() {
    return this.x + this.width / 2;
  }, set: function(a) {
    this.x = a - this.width / 2;
  } }, centerY: { get: function() {
    return this.y + this.height / 2;
  }, set: function(a) {
    this.y = a - this.height / 2;
  } } });
  N2.prototype.isEmpty = N2.prototype.kA;
  N2.prototype.isReal = N2.prototype.u;
  N2.intersectsLineSegment = function(a, b, c, d, e, f2, g2, h) {
    return M2.gy(a, b, c, d, e, f2, g2, h);
  };
  N2.prototype.setSpot = N2.prototype.Ui;
  N2.prototype.union = N2.prototype.aw;
  N2.prototype.unionRect = N2.prototype.Qc;
  N2.prototype.unionPoint = N2.prototype.Oe;
  N2.prototype.intersects = N2.prototype.iv;
  N2.prototype.intersectsRect = N2.prototype.Lc;
  N2.prototype.intersect = N2.prototype.hv;
  N2.prototype.intersectRect = N2.prototype.ey;
  N2.prototype.grow = N2.prototype.eA;
  N2.prototype.subtractMargin = N2.prototype.Vv;
  N2.prototype.addMargin = N2.prototype.Mp;
  N2.prototype.inflate = N2.prototype.Jc;
  N2.prototype.offset = N2.prototype.offset;
  N2.prototype.contains = N2.prototype.contains;
  N2.prototype.containsRect = N2.prototype.Ge;
  N2.prototype.containsPoint = N2.prototype.$;
  N2.prototype.equalsApprox = N2.prototype.Ua;
  N2.prototype.equalTo = N2.prototype.Fi;
  N2.prototype.equals = N2.prototype.A;
  N2.prototype.setSize = N2.prototype.PA;
  N2.prototype.setPoint = N2.prototype.Pc;
  N2.prototype.set = N2.prototype.set;
  N2.prototype.setTo = N2.prototype.tg;
  var hc2 = null, kc2 = null, gc2 = [];
  N2.className = "Rect";
  N2.parse = Sb2;
  N2.stringify = Tb2;
  N2.contains = bc2;
  N2.intersects = fc2;
  N2.ZeroRect = hc2 = new N2(0, 0, 0, 0).ca();
  N2.NoRect = kc2 = new N2(NaN, NaN, NaN, NaN).ca();
  N2.parse = Sb2;
  N2.stringify = Tb2;
  N2.contains = bc2;
  N2.intersects = fc2;
  function lc2(a, b, c, d) {
    a === void 0 ? this.left = this.bottom = this.right = this.top = 0 : b === void 0 ? this.left = this.bottom = this.right = this.top = a : c === void 0 ? (this.top = a, this.right = b, this.bottom = a, this.left = b) : d !== void 0 ? (this.top = a, this.right = b, this.bottom = c, this.left = d) : C2("Invalid arguments to Margin constructor: " + a + ", " + b + ", " + c + ", " + d);
    this.v = false;
  }
  lc2.prototype.assign = function(a) {
    this.top = a.top;
    this.right = a.right;
    this.bottom = a.bottom;
    this.left = a.left;
    return this;
  };
  lc2.prototype.tg = function(a, b, c, d) {
    this.top = a;
    this.right = b;
    this.bottom = c;
    this.left = d;
    return this;
  };
  lc2.prototype.set = function(a) {
    this.top = a.top;
    this.right = a.right;
    this.bottom = a.bottom;
    this.left = a.left;
    return this;
  };
  lc2.prototype.copy = function() {
    var a = new lc2();
    a.top = this.top;
    a.right = this.right;
    a.bottom = this.bottom;
    a.left = this.left;
    return a;
  };
  t2 = lc2.prototype;
  t2.ca = function() {
    this.v = true;
    Object.freeze(this);
    return this;
  };
  t2.I = function() {
    return this.v || Object.isFrozen(this) ? this : this.copy().freeze();
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    return this;
  };
  function mc2(a) {
    if (typeof a === "string") {
      a = a.split(" ");
      for (var b = 0, c = NaN; a[b] === ""; )
        b++;
      var d = a[b++];
      d && (c = parseFloat(d));
      if (isNaN(c))
        return new lc2();
      for (var e = NaN; a[b] === ""; )
        b++;
      (d = a[b++]) && (e = parseFloat(d));
      if (isNaN(e))
        return new lc2(c);
      for (var f2 = NaN; a[b] === ""; )
        b++;
      (d = a[b++]) && (f2 = parseFloat(d));
      if (isNaN(f2))
        return new lc2(c, e);
      for (var g2 = NaN; a[b] === ""; )
        b++;
      (d = a[b++]) && (g2 = parseFloat(d));
      return isNaN(g2) ? new lc2(c, e) : new lc2(c, e, f2, g2);
    }
    return new lc2();
  }
  function nc2(a) {
    return a.top.toString() + " " + a.right.toString() + " " + a.bottom.toString() + " " + a.left.toString();
  }
  t2.toString = function() {
    return "Margin(" + this.top + "," + this.right + "," + this.bottom + "," + this.left + ")";
  };
  t2.A = function(a) {
    return a instanceof lc2 ? this.top === a.top && this.right === a.right && this.bottom === a.bottom && this.left === a.left : false;
  };
  t2.Fi = function(a, b, c, d) {
    return this.top === a && this.right === b && this.bottom === c && this.left === d;
  };
  t2.Ua = function(a) {
    return M2.w(this.top, a.top) && M2.w(this.right, a.right) && M2.w(this.bottom, a.bottom) && M2.w(this.left, a.left);
  };
  t2.u = function() {
    return isFinite(this.top) && isFinite(this.right) && isFinite(this.bottom) && isFinite(this.left);
  };
  lc2.alloc = function() {
    var a = oc2.pop();
    return a === void 0 ? new lc2() : a;
  };
  lc2.free = function(a) {
    oc2.push(a);
  };
  lc2.prototype.isReal = lc2.prototype.u;
  lc2.prototype.equalsApprox = lc2.prototype.Ua;
  lc2.prototype.equalTo = lc2.prototype.Fi;
  lc2.prototype.equals = lc2.prototype.A;
  lc2.prototype.set = lc2.prototype.set;
  lc2.prototype.setTo = lc2.prototype.tg;
  var pc2 = null, qc2 = null, oc2 = [];
  lc2.className = "Margin";
  lc2.parse = mc2;
  lc2.stringify = nc2;
  lc2.ZeroMargin = pc2 = new lc2(0, 0, 0, 0).ca();
  lc2.TwoMargin = qc2 = new lc2(2, 2, 2, 2).ca();
  lc2.parse = mc2;
  lc2.stringify = nc2;
  function O2(a, b, c, d) {
    a === void 0 ? this.offsetY = this.offsetX = this.y = this.x = 0 : (b === void 0 && (b = 0), c === void 0 && (c = 0), d === void 0 && (d = 0), this.x = a, this.y = b, this.offsetX = c, this.offsetY = d);
    this.v = false;
  }
  var rc2, uc2, vc2, wc2, xc2, yc2, zc2, Ac2, Bc2, Cc2, Ec2, Fc2, Gc2, Hc2, Ic2, Jc2, Kc2, Lc2, Mc2, Oc2, Pc2, Qc2, Rc2, Sc2, Tc2, Uc2, Xc2, Yc2, Zc2, $c2, ad2, bd2, cd2, dd2, ed2, fd2;
  O2.prototype.assign = function(a) {
    this.x = a.x;
    this.y = a.y;
    this.offsetX = a.offsetX;
    this.offsetY = a.offsetY;
    return this;
  };
  O2.prototype.tg = function(a, b, c, d) {
    this.x = a;
    this.y = b;
    this.offsetX = c;
    this.offsetY = d;
    return this;
  };
  O2.prototype.set = function(a) {
    this.x = a.x;
    this.y = a.y;
    this.offsetX = a.offsetX;
    this.offsetY = a.offsetY;
    return this;
  };
  O2.prototype.copy = function() {
    var a = new O2();
    a.x = this.x;
    a.y = this.y;
    a.offsetX = this.offsetX;
    a.offsetY = this.offsetY;
    return a;
  };
  t2 = O2.prototype;
  t2.ca = function() {
    this.v = true;
    Object.freeze(this);
    return this;
  };
  t2.I = function() {
    return this.v || Object.isFrozen(this) ? this : this.copy().freeze();
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    return this;
  };
  function gd2(a, b) {
    a.x = NaN;
    a.y = NaN;
    a.offsetX = b;
    return a;
  }
  function ld2(a) {
    if (typeof a === "string") {
      a = a.trim();
      if (a === "None")
        return rc2;
      if (a === "TopLeft")
        return uc2;
      if (a === "Top" || a === "TopCenter" || a === "MiddleTop")
        return vc2;
      if (a === "TopRight")
        return wc2;
      if (a === "Left" || a === "LeftCenter" || a === "MiddleLeft")
        return xc2;
      if (a === "Center")
        return yc2;
      if (a === "Right" || a === "RightCenter" || a === "MiddleRight")
        return zc2;
      if (a === "BottomLeft")
        return Ac2;
      if (a === "Bottom" || a === "BottomCenter" || a === "MiddleBottom")
        return Bc2;
      if (a === "BottomRight")
        return Cc2;
      if (a === "TopSide")
        return Ec2;
      if (a === "LeftSide")
        return Fc2;
      if (a === "RightSide")
        return Gc2;
      if (a === "BottomSide")
        return Hc2;
      if (a === "TopBottomSides")
        return Ic2;
      if (a === "LeftRightSides")
        return Jc2;
      if (a === "TopLeftSides")
        return Kc2;
      if (a === "TopRightSides")
        return Lc2;
      if (a === "BottomLeftSides")
        return Mc2;
      if (a === "BottomRightSides")
        return Oc2;
      if (a === "NotTopSide")
        return Pc2;
      if (a === "NotLeftSide")
        return Qc2;
      if (a === "NotRightSide")
        return Rc2;
      if (a === "NotBottomSide")
        return Sc2;
      if (a === "AllSides")
        return Tc2;
      if (a === "Default")
        return Uc2;
      a = a.split(" ");
      for (var b = 0, c = 0; a[b] === ""; )
        b++;
      var d = a[b++];
      d !== void 0 && 0 < d.length && (c = parseFloat(d));
      for (var e = 0; a[b] === ""; )
        b++;
      d = a[b++];
      d !== void 0 && 0 < d.length && (e = parseFloat(d));
      for (var f2 = 0; a[b] === ""; )
        b++;
      d = a[b++];
      d !== void 0 && 0 < d.length && (f2 = parseFloat(d));
      for (var g2 = 0; a[b] === ""; )
        b++;
      d = a[b++];
      d !== void 0 && 0 < d.length && (g2 = parseFloat(d));
      return new O2(c, e, f2, g2);
    }
    return new O2();
  }
  function md2(a) {
    return a.hb() ? a.x.toString() + " " + a.y.toString() + " " + a.offsetX.toString() + " " + a.offsetY.toString() : a.toString();
  }
  t2.toString = function() {
    return this.hb() ? this.offsetX === 0 && this.offsetY === 0 ? "Spot(" + this.x + "," + this.y + ")" : "Spot(" + this.x + "," + this.y + "," + this.offsetX + "," + this.offsetY + ")" : this.A(rc2) ? "None" : this.A(uc2) ? "TopLeft" : this.A(vc2) ? "Top" : this.A(wc2) ? "TopRight" : this.A(xc2) ? "Left" : this.A(yc2) ? "Center" : this.A(zc2) ? "Right" : this.A(Ac2) ? "BottomLeft" : this.A(Bc2) ? "Bottom" : this.A(Cc2) ? "BottomRight" : this.A(Ec2) ? "TopSide" : this.A(Fc2) ? "LeftSide" : this.A(Gc2) ? "RightSide" : this.A(Hc2) ? "BottomSide" : this.A(Ic2) ? "TopBottomSides" : this.A(Jc2) ? "LeftRightSides" : this.A(Kc2) ? "TopLeftSides" : this.A(Lc2) ? "TopRightSides" : this.A(Mc2) ? "BottomLeftSides" : this.A(Oc2) ? "BottomRightSides" : this.A(Pc2) ? "NotTopSide" : this.A(Qc2) ? "NotLeftSide" : this.A(Rc2) ? "NotRightSide" : this.A(Sc2) ? "NotBottomSide" : this.A(Tc2) ? "AllSides" : this.A(Uc2) ? "Default" : "None";
  };
  t2.A = function(a) {
    return a instanceof O2 ? (this.x === a.x || isNaN(this.x) && isNaN(a.x)) && (this.y === a.y || isNaN(this.y) && isNaN(a.y)) && this.offsetX === a.offsetX && this.offsetY === a.offsetY : false;
  };
  t2.xv = function() {
    return new O2(0.5 - (this.x - 0.5), 0.5 - (this.y - 0.5), -this.offsetX, -this.offsetY);
  };
  t2.Df = function(a) {
    if (!this.Nc())
      return false;
    if (!a.Nc())
      if (a.A(Xc2))
        a = Fc2;
      else if (a.A(Yc2))
        a = Gc2;
      else if (a.A(Zc2))
        a = Ec2;
      else if (a.A($c2))
        a = Hc2;
      else
        return false;
    a = a.offsetY;
    return (this.offsetY & a) === a;
  };
  t2.hb = function() {
    return !isNaN(this.x) && !isNaN(this.y);
  };
  t2.Bc = function() {
    return isNaN(this.x) || isNaN(this.y);
  };
  t2.Nc = function() {
    return isNaN(this.x) && isNaN(this.y) && this.offsetX === 1 && this.offsetY !== 0;
  };
  t2.Es = function() {
    return isNaN(this.x) && isNaN(this.y) && this.offsetX === 0 && this.offsetY === 0;
  };
  t2.Nb = function() {
    return isNaN(this.x) && isNaN(this.y) && this.offsetX === -1 && this.offsetY === 0;
  };
  O2.alloc = function() {
    var a = nd2.pop();
    return a === void 0 ? new O2() : a;
  };
  O2.free = function(a) {
    nd2.push(a);
  };
  O2.prototype.isDefault = O2.prototype.Nb;
  O2.prototype.isNone = O2.prototype.Es;
  O2.prototype.isSide = O2.prototype.Nc;
  O2.prototype.isNoSpot = O2.prototype.Bc;
  O2.prototype.isSpot = O2.prototype.hb;
  O2.prototype.includesSide = O2.prototype.Df;
  O2.prototype.opposite = O2.prototype.xv;
  O2.prototype.equals = O2.prototype.A;
  O2.prototype.set = O2.prototype.set;
  O2.prototype.setTo = O2.prototype.tg;
  var nd2 = [];
  O2.className = "Spot";
  O2.parse = ld2;
  O2.stringify = md2;
  O2.None = rc2 = gd2(new O2(0, 0, 0, 0), 0).ca();
  O2.Default = Uc2 = gd2(new O2(0, 0, -1, 0), -1).ca();
  O2.TopLeft = uc2 = new O2(0, 0, 0, 0).ca();
  O2.TopCenter = vc2 = new O2(0.5, 0, 0, 0).ca();
  O2.TopRight = wc2 = new O2(1, 0, 0, 0).ca();
  O2.LeftCenter = xc2 = new O2(0, 0.5, 0, 0).ca();
  O2.Center = yc2 = new O2(0.5, 0.5, 0, 0).ca();
  O2.RightCenter = zc2 = new O2(1, 0.5, 0, 0).ca();
  O2.BottomLeft = Ac2 = new O2(0, 1, 0, 0).ca();
  O2.BottomCenter = Bc2 = new O2(0.5, 1, 0, 0).ca();
  O2.BottomRight = Cc2 = new O2(1, 1, 0, 0).ca();
  O2.MiddleTop = ad2 = vc2;
  O2.MiddleLeft = bd2 = xc2;
  O2.MiddleRight = cd2 = zc2;
  O2.MiddleBottom = dd2 = Bc2;
  O2.Top = Zc2 = vc2;
  O2.Left = Xc2 = xc2;
  O2.Right = Yc2 = zc2;
  O2.Bottom = $c2 = Bc2;
  O2.TopSide = Ec2 = gd2(new O2(0, 0, 1, 1), 1).ca();
  O2.LeftSide = Fc2 = gd2(new O2(0, 0, 1, 2), 1).ca();
  O2.RightSide = Gc2 = gd2(new O2(0, 0, 1, 4), 1).ca();
  O2.BottomSide = Hc2 = gd2(new O2(0, 0, 1, 8), 1).ca();
  O2.TopBottomSides = Ic2 = gd2(new O2(0, 0, 1, 9), 1).ca();
  O2.LeftRightSides = Jc2 = gd2(new O2(0, 0, 1, 6), 1).ca();
  O2.TopLeftSides = Kc2 = gd2(new O2(0, 0, 1, 3), 1).ca();
  O2.TopRightSides = Lc2 = gd2(new O2(0, 0, 1, 5), 1).ca();
  O2.BottomLeftSides = Mc2 = gd2(new O2(0, 0, 1, 10), 1).ca();
  O2.BottomRightSides = Oc2 = gd2(new O2(0, 0, 1, 12), 1).ca();
  O2.NotTopSide = Pc2 = gd2(new O2(0, 0, 1, 14), 1).ca();
  O2.NotLeftSide = Qc2 = gd2(new O2(0, 0, 1, 13), 1).ca();
  O2.NotRightSide = Rc2 = gd2(new O2(0, 0, 1, 11), 1).ca();
  O2.NotBottomSide = Sc2 = gd2(new O2(0, 0, 1, 7), 1).ca();
  O2.AllSides = Tc2 = gd2(new O2(0, 0, 1, 15), 1).ca();
  ed2 = new O2(0.156, 0.156).ca();
  fd2 = new O2(0.844, 0.844).ca();
  O2.parse = ld2;
  O2.stringify = md2;
  function od2() {
    this.m11 = 1;
    this.m21 = this.m12 = 0;
    this.m22 = 1;
    this.dy = this.dx = 0;
  }
  od2.prototype.set = function(a) {
    this.m11 = a.m11;
    this.m12 = a.m12;
    this.m21 = a.m21;
    this.m22 = a.m22;
    this.dx = a.dx;
    this.dy = a.dy;
    return this;
  };
  od2.prototype.setTransform = function(a, b, c, d, e, f2) {
    this.m11 = a;
    this.m12 = b;
    this.m21 = c;
    this.m22 = d;
    this.dx = e;
    this.dy = f2;
    return this;
  };
  od2.prototype.copy = function() {
    var a = new od2();
    a.m11 = this.m11;
    a.m12 = this.m12;
    a.m21 = this.m21;
    a.m22 = this.m22;
    a.dx = this.dx;
    a.dy = this.dy;
    return a;
  };
  od2.prototype.toString = function() {
    return "Transform(" + this.m11 + "," + this.m12 + "," + this.m21 + "," + this.m22 + "," + this.dx + "," + this.dy + ")";
  };
  od2.prototype.A = function(a) {
    return this.m11 === a.m11 && this.m12 === a.m12 && this.m21 === a.m21 && this.m22 === a.m22 && this.dx === a.dx && this.dy === a.dy;
  };
  od2.prototype.Cs = function() {
    return this.dx === 0 && this.dy === 0 && this.m11 === 1 && this.m12 === 0 && this.m21 === 0 && this.m22 === 1;
  };
  od2.prototype.reset = function() {
    this.m11 = 1;
    this.m21 = this.m12 = 0;
    this.m22 = 1;
    this.dy = this.dx = 0;
    return this;
  };
  od2.prototype.multiply = function(a) {
    var b = this.m11 * a.m11 + this.m21 * a.m12, c = this.m12 * a.m11 + this.m22 * a.m12, d = this.m11 * a.m21 + this.m21 * a.m22, e = this.m12 * a.m21 + this.m22 * a.m22;
    this.dx = this.m11 * a.dx + this.m21 * a.dy + this.dx;
    this.dy = this.m12 * a.dx + this.m22 * a.dy + this.dy;
    this.m11 = b;
    this.m12 = c;
    this.m21 = d;
    this.m22 = e;
    return this;
  };
  od2.prototype.tv = function(a) {
    var b = 1 / (a.m11 * a.m22 - a.m12 * a.m21), c = a.m22 * b, d = -a.m12 * b, e = -a.m21 * b, f2 = a.m11 * b, g2 = b * (a.m21 * a.dy - a.m22 * a.dx);
    a = b * (a.m12 * a.dx - a.m11 * a.dy);
    b = this.m11 * c + this.m21 * d;
    c = this.m12 * c + this.m22 * d;
    d = this.m11 * e + this.m21 * f2;
    e = this.m12 * e + this.m22 * f2;
    this.dx = this.m11 * g2 + this.m21 * a + this.dx;
    this.dy = this.m12 * g2 + this.m22 * a + this.dy;
    this.m11 = b;
    this.m12 = c;
    this.m21 = d;
    this.m22 = e;
    return this;
  };
  od2.prototype.Bs = function() {
    var a = 1 / (this.m11 * this.m22 - this.m12 * this.m21), b = -this.m12 * a, c = -this.m21 * a, d = this.m11 * a, e = a * (this.m21 * this.dy - this.m22 * this.dx), f2 = a * (this.m12 * this.dx - this.m11 * this.dy);
    this.m11 = this.m22 * a;
    this.m12 = b;
    this.m21 = c;
    this.m22 = d;
    this.dx = e;
    this.dy = f2;
    return this;
  };
  od2.prototype.rotate = function(a, b, c) {
    360 <= a ? a -= 360 : 0 > a && (a += 360);
    if (a === 0)
      return this;
    this.translate(b, c);
    if (a === 90) {
      a = 0;
      var d = 1;
    } else
      a === 180 ? (a = -1, d = 0) : a === 270 ? (a = 0, d = -1) : (d = a * Math.PI / 180, a = Math.cos(d), d = Math.sin(d));
    var e = this.m12 * a + this.m22 * d, f2 = this.m11 * -d + this.m21 * a, g2 = this.m12 * -d + this.m22 * a;
    this.m11 = this.m11 * a + this.m21 * d;
    this.m12 = e;
    this.m21 = f2;
    this.m22 = g2;
    this.translate(-b, -c);
    return this;
  };
  t2 = od2.prototype;
  t2.translate = function(a, b) {
    this.dx += this.m11 * a + this.m21 * b;
    this.dy += this.m12 * a + this.m22 * b;
    return this;
  };
  t2.scale = function(a, b) {
    b === void 0 && (b = a);
    this.m11 *= a;
    this.m12 *= a;
    this.m21 *= b;
    this.m22 *= b;
    return this;
  };
  t2.Aa = function(a) {
    var b = a.x, c = a.y;
    return a.h(b * this.m11 + c * this.m21 + this.dx, b * this.m12 + c * this.m22 + this.dy);
  };
  t2.Hd = function(a) {
    var b = 1 / (this.m11 * this.m22 - this.m12 * this.m21), c = a.x, d = a.y;
    return a.h(c * this.m22 * b + d * -this.m21 * b + b * (this.m21 * this.dy - this.m22 * this.dx), c * -this.m12 * b + d * this.m11 * b + b * (this.m12 * this.dx - this.m11 * this.dy));
  };
  t2.Cx = function(a) {
    var b = 1 / (this.m11 * this.m22 - this.m12 * this.m21), c = 1.25 * a.x, d = 1.2 * a.y;
    return a.h(c * this.m22 * b + d * -this.m21 * b + b * (this.m21 * this.dy - this.m22 * this.dx), c * -this.m12 * b + d * this.m11 * b + b * (this.m12 * this.dx - this.m11 * this.dy));
  };
  t2.xq = function(a) {
    var b = a.x, c = a.y, d = b + a.width, e = c + a.height, f2 = this.m11, g2 = this.m12, h = this.m21, k = this.m22, l2 = this.dx, m2 = this.dy, n2 = b * f2 + c * h + l2, p2 = b * g2 + c * k + m2, r2 = d * f2 + c * h + l2, q2 = d * g2 + c * k + m2;
    c = b * f2 + e * h + l2;
    b = b * g2 + e * k + m2;
    f2 = d * f2 + e * h + l2;
    d = d * g2 + e * k + m2;
    e = Math.min(n2, r2);
    n2 = Math.max(n2, r2);
    r2 = Math.min(p2, q2);
    p2 = Math.max(p2, q2);
    e = Math.min(e, c);
    n2 = Math.max(n2, c);
    r2 = Math.min(r2, b);
    p2 = Math.max(p2, b);
    e = Math.min(e, f2);
    n2 = Math.max(n2, f2);
    r2 = Math.min(r2, d);
    p2 = Math.max(p2, d);
    a.h(e, r2, n2 - e, p2 - r2);
    return a;
  };
  od2.alloc = function() {
    var a = pd2.pop();
    return a === void 0 ? new od2() : a;
  };
  od2.free = function(a) {
    pd2.push(a);
  };
  od2.prototype.transformRect = od2.prototype.xq;
  od2.prototype.transformPoint = od2.prototype.Aa;
  od2.prototype.scale = od2.prototype.scale;
  od2.prototype.translate = od2.prototype.translate;
  od2.prototype.rotate = od2.prototype.rotate;
  od2.prototype.invert = od2.prototype.Bs;
  od2.prototype.multiplyInverted = od2.prototype.tv;
  od2.prototype.multiply = od2.prototype.multiply;
  od2.prototype.reset = od2.prototype.reset;
  od2.prototype.isIdentity = od2.prototype.Cs;
  od2.prototype.equals = od2.prototype.A;
  od2.prototype.setTransform = od2.prototype.setTransform;
  od2.prototype.set = od2.prototype.set;
  var pd2 = [];
  od2.className = "Transform";
  od2.xF = "54a702f3e53909c447824c6706603faf4c";
  var M2 = {
    ZA: "7da71ca0ad381e90",
    wg: (Math.sqrt(2) - 1) / 3 * 4,
    uw: null,
    sqrt: function(a) {
      if (0 >= a)
        return 0;
      var b = M2.uw;
      if (b === null) {
        b = [];
        for (var c = 0; 2e3 >= c; c++)
          b[c] = Math.sqrt(c);
        M2.uw = b;
      }
      return 1 > a ? (c = 1 / a, 2e3 >= c ? 1 / b[c | 0] : Math.sqrt(a)) : 2e3 >= a ? b[a | 0] : Math.sqrt(a);
    },
    w: function(a, b) {
      a -= b;
      return 0.5 > a && -0.5 < a;
    },
    aa: function(a, b) {
      a -= b;
      return 5e-8 > a && -5e-8 < a;
    },
    Ob: function(a, b, c, d, e, f2, g2) {
      0 >= e && (e = 1e-6);
      if (a < c) {
        var h = a;
        var k = c;
      } else
        h = c, k = a;
      if (b < d) {
        var l2 = b;
        var m2 = d;
      } else
        l2 = d, m2 = b;
      if (a === c)
        return l2 <= g2 && g2 <= m2 && a - e <= f2 && f2 <= a + e;
      if (b === d)
        return h <= f2 && f2 <= k && b - e <= g2 && g2 <= b + e;
      k += e;
      h -= e;
      if (h <= f2 && f2 <= k && (m2 += e, l2 -= e, l2 <= g2 && g2 <= m2))
        if (k - h > m2 - l2)
          if (a - c > e || c - a > e) {
            if (f2 = (d - b) / (c - a) * (f2 - a) + b, f2 - e <= g2 && g2 <= f2 + e)
              return true;
          } else
            return true;
        else if (b - d > e || d - b > e) {
          if (g2 = (c - a) / (d - b) * (g2 - b) + a, g2 - e <= f2 && f2 <= g2 + e)
            return true;
        } else
          return true;
      return false;
    },
    js: function(a, b, c, d, e, f2, g2, h, k, l2, m2, n2) {
      if (M2.Ob(a, b, g2, h, n2, c, d) && M2.Ob(a, b, g2, h, n2, e, f2))
        return M2.Ob(a, b, g2, h, n2, l2, m2);
      var p2 = (a + c) / 2, r2 = (b + d) / 2, q2 = (c + e) / 2, u2 = (d + f2) / 2;
      e = (e + g2) / 2;
      f2 = (f2 + h) / 2;
      d = (p2 + q2) / 2;
      c = (r2 + u2) / 2;
      q2 = (q2 + e) / 2;
      u2 = (u2 + f2) / 2;
      var w = (d + q2) / 2, v2 = (c + u2) / 2;
      return M2.js(a, b, p2, r2, d, c, w, v2, k, l2, m2, n2) || M2.js(w, v2, q2, u2, e, f2, g2, h, k, l2, m2, n2);
    },
    iz: function(a, b, c, d, e, f2, g2, h, k) {
      var l2 = (c + e) / 2, m2 = (d + f2) / 2;
      k.h((((a + c) / 2 + l2) / 2 + (l2 + (e + g2) / 2) / 2) / 2, (((b + d) / 2 + m2) / 2 + (m2 + (f2 + h) / 2) / 2) / 2);
      return k;
    },
    hz: function(a, b, c, d, e, f2, g2, h) {
      var k = (c + e) / 2, l2 = (d + f2) / 2;
      return xb2(((a + c) / 2 + k) / 2, ((b + d) / 2 + l2) / 2, (k + (e + g2) / 2) / 2, (l2 + (f2 + h) / 2) / 2);
    },
    Vl: function(a, b, c, d, e, f2, g2, h, k, l2) {
      if (M2.Ob(a, b, g2, h, k, c, d) && M2.Ob(a, b, g2, h, k, e, f2))
        ac2(l2, a, b, 0, 0), ac2(l2, g2, h, 0, 0);
      else {
        var m2 = (a + c) / 2, n2 = (b + d) / 2, p2 = (c + e) / 2, r2 = (d + f2) / 2;
        e = (e + g2) / 2;
        f2 = (f2 + h) / 2;
        d = (m2 + p2) / 2;
        c = (n2 + r2) / 2;
        p2 = (p2 + e) / 2;
        r2 = (r2 + f2) / 2;
        var q2 = (d + p2) / 2, u2 = (c + r2) / 2;
        M2.Vl(a, b, m2, n2, d, c, q2, u2, k, l2);
        M2.Vl(q2, u2, p2, r2, e, f2, g2, h, k, l2);
      }
      return l2;
    },
    Fe: function(a, b, c, d, e, f2, g2, h, k, l2) {
      if (M2.Ob(a, b, g2, h, k, c, d) && M2.Ob(a, b, g2, h, k, e, f2))
        l2.length === 0 && (l2.push(a), l2.push(b)), l2.push(g2), l2.push(h);
      else {
        var m2 = (a + c) / 2, n2 = (b + d) / 2, p2 = (c + e) / 2, r2 = (d + f2) / 2;
        e = (e + g2) / 2;
        f2 = (f2 + h) / 2;
        d = (m2 + p2) / 2;
        c = (n2 + r2) / 2;
        p2 = (p2 + e) / 2;
        r2 = (r2 + f2) / 2;
        var q2 = (d + p2) / 2, u2 = (c + r2) / 2;
        M2.Fe(a, b, m2, n2, d, c, q2, u2, k, l2);
        M2.Fe(q2, u2, p2, r2, e, f2, g2, h, k, l2);
      }
      return l2;
    },
    Cv: function(a, b, c, d, e, f2, g2, h, k, l2) {
      if (M2.Ob(a, b, e, f2, l2, c, d))
        return M2.Ob(a, b, e, f2, l2, h, k);
      var m2 = (a + c) / 2, n2 = (b + d) / 2;
      c = (c + e) / 2;
      d = (d + f2) / 2;
      var p2 = (m2 + c) / 2, r2 = (n2 + d) / 2;
      return M2.Cv(a, b, m2, n2, p2, r2, g2, h, k, l2) || M2.Cv(p2, r2, c, d, e, f2, g2, h, k, l2);
    },
    nB: function(a, b, c, d, e, f2, g2) {
      g2.h(((a + c) / 2 + (c + e) / 2) / 2, ((b + d) / 2 + (d + f2) / 2) / 2);
      return g2;
    },
    Bv: function(a, b, c, d, e, f2, g2, h) {
      if (M2.Ob(a, b, e, f2, g2, c, d))
        ac2(h, a, b, 0, 0), ac2(h, e, f2, 0, 0);
      else {
        var k = (a + c) / 2, l2 = (b + d) / 2;
        c = (c + e) / 2;
        d = (d + f2) / 2;
        var m2 = (k + c) / 2, n2 = (l2 + d) / 2;
        M2.Bv(a, b, k, l2, m2, n2, g2, h);
        M2.Bv(m2, n2, c, d, e, f2, g2, h);
      }
      return h;
    },
    lq: function(a, b, c, d, e, f2, g2, h) {
      if (M2.Ob(a, b, e, f2, g2, c, d))
        h.length === 0 && (h.push(a), h.push(b)), h.push(e), h.push(f2);
      else {
        var k = (a + c) / 2, l2 = (b + d) / 2;
        c = (c + e) / 2;
        d = (d + f2) / 2;
        var m2 = (k + c) / 2, n2 = (l2 + d) / 2;
        M2.lq(a, b, k, l2, m2, n2, g2, h);
        M2.lq(m2, n2, c, d, e, f2, g2, h);
      }
      return h;
    },
    Op: function(a, b, c, d, e, f2, g2, h, k, l2, m2, n2, p2, r2) {
      if (M2.Ob(a, b, g2, h, p2, c, d) && M2.Ob(a, b, g2, h, p2, e, f2)) {
        if (!M2.dm(a, b, g2, h, k, l2, m2, n2))
          return false;
        p2 = (a - g2) * (l2 - n2) - (b - h) * (k - m2);
        if (p2 === 0)
          return false;
        r2.h(((a * h - b * g2) * (k - m2) - (a - g2) * (k * n2 - l2 * m2)) / p2, ((a * h - b * g2) * (l2 - n2) - (b - h) * (k * n2 - l2 * m2)) / p2);
        return true;
      }
      var q2 = (a + c) / 2, u2 = (b + d) / 2, w = (c + e) / 2, v2 = (d + f2) / 2;
      e = (e + g2) / 2;
      f2 = (f2 + h) / 2;
      d = (q2 + w) / 2;
      c = (u2 + v2) / 2;
      w = (w + e) / 2;
      v2 = (v2 + f2) / 2;
      var z2 = (d + w) / 2, y2 = (c + v2) / 2, B2 = Infinity, A2 = false, E = 0, Q2 = 0;
      M2.Op(a, b, q2, u2, d, c, z2, y2, k, l2, m2, n2, p2, r2) && (a = (r2.x - k) * (r2.x - k) + (r2.y - l2) * (r2.y - l2), a < B2 && (B2 = a, A2 = true, E = r2.x, Q2 = r2.y));
      M2.Op(z2, y2, w, v2, e, f2, g2, h, k, l2, m2, n2, p2, r2) && (r2.x - k) * (r2.x - k) + (r2.y - l2) * (r2.y - l2) < B2 && (A2 = true, E = r2.x, Q2 = r2.y);
      A2 && (r2.x = E, r2.y = Q2);
      return A2;
    },
    Pp: function(a, b, c, d, e, f2, g2, h, k, l2, m2, n2, p2) {
      var r2 = 0;
      if (M2.Ob(a, b, g2, h, p2, c, d) && M2.Ob(a, b, g2, h, p2, e, f2)) {
        p2 = (a - g2) * (l2 - n2) - (b - h) * (k - m2);
        if (p2 === 0)
          return r2;
        var q2 = ((a * h - b * g2) * (k - m2) - (a - g2) * (k * n2 - l2 * m2)) / p2, u2 = ((a * h - b * g2) * (l2 - n2) - (b - h) * (k * n2 - l2 * m2)) / p2;
        if (q2 >= m2)
          return r2;
        if ((k > m2 ? k - m2 : m2 - k) < (l2 > n2 ? l2 - n2 : n2 - l2)) {
          if (b < h ? (k = b, a = h) : (k = h, a = b), u2 < k || u2 > a)
            return r2;
        } else if (a < g2 ? (k = a, a = g2) : k = g2, q2 < k || q2 > a)
          return r2;
        0 < p2 ? r2++ : 0 > p2 && r2--;
      } else {
        q2 = (a + c) / 2;
        u2 = (b + d) / 2;
        var w = (c + e) / 2, v2 = (d + f2) / 2;
        e = (e + g2) / 2;
        f2 = (f2 + h) / 2;
        d = (q2 + w) / 2;
        c = (u2 + v2) / 2;
        w = (w + e) / 2;
        v2 = (v2 + f2) / 2;
        var z2 = (d + w) / 2, y2 = (c + v2) / 2;
        r2 += M2.Pp(a, b, q2, u2, d, c, z2, y2, k, l2, m2, n2, p2);
        r2 += M2.Pp(z2, y2, w, v2, e, f2, g2, h, k, l2, m2, n2, p2);
      }
      return r2;
    },
    Ih: function(a, b, c, d, e, f2, g2) {
      if (M2.aa(a, c)) {
        b < d ? (c = b, b = d) : c = d;
        if (f2 < c)
          return g2.h(a, c), false;
        if (f2 > b)
          return g2.h(a, b), false;
        g2.h(a, f2);
        return true;
      }
      if (M2.aa(b, d)) {
        a < c ? (d = a, a = c) : d = c;
        if (e < d)
          return g2.h(d, b), false;
        if (e > a)
          return g2.h(a, b), false;
        g2.h(e, b);
        return true;
      }
      e = ((a - e) * (a - c) + (b - f2) * (b - d)) / ((c - a) * (c - a) + (d - b) * (d - b));
      if (-5e-6 > e)
        return g2.h(a, b), false;
      if (1.000005 < e)
        return g2.h(c, d), false;
      g2.h(a + e * (c - a), b + e * (d - b));
      return true;
    },
    Le: function(a, b, c, d, e, f2, g2, h, k) {
      if (M2.w(a, c) && M2.w(b, d))
        return k.h(a, b), false;
      if (M2.aa(e, g2))
        return M2.aa(a, c) ? (M2.Ih(a, b, c, d, e, f2, k), false) : M2.Ih(a, b, c, d, e, (d - b) / (c - a) * (e - a) + b, k);
      h = (h - f2) / (g2 - e);
      if (M2.aa(a, c)) {
        c = h * (a - e) + f2;
        b < d ? (e = b, b = d) : e = d;
        if (c < e)
          return k.h(a, e), false;
        if (c > b)
          return k.h(a, b), false;
        k.h(a, c);
        return true;
      }
      g2 = (d - b) / (c - a);
      if (M2.aa(h, g2))
        return M2.Ih(a, b, c, d, e, f2, k), false;
      e = (g2 * a - h * e + f2 - b) / (g2 - h);
      if (M2.aa(g2, 0)) {
        a < c ? (d = a, a = c) : d = c;
        if (e < d)
          return k.h(d, b), false;
        if (e > a)
          return k.h(a, b), false;
        k.h(e, b);
        return true;
      }
      return M2.Ih(a, b, c, d, e, g2 * (e - a) + b, k);
    },
    lB: function(a, b, c, d, e) {
      return M2.Le(c.x, c.y, d.x, d.y, a.x, a.y, b.x, b.y, e);
    },
    jB: function(a, b, c, d, e, f2, g2, h, k, l2) {
      function m2(c2, d2) {
        var e2 = (c2 - a) * (c2 - a) + (d2 - b) * (d2 - b);
        e2 < n2 && (n2 = e2, k.h(c2, d2));
      }
      var n2 = Infinity;
      m2(k.x, k.y);
      var p2 = 0, r2 = 0, q2 = 0, u2 = 0;
      e < g2 ? (p2 = e, r2 = g2) : (p2 = g2, r2 = e);
      f2 < h ? (q2 = e, u2 = g2) : (q2 = g2, u2 = e);
      p2 = (r2 - p2) / 2 + l2;
      l2 = (u2 - q2) / 2 + l2;
      e = (e + g2) / 2;
      f2 = (f2 + h) / 2;
      if (p2 === 0 || l2 === 0)
        return k;
      if (0.5 > (c > a ? c - a : a - c)) {
        p2 = 1 - (c - e) * (c - e) / (p2 * p2);
        if (0 > p2)
          return k;
        p2 = Math.sqrt(p2);
        d = -l2 * p2 + f2;
        m2(c, l2 * p2 + f2);
        m2(c, d);
      } else {
        c = (d - b) / (c - a);
        d = 1 / (p2 * p2) + c * c / (l2 * l2);
        h = 2 * c * (b - c * a) / (l2 * l2) - 2 * c * f2 / (l2 * l2) - 2 * e / (p2 * p2);
        p2 = h * h - 4 * d * (2 * c * a * f2 / (l2 * l2) - 2 * b * f2 / (l2 * l2) + f2 * f2 / (l2 * l2) + e * e / (p2 * p2) - 1 + (b - c * a) * (b - c * a) / (l2 * l2));
        if (0 > p2)
          return k;
        p2 = Math.sqrt(p2);
        l2 = (-h + p2) / (2 * d);
        m2(l2, c * l2 - c * a + b);
        p2 = (-h - p2) / (2 * d);
        m2(p2, c * p2 - c * a + b);
      }
      return k;
    },
    Cf: function(a, b, c, d, e, f2, g2, h, k) {
      var l2 = 1e21, m2 = a, n2 = b;
      if (M2.Le(a, b, a, d, e, f2, g2, h, k)) {
        var p2 = (k.x - e) * (k.x - e) + (k.y - f2) * (k.y - f2);
        p2 < l2 && (l2 = p2, m2 = k.x, n2 = k.y);
      }
      M2.Le(c, b, c, d, e, f2, g2, h, k) && (p2 = (k.x - e) * (k.x - e) + (k.y - f2) * (k.y - f2), p2 < l2 && (l2 = p2, m2 = k.x, n2 = k.y));
      M2.Le(a, b, c, b, e, f2, g2, h, k) && (b = (k.x - e) * (k.x - e) + (k.y - f2) * (k.y - f2), b < l2 && (l2 = b, m2 = k.x, n2 = k.y));
      M2.Le(a, d, c, d, e, f2, g2, h, k) && (a = (k.x - e) * (k.x - e) + (k.y - f2) * (k.y - f2), a < l2 && (l2 = a, m2 = k.x, n2 = k.y));
      k.h(m2, n2);
      return 1e21 > l2;
    },
    iB: function(a, b, c, d, e, f2, g2, h, k) {
      c = a - c;
      g2 = e - g2;
      c === 0 || g2 === 0 ? c === 0 ? (b = (f2 - h) / g2, h = a, e = b * h + (f2 - b * e)) : (f2 = (b - d) / c, h = e, e = f2 * h + (b - f2 * a)) : (d = (b - d) / c, h = (f2 - h) / g2, a = b - d * a, h = (f2 - h * e - a) / (d - h), e = d * h + a);
      k.h(h, e);
      return k;
    },
    zs: function(a, b, c) {
      return M2.gy(a.x, a.y, a.width, a.height, b.x, b.y, c.x, c.y);
    },
    gy: function(a, b, c, d, e, f2, g2, h) {
      var k = a + c, l2 = b + d;
      return e === g2 ? (f2 < h ? (g2 = f2, f2 = h) : g2 = h, a <= e && e <= k && g2 <= l2 && f2 >= b) : f2 === h ? (e < g2 ? (h = e, e = g2) : h = g2, b <= f2 && f2 <= l2 && h <= k && e >= a) : bc2(a, b, c, d, e, f2) || bc2(a, b, c, d, g2, h) || M2.dm(a, b, k, b, e, f2, g2, h) || M2.dm(k, b, k, l2, e, f2, g2, h) || M2.dm(k, l2, a, l2, e, f2, g2, h) || M2.dm(a, l2, a, b, e, f2, g2, h) ? true : false;
    },
    dm: function(a, b, c, d, e, f2, g2, h) {
      return 0 >= M2.Xl(a, b, c, d, e, f2) * M2.Xl(a, b, c, d, g2, h) && 0 >= M2.Xl(e, f2, g2, h, a, b) * M2.Xl(e, f2, g2, h, c, d);
    },
    Xl: function(a, b, c, d, e, f2) {
      c -= a;
      d -= b;
      a = e - a;
      b = f2 - b;
      f2 = a * d - b * c;
      f2 === 0 && (f2 = a * c + b * d, 0 < f2 && (f2 = (a - c) * c + (b - d) * d, 0 > f2 && (f2 = 0)));
      return f2;
    },
    jq: function(a) {
      0 > a && (a += 360);
      360 <= a && (a -= 360);
      return a;
    },
    Jx: function(a, b, c, d, e, f2) {
      var g2 = Math.PI;
      f2 || (d *= g2 / 180, e *= g2 / 180);
      var h = d > e ? -1 : 1;
      f2 = [];
      var k = g2 / 2, l2 = d;
      d = Math.min(2 * g2, Math.abs(e - d));
      if (1e-5 > d)
        return k = l2 + h * Math.min(d, k), h = a + c * Math.cos(l2), l2 = b + c * Math.sin(l2), a += c * Math.cos(k), b += c * Math.sin(k), c = (h + a) / 2, k = (l2 + b) / 2, f2.push([h, l2, c, k, c, k, a, b]), f2;
      for (; 1e-5 < d; )
        e = l2 + h * Math.min(d, k), f2.push(M2.rz(c, l2, e, a, b)), d -= Math.abs(e - l2), l2 = e;
      return f2;
    },
    rz: function(a, b, c, d, e) {
      var f2 = (c - b) / 2, g2 = a * Math.cos(f2), h = a * Math.sin(f2), k = -h, l2 = g2 * g2 + k * k, m2 = l2 + g2 * g2 + k * h;
      l2 = 4 / 3 * (Math.sqrt(2 * l2 * m2) - m2) / (g2 * h - k * g2);
      h = g2 - l2 * k;
      g2 = k + l2 * g2;
      k = -g2;
      l2 = f2 + b;
      f2 = Math.cos(l2);
      l2 = Math.sin(l2);
      return [d + a * Math.cos(b), e + a * Math.sin(b), d + h * f2 - g2 * l2, e + h * l2 + g2 * f2, d + h * f2 - k * l2, e + h * l2 + k * f2, d + a * Math.cos(c), e + a * Math.sin(c)];
    },
    Xp: function(a, b, c, d, e, f2, g2) {
      c = Math.floor((a - c) / e) * e + c;
      d = Math.floor((b - d) / f2) * f2 + d;
      var h = c;
      c + e - a < e / 2 && (h = c + e);
      a = d;
      d + f2 - b < f2 / 2 && (a = d + f2);
      g2.h(h, a);
      return g2;
    },
    Ux: function(a, b) {
      var c = Math.max(a, b);
      a = Math.min(a, b);
      var d;
      do
        b = c % a, c = d = a, a = b;
      while (0 < b);
      return d;
    },
    xz: function(a, b, c, d) {
      var e = 0 > c, f2 = 0 > d;
      if (a < b) {
        var g2 = 1;
        var h = 0;
      } else
        g2 = 0, h = 1;
      var k = g2 === 0 ? a : b;
      var l2 = g2 === 0 ? c : d;
      if (g2 === 0 ? e : f2)
        l2 = -l2;
      g2 = h;
      c = g2 === 0 ? c : d;
      if (g2 === 0 ? e : f2)
        c = -c;
      return M2.yz(k, g2 === 0 ? a : b, l2, c, 0, 0);
    },
    yz: function(a, b, c, d, e, f2) {
      if (0 < d)
        if (0 < c) {
          e = a * a;
          f2 = b * b;
          a *= c;
          var g2 = b * d, h = -f2 + g2, k = -f2 + Math.sqrt(a * a + g2 * g2);
          b = h;
          for (var l2 = 0; 9999999999 > l2; ++l2) {
            b = 0.5 * (h + k);
            if (b === h || b === k)
              break;
            var m2 = a / (b + e), n2 = g2 / (b + f2);
            m2 = m2 * m2 + n2 * n2 - 1;
            if (0 < m2)
              h = b;
            else if (0 > m2)
              k = b;
            else
              break;
          }
          c = e * c / (b + e) - c;
          d = f2 * d / (b + f2) - d;
          c = Math.sqrt(c * c + d * d);
        } else
          c = Math.abs(d - b);
      else
        d = a * a - b * b, f2 = a * c, f2 < d ? (d = f2 / d, f2 = b * Math.sqrt(Math.abs(1 - d * d)), c = a * d - c, c = Math.sqrt(c * c + f2 * f2)) : c = Math.abs(c - a);
      return c;
    },
    Qe: new Ya2(),
    Im: new Ya2(),
    Jf: new Ya2(),
    Kf: 0,
    Jm: 100
  };
  M2.za = M2.ZA;
  function P2(a) {
    Va2(this);
    this.v = false;
    a === void 0 && (a = P2.o);
    this.ha = a;
    this.tc = this.jc = this.bd = this.ad = 0;
    this.ij = new F2();
    this.ar = this.ij.Da;
    this.Nq = new N2().freeze();
    this.qa = true;
    this.Pm = this.yk = null;
    this.Qm = NaN;
    this.mf = uc2;
    this.nf = Cc2;
    this.al = this.cl = NaN;
    this.Of = qd2;
  }
  P2.prototype.copy = function() {
    var a = new P2();
    a.ha = this.ha;
    a.ad = this.ad;
    a.bd = this.bd;
    a.jc = this.jc;
    a.tc = this.tc;
    for (var b = this.ij.m, c = b.length, d = a.ij, e = 0; e < c; e++) {
      var f2 = b[e].copy();
      d.add(f2);
    }
    a.ar = this.ar;
    a.Nq.assign(this.Nq);
    a.qa = this.qa;
    a.yk = this.yk;
    a.Pm = this.Pm;
    a.Qm = this.Qm;
    a.mf = this.mf.I();
    a.nf = this.nf.I();
    a.cl = this.cl;
    a.al = this.al;
    a.Of = this.Of;
    return a;
  };
  P2.prototype.ca = function() {
    this.freeze();
    Object.freeze(this);
    return this;
  };
  P2.prototype.freeze = function() {
    this.v = true;
    var a = this.figures;
    a.freeze();
    a = a.m;
    for (var b = a.length, c = 0; c < b; c++)
      a[c].freeze();
    return this;
  };
  P2.prototype.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    var a = this.figures;
    a.ea();
    a = a.m;
    for (var b = a.length, c = 0; c < b; c++)
      a[c].ea();
    return this;
  };
  P2.prototype.Ua = function(a) {
    if (!(a instanceof P2))
      return false;
    if (this.type !== a.type)
      return this.type === P2.j && a.type === P2.o ? rd2(this, a) : a.type === P2.j && this.type === P2.o ? rd2(a, this) : false;
    if (this.type === P2.o) {
      var b = this.figures.m;
      a = a.figures.m;
      var c = b.length;
      if (c !== a.length)
        return false;
      for (var d = 0; d < c; d++)
        if (!b[d].Ua(a[d]))
          return false;
      return true;
    }
    return M2.w(this.startX, a.startX) && M2.w(this.startY, a.startY) && M2.w(this.endX, a.endX) && M2.w(this.endY, a.endY);
  };
  function rd2(a, b) {
    return a.type !== P2.j || b.type !== P2.o ? false : b.figures.count === 1 && (b = b.figures.J(0), b.segments.count === 1 && M2.w(a.startX, b.startX) && M2.w(a.startY, b.startY) && (b = b.segments.J(0), b.type === sd2 && M2.w(a.endX, b.endX) && M2.w(a.endY, b.endY))) ? true : false;
  }
  P2.wa = function(a) {
    return a.toString();
  };
  P2.prototype.gb = function(a) {
    a.classType === P2 && (this.type = a);
  };
  P2.prototype.toString = function(a) {
    a === void 0 && (a = -1);
    switch (this.type) {
      case P2.j:
        return 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() + "L" + this.endX.toString() + " " + this.endY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a) + "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
      case P2.C:
        var b = new N2(this.startX, this.startY, 0, 0);
        b.aw(this.endX, this.endY, 0, 0);
        return 0 > a ? "M" + b.x.toString() + " " + b.y.toString() + "H" + b.right.toString() + "V" + b.bottom.toString() + "H" + b.left.toString() + "z" : "M" + b.x.toFixed(a) + " " + b.y.toFixed(a) + "H" + b.right.toFixed(a) + "V" + b.bottom.toFixed(a) + "H" + b.left.toFixed(a) + "z";
      case P2.L:
        b = new N2(this.startX, this.startY, 0, 0);
        b.aw(this.endX, this.endY, 0, 0);
        if (0 > a)
          return a = b.left.toString() + " " + (b.y + b.height / 2).toString(), "M" + a + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + (b.right.toString() + " " + (b.y + b.height / 2).toString()) + "A" + (b.width / 2).toString() + " " + (b.height / 2).toString() + " 0 0 1 " + a;
        var c = b.left.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a);
        return "M" + c + "A" + (b.width / 2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + (b.right.toFixed(a) + " " + (b.y + b.height / 2).toFixed(a)) + "A" + (b.width / 2).toFixed(a) + " " + (b.height / 2).toFixed(a) + " 0 0 1 " + c;
      case P2.o:
        b = "";
        c = this.figures.m;
        for (var d = c.length, e = 0; e < d; e++) {
          var f2 = c[e];
          0 < e && (b += " x ");
          f2.isFilled && (b += "F ");
          b += f2.toString(a);
        }
        return b;
      default:
        return this.type.toString();
    }
  };
  P2.Ma = function(a) {
    a = a.split(/[Xx]/);
    for (var b = a.length, c = "", d = 0; d < b; d++) {
      var e = a[d];
      c = e.match(/[Ff]/) !== null ? d === 0 ? c + e : c + ("X" + (e[0] === " " ? "" : " ") + e) : c + ((d === 0 ? "" : "X ") + "F" + (e[0] === " " ? "" : " ") + e);
    }
    return c;
  };
  P2.parse = function(a, b) {
    function c() {
      return u2 >= B2 - 1 ? true : l2[u2 + 1].match(A2) !== null;
    }
    function d() {
      u2++;
      return l2[u2];
    }
    function e(a2) {
      var b2 = parseFloat(d()), c2 = parseFloat(d());
      w === w.toLowerCase() && (b2 = y2.x + b2, c2 = y2.y + c2);
      a2.h(b2, c2);
    }
    function f2() {
      e(y2);
      return y2;
    }
    function g2() {
      e(z2);
      return z2;
    }
    function h() {
      var a2 = v2.toLowerCase();
      return a2 !== "c" && a2 !== "s" && a2 !== "q" && a2 !== "t" ? y2 : new K2(2 * y2.x - z2.x, 2 * y2.y - z2.y);
    }
    b === void 0 && (b = false);
    var k = /([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm;
    a = a.replace(/,/gm, " ");
    a = a.replace(k, "$1 $2");
    a = a.replace(k, "$1 $2");
    a = a.replace(/([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])([^s])/gm, "$1 $2");
    a = a.replace(/([^s])([UuBbMmZzLlHhVvCcSsQqTtAaFfXx])/gm, "$1 $2");
    a = a.replace(/([0-9])([+\-])/gm, "$1 $2");
    a = a.replace(/[\s\r\t\n]+/gm, " ");
    a = a.replace(/^\s+|\s+$/g, "");
    var l2 = a.split(" ");
    for (a = 0; a < l2.length; a++) {
      var m2 = l2[a];
      if (m2.match(/(\.[0-9]*)(\.)/gm) !== null) {
        k = Ea2();
        for (var n2 = "", p2 = false, r2 = 0; r2 < m2.length; r2++) {
          var q2 = m2[r2];
          q2 !== "." || p2 ? q2 === "." ? (k.push(n2), n2 = ".") : n2 += q2 : (p2 = true, n2 += q2);
        }
        k.push(n2);
        l2.splice(a, 1);
        for (m2 = 0; m2 < k.length; m2++)
          l2.splice(a + m2, 0, k[m2]);
        a += k.length - 1;
        Ia2(k);
      }
    }
    var u2 = -1, w = "", v2 = "";
    k = new K2(0, 0);
    var z2 = new K2(0, 0), y2 = new K2(0, 0), B2 = l2.length;
    a = td2(null);
    n2 = m2 = false;
    p2 = true;
    r2 = null;
    for (var A2 = /[UuBbMmZzLlHhVvCcSsQqTtAaFfXx]/; !(u2 >= B2 - 1); )
      if (v2 = w, w = d(), w !== "")
        switch (w.toUpperCase()) {
          case "X":
            p2 = true;
            n2 = m2 = false;
            break;
          case "M":
            r2 = f2();
            a.kc === null || p2 === true ? (xd2(a, r2.x, r2.y, m2, !n2), p2 = false) : a.moveTo(r2.x, r2.y);
            for (k.assign(y2); !c(); )
              r2 = f2(), a.lineTo(r2.x, r2.y);
            break;
          case "L":
            for (; !c(); )
              r2 = f2(), a.lineTo(r2.x, r2.y);
            break;
          case "H":
            for (; !c(); )
              y2 = new K2((w === w.toLowerCase() ? y2.x : 0) + parseFloat(d()), y2.y), a.lineTo(y2.x, y2.y);
            break;
          case "V":
            for (; !c(); )
              y2 = new K2(y2.x, (w === w.toLowerCase() ? y2.y : 0) + parseFloat(d())), a.lineTo(y2.x, y2.y);
            break;
          case "C":
            for (; !c(); ) {
              r2 = new K2();
              e(r2);
              q2 = g2();
              var E = f2();
              yd2(a, r2.x, r2.y, q2.x, q2.y, E.x, E.y);
            }
            break;
          case "S":
            for (; !c(); )
              r2 = h(), q2 = g2(), E = f2(), yd2(a, r2.x, r2.y, q2.x, q2.y, E.x, E.y);
            break;
          case "Q":
            for (; !c(); )
              r2 = g2(), q2 = f2(), zd2(a, r2.x, r2.y, q2.x, q2.y);
            break;
          case "T":
            for (; !c(); )
              z2 = r2 = h(), q2 = f2(), zd2(a, r2.x, r2.y, q2.x, q2.y);
            break;
          case "B":
            for (; !c(); ) {
              r2 = parseFloat(d());
              q2 = parseFloat(d());
              E = parseFloat(d());
              var Q2 = parseFloat(d()), J2 = parseFloat(d()), S2 = J2, L2 = false;
              c() || (S2 = parseFloat(d()), c() || (L2 = parseFloat(d()) !== 0));
              w === w.toLowerCase() && (E += y2.x, Q2 += y2.y);
              a.arcTo(r2, q2, E, Q2, J2, S2, L2);
            }
            break;
          case "A":
            for (; !c(); )
              r2 = Math.abs(parseFloat(d())), q2 = Math.abs(parseFloat(d())), E = parseFloat(d()), J2 = Q2 = false, L2 = S2 = 0, S2 = d(), S2.length === 1 ? (Q2 = !!parseFloat(S2), J2 = !!parseFloat(d()), S2 = parseFloat(d())) : S2.length === 2 ? (Q2 = !!parseFloat(S2[0]), J2 = !!parseFloat(S2[1]), S2 = parseFloat(d())) : (Q2 = !!parseFloat(S2[0]), J2 = !!parseFloat(S2[1]), S2 = parseFloat(S2.slice(2))), L2 = parseFloat(d()), w === w.toLowerCase() && (S2 = y2.x + S2, L2 = y2.y + L2), y2.h(S2, L2), Ad2(a, r2, q2, E, Q2, J2, S2, L2);
            break;
          case "Z":
            Bd2(a);
            y2.assign(k);
            break;
          case "F":
            r2 = "";
            for (q2 = 1; l2[u2 + q2]; )
              if (l2[u2 + q2].match(/[Uu]/) !== null)
                q2++;
              else if (l2[u2 + q2].match(A2) === null)
                q2++;
              else {
                r2 = l2[u2 + q2];
                break;
              }
            r2.match(/[Mm]/) ? m2 = true : 0 < a.kc.segments.length && (a.kc.isFilled = true);
            break;
          case "U":
            r2 = "";
            for (q2 = 1; l2[u2 + q2]; )
              if (l2[u2 + q2].match(/[Ff]/) !== null)
                q2++;
              else if (l2[u2 + q2].match(A2) === null)
                q2++;
              else {
                r2 = l2[u2 + q2];
                break;
              }
            r2.match(/[Mm]/) ? n2 = true : a.Bm(false);
        }
    k = a.ts;
    Cd2 = a;
    if (b)
      for (b = k.figures.iterator; b.next(); )
        b.value.isFilled = true;
    return k;
  };
  P2.Ba = function(a, b) {
    for (var c = a.length, d = K2.alloc(), e = 0; e < c; e++) {
      var f2 = a[e];
      d.x = f2[0];
      d.y = f2[1];
      b.Aa(d);
      f2[0] = d.x;
      f2[1] = d.y;
      d.x = f2[2];
      d.y = f2[3];
      b.Aa(d);
      f2[2] = d.x;
      f2[3] = d.y;
      d.x = f2[4];
      d.y = f2[5];
      b.Aa(d);
      f2[4] = d.x;
      f2[5] = d.y;
      d.x = f2[6];
      d.y = f2[7];
      b.Aa(d);
      f2[6] = d.x;
      f2[7] = d.y;
    }
    K2.free(d);
  };
  P2.prototype.mv = function() {
    if (this.qa || this.ar !== this.figures.Da)
      return true;
    for (var a = this.figures.m, b = a.length, c = 0; c < b; c++)
      if (a[c].mv())
        return true;
    return false;
  };
  P2.prototype.computeBounds = function() {
    this.qa = false;
    this.Pm = this.yk = null;
    this.Qm = NaN;
    this.ar = this.figures.Da;
    for (var a = this.figures.m, b = a.length, c = 0; c < b; c++) {
      var d = a[c];
      d.qa = false;
      var e = d.segments;
      d.Pr = e.Da;
      d = e.m;
      e = d.length;
      for (var f2 = 0; f2 < e; f2++) {
        var g2 = d[f2];
        g2.qa = false;
        g2.Sd = null;
      }
    }
    a = this.Nq;
    a.ea();
    isNaN(this.cl) || isNaN(this.al) ? a.h(0, 0, 0, 0) : a.h(0, 0, this.cl, this.al);
    Od2(this, a, false);
    ac2(a, 0, 0, 0, 0);
    a.freeze();
  };
  P2.prototype.Ix = function() {
    var a = new N2();
    Od2(this, a, true);
    return a;
  };
  function Od2(a, b, c) {
    switch (a.type) {
      case P2.j:
      case P2.C:
      case P2.L:
        c ? b.h(a.ad, a.bd, 0, 0) : ac2(b, a.ad, a.bd, 0, 0);
        ac2(b, a.jc, a.tc, 0, 0);
        break;
      case P2.o:
        var d = a.figures;
        a = d.m;
        d = d.length;
        for (var e = 0; e < d; e++) {
          var f2 = a[e];
          c && e === 0 ? b.h(f2.startX, f2.startY, 0, 0) : ac2(b, f2.startX, f2.startY, 0, 0);
          for (var g2 = f2.segments.m, h = g2.length, k = f2.startX, l2 = f2.startY, m2 = 0; m2 < h; m2++) {
            var n2 = g2[m2];
            switch (n2.type) {
              case sd2:
              case Pd2:
                k = n2.endX;
                l2 = n2.endY;
                ac2(b, k, l2, 0, 0);
                break;
              case Qd2:
                M2.Vl(k, l2, n2.point1X, n2.point1Y, n2.point2X, n2.point2Y, n2.endX, n2.endY, 0.5, b);
                k = n2.endX;
                l2 = n2.endY;
                break;
              case Rd2:
                M2.Bv(k, l2, n2.point1X, n2.point1Y, n2.endX, n2.endY, 0.5, b);
                k = n2.endX;
                l2 = n2.endY;
                break;
              case Sd2:
              case Td2:
                var p2 = n2.type === Sd2 ? Ud2(n2, f2) : Vd2(n2, f2, k, l2), r2 = p2.length;
                if (r2 === 0) {
                  k = n2.type === Sd2 ? n2.centerX : n2.endX;
                  l2 = n2.type === Sd2 ? n2.centerY : n2.endY;
                  ac2(b, k, l2, 0, 0);
                  break;
                }
                n2 = null;
                for (var q2 = 0; q2 < r2; q2++)
                  n2 = p2[q2], M2.Vl(n2[0], n2[1], n2[2], n2[3], n2[4], n2[5], n2[6], n2[7], 0.5, b);
                n2 !== null && (k = n2[6], l2 = n2[7]);
                break;
              default:
                C2("Unknown Segment type: " + n2.type);
            }
          }
        }
        break;
      default:
        C2("Unknown Geometry type: " + a.type);
    }
  }
  P2.prototype.normalize = function() {
    this.v && wa2(this);
    var a = this.Ix();
    this.offset(-a.x, -a.y);
    return new K2(-a.x, -a.y);
  };
  P2.prototype.offset = function(a, b) {
    this.v && wa2(this);
    this.transform(1, 0, 0, 1, a, b);
    return this;
  };
  P2.prototype.scale = function(a, b) {
    this.v && wa2(this);
    this.transform(a, 0, 0, b, 0, 0);
    return this;
  };
  P2.prototype.rotate = function(a, b, c) {
    this.v && wa2(this);
    b === void 0 && (b = 0);
    c === void 0 && (c = 0);
    var d = od2.alloc();
    d.reset();
    d.rotate(a, b, c);
    this.transform(d.m11, d.m12, d.m21, d.m22, d.dx, d.dy);
    od2.free(d);
    return this;
  };
  t2 = P2.prototype;
  t2.transform = function(a, b, c, d, e, f2) {
    switch (this.type) {
      case P2.j:
      case P2.C:
      case P2.L:
        var g2 = this.ad;
        var h = this.bd;
        this.ad = g2 * a + h * c + e;
        this.bd = g2 * b + h * d + f2;
        g2 = this.jc;
        h = this.tc;
        this.jc = g2 * a + h * c + e;
        this.tc = g2 * b + h * d + f2;
        break;
      case P2.o:
        for (var k = this.figures.m, l2 = k.length, m2 = 0; m2 < l2; m2++) {
          var n2 = k[m2];
          g2 = n2.startX;
          h = n2.startY;
          n2.startX = g2 * a + h * c + e;
          n2.startY = g2 * b + h * d + f2;
          n2 = n2.segments.m;
          for (var p2 = n2.length, r2 = 0; r2 < p2; r2++) {
            var q2 = n2[r2];
            switch (q2.type) {
              case sd2:
              case Pd2:
                g2 = q2.endX;
                h = q2.endY;
                q2.endX = g2 * a + h * c + e;
                q2.endY = g2 * b + h * d + f2;
                break;
              case Qd2:
                g2 = q2.point1X;
                h = q2.point1Y;
                q2.point1X = g2 * a + h * c + e;
                q2.point1Y = g2 * b + h * d + f2;
                g2 = q2.point2X;
                h = q2.point2Y;
                q2.point2X = g2 * a + h * c + e;
                q2.point2Y = g2 * b + h * d + f2;
                g2 = q2.endX;
                h = q2.endY;
                q2.endX = g2 * a + h * c + e;
                q2.endY = g2 * b + h * d + f2;
                break;
              case Rd2:
                g2 = q2.point1X;
                h = q2.point1Y;
                q2.point1X = g2 * a + h * c + e;
                q2.point1Y = g2 * b + h * d + f2;
                g2 = q2.endX;
                h = q2.endY;
                q2.endX = g2 * a + h * c + e;
                q2.endY = g2 * b + h * d + f2;
                break;
              case Sd2:
                g2 = q2.centerX;
                h = q2.centerY;
                q2.centerX = g2 * a + h * c + e;
                q2.centerY = g2 * b + h * d + f2;
                b !== 0 && (g2 = 180 * Math.atan2(b, a) / Math.PI, 0 > g2 && (g2 += 360), q2.startAngle += g2);
                0 > a && (q2.startAngle = 180 - q2.startAngle, q2.sweepAngle = -q2.sweepAngle);
                0 > d && (q2.startAngle = -q2.startAngle, q2.sweepAngle = -q2.sweepAngle);
                q2.radiusX *= Math.sqrt(a * a + c * c);
                q2.radiusY !== void 0 && (q2.radiusY *= Math.sqrt(b * b + d * d));
                break;
              case Td2:
                g2 = q2.endX;
                h = q2.endY;
                q2.endX = g2 * a + h * c + e;
                q2.endY = g2 * b + h * d + f2;
                if (q2.radiusX === 0 || q2.radiusY === 0)
                  break;
                b !== 0 && (g2 = 180 * Math.atan2(b, a) / Math.PI, 0 > g2 && (g2 += 360), q2.xAxisRotation += g2);
                0 > a && (q2.xAxisRotation = 180 - q2.xAxisRotation, q2.isClockwiseArc = !q2.isClockwiseArc);
                0 > d && (q2.xAxisRotation = -q2.xAxisRotation, q2.isClockwiseArc = !q2.isClockwiseArc);
                q2.radiusX *= Math.sqrt(a * a + c * c);
                q2.radiusY *= Math.sqrt(b * b + d * d);
                break;
              default:
                C2("Unknown Segment type: " + q2.type);
            }
          }
        }
    }
    this.qa = true;
    return this;
  };
  t2.$ = function(a, b) {
    b === void 0 && (b = 0);
    var c = this.ad, d = this.bd, e = this.jc, f2 = this.tc;
    switch (this.type) {
      case P2.j:
        return M2.Ob(c, d, e, f2, b, a.x, a.y);
      case P2.C:
        var g2 = N2.allocAt(Math.min(c, e) - b, Math.min(d, f2) - b, Math.abs(e - c) + 2 * b, Math.abs(f2 - d) + 2 * b);
        a = g2.$(a);
        N2.free(g2);
        return a;
      case P2.L:
        g2 = Math.min(c, e) - b;
        var h = Math.min(d, f2) - b;
        c = (Math.abs(e - c) + 2 * b) / 2;
        b = (Math.abs(f2 - d) + 2 * b) / 2;
        if (0 >= c || 0 >= b)
          return false;
        g2 = a.x - (g2 + c);
        h = a.y - (h + b);
        return 1 >= g2 * g2 / (c * c) + h * h / (b * b);
      case P2.o:
        return Wd2(this, a, b, true, false);
      default:
        return false;
    }
  };
  function Wd2(a, b, c, d, e) {
    var f2 = b.x;
    b = b.y;
    for (var g2 = a.bounds.x - 20, h = 0, k, l2, m2, n2, p2 = a.figures.m, r2 = p2.length, q2 = 0; q2 < r2; q2++) {
      var u2 = p2[q2];
      if (u2.isFilled) {
        if (d && u2.$(f2, b, c))
          return true;
        var w = u2.segments;
        k = u2.startX;
        l2 = u2.startY;
        for (var v2 = k, z2 = l2, y2 = w.m, B2 = 0; B2 <= w.length; B2++) {
          var A2 = void 0;
          if (B2 !== w.length) {
            A2 = y2[B2];
            var E = A2.type;
            a = A2.endX;
            n2 = A2.endY;
          } else
            E = sd2, a = v2, n2 = z2;
          switch (E) {
            case Pd2:
              v2 = Xd2(f2, b, g2, b, k, l2, v2, z2);
              if (isNaN(v2))
                return true;
              h += v2;
              v2 = a;
              z2 = n2;
              break;
            case sd2:
              k = Xd2(f2, b, g2, b, k, l2, a, n2);
              if (isNaN(k))
                return true;
              h += k;
              break;
            case Qd2:
              m2 = M2.Pp(k, l2, A2.point1X, A2.point1Y, A2.point2X, A2.point2Y, a, n2, g2, b, f2, b, 0.5);
              h += m2;
              break;
            case Rd2:
              m2 = M2.Pp(k, l2, (k + 2 * A2.point1X) / 3, (l2 + 2 * A2.point1Y) / 3, (2 * A2.point1X + a) / 3, (2 * A2.point1Y + n2) / 3, a, n2, g2, b, f2, b, 0.5);
              h += m2;
              break;
            case Sd2:
            case Td2:
              E = A2.type === Sd2 ? Ud2(A2, u2) : Vd2(A2, u2, k, l2);
              var Q2 = E.length;
              if (Q2 === 0) {
                k = Xd2(f2, b, g2, b, k, l2, A2.type === Sd2 ? A2.centerX : A2.endX, A2.type === Sd2 ? A2.centerY : A2.endY);
                if (isNaN(k))
                  return true;
                h += k;
                break;
              }
              A2 = null;
              for (var J2 = 0; J2 < Q2; J2++) {
                A2 = E[J2];
                if (J2 === 0) {
                  m2 = Xd2(f2, b, g2, b, k, l2, A2[0], A2[1]);
                  if (isNaN(m2))
                    return true;
                  h += m2;
                }
                m2 = M2.Pp(A2[0], A2[1], A2[2], A2[3], A2[4], A2[5], A2[6], A2[7], g2, b, f2, b, 0.5);
                h += m2;
              }
              A2 !== null && (a = A2[6], n2 = A2[7]);
              break;
            default:
              C2("Unknown Segment type: " + A2.type);
          }
          k = a;
          l2 = n2;
        }
        if (h !== 0)
          return true;
        h = 0;
      } else if (u2.$(f2, b, e ? c : c + 2))
        return true;
    }
    return h !== 0;
  }
  function Xd2(a, b, c, d, e, f2, g2, h) {
    if (M2.Ob(e, f2, g2, h, 0.05, a, b))
      return NaN;
    var k = (a - c) * (f2 - h);
    if (k === 0)
      return 0;
    var l2 = ((a * d - b * c) * (e - g2) - (a - c) * (e * h - f2 * g2)) / k;
    b = (a * d - b * c) * (f2 - h) / k;
    if (l2 >= a)
      return 0;
    if ((e > g2 ? e - g2 : g2 - e) < (f2 > h ? f2 - h : h - f2))
      if (f2 < h) {
        if (b < f2 || b > h)
          return 0;
      } else {
        if (b < h || b > f2)
          return 0;
      }
    else if (e < g2) {
      if (l2 < e || l2 > g2)
        return 0;
    } else if (l2 < g2 || l2 > e)
      return 0;
    return 0 < k ? 1 : -1;
  }
  function Yd2(a, b, c, d) {
    a = a.figures.m;
    for (var e = a.length, f2 = 0; f2 < e; f2++)
      if (a[f2].$(b, c, d))
        return true;
    return false;
  }
  t2.av = function(a, b) {
    0 > a ? a = 0 : 1 < a && (a = 1);
    b === void 0 && (b = new K2());
    if (this.type === P2.j)
      return b.h(this.startX + a * (this.endX - this.startX), this.startY + a * (this.endY - this.startY)), b;
    for (var c = this.flattenedSegments, d = this.flattenedLengths, e = c.length, f2 = this.flattenedTotalLength * a, g2 = 0, h = 0; h < e; h++) {
      var k = d[h], l2 = k.length;
      for (a = 0; a < l2; a++) {
        var m2 = k[a];
        if (g2 + m2 >= f2)
          return d = f2 - g2, d = m2 === 0 ? 0 : d / m2, c = c[h], h = c[2 * a], e = c[2 * a + 1], b.h(h + (c[2 * a + 2] - h) * d, e + (c[2 * a + 3] - e) * d), b;
        g2 += m2;
      }
    }
    return b;
  };
  t2.Vx = function(a) {
    0 > a ? a = 0 : 1 < a && (a = 1);
    if (this.type === P2.j)
      return 180 * Math.atan2(this.endY - this.startY, this.endX - this.startX) / Math.PI;
    for (var b = this.flattenedSegments, c = this.flattenedLengths, d = b.length, e = this.flattenedTotalLength * a, f2 = 0, g2 = 0; g2 < d; g2++) {
      var h = c[g2], k = h.length;
      for (a = 0; a < k; a++) {
        var l2 = h[a];
        if (f2 + l2 >= e)
          return e = b[g2], b = e[2 * a], c = e[2 * a + 1], d = e[2 * a + 2], a = e[2 * a + 3], 1 > Math.abs(d - b) && 1 > Math.abs(a - c) ? 0 : 1 > Math.abs(d - b) ? 0 <= a - c ? 90 : 270 : 1 > Math.abs(a - c) ? 0 <= d - b ? 0 : 180 : 180 * Math.atan2(a - c, d - b) / Math.PI;
        f2 += l2;
      }
    }
    return NaN;
  };
  t2.bv = function(a, b) {
    0 > a ? a = 0 : 1 < a && (a = 1);
    b === void 0 && (b = []);
    b.length = 3;
    if (this.type === P2.j)
      return b[0] = this.startX + a * (this.endX - this.startX), b[1] = this.startY + a * (this.endY - this.startY), b[2] = 180 * Math.atan2(this.endY - this.startY, this.endX - this.startX) / Math.PI, b;
    for (var c = this.flattenedSegments, d = this.flattenedLengths, e = c.length, f2 = this.flattenedTotalLength * a, g2 = 0, h = 0; h < e; h++) {
      var k = d[h], l2 = k.length;
      for (a = 0; a < l2; a++) {
        var m2 = k[a];
        if (g2 + m2 >= f2)
          return d = f2 - g2, d = m2 === 0 ? 0 : d / m2, m2 = c[h], c = m2[2 * a], h = m2[2 * a + 1], e = m2[2 * a + 2], a = m2[2 * a + 3], b[0] = c + (e - c) * d, b[1] = h + (a - h) * d, b[2] = 1 > Math.abs(e - c) && 1 > Math.abs(a - h) ? 0 : 1 > Math.abs(e - c) ? 0 <= a - h ? 90 : 270 : 1 > Math.abs(a - h) ? 0 <= e - c ? 0 : 180 : 180 * Math.atan2(a - h, e - c) / Math.PI, b;
        g2 += m2;
      }
    }
    return b;
  };
  t2.Wx = function(a) {
    if (this.type === P2.j) {
      var b = this.startX, c = this.startY, d = this.endX, e = this.endY;
      if (b !== d || c !== e) {
        var f2 = a.x;
        a = a.y;
        if (b === d) {
          if (c < e) {
            var g2 = c;
            d = e;
          } else
            g2 = e, d = c;
          return a <= g2 ? g2 === c ? 0 : 1 : a >= d ? d === c ? 0 : 1 : Math.abs(a - c) / (d - g2);
        }
        if (c === e)
          return b < d ? g2 = b : (g2 = d, d = b), f2 <= g2 ? g2 === b ? 0 : 1 : f2 >= d ? d === b ? 0 : 1 : Math.abs(f2 - b) / (d - g2);
        g2 = (d - b) * (d - b) + (e - c) * (e - c);
        var h = K2.alloc();
        M2.Ih(b, c, d, e, f2, a, h);
        a = h.x;
        f2 = h.y;
        K2.free(h);
        return Math.sqrt(((a - b) * (a - b) + (f2 - c) * (f2 - c)) / g2);
      }
    } else if (this.type === P2.C) {
      g2 = this.startX;
      h = this.startY;
      var k = this.endX;
      e = this.endY;
      if (g2 !== k || h !== e) {
        b = k - g2;
        c = e - h;
        f2 = 2 * b + 2 * c;
        d = a.x;
        a = a.y;
        d = Math.min(Math.max(d, g2), k);
        a = Math.min(Math.max(a, h), e);
        g2 = Math.abs(d - g2);
        k = Math.abs(d - k);
        h = Math.abs(a - h);
        e = Math.abs(a - e);
        var l2 = Math.min(g2, k, h, e);
        if (l2 === h)
          return d / f2;
        if (l2 === k)
          return (b + a) / f2;
        if (l2 === e)
          return (2 * b + c - d) / f2;
        if (l2 === g2)
          return (2 * b + 2 * c - a) / f2;
      }
    } else {
      b = this.flattenedSegments;
      c = this.flattenedLengths;
      f2 = this.flattenedTotalLength;
      d = K2.alloc();
      e = Infinity;
      h = g2 = 0;
      k = b.length;
      for (var m2 = l2 = 0, n2 = 0; n2 < k; n2++)
        for (var p2 = b[n2], r2 = c[n2], q2 = p2.length, u2 = 0; u2 < q2; u2 += 2) {
          var w = p2[u2], v2 = p2[u2 + 1];
          if (u2 !== 0) {
            M2.Ih(l2, m2, w, v2, a.x, a.y, d);
            var z2 = (d.x - a.x) * (d.x - a.x) + (d.y - a.y) * (d.y - a.y);
            z2 < e && (e = z2, g2 = h, g2 += Math.sqrt((d.x - l2) * (d.x - l2) + (d.y - m2) * (d.y - m2)));
            h += r2[(u2 - 2) / 2];
          }
          l2 = w;
          m2 = v2;
        }
      K2.free(d);
      a = g2 / f2;
      return 0 > a ? 0 : 1 < a ? 1 : a;
    }
    return 0;
  };
  function Zd2(a) {
    if (a.yk === null) {
      var b = a.yk = [], c = a.Pm = [], d = [], e = [];
      if (a.type === P2.j)
        d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.endY), b.push(d), e.push(Math.sqrt((a.startX - a.endX) * (a.startX - a.endX) + (a.startY - a.endY) * (a.startY - a.endY))), c.push(e);
      else if (a.type === P2.C)
        d.push(a.startX), d.push(a.startY), d.push(a.endX), d.push(a.startY), d.push(a.endX), d.push(a.endY), d.push(a.startX), d.push(a.endY), d.push(a.startX), d.push(a.startY), b.push(d), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY - a.endY)), e.push(Math.abs(a.startX - a.endX)), e.push(Math.abs(a.startY - a.endY)), c.push(e);
      else if (a.type === P2.L) {
        var f2 = new $d2();
        f2.startX = a.endX;
        f2.startY = (a.startY + a.endY) / 2;
        var g2 = new ae2(Sd2);
        g2.startAngle = 0;
        g2.sweepAngle = 360;
        g2.centerX = (a.startX + a.endX) / 2;
        g2.centerY = (a.startY + a.endY) / 2;
        g2.radiusX = Math.abs(a.startX - a.endX) / 2;
        g2.radiusY = Math.abs(a.startY - a.endY) / 2;
        f2.add(g2);
        a = Ud2(g2, f2);
        e = a.length;
        if (e === 0)
          d.push(g2.centerX), d.push(g2.centerY);
        else {
          g2 = f2.startX;
          f2 = f2.startY;
          for (var h = 0; h < e; h++) {
            var k = a[h];
            M2.Fe(g2, f2, k[2], k[3], k[4], k[5], k[6], k[7], 0.5, d);
            g2 = k[6];
            f2 = k[7];
          }
        }
        b.push(d);
        c.push(be2(d));
      } else
        for (a = a.figures.iterator; a.next(); ) {
          e = a.value;
          d = [];
          d.push(e.startX);
          d.push(e.startY);
          g2 = e.startX;
          f2 = e.startY;
          h = g2;
          k = f2;
          for (var l2 = e.segments.m, m2 = l2.length, n2 = 0; n2 < m2; n2++) {
            var p2 = l2[n2];
            switch (p2.type) {
              case Pd2:
                4 <= d.length && (b.push(d), c.push(be2(d)));
                d = [];
                d.push(p2.endX);
                d.push(p2.endY);
                g2 = p2.endX;
                f2 = p2.endY;
                h = g2;
                k = f2;
                break;
              case sd2:
                d.push(p2.endX);
                d.push(p2.endY);
                g2 = p2.endX;
                f2 = p2.endY;
                break;
              case Qd2:
                M2.Fe(g2, f2, p2.point1X, p2.point1Y, p2.point2X, p2.point2Y, p2.endX, p2.endY, 0.5, d);
                g2 = p2.endX;
                f2 = p2.endY;
                break;
              case Rd2:
                M2.lq(g2, f2, p2.point1X, p2.point1Y, p2.endX, p2.endY, 0.5, d);
                g2 = p2.endX;
                f2 = p2.endY;
                break;
              case Sd2:
                var r2 = Ud2(p2, e), q2 = r2.length;
                if (q2 === 0) {
                  d.push(p2.centerX);
                  d.push(p2.centerY);
                  g2 = p2.centerX;
                  f2 = p2.centerY;
                  break;
                }
                for (var u2 = 0; u2 < q2; u2++) {
                  var w = r2[u2];
                  M2.Fe(g2, f2, w[2], w[3], w[4], w[5], w[6], w[7], 0.5, d);
                  g2 = w[6];
                  f2 = w[7];
                }
                break;
              case Td2:
                r2 = Vd2(p2, e, g2, f2);
                q2 = r2.length;
                u2 = p2.endX;
                w = p2.endY;
                if (q2 === 0) {
                  d.push(u2);
                  d.push(w);
                  g2 = u2;
                  f2 = w;
                  break;
                }
                for (u2 = 0; u2 < q2; u2++)
                  w = r2[u2], M2.Fe(g2, f2, w[2], w[3], w[4], w[5], w[6], w[7], 0.5, d), g2 = w[6], f2 = w[7];
                break;
              default:
                C2("Segment not of valid type: " + p2.type);
            }
            p2.isClosed && (d.push(h), d.push(k));
          }
          4 <= d.length && (b.push(d), c.push(be2(d)));
        }
    }
  }
  function be2(a) {
    for (var b = [], c = 0, d = 0, e = a.length, f2 = 0; f2 < e; f2 += 2) {
      var g2 = a[f2], h = a[f2 + 1];
      f2 !== 0 && b.push(Math.sqrt(wb2(c, d, g2, h)));
      c = g2;
      d = h;
    }
    return b;
  }
  t2.add = function(a) {
    this.ij.add(a);
    return this;
  };
  t2.Cm = function(a, b, c, d, e, f2, g2, h) {
    this.v && wa2(this);
    this.mf = new O2(a, b, e, f2).freeze();
    this.nf = new O2(c, d, g2, h).freeze();
    return this;
  };
  na2.Object.defineProperties(P2.prototype, { flattenedSegments: { get: function() {
    Zd2(this);
    return this.yk;
  } }, flattenedLengths: { get: function() {
    Zd2(this);
    return this.Pm;
  } }, flattenedTotalLength: { get: function() {
    var a = this.Qm;
    if (isNaN(a)) {
      if (this.type === P2.j) {
        a = Math.abs(this.endX - this.startX);
        var b = Math.abs(this.endY - this.startY);
        a = Math.sqrt(a * a + b * b);
      } else if (this.type === P2.C)
        a = 2 * Math.abs(this.endX - this.startX) + 2 * Math.abs(this.endY - this.startY);
      else {
        b = this.flattenedLengths;
        for (var c = b.length, d = a = 0; d < c; d++)
          for (var e = b[d], f2 = e.length, g2 = 0; g2 < f2; g2++)
            a += e[g2];
      }
      this.Qm = a;
    }
    return a;
  } }, type: { get: function() {
    return this.ha;
  }, set: function(a) {
    this.ha !== a && (this.v && wa2(this, a), this.ha = a, this.qa = true);
  } }, startX: { get: function() {
    return this.ad;
  }, set: function(a) {
    this.ad !== a && (this.v && wa2(this, a), this.ad = a, this.qa = true);
  } }, startY: { get: function() {
    return this.bd;
  }, set: function(a) {
    this.bd !== a && (this.v && wa2(this, a), this.bd = a, this.qa = true);
  } }, endX: { get: function() {
    return this.jc;
  }, set: function(a) {
    this.jc !== a && (this.v && wa2(this, a), this.jc = a, this.qa = true);
  } }, endY: { get: function() {
    return this.tc;
  }, set: function(a) {
    this.tc !== a && (this.v && wa2(this, a), this.tc = a, this.qa = true);
  } }, figures: { get: function() {
    return this.ij;
  }, set: function(a) {
    this.ij !== a && (this.v && wa2(this, a), this.ij = a, this.qa = true);
  } }, spot1: {
    get: function() {
      return this.mf;
    },
    set: function(a) {
      this.v && wa2(this, a);
      this.mf = a.I();
    }
  }, spot2: { get: function() {
    return this.nf;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.nf = a.I();
  } }, defaultStretch: { get: function() {
    return this.Of;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Of = a;
  } }, bounds: { get: function() {
    this.mv() && this.computeBounds();
    return this.Nq;
  } } });
  P2.prototype.setSpots = P2.prototype.Cm;
  P2.prototype.add = P2.prototype.add;
  P2.prototype.getFractionForPoint = P2.prototype.Wx;
  P2.prototype.getPointAndAngleAlongPath = P2.prototype.bv;
  P2.prototype.getAngleAlongPath = P2.prototype.Vx;
  P2.prototype.getPointAlongPath = P2.prototype.av;
  P2.prototype.containsPoint = P2.prototype.$;
  P2.prototype.transform = P2.prototype.transform;
  P2.prototype.rotate = P2.prototype.rotate;
  P2.prototype.scale = P2.prototype.scale;
  P2.prototype.offset = P2.prototype.offset;
  P2.prototype.normalize = P2.prototype.normalize;
  P2.prototype.computeBoundsWithoutOrigin = P2.prototype.Ix;
  P2.prototype.equalsApprox = P2.prototype.Ua;
  P2.className = "Geometry";
  P2.j = new D2(P2, "Line", 0);
  P2.C = new D2(P2, "Rectangle", 1);
  P2.L = new D2(P2, "Ellipse", 2);
  P2.o = new D2(P2, "Path", 3);
  P2.Rb = "UuBbMmZzLlHhVvCcSsQqTtAaFfXx";
  P2.className = "Geometry";
  P2.stringify = P2.wa;
  P2.fillPath = P2.Ma;
  P2.parse = P2.parse;
  P2.Line = P2.j;
  P2.Rectangle = P2.C;
  P2.Ellipse = P2.L;
  P2.Path = P2.o;
  function $d2(a, b, c, d) {
    Va2(this);
    this.Hw = null;
    this.v = false;
    c === void 0 && (c = true);
    this.kr = c;
    d === void 0 && (d = true);
    this.qr = d;
    a !== void 0 ? this.ad = a : this.ad = 0;
    b !== void 0 ? this.bd = b : this.bd = 0;
    this.El = new F2();
    this.Pr = this.El.Da;
    this.qa = true;
  }
  $d2.prototype.copy = function() {
    var a = new $d2();
    a.kr = this.kr;
    a.qr = this.qr;
    a.ad = this.ad;
    a.bd = this.bd;
    for (var b = this.El.m, c = b.length, d = a.El, e = 0; e < c; e++) {
      var f2 = b[e].copy();
      d.add(f2);
    }
    a.Pr = this.Pr;
    a.qa = this.qa;
    a.Hw = this.Hw;
    return a;
  };
  t2 = $d2.prototype;
  t2.Ua = function(a) {
    if (!(a instanceof $d2 && M2.w(this.startX, a.startX) && M2.w(this.startY, a.startY)))
      return false;
    var b = this.segments.m;
    a = a.segments.m;
    var c = b.length;
    if (c !== a.length)
      return false;
    for (var d = 0; d < c; d++)
      if (!b[d].Ua(a[d]))
        return false;
    return true;
  };
  t2.toString = function(a) {
    a === void 0 && (a = -1);
    var b = 0 > a ? "M" + this.startX.toString() + " " + this.startY.toString() : "M" + this.startX.toFixed(a) + " " + this.startY.toFixed(a);
    for (var c = this.segments.m, d = c.length, e = 0; e < d; e++)
      b += " " + c[e].toString(a);
    return b;
  };
  t2.freeze = function() {
    this.v = true;
    var a = this.segments;
    a.freeze();
    var b = a.m;
    a = a.length;
    for (var c = 0; c < a; c++)
      b[c].freeze();
    return this;
  };
  t2.ea = function() {
    this.v = false;
    var a = this.segments;
    a.ea();
    a = a.m;
    for (var b = a.length, c = 0; c < b; c++)
      a[c].ea();
    return this;
  };
  t2.mv = function() {
    if (this.qa)
      return true;
    var a = this.segments;
    if (this.Pr !== a.Da)
      return true;
    a = a.m;
    for (var b = a.length, c = 0; c < b; c++)
      if (a[c].qa)
        return true;
    return false;
  };
  t2.add = function(a) {
    this.El.add(a);
    return this;
  };
  t2.$ = function(a, b, c) {
    for (var d = this.startX, e = this.startY, f2 = d, g2 = e, h = this.segments.m, k = h.length, l2 = 0; l2 < k; l2++) {
      var m2 = h[l2];
      switch (m2.type) {
        case Pd2:
          f2 = m2.endX;
          g2 = m2.endY;
          d = m2.endX;
          e = m2.endY;
          break;
        case sd2:
          if (M2.Ob(d, e, m2.endX, m2.endY, c, a, b))
            return true;
          d = m2.endX;
          e = m2.endY;
          break;
        case Qd2:
          if (M2.js(d, e, m2.point1X, m2.point1Y, m2.point2X, m2.point2Y, m2.endX, m2.endY, 0.5, a, b, c))
            return true;
          d = m2.endX;
          e = m2.endY;
          break;
        case Rd2:
          if (M2.Cv(d, e, m2.point1X, m2.point1Y, m2.endX, m2.endY, 0.5, a, b, c))
            return true;
          d = m2.endX;
          e = m2.endY;
          break;
        case Sd2:
        case Td2:
          var n2 = m2.type === Sd2 ? Ud2(m2, this) : Vd2(m2, this, d, e), p2 = n2.length, r2 = m2.type === Sd2 ? m2.centerX : m2.endX, q2 = m2.type === Sd2 ? m2.centerY : m2.endY;
          if (p2 === 0) {
            if (M2.Ob(d, e, r2, q2, c, a, b))
              return true;
            d = r2;
            e = q2;
            break;
          }
          r2 = null;
          for (q2 = 0; q2 < p2; q2++)
            if (r2 = n2[q2], q2 === 0 && M2.Ob(d, e, r2[0], r2[1], c, a, b) || M2.js(r2[0], r2[1], r2[2], r2[3], r2[4], r2[5], r2[6], r2[7], 0.5, a, b, c))
              return true;
          r2 !== null && (d = r2[6], e = r2[7]);
          break;
        default:
          C2("Unknown Segment type: " + m2.type);
      }
      if (m2.isClosed && (d !== f2 || e !== g2) && M2.Ob(d, e, f2, g2, c, a, b))
        return true;
    }
    return false;
  };
  na2.Object.defineProperties($d2.prototype, { isFilled: { get: function() {
    return this.kr;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.kr = a;
  } }, isShadowed: { get: function() {
    return this.qr;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.qr = a;
  } }, startX: { get: function() {
    return this.ad;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.ad = a;
    this.qa = true;
  } }, startY: { get: function() {
    return this.bd;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.bd = a;
    this.qa = true;
  } }, segments: { get: function() {
    return this.El;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.El = a;
    this.qa = true;
  } } });
  $d2.prototype.add = $d2.prototype.add;
  $d2.prototype.equalsApprox = $d2.prototype.Ua;
  $d2.className = "PathFigure";
  function ae2(a, b, c, d, e, f2, g2, h) {
    Va2(this);
    this.v = false;
    a === void 0 && (a = sd2);
    this.ha = a;
    b !== void 0 ? this.jc = b : this.jc = 0;
    c !== void 0 ? this.tc = c : this.tc = 0;
    d === void 0 && (d = 0);
    e === void 0 && (e = 0);
    f2 === void 0 && (f2 = 0);
    g2 === void 0 && (g2 = 0);
    a === Td2 ? (a = f2 % 360, 0 > a && (a += 360), this.De = a, this.pi = 0, this.ri = Math.max(d, 0), this.gh = Math.max(e, 0), this.jl = typeof g2 === "boolean" ? g2 : typeof g2 === "number" ? !!g2 : false, this.Ek = !!h) : (this.De = d, this.pi = e, a === Sd2 && (f2 = Math.max(f2, 0)), this.ri = f2, typeof g2 === "number" ? (a === Sd2 && (g2 = Math.max(g2, 0)), this.gh = g2) : this.gh = 0, this.Ek = this.jl = false);
    this.oj = false;
    this.qa = true;
    this.Sd = null;
  }
  ae2.prototype.copy = function() {
    var a = new ae2();
    a.ha = this.ha;
    a.jc = this.jc;
    a.tc = this.tc;
    a.De = this.De;
    a.pi = this.pi;
    a.ri = this.ri;
    a.gh = this.gh;
    a.jl = this.jl;
    a.Ek = this.Ek;
    a.oj = this.oj;
    a.qa = this.qa;
    return a;
  };
  t2 = ae2.prototype;
  t2.Ua = function(a) {
    if (!(a instanceof ae2) || this.type !== a.type || this.isClosed !== a.isClosed)
      return false;
    switch (this.type) {
      case Pd2:
      case sd2:
        return M2.w(this.endX, a.endX) && M2.w(this.endY, a.endY);
      case Qd2:
        return M2.w(this.endX, a.endX) && M2.w(this.endY, a.endY) && M2.w(this.point1X, a.point1X) && M2.w(this.point1Y, a.point1Y) && M2.w(this.point2X, a.point2X) && M2.w(this.point2Y, a.point2Y);
      case Rd2:
        return M2.w(this.endX, a.endX) && M2.w(this.endY, a.endY) && M2.w(this.point1X, a.point1X) && M2.w(this.point1Y, a.point1Y);
      case Sd2:
        return M2.w(this.startAngle, a.startAngle) && M2.w(this.sweepAngle, a.sweepAngle) && M2.w(this.centerX, a.centerX) && M2.w(this.centerY, a.centerY) && M2.w(this.radiusX, a.radiusX) && M2.w(this.radiusY, a.radiusY);
      case Td2:
        return this.isClockwiseArc === a.isClockwiseArc && this.isLargeArc === a.isLargeArc && M2.w(this.xAxisRotation, a.xAxisRotation) && M2.w(this.endX, a.endX) && M2.w(this.endY, a.endY) && M2.w(this.radiusX, a.radiusX) && M2.w(this.radiusY, a.radiusY);
      default:
        return false;
    }
  };
  t2.gb = function(a) {
    a.classType === ae2 && (this.type = a);
  };
  t2.toString = function(a) {
    a === void 0 && (a = -1);
    switch (this.type) {
      case Pd2:
        a = 0 > a ? "M" + this.endX.toString() + " " + this.endY.toString() : "M" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
        break;
      case sd2:
        a = 0 > a ? "L" + this.endX.toString() + " " + this.endY.toString() : "L" + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
        break;
      case Qd2:
        a = 0 > a ? "C" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.point2X.toString() + " " + this.point2Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "C" + this.point1X.toFixed(a) + " " + this.point1Y.toFixed(a) + " " + this.point2X.toFixed(a) + " " + this.point2Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
        break;
      case Rd2:
        a = 0 > a ? "Q" + this.point1X.toString() + " " + this.point1Y.toString() + " " + this.endX.toString() + " " + this.endY.toString() : "Q" + this.point1X.toFixed(a) + " " + this.point1Y.toFixed(a) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
        break;
      case Sd2:
        a = 0 > a ? "B" + this.startAngle.toString() + " " + this.sweepAngle.toString() + " " + this.centerX.toString() + " " + this.centerY.toString() + " " + this.radiusX.toString() + " " + this.radiusY.toString() : "B" + this.startAngle.toFixed(a) + " " + this.sweepAngle.toFixed(a) + " " + this.centerX.toFixed(a) + " " + this.centerY.toFixed(a) + " " + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a);
        break;
      case Td2:
        a = 0 > a ? "A" + this.radiusX.toString() + " " + this.radiusY.toString() + " " + this.xAxisRotation.toString() + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toString() + " " + this.endY.toString() : "A" + this.radiusX.toFixed(a) + " " + this.radiusY.toFixed(a) + " " + this.xAxisRotation.toFixed(a) + " " + (this.isLargeArc ? 1 : 0) + " " + (this.isClockwiseArc ? 1 : 0) + " " + this.endX.toFixed(a) + " " + this.endY.toFixed(a);
        break;
      default:
        a = this.type.toString();
    }
    return a + (this.oj ? "z" : "");
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    this.v = false;
    return this;
  };
  t2.close = function() {
    this.oj = true;
    return this;
  };
  function Ud2(a, b) {
    if (a.Sd !== null && b.qa === false)
      return a.Sd;
    var c = a.radiusX, d = a.radiusY;
    d === void 0 && (d = c);
    if (c === 0 || d === 0)
      return a.Sd = [], a.Sd;
    b = a.De;
    var e = a.pi, f2 = M2.Jx(0, 0, c < d ? c : d, a.startAngle, a.startAngle + a.sweepAngle, false);
    if (c !== d) {
      var g2 = od2.alloc();
      g2.reset();
      c < d ? g2.scale(1, d / c) : g2.scale(c / d, 1);
      P2.Ba(f2, g2);
      od2.free(g2);
    }
    c = f2.length;
    for (d = 0; d < c; d++)
      g2 = f2[d], g2[0] += b, g2[1] += e, g2[2] += b, g2[3] += e, g2[4] += b, g2[5] += e, g2[6] += b, g2[7] += e;
    a.Sd = f2;
    return a.Sd;
  }
  function Vd2(a, b, c, d) {
    function e(a2, b2, c2, d2) {
      return (a2 * d2 < b2 * c2 ? -1 : 1) * Math.acos((a2 * c2 + b2 * d2) / (Math.sqrt(a2 * a2 + b2 * b2) * Math.sqrt(c2 * c2 + d2 * d2)));
    }
    if (a.Sd !== null && b.qa === false)
      return a.Sd;
    if (a.radiusX === 0 || a.radiusY === 0)
      return a.Sd = [], a.Sd;
    b = a.ri;
    var f2 = a.gh;
    b === 0 && (b = 1e-4);
    f2 === 0 && (f2 = 1e-4);
    var g2 = Math.PI / 180 * a.De, h = a.jl, k = a.Ek, l2 = a.jc, m2 = a.tc, n2 = Math.cos(g2), p2 = Math.sin(g2), r2 = n2 * (c - l2) / 2 + p2 * (d - m2) / 2;
    g2 = -p2 * (c - l2) / 2 + n2 * (d - m2) / 2;
    var q2 = r2 * r2 / (b * b) + g2 * g2 / (f2 * f2);
    1 < q2 && (b *= Math.sqrt(q2), f2 *= Math.sqrt(q2));
    q2 = (h === k ? -1 : 1) * Math.sqrt((b * b * f2 * f2 - b * b * g2 * g2 - f2 * f2 * r2 * r2) / (b * b * g2 * g2 + f2 * f2 * r2 * r2));
    isNaN(q2) && (q2 = 0);
    h = q2 * b * g2 / f2;
    q2 = q2 * -f2 * r2 / b;
    isNaN(h) && (h = 0);
    isNaN(q2) && (q2 = 0);
    c = (c + l2) / 2 + n2 * h - p2 * q2;
    d = (d + m2) / 2 + p2 * h + n2 * q2;
    m2 = e(1, 0, (r2 - h) / b, (g2 - q2) / f2);
    n2 = (r2 - h) / b;
    l2 = (g2 - q2) / f2;
    r2 = (-r2 - h) / b;
    h = (-g2 - q2) / f2;
    g2 = e(n2, l2, r2, h);
    r2 = (n2 * r2 + l2 * h) / (Math.sqrt(n2 * n2 + l2 * l2) * Math.sqrt(r2 * r2 + h * h));
    -1 >= r2 ? g2 = Math.PI : 1 <= r2 && (g2 = 0);
    !k && 0 < g2 && (g2 -= 2 * Math.PI);
    k && 0 > g2 && (g2 += 2 * Math.PI);
    k = b > f2 ? 1 : b / f2;
    r2 = b > f2 ? f2 / b : 1;
    b = M2.Jx(0, 0, b > f2 ? b : f2, m2, m2 + g2, true);
    f2 = od2.alloc();
    f2.reset();
    f2.translate(c, d);
    f2.rotate(a.De, 0, 0);
    f2.scale(k, r2);
    P2.Ba(b, f2);
    od2.free(f2);
    a.Sd = b;
    return a.Sd;
  }
  na2.Object.defineProperties(ae2.prototype, { isClosed: { get: function() {
    return this.oj;
  }, set: function(a) {
    this.oj !== a && (this.oj = a, this.qa = true);
  } }, type: { get: function() {
    return this.ha;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.ha = a;
    this.qa = true;
  } }, endX: { get: function() {
    return this.jc;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.jc = a;
    this.qa = true;
  } }, endY: { get: function() {
    return this.tc;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.tc = a;
    this.qa = true;
  } }, point1X: { get: function() {
    return this.De;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.De = a;
    this.qa = true;
  } }, point1Y: { get: function() {
    return this.pi;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.pi = a;
    this.qa = true;
  } }, point2X: { get: function() {
    return this.ri;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.ri = a;
    this.qa = true;
  } }, point2Y: { get: function() {
    return this.gh;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.gh = a;
    this.qa = true;
  } }, centerX: { get: function() {
    return this.De;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.De = a;
    this.qa = true;
  } }, centerY: { get: function() {
    return this.pi;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.pi = a;
    this.qa = true;
  } }, radiusX: { get: function() {
    return this.ri;
  }, set: function(a) {
    0 > a && xa2(a, ">= zero", ae2, "radiusX");
    this.v && wa2(this, a);
    this.ri = a;
    this.qa = true;
  } }, radiusY: {
    get: function() {
      return this.gh;
    },
    set: function(a) {
      0 > a && xa2(a, ">= zero", ae2, "radiusY");
      this.v && wa2(this, a);
      this.gh = a;
      this.qa = true;
    }
  }, startAngle: { get: function() {
    return this.jc;
  }, set: function(a) {
    this.jc !== a && (this.v && wa2(this, a), a %= 360, 0 > a && (a += 360), this.jc = a, this.qa = true);
  } }, sweepAngle: { get: function() {
    return this.tc;
  }, set: function(a) {
    this.v && wa2(this, a);
    360 < a && (a = 360);
    -360 > a && (a = -360);
    this.tc = a;
    this.qa = true;
  } }, isClockwiseArc: { get: function() {
    return this.Ek;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Ek = a;
    this.qa = true;
  } }, isLargeArc: { get: function() {
    return this.jl;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.jl = a;
    this.qa = true;
  } }, xAxisRotation: { get: function() {
    return this.De;
  }, set: function(a) {
    a %= 360;
    0 > a && (a += 360);
    this.v && wa2(this, a);
    this.De = a;
    this.qa = true;
  } } });
  ae2.prototype.equalsApprox = ae2.prototype.Ua;
  var Pd2 = new D2(ae2, "Move", 0), sd2 = new D2(ae2, "Line", 1), Qd2 = new D2(ae2, "Bezier", 2), Rd2 = new D2(ae2, "QuadraticBezier", 3), Sd2 = new D2(ae2, "Arc", 4), Td2 = new D2(ae2, "SvgArc", 4);
  ae2.className = "PathSegment";
  ae2.Move = Pd2;
  ae2.Line = sd2;
  ae2.Bezier = Qd2;
  ae2.QuadraticBezier = Rd2;
  ae2.Arc = Sd2;
  ae2.SvgArc = Td2;
  function ce2() {
    this.D = null;
    this.wu = new K2(0, 0).freeze();
    this.Gt = new K2(0, 0).freeze();
    this.Gq = this.yr = 0;
    this.Hq = 1;
    this.di = "";
    this.es = this.Vq = false;
    this.Tq = this.Jq = 0;
    this.yg = this.hr = this.nr = false;
    this.Zq = null;
    this.cs = 0;
    this.od = this.bs = null;
  }
  ce2.prototype.copy = function() {
    var a = new ce2();
    return this.clone(a);
  };
  ce2.prototype.clone = function(a) {
    a.D = this.D;
    a.wu.assign(this.viewPoint);
    a.Gt.assign(this.documentPoint);
    a.yr = this.yr;
    a.Gq = this.Gq;
    a.Hq = this.Hq;
    a.di = this.di;
    a.Vq = this.Vq;
    a.es = this.es;
    a.Jq = this.Jq;
    a.Tq = this.Tq;
    a.nr = this.nr;
    a.hr = this.hr;
    a.yg = this.yg;
    a.Zq = this.Zq;
    a.cs = this.cs;
    a.bs = this.bs;
    a.od = this.od;
    return a;
  };
  ce2.prototype.toString = function() {
    var a = "^";
    this.modifiers !== 0 && (a += "M:" + this.modifiers);
    this.button !== 0 && (a += "B:" + this.button);
    this.key !== "" && (a += "K:" + this.key);
    this.clickCount !== 0 && (a += "C:" + this.clickCount);
    this.delta !== 0 && (a += "D:" + this.delta);
    this.handled && (a += "h");
    this.bubbles && (a += "b");
    this.documentPoint !== null && (a += "@" + this.documentPoint.toString());
    return a;
  };
  ce2.prototype.$p = function(a, b) {
    var c = this.diagram;
    if (c === null)
      return b;
    de2(c, this.event, a, b);
    return b;
  };
  ce2.prototype.Zz = function(a, b) {
    var c = this.diagram;
    if (c === null)
      return b;
    de2(c, this.event, a, b);
    b.assign(c.Ys(b));
    return b;
  };
  na2.Object.defineProperties(ce2.prototype, { diagram: { get: function() {
    return this.D;
  }, set: function(a) {
    this.D = a;
  } }, viewPoint: { get: function() {
    return this.wu;
  }, set: function(a) {
    this.wu.assign(a);
  } }, documentPoint: { get: function() {
    return this.Gt;
  }, set: function(a) {
    this.Gt.assign(a);
  } }, modifiers: { get: function() {
    return this.yr;
  }, set: function(a) {
    this.yr = a;
  } }, button: {
    get: function() {
      return this.Gq;
    },
    set: function(a) {
      this.Gq = a;
      if (this.event === null)
        switch (a) {
          case 0:
            this.buttons = 1;
            break;
          case 1:
            this.buttons = 4;
            break;
          case 2:
            this.buttons = 2;
        }
    }
  }, buttons: { get: function() {
    return this.Hq;
  }, set: function(a) {
    this.Hq = a;
  } }, key: { get: function() {
    return this.di;
  }, set: function(a) {
    this.di = a;
  } }, down: { get: function() {
    return this.Vq;
  }, set: function(a) {
    this.Vq = a;
  } }, up: { get: function() {
    return this.es;
  }, set: function(a) {
    this.es = a;
  } }, clickCount: { get: function() {
    return this.Jq;
  }, set: function(a) {
    this.Jq = a;
  } }, delta: { get: function() {
    return this.Tq;
  }, set: function(a) {
    this.Tq = a;
  } }, isMultiTouch: { get: function() {
    return this.nr;
  }, set: function(a) {
    this.nr = a;
  } }, handled: { get: function() {
    return this.hr;
  }, set: function(a) {
    this.hr = a;
  } }, bubbles: { get: function() {
    return this.yg;
  }, set: function(a) {
    this.yg = a;
  } }, event: {
    get: function() {
      return this.Zq;
    },
    set: function(a) {
      this.Zq = a;
    }
  }, isTouchEvent: { get: function() {
    var a = x2.TouchEvent, b = this.event;
    return a && b instanceof a ? true : (a = x2.PointerEvent) && b instanceof a && (b.pointerType === "touch" || b.pointerType === "pen");
  } }, timestamp: { get: function() {
    return this.cs;
  }, set: function(a) {
    this.cs = a;
  } }, targetDiagram: { get: function() {
    return this.bs;
  }, set: function(a) {
    this.bs = a;
  } }, targetObject: {
    get: function() {
      return this.od;
    },
    set: function(a) {
      this.od = a;
    }
  }, control: { get: function() {
    return (this.modifiers & 1) !== 0;
  }, set: function(a) {
    this.modifiers = a ? this.modifiers | 1 : this.modifiers & -2;
  } }, shift: { get: function() {
    return (this.modifiers & 4) !== 0;
  }, set: function(a) {
    this.modifiers = a ? this.modifiers | 4 : this.modifiers & -5;
  } }, alt: { get: function() {
    return (this.modifiers & 2) !== 0;
  }, set: function(a) {
    this.modifiers = a ? this.modifiers | 2 : this.modifiers & -3;
  } }, meta: { get: function() {
    return (this.modifiers & 8) !== 0;
  }, set: function(a) {
    this.modifiers = a ? this.modifiers | 8 : this.modifiers & -9;
  } }, left: { get: function() {
    var a = this.event;
    return a === null || a.type !== "mousedown" && a.type !== "mouseup" && a.type !== "pointerdown" && a.type !== "pointerup" ? (this.buttons & 1) !== 0 : this.button === 0;
  }, set: function(a) {
    this.buttons = a ? this.buttons | 1 : this.buttons & -2;
  } }, right: { get: function() {
    var a = this.event;
    return a === null || a.type !== "mousedown" && a.type !== "mouseup" && a.type !== "pointerdown" && a.type !== "pointerup" ? (this.buttons & 2) !== 0 : this.button === 2;
  }, set: function(a) {
    this.buttons = a ? this.buttons | 2 : this.buttons & -3;
  } }, middle: { get: function() {
    var a = this.event;
    return a === null || a.type !== "mousedown" && a.type !== "mouseup" && a.type !== "pointerdown" && a.type !== "pointerup" ? (this.buttons & 4) !== 0 : this.button === 1;
  }, set: function(a) {
    this.buttons = a ? this.buttons | 4 : this.buttons & -5;
  } } });
  ce2.prototype.getMultiTouchDocumentPoint = ce2.prototype.Zz;
  ce2.prototype.getMultiTouchViewPoint = ce2.prototype.$p;
  ce2.className = "InputEvent";
  function ee2() {
    this.D = null;
    this.na = "";
    this.Gr = this.Xr = null;
  }
  ee2.prototype.copy = function() {
    var a = new ee2();
    a.D = this.D;
    a.na = this.na;
    a.Xr = this.Xr;
    a.Gr = this.Gr;
    return a;
  };
  ee2.prototype.toString = function() {
    var a = "*" + this.name;
    this.subject !== null && (a += ":" + this.subject.toString());
    this.parameter !== null && (a += "(" + this.parameter.toString() + ")");
    return a;
  };
  na2.Object.defineProperties(ee2.prototype, { diagram: { get: function() {
    return this.D;
  }, set: function(a) {
    this.D = a;
  } }, name: { get: function() {
    return this.na;
  }, set: function(a) {
    this.na = a;
  } }, subject: { get: function() {
    return this.Xr;
  }, set: function(a) {
    this.Xr = a;
  } }, parameter: { get: function() {
    return this.Gr;
  }, set: function(a) {
    this.Gr = a;
  } } });
  ee2.className = "DiagramEvent";
  function fe2() {
    this.Wm = ge2;
    this.ff = this.xr = "";
    this.Ao = this.Bo = this.Go = this.Ho = this.Fo = this.D = this.dc = null;
  }
  fe2.prototype.clear = function() {
    this.Ao = this.Bo = this.Go = this.Ho = this.Fo = this.D = this.dc = null;
  };
  fe2.prototype.copy = function() {
    var a = new fe2();
    a.Wm = this.Wm;
    a.xr = this.xr;
    a.ff = this.ff;
    a.dc = this.dc;
    a.D = this.D;
    a.Fo = this.Fo;
    var b = this.Ho;
    a.Ho = za2(b) && typeof b.I === "function" ? b.I() : b;
    b = this.Go;
    a.Go = za2(b) && typeof b.I === "function" ? b.I() : b;
    b = this.Bo;
    a.Bo = za2(b) && typeof b.I === "function" ? b.I() : b;
    b = this.Ao;
    a.Ao = za2(b) && typeof b.I === "function" ? b.I() : b;
    return a;
  };
  fe2.prototype.gb = function(a) {
    a.classType === fe2 && (this.change = a);
  };
  fe2.prototype.toString = function() {
    var a = "";
    a = this.change === oe2 ? a + "* " : this.change === ge2 ? a + (this.model !== null ? "!m" : "!d") : a + ((this.model !== null ? "!m" : "!d") + this.change);
    this.propertyName && typeof this.propertyName === "string" && (a += " " + this.propertyName);
    this.modelChange && this.modelChange !== this.propertyName && (a += " " + this.modelChange);
    a += ": ";
    this.change === oe2 ? this.oldValue !== null && (a += " " + this.oldValue) : (this.object !== null && (a += Ka2(this.object)), this.oldValue !== null && (a += "  old: " + Ka2(this.oldValue)), this.oldParam !== null && (a += " " + this.oldParam), this.newValue !== null && (a += "  new: " + Ka2(this.newValue)), this.newParam !== null && (a += " " + this.newParam));
    return a;
  };
  fe2.prototype.H = function(a) {
    return a ? this.oldValue : this.newValue;
  };
  fe2.prototype.aA = function(a) {
    return a ? this.oldParam : this.newParam;
  };
  fe2.prototype.canUndo = function() {
    return this.model !== null || this.diagram !== null ? true : false;
  };
  fe2.prototype.undo = function() {
    this.canUndo() && (this.model !== null ? this.model.changeState(this, true) : this.diagram !== null && this.diagram.changeState(this, true));
  };
  fe2.prototype.canRedo = function() {
    return this.model !== null || this.diagram !== null ? true : false;
  };
  fe2.prototype.redo = function() {
    this.canRedo() && (this.model !== null ? this.model.changeState(this, false) : this.diagram !== null && this.diagram.changeState(this, false));
  };
  na2.Object.defineProperties(fe2.prototype, {
    model: { get: function() {
      return this.dc;
    }, set: function(a) {
      this.dc = a;
    } },
    diagram: { get: function() {
      return this.D;
    }, set: function(a) {
      this.D = a;
    } },
    change: { get: function() {
      return this.Wm;
    }, set: function(a) {
      this.Wm = a;
    } },
    modelChange: { get: function() {
      return this.xr;
    }, set: function(a) {
      this.xr = a;
    } },
    propertyName: {
      get: function() {
        return this.ff;
      },
      set: function(a) {
        this.ff = a;
      }
    },
    isTransactionFinished: { get: function() {
      return this.Wm === oe2 && (this.ff === "CommittedTransaction" || this.ff === "FinishedUndo" || this.ff === "FinishedRedo");
    } },
    object: { get: function() {
      return this.Fo;
    }, set: function(a) {
      this.Fo = a;
    } },
    oldValue: { get: function() {
      return this.Ho;
    }, set: function(a) {
      this.Ho = a;
    } },
    oldParam: { get: function() {
      return this.Go;
    }, set: function(a) {
      this.Go = a;
    } },
    newValue: { get: function() {
      return this.Bo;
    }, set: function(a) {
      this.Bo = a;
    } },
    newParam: { get: function() {
      return this.Ao;
    }, set: function(a) {
      this.Ao = a;
    } }
  });
  fe2.prototype.redo = fe2.prototype.redo;
  fe2.prototype.canRedo = fe2.prototype.canRedo;
  fe2.prototype.undo = fe2.prototype.undo;
  fe2.prototype.canUndo = fe2.prototype.canUndo;
  fe2.prototype.getParam = fe2.prototype.aA;
  fe2.prototype.getValue = fe2.prototype.H;
  fe2.prototype.clear = fe2.prototype.clear;
  var oe2 = new D2(fe2, "Transaction", -1), ge2 = new D2(fe2, "Property", 0), pe2 = new D2(fe2, "Insert", 1), qe2 = new D2(fe2, "Remove", 2);
  fe2.className = "ChangedEvent";
  fe2.Transaction = oe2;
  fe2.Property = ge2;
  fe2.Insert = pe2;
  fe2.Remove = qe2;
  function re2() {
    this.o = new F2().freeze();
    this.na = "";
    this.j = false;
  }
  re2.prototype.toString = function(a) {
    var b = "Transaction: " + this.name + " " + this.changes.count.toString() + (this.isComplete ? "" : ", incomplete");
    if (a !== void 0 && 0 < a) {
      a = this.changes.count;
      for (var c = 0; c < a; c++) {
        var d = this.changes.J(c);
        d !== null && (b += "\n  " + d.toString());
      }
    }
    return b;
  };
  re2.prototype.clear = function() {
    var a = this.changes;
    a.ea();
    for (var b = a.count - 1; 0 <= b; b--) {
      var c = a.J(b);
      c !== null && c.clear();
    }
    a.clear();
    a.freeze();
  };
  re2.prototype.canUndo = function() {
    return this.isComplete;
  };
  re2.prototype.undo = function() {
    if (this.canUndo())
      for (var a = this.changes.count - 1; 0 <= a; a--) {
        var b = this.changes.J(a);
        b !== null && b.undo();
      }
  };
  re2.prototype.canRedo = function() {
    return this.isComplete;
  };
  re2.prototype.redo = function() {
    if (this.canRedo())
      for (var a = this.changes.count, b = 0; b < a; b++) {
        var c = this.changes.J(b);
        c !== null && c.redo();
      }
  };
  re2.prototype.Ns = function() {
    if (this.isComplete) {
      var a = this.changes;
      a.ea();
      for (var b = new H2(), c = 0; c < a.count; c++) {
        var d = a.J(c);
        if (d !== null && d.change === ge2 && d.object) {
          var e = b.get(d.object);
          e || (e = new H2(), b.set(d.object, e));
          var f2 = e.get(d.propertyName);
          f2 === null ? e.set(d.propertyName, -1) : (0 < f2 && a.Oc(f2, null), e.set(d.propertyName, c));
        }
      }
      for (c = b = 0; c < a.count; c++)
        d = a.J(c), d !== null && (c > b && a.Oc(b, d), b++);
      for (; a.length > b; )
        a.pop();
      a.freeze();
    }
  };
  na2.Object.defineProperties(re2.prototype, { changes: { get: function() {
    return this.o;
  } }, name: { get: function() {
    return this.na;
  }, set: function(a) {
    this.na = a;
  } }, isComplete: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } } });
  re2.prototype.optimize = re2.prototype.Ns;
  re2.prototype.redo = re2.prototype.redo;
  re2.prototype.canRedo = re2.prototype.canRedo;
  re2.prototype.undo = re2.prototype.undo;
  re2.prototype.canUndo = re2.prototype.canUndo;
  re2.prototype.clear = re2.prototype.clear;
  re2.className = "Transaction";
  function se2() {
    this.au = new G2();
    this.vd = false;
    this.C = new F2().freeze();
    this.se = -1;
    this.o = 999;
    this.ue = false;
    this.Rq = null;
    this.xi = 0;
    this.j = false;
    this.ze = new F2().freeze();
    this.sl = new F2();
    this.Ot = true;
    this.Rt = this.lr = this.Ut = this.Tt = false;
  }
  se2.prototype.toString = function(a) {
    var b = "UndoManager " + this.historyIndex + "<" + this.history.count + "<=" + this.maxHistoryLength;
    b += "[";
    for (var c = this.nestedTransactionNames.count, d = 0; d < c; d++)
      0 < d && (b += " "), b += this.nestedTransactionNames.J(d);
    b += "]";
    if (a !== void 0 && 0 < a)
      for (c = this.history.count, d = 0; d < c; d++)
        b += "\n " + this.history.J(d).toString(a - 1);
    return b;
  };
  se2.prototype.clear = function() {
    var a = this.history;
    a.ea();
    for (var b = a.count - 1; 0 <= b; b--) {
      var c = a.J(b);
      c !== null && c.clear();
    }
    a.clear();
    this.se = -1;
    a.freeze();
    this.ue = false;
    this.Rq = null;
    this.xi = 0;
    this.ze.ea();
    this.ze.clear();
    this.ze.freeze();
    this.sl.clear();
    this.Rt = this.lr = this.Ut = this.Tt = false;
  };
  se2.prototype.copyProperties = function(a) {
    this.isEnabled = a.isEnabled;
    this.maxHistoryLength = a.maxHistoryLength;
    this.checksTransactionLevel = a.checksTransactionLevel;
  };
  t2 = se2.prototype;
  t2.yx = function(a) {
    this.au.add(a);
  };
  t2.uy = function(a) {
    this.au.remove(a);
  };
  t2.xa = function(a) {
    a === void 0 && (a = "");
    a === null && (a = "");
    if (this.isUndoingRedoing)
      return false;
    this.Ot === true && (this.Ot = false, this.xi++, this.isInternalTransaction || this.Eb("StartingFirstTransaction", a, this.currentTransaction), 0 < this.xi && this.xi--);
    this.isEnabled && (this.ze.ea(), this.ze.add(a), this.ze.freeze(), this.currentTransaction === null ? this.sl.add(0) : this.sl.add(this.currentTransaction.changes.count));
    this.xi++;
    var b = this.transactionLevel === 1;
    b && (this.isInternalTransaction || this.Eb("StartedTransaction", a, this.currentTransaction));
    return b;
  };
  t2.Xa = function(a) {
    a === void 0 && (a = "");
    return te2(this, true, a);
  };
  t2.Hf = function() {
    return te2(this, false, "");
  };
  function te2(a, b, c) {
    if (a.isUndoingRedoing)
      return false;
    a.checksTransactionLevel && 1 > a.transactionLevel && ya2("Ending transaction without having started a transaction: " + c);
    var d = a.transactionLevel === 1, e = a.currentTransaction;
    d && b && (a.isInternalTransaction || a.Eb("CommittingTransaction", c, e));
    var f2 = 0;
    if (0 < a.transactionLevel && (a.xi--, a.isEnabled)) {
      var g2 = a.ze.count;
      0 < g2 && (c === "" && (c = a.ze.J(0)), a.ze.ea(), a.ze.eb(g2 - 1), a.ze.freeze());
      g2 = a.sl.count;
      0 < g2 && (f2 = a.sl.J(g2 - 1), a.sl.eb(g2 - 1));
    }
    if (d) {
      if (b) {
        a.lr = false;
        e === null && c !== "" && (e = a.currentTransaction);
        if (a.isEnabled && e !== null) {
          e.isComplete || (e.isComplete = true, e.name = c);
          b = a.history;
          b.ea();
          for (d = b.count - 1; d > a.historyIndex; d--)
            f2 = b.J(d), f2 !== null && f2.clear(), b.eb(d), a.lr = true;
          d = a.maxHistoryLength;
          0 <= d && (d === 0 ? b.clear() : b.count >= d && (f2 = b.J(0), f2 !== null && f2.clear(), b.eb(0), a.se--));
          d === 0 || b.count !== 0 && b.get(b.count - 1) === e || (b.add(e), a.se++);
          b.freeze();
        }
        a.isInternalTransaction || a.Eb("CommittedTransaction", c, e);
      } else {
        a.ue = true;
        try {
          a.isEnabled && e !== null && (e.isComplete = true, e.undo());
        } finally {
          a.isInternalTransaction || a.Eb("RolledBackTransaction", c, e), a.ue = false;
        }
        e !== null && e.clear();
      }
      a.Rq = null;
      a.isPendingClear && a.clear();
      a.isPendingClear = false;
      a.isPendingUnmodified = false;
      return true;
    }
    if (a.isEnabled && !b && e !== null) {
      a = f2;
      c = e.changes;
      for (e = c.count - 1; e >= a; e--)
        b = c.J(e), b !== null && b.undo(), c.ea(), c.eb(e);
      c.freeze();
    }
    return false;
  }
  se2.prototype.canUndo = function() {
    if (!this.isEnabled || 0 < this.transactionLevel)
      return false;
    var a = this.transactionToUndo;
    return a !== null && a.canUndo() ? true : false;
  };
  se2.prototype.undo = function() {
    if (this.canUndo()) {
      var a = this.transactionToUndo;
      try {
        this.ue = true, this.Eb("StartingUndo", "Undo", a), this.se--, a.undo();
      } catch (b) {
        ya2("undo error: " + b.toString());
      } finally {
        this.Eb("FinishedUndo", "Undo", a), this.ue = false;
      }
    }
  };
  se2.prototype.canRedo = function() {
    if (!this.isEnabled || 0 < this.transactionLevel)
      return false;
    var a = this.transactionToRedo;
    return a !== null && a.canRedo() ? true : false;
  };
  se2.prototype.redo = function() {
    if (this.canRedo()) {
      var a = this.transactionToRedo;
      try {
        this.ue = true, this.Eb("StartingRedo", "Redo", a), this.se++, a.redo();
      } catch (b) {
        ya2("redo error: " + b.toString());
      } finally {
        this.Eb("FinishedRedo", "Redo", a), this.ue = false;
      }
    }
  };
  se2.prototype.Eb = function(a, b, c) {
    c === void 0 && (c = null);
    var d = new fe2();
    d.change = oe2;
    d.propertyName = a;
    d.object = c;
    d.oldValue = b;
    for (a = this.models; a.next(); )
      b = a.value, d.model = b, b.ks(d);
  };
  se2.prototype.fv = function(a) {
    if (this.isEnabled && !this.isUndoingRedoing && !this.skipsEvent(a)) {
      var b = this.currentTransaction;
      b === null && (this.Rq = b = new re2());
      var c = a.copy();
      b = b.changes;
      b.ea();
      b.add(c);
      b.freeze();
      this.checksTransactionLevel && 0 >= this.transactionLevel && !this.Ot && (a = a.diagram, a !== null && a.Oi === false || ya2("Change not within a transaction: " + c.toString()));
    }
  };
  se2.prototype.skipsEvent = function(a) {
    if (a === null || 0 > a.change.value)
      return true;
    a = a.object;
    if (a === null)
      return false;
    if (a.layer !== void 0) {
      if (a = a.layer, a !== null && a.isTemporary)
        return true;
    } else if (a.isTemporary)
      return true;
    return false;
  };
  na2.Object.defineProperties(se2.prototype, { models: { get: function() {
    return this.au.iterator;
  } }, isEnabled: { get: function() {
    return this.vd;
  }, set: function(a) {
    this.vd = a;
  } }, transactionToUndo: { get: function() {
    return 0 <= this.historyIndex && this.historyIndex <= this.history.count - 1 ? this.history.J(this.historyIndex) : null;
  } }, transactionToRedo: { get: function() {
    return this.historyIndex < this.history.count - 1 ? this.history.J(this.historyIndex + 1) : null;
  } }, isUndoingRedoing: { get: function() {
    return this.ue;
  } }, history: { get: function() {
    return this.C;
  } }, maxHistoryLength: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, historyIndex: { get: function() {
    return this.se;
  } }, currentTransaction: { get: function() {
    return this.Rq;
  } }, transactionLevel: {
    get: function() {
      return this.xi;
    }
  }, isInTransaction: { get: function() {
    return 0 < this.xi;
  } }, checksTransactionLevel: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } }, nestedTransactionNames: { get: function() {
    return this.ze;
  } }, isPendingClear: { get: function() {
    return this.Tt;
  }, set: function(a) {
    this.Tt = a;
  } }, isPendingUnmodified: { get: function() {
    return this.Ut;
  }, set: function(a) {
    this.Ut = a;
  } }, isInternalTransaction: { get: function() {
    return this.Rt;
  }, set: function(a) {
    this.Rt = a;
  } }, isJustDiscarded: { get: function() {
    return this.lr;
  } } });
  se2.prototype.handleChanged = se2.prototype.fv;
  se2.prototype.redo = se2.prototype.redo;
  se2.prototype.undo = se2.prototype.undo;
  se2.prototype.canUndo = se2.prototype.canUndo;
  se2.prototype.rollbackTransaction = se2.prototype.Hf;
  se2.prototype.commitTransaction = se2.prototype.Xa;
  se2.prototype.startTransaction = se2.prototype.xa;
  se2.prototype.removeModel = se2.prototype.uy;
  se2.prototype.addModel = se2.prototype.yx;
  se2.prototype.clear = se2.prototype.clear;
  se2.className = "UndoManager";
  function ue2() {
    Va2(this);
    this.D = ve2;
    this.na = "";
    this.vd = true;
    this.Rb = false;
    this.bj = null;
    this.Wy = new ce2();
    this.gs = -1;
  }
  ue2.prototype.toString = function() {
    return this.name !== "" ? this.name + " Tool" : Ja2(this.constructor);
  };
  ue2.prototype.updateAdornments = function() {
  };
  ue2.prototype.canStart = function() {
    return this.isEnabled;
  };
  ue2.prototype.doStart = function() {
  };
  ue2.prototype.doActivate = function() {
    this.isActive = true;
  };
  ue2.prototype.doDeactivate = function() {
    this.isActive = false;
  };
  ue2.prototype.doStop = function() {
  };
  ue2.prototype.doCancel = function() {
    this.transactionResult = null;
    this.stopTool();
  };
  ue2.prototype.stopTool = function() {
    var a = this.diagram;
    a.currentTool === this && (a.currentTool = null, a.currentCursor = "");
  };
  ue2.prototype.doMouseDown = function() {
    !this.isActive && this.canStart() && this.doActivate();
  };
  ue2.prototype.doMouseMove = function() {
  };
  ue2.prototype.doMouseUp = function() {
    this.stopTool();
  };
  ue2.prototype.doMouseWheel = function() {
  };
  ue2.prototype.canStartMultiTouch = function() {
    return true;
  };
  ue2.prototype.standardPinchZoomStart = function() {
    var a = this.diagram, b = a.lastInput, c = b.$p(0, K2.allocAt(NaN, NaN)), d = b.$p(1, K2.allocAt(NaN, NaN));
    if (c.u() && d.u() && (this.doCancel(), a.cm("hasGestureZoom"))) {
      a.ax = a.scale;
      var e = d.x - c.x, f2 = d.y - c.y;
      a.kx = Math.sqrt(e * e + f2 * f2);
      b.bubbles = false;
    }
    K2.free(c);
    K2.free(d);
  };
  ue2.prototype.standardPinchZoomMove = function() {
    var a = this.diagram, b = a.lastInput, c = b.$p(0, K2.allocAt(NaN, NaN)), d = b.$p(1, K2.allocAt(NaN, NaN));
    if (c.u() && d.u() && (this.doCancel(), a.cm("hasGestureZoom"))) {
      var e = d.x - c.x, f2 = d.y - c.y;
      f2 = Math.sqrt(e * e + f2 * f2) / a.kx;
      e = new K2((Math.min(d.x, c.x) + Math.max(d.x, c.x)) / 2, (Math.min(d.y, c.y) + Math.max(d.y, c.y)) / 2);
      f2 *= a.ax;
      var g2 = a.commandHandler;
      if (f2 !== a.scale && g2.canResetZoom(f2)) {
        var h = a.zoomPoint;
        a.zoomPoint = e;
        g2.resetZoom(f2);
        a.zoomPoint = h;
      }
      b.bubbles = false;
    }
    K2.free(c);
    K2.free(d);
  };
  ue2.prototype.doKeyDown = function() {
    this.diagram.lastInput.key === "Esc" && this.doCancel();
  };
  ue2.prototype.doKeyUp = function() {
  };
  ue2.prototype.xa = function(a) {
    a === void 0 && (a = this.name);
    this.transactionResult = null;
    return this.diagram.xa(a);
  };
  ue2.prototype.stopTransaction = function() {
    var a = this.diagram;
    return this.transactionResult === null ? a.Hf() : a.Xa(this.transactionResult);
  };
  ue2.prototype.standardMouseSelect = function() {
    var a = this.diagram;
    if (a.allowSelect) {
      var b = a.lastInput, c = a.am(b.documentPoint, false);
      if (c !== null)
        if (Ta2 ? b.meta : b.control) {
          a.S("ChangingSelection", a.selection);
          for (b = c; b !== null && !b.canSelect(); )
            b = b.containingGroup;
          b !== null && (b.isSelected = !b.isSelected);
          a.S("ChangedSelection", a.selection);
        } else if (b.shift) {
          if (!c.isSelected) {
            a.S("ChangingSelection", a.selection);
            for (b = c; b !== null && !b.canSelect(); )
              b = b.containingGroup;
            b !== null && (b.isSelected = true);
            a.S("ChangedSelection", a.selection);
          }
        } else {
          if (!c.isSelected) {
            for (b = c; b !== null && !b.canSelect(); )
              b = b.containingGroup;
            b !== null && a.select(b);
          }
        }
      else
        !b.left || (Ta2 ? b.meta : b.control) || b.shift || a.clearSelection();
    }
  };
  ue2.prototype.standardMouseClick = function(a, b) {
    a === void 0 && (a = null);
    b === void 0 && (b = function(a2) {
      return !a2.layer.isTemporary;
    });
    var c = this.diagram, d = c.lastInput;
    a = c.Zb(d.documentPoint, a, b);
    d.targetObject = a;
    we2(a, d, c);
    return d.handled;
  };
  function we2(a, b, c) {
    b.handled = false;
    if (a === null || a.Ef()) {
      var d = 0;
      b.left ? d = b.clickCount === 1 ? 1 : b.clickCount === 2 ? 2 : 1 : b.right && b.clickCount === 1 && (d = 3);
      var e = "ObjectSingleClicked";
      if (a !== null) {
        switch (d) {
          case 1:
            e = "ObjectSingleClicked";
            break;
          case 2:
            e = "ObjectDoubleClicked";
            break;
          case 3:
            e = "ObjectContextClicked";
        }
        d !== 0 && c.S(e, a);
      } else {
        switch (d) {
          case 1:
            e = "BackgroundSingleClicked";
            break;
          case 2:
            e = "BackgroundDoubleClicked";
            break;
          case 3:
            e = "BackgroundContextClicked";
        }
        d !== 0 && c.S(e);
      }
      if (a !== null)
        for (; a !== null; ) {
          c = null;
          switch (d) {
            case 1:
              c = a.click;
              break;
            case 2:
              c = a.doubleClick ? a.doubleClick : a.click;
              break;
            case 3:
              c = a.contextClick;
          }
          if (c !== null && (c(b, a), b.handled))
            break;
          a = a.panel;
        }
      else {
        a = null;
        switch (d) {
          case 1:
            a = c.click;
            break;
          case 2:
            a = c.doubleClick ? c.doubleClick : c.click;
            break;
          case 3:
            a = c.contextClick;
        }
        a !== null && a(b);
      }
    }
  }
  ue2.prototype.standardMouseOver = function() {
    var a = this.diagram, b = a.lastInput;
    if (a.animationManager.tb !== true) {
      var c = a.skipsUndoManager;
      a.skipsUndoManager = true;
      var d = a.viewportBounds.$(b.documentPoint) ? a.Zb(b.documentPoint, null, null) : null;
      b.targetObject = d;
      var e = false;
      if (d !== a.Kk) {
        var f2 = a.Kk, g2 = f2;
        a.Kk = d;
        this.doCurrentObjectChanged(f2, d);
        for (b.handled = false; f2 !== null; ) {
          var h = f2.mouseLeave;
          if (h !== null) {
            if (d === f2)
              break;
            if (d !== null && d.sg(f2))
              break;
            h(b, f2, d);
            e = true;
            if (b.handled)
              break;
          }
          f2 = f2.panel;
        }
        f2 = g2;
        for (b.handled = false; d !== null; ) {
          g2 = d.mouseEnter;
          if (g2 !== null) {
            if (f2 === d)
              break;
            if (f2 !== null && f2.sg(d))
              break;
            g2(b, d, f2);
            e = true;
            if (b.handled)
              break;
          }
          d = d.panel;
        }
        d = a.Kk;
      }
      if (d !== null) {
        f2 = d;
        for (g2 = ""; f2 !== null; ) {
          g2 = f2.cursor;
          if (g2 !== "")
            break;
          f2 = f2.panel;
        }
        a.currentCursor = g2;
        b.handled = false;
        for (f2 = d; f2 !== null; ) {
          d = f2.mouseOver;
          if (d !== null && (d(b, f2), e = true, b.handled))
            break;
          f2 = f2.panel;
        }
      } else
        a.currentCursor = "", d = a.mouseOver, d !== null && (d(b), e = true);
      e && a.Gb();
      a.skipsUndoManager = c;
    }
  };
  ue2.prototype.doCurrentObjectChanged = function() {
  };
  ue2.prototype.standardMouseWheel = function() {
    var a = this.diagram, b = a.lastInput, c = b.delta;
    if (c !== 0 && a.documentBounds.u()) {
      var d = a.commandHandler, e = a.toolManager.mouseWheelBehavior;
      if (d !== null && (e === xe && !b.shift || e === ye && b.control)) {
        if (0 < c ? d.canIncreaseZoom() : d.canDecreaseZoom())
          e = a.zoomPoint, a.zoomPoint = b.viewPoint, 0 < c ? d.increaseZoom() : d.decreaseZoom(), a.zoomPoint = e;
        b.bubbles = false;
      } else if (e === xe && b.shift || e === ye && !b.control) {
        d = a.position.copy();
        var f2 = 0 < c ? c : -c, g2 = b.event, h = g2.deltaMode;
        e = g2.deltaX;
        g2 = g2.deltaY;
        if (Ra2 || Sa2)
          h = 1, 0 < e && (e = 3), 0 > e && (e = -3), 0 < g2 && (g2 = 3), 0 > g2 && (g2 = -3);
        if (h === void 0 || e === void 0 || g2 === void 0 || e === 0 && g2 === 0 || b.shift)
          !b.shift && a.allowVerticalScroll ? (f2 = 3 * f2 * a.scrollVerticalLineChange, 0 < c ? a.scroll("pixel", "up", f2) : a.scroll("pixel", "down", f2)) : b.shift && a.allowHorizontalScroll && (f2 = 3 * f2 * a.scrollHorizontalLineChange, 0 < c ? a.scroll("pixel", "left", f2) : a.scroll("pixel", "right", f2));
        else {
          switch (h) {
            case 0:
              c = "pixel";
              break;
            case 1:
              c = "line";
              break;
            case 2:
              c = "page";
              break;
            default:
              c = "pixel";
          }
          e !== 0 && a.allowHorizontalScroll && (e *= a.scrollHorizontalLineChange / 16, 0 < e ? a.scroll(c, "left", -e) : a.scroll(c, "right", e));
          g2 !== 0 && a.allowVerticalScroll && (g2 *= a.scrollVerticalLineChange / 16, 0 < g2 ? a.scroll(c, "up", -g2) : a.scroll(c, "down", g2));
        }
        a.position.A(d) || (b.bubbles = false);
      }
    }
  };
  ue2.prototype.standardWaitAfter = function(a, b) {
    b === void 0 && (b = this.diagram.lastInput);
    this.cancelWaitAfter();
    var c = this, d = b.clone(this.Wy);
    this.gs = ua2(function() {
      c.doWaitAfter(d);
    }, a);
  };
  ue2.prototype.cancelWaitAfter = function() {
    this.gs !== -1 && x2.clearTimeout(this.gs);
    this.gs = -1;
  };
  ue2.prototype.doWaitAfter = function() {
  };
  ue2.prototype.findToolHandleAt = function(a, b) {
    a = this.diagram.Zb(a, function(a2) {
      for (; a2 !== null && !(a2.panel instanceof ze); )
        a2 = a2.panel;
      return a2;
    });
    return a === null ? null : a.part.category === b ? a : null;
  };
  ue2.prototype.isBeyondDragSize = function(a, b) {
    var c = this.diagram;
    a === void 0 && (a = c.firstInput.viewPoint);
    b === void 0 && (b = c.lastInput.viewPoint);
    var d = c.toolManager.dragSize, e = d.width;
    d = d.height;
    c.firstInput.isTouchEvent && (e += 6, d += 6);
    return Math.abs(b.x - a.x) > e || Math.abs(b.y - a.y) > d;
  };
  na2.Object.defineProperties(ue2.prototype, { diagram: { get: function() {
    return this.D;
  }, set: function(a) {
    a instanceof R2 && (this.D = a);
  } }, name: { get: function() {
    return this.na;
  }, set: function(a) {
    this.na = a;
  } }, isEnabled: { get: function() {
    return this.vd;
  }, set: function(a) {
    this.vd = a;
  } }, isActive: { get: function() {
    return this.Rb;
  }, set: function(a) {
    this.Rb = a;
  } }, transactionResult: {
    get: function() {
      return this.bj;
    },
    set: function(a) {
      this.bj = a;
    }
  } });
  ue2.prototype.startTransaction = ue2.prototype.xa;
  ue2.className = "Tool";
  function Pa2() {
    ue2.call(this);
    this.name = "ToolManager";
    this.Hb = new F2();
    this.Sb = new F2();
    this.sc = new F2();
    this.L = this.wa = 850;
    this.o = new Gb2(2, 2).ca();
    this.Ma = 5e3;
    this.Ba = ye;
    this.C = Ae2;
    this.Qq = this.j = null;
    this.Lj = -1;
  }
  ma2(Pa2, ue2);
  Pa2.prototype.initializeStandardTools = function() {
  };
  Pa2.prototype.updateAdornments = function(a) {
    var b = this.currentToolTip;
    if (b instanceof ze && this.Qq === a) {
      var c = b.adornedObject;
      (a !== null ? c.part === a : c === null) ? this.showToolTip(b, c) : this.hideToolTip();
    }
  };
  Pa2.prototype.doMouseDown = function() {
    var a = this.diagram, b = a.lastInput;
    b.isTouchEvent && this.gestureBehavior === Be2 && (b.bubbles = false);
    if (b.isMultiTouch) {
      this.cancelWaitAfter();
      if (this.gestureBehavior === Ce2) {
        b.bubbles = true;
        return;
      }
      if (this.gestureBehavior === Be2)
        return;
      if (a.currentTool.canStartMultiTouch()) {
        a.currentTool.standardPinchZoomStart();
        return;
      }
    }
    for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
      var e = this.mouseDownTools.J(d);
      e.diagram = this.diagram;
      if (e.canStart()) {
        a.doFocus();
        a.currentTool = e;
        a.currentTool === e && (e.isActive || e.doActivate(), e.doMouseDown());
        return;
      }
    }
    a.lastInput.button === 1 && (this.mouseWheelBehavior === ye ? this.mouseWheelBehavior = xe : this.mouseWheelBehavior === xe && (this.mouseWheelBehavior = ye));
    this.doActivate();
    this.standardWaitAfter(this.holdDelay, b);
  };
  Pa2.prototype.doMouseMove = function() {
    var a = this.diagram, b = a.lastInput;
    if (b.isMultiTouch) {
      if (this.gestureBehavior === Ce2) {
        b.bubbles = true;
        return;
      }
      if (this.gestureBehavior === Be2)
        return;
      if (a.currentTool.canStartMultiTouch()) {
        a.currentTool.standardPinchZoomMove();
        return;
      }
    }
    if (this.isActive)
      for (var c = this.mouseMoveTools.length, d = 0; d < c; d++) {
        var e = this.mouseMoveTools.J(d);
        e.diagram = this.diagram;
        if (e.canStart()) {
          a.doFocus();
          a.currentTool = e;
          a.currentTool === e && (e.isActive || e.doActivate(), e.doMouseMove());
          return;
        }
      }
    De2(this, a);
    a = b.event;
    a === null || a.type !== "pointermove" && a.cancelable || (b.bubbles = true);
  };
  function De2(a, b) {
    a.standardMouseOver();
    a.isBeyondDragSize() && a.standardWaitAfter(a.isActive ? a.holdDelay : a.hoverDelay, b.lastInput);
  }
  Pa2.prototype.doCurrentObjectChanged = function(a, b) {
    a = this.currentToolTip;
    a === null || b !== null && a instanceof ze && (b === a || b.sg(a)) || this.hideToolTip();
  };
  Pa2.prototype.doWaitAfter = function(a) {
    var b = this.diagram;
    b.Ca && (this.doMouseHover(), this.isActive || this.doToolTip(), a.isTouchEvent && !b.lastInput.handled && (a = a.copy(), a.button = 2, a.buttons = 2, b.lastInput = a, b.ru = true, b.doMouseUp()));
  };
  Pa2.prototype.doMouseHover = function() {
    var a = this.diagram, b = a.lastInput;
    b.targetObject === null && (b.targetObject = a.Zb(b.documentPoint, null, null));
    var c = b.targetObject;
    if (c !== null)
      for (b.handled = false; c !== null; ) {
        a = this.isActive ? c.mouseHold : c.mouseHover;
        if (a !== null && (a(b, c), b.handled))
          break;
        c = c.panel;
      }
    else
      c = this.isActive ? a.mouseHold : a.mouseHover, c !== null && c(b);
  };
  Pa2.prototype.doToolTip = function() {
    var a = this.diagram, b = a.lastInput;
    b.targetObject === null && (b.targetObject = a.Zb(b.documentPoint, null, null));
    b = b.targetObject;
    if (b !== null) {
      if (a = this.currentToolTip, !(a instanceof ze) || b !== a && !b.sg(a)) {
        for (; b !== null; ) {
          a = b.toolTip;
          if (a !== null) {
            this.showToolTip(a, b);
            return;
          }
          b = b.panel;
        }
        this.hideToolTip();
      }
    } else
      b = a.toolTip, b !== null ? this.showToolTip(b, null) : this.hideToolTip();
  };
  Pa2.prototype.showToolTip = function(a, b) {
    var c = this.diagram;
    a !== this.currentToolTip && this.hideToolTip();
    if (a instanceof ze) {
      a.layerName = "Tool";
      a.selectable = false;
      a.scale = 1 / c.scale;
      a.category = "ToolTip";
      a.placeholder !== null && (a.placeholder.scale = c.scale);
      var d = a.diagram;
      d !== null && d !== c && d.remove(a);
      c.add(a);
      b !== null ? a.adornedObject = b : a.data = c.model;
      a.Ta();
      this.positionToolTip(a, b);
    } else
      a instanceof Ee2 && a !== this.currentToolTip && a.show(b, c, this);
    this.currentToolTip = a;
    this.Lj !== -1 && (x2.clearTimeout(this.Lj), this.Lj = -1);
    a = this.toolTipDuration;
    if (0 < a && a !== Infinity) {
      var e = this;
      this.Lj = ua2(function() {
        e.hideToolTip();
      }, a);
    }
  };
  Pa2.prototype.positionToolTip = function(a) {
    if (a.placeholder === null) {
      var b = this.diagram, c = b.lastInput.documentPoint.copy(), d = a.measuredBounds, e = b.viewportBounds;
      b.lastInput.isTouchEvent && (c.x -= d.width);
      c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
      c.x < e.x && (c.x = e.x);
      c.y = c.y + 20 / b.scale + d.height > e.bottom ? c.y - (d.height + 5 / b.scale) : c.y + 20 / b.scale;
      c.y < e.y && (c.y = e.y);
      a.position = c;
    }
  };
  Pa2.prototype.hideToolTip = function() {
    this.Lj !== -1 && (x2.clearTimeout(this.Lj), this.Lj = -1);
    var a = this.diagram, b = this.currentToolTip;
    b !== null && (b instanceof ze ? (a.remove(b), this.Qq !== null && this.Qq.Gf(b.category), b.data = null, b.adornedObject = null) : b instanceof Ee2 && b.hide !== null && b.hide(a, this), this.currentToolTip = null);
  };
  Pa2.prototype.doMouseUp = function() {
    this.cancelWaitAfter();
    var a = this.diagram;
    if (this.isActive)
      for (var b = this.mouseUpTools.length, c = 0; c < b; c++) {
        var d = this.mouseUpTools.J(c);
        d.diagram = this.diagram;
        if (d.canStart()) {
          a.doFocus();
          a.currentTool = d;
          a.currentTool === d && (d.isActive || d.doActivate(), d.doMouseUp());
          return;
        }
      }
    a.doFocus();
    this.doDeactivate();
  };
  Pa2.prototype.doMouseWheel = function() {
    this.standardMouseWheel();
  };
  Pa2.prototype.doKeyDown = function() {
    var a = this.diagram;
    a.commandHandler !== null && a.commandHandler.doKeyDown();
  };
  Pa2.prototype.doKeyUp = function() {
    var a = this.diagram;
    a.commandHandler !== null && a.commandHandler.doKeyUp();
  };
  Pa2.prototype.findTool = function(a) {
    for (var b = this.mouseDownTools.length, c = 0; c < b; c++) {
      var d = this.mouseDownTools.J(c);
      if (d.name === a)
        return d;
    }
    b = this.mouseMoveTools.length;
    for (c = 0; c < b; c++)
      if (d = this.mouseMoveTools.J(c), d.name === a)
        return d;
    b = this.mouseUpTools.length;
    for (c = 0; c < b; c++)
      if (d = this.mouseUpTools.J(c), d.name === a)
        return d;
    return null;
  };
  Pa2.prototype.replaceTool = function(a, b) {
    b !== null && (b.diagram = this.diagram);
    for (var c = this.mouseDownTools.length, d = 0; d < c; d++) {
      var e = this.mouseDownTools.J(d);
      if (e.name === a)
        return b !== null ? this.mouseDownTools.Oc(d, b) : this.mouseDownTools.eb(d), e;
    }
    c = this.mouseMoveTools.length;
    for (d = 0; d < c; d++)
      if (e = this.mouseMoveTools.J(d), e.name === a)
        return b !== null ? this.mouseMoveTools.Oc(d, b) : this.mouseMoveTools.eb(d), e;
    c = this.mouseUpTools.length;
    for (d = 0; d < c; d++)
      if (e = this.mouseUpTools.J(d), e.name === a)
        return b !== null ? this.mouseUpTools.Oc(d, b) : this.mouseUpTools.eb(d), e;
    return null;
  };
  Pa2.prototype.Za = function(a, b, c) {
    b !== null && (b.name = a, b.diagram = this.diagram);
    this.findTool(a) ? this.replaceTool(a, b) : b !== null && c.add(b);
  };
  na2.Object.defineProperties(Pa2.prototype, { mouseWheelBehavior: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba = a;
  } }, gestureBehavior: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, currentToolTip: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
    this.Qq = a !== null && a instanceof ze ? a.adornedPart : null;
  } }, mouseDownTools: { get: function() {
    return this.Hb;
  } }, mouseMoveTools: {
    get: function() {
      return this.Sb;
    }
  }, mouseUpTools: { get: function() {
    return this.sc;
  } }, hoverDelay: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa = a;
  } }, holdDelay: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, dragSize: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a.I();
  } }, toolTipDuration: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma = a;
  } } });
  Pa2.prototype.replaceStandardTool = Pa2.prototype.Za;
  var ye = new D2(Pa2, "WheelScroll", 0), xe = new D2(Pa2, "WheelZoom", 1), Ke2 = new D2(Pa2, "WheelNone", 2), Ae2 = new D2(Pa2, "GestureZoom", 3), Be2 = new D2(Pa2, "GestureCancel", 4), Ce2 = new D2(Pa2, "GestureNone", 5);
  Pa2.className = "ToolManager";
  Pa2.WheelScroll = ye;
  Pa2.WheelZoom = xe;
  Pa2.WheelNone = Ke2;
  Pa2.GestureZoom = Ae2;
  Pa2.GestureCancel = Be2;
  Pa2.GestureNone = Ce2;
  function Le2() {
    ue2.call(this);
    this.name = "Dragging";
    this.C = this.Sb = true;
    this.o = this.Ma = this.wa = this.cg = null;
    this.sn = this.sc = false;
    this.Kl = new K2(NaN, NaN);
    this.Vr = new K2();
    this.Hb = true;
    this.Qk = 100;
    this.Kg = [];
    this.ke = new G2().freeze();
    this.Ba = new Me2();
    this.co = null;
    this.L = "copy";
    this.Nd = "";
    this.Od = "no-drop";
  }
  ma2(Le2, ue2);
  Le2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    if (a.isReadOnly && !a.allowDragOut || !a.allowMove && !a.allowCopy && !a.allowDragOut || !a.allowSelect)
      return false;
    var b = a.lastInput;
    return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.isTouchEvent && b.timestamp - a.firstInput.timestamp < this.Qk) ? false : this.findDraggablePart() !== null;
  };
  Le2.prototype.findDraggablePart = function() {
    var a = this.diagram;
    a = a.am(a.firstInput.documentPoint, false);
    if (a === null)
      return null;
    for (; a !== null && !a.canSelect(); )
      a = a.containingGroup;
    return a !== null && (a.canMove() || a.canCopy()) ? a : null;
  };
  Le2.prototype.standardMouseSelect = function() {
    var a = this.diagram;
    if (a.allowSelect) {
      var b = a.am(a.firstInput.documentPoint, false);
      if (b !== null) {
        for (; b !== null && !b.canSelect(); )
          b = b.containingGroup;
        this.currentPart = b;
        this.currentPart === null || this.currentPart.isSelected || (a.S("ChangingSelection", a.selection), b = a.lastInput, (Ta2 ? b.meta : b.control) || b.shift || a.clearSelection(true), this.currentPart.isSelected = true, a.S("ChangedSelection", a.selection));
      }
    }
  };
  Le2.prototype.doActivate = function() {
    var a = this.diagram;
    this.co = null;
    this.currentPart === null && this.standardMouseSelect();
    var b = this.currentPart;
    b !== null && (b.canMove() || b.canCopy()) && (a.Hu(true), Ne2 = null, this.isActive = true, this.Kl.set(a.position), Oe2(this, a.selection), this.Kg.length = 0, a.animationManager.rc(), this.draggedParts = this.computeEffectiveCollection(a.selection, this.dragOptions), a.Ws = true, a.Ie("temporaryPixelRatio") === true && 30 < a.Bx && Pe2(a), Qe2(a, this.draggedParts), this.xa("Drag"), this.startPoint = a.firstInput.documentPoint, a.isMouseCaptured = true, a.allowDragOut && (this.isDragOutStarted = true, this.sn = false, Ne2 = this, Re2 = this.diagram, this.doSimulatedDragOut()));
  };
  function Oe2(a, b) {
    if (a.dragsLink) {
      var c = a.diagram;
      c.allowRelink && (c.model.dk() && b.count === 1 && b.first() instanceof T2 ? (a.draggedLink = b.first(), a.draggedLink.canRelinkFrom() && a.draggedLink.canRelinkTo() && a.draggedLink.Qj(), a.cg = c.toolManager.findTool("Relinking"), a.cg === null && (a.cg = new Se2(), a.cg.diagram = c)) : (a.draggedLink = null, a.cg = null));
    }
  }
  Le2.prototype.computeEffectiveCollection = function(a, b) {
    return this.diagram.commandHandler.computeEffectiveCollection(a, b);
  };
  Le2.prototype.Ad = function(a) {
    return a === void 0 ? new Te2(zb2) : this.isGridSnapEnabled ? new Te2(new K2(Math.round(1e3 * a.x) / 1e3, Math.round(1e3 * a.y) / 1e3)) : new Te2(a.copy());
  };
  Le2.prototype.doDeactivate = function() {
    this.isActive = false;
    var a = this.diagram;
    a.Hu(false);
    a.ug();
    Ue2(this);
    Ve(a, this.draggedParts);
    this.draggedParts = this.currentPart = this.co = null;
    this.sn = this.isDragOutStarted = false;
    if (0 < We.count) {
      for (var b = We, c = b.length, d = 0; d < c; d++) {
        var e = b.J(d);
        Xe2(e);
        af2(e);
        Ue2(e);
        e.diagram.ug();
      }
      b.clear();
    }
    Xe2(this);
    this.Kl.h(NaN, NaN);
    Re2 !== null && (Re2.currentCursor = "");
    Ne2 = Re2 = null;
    af2(this);
    a.isMouseCaptured = false;
    a.currentCursor = "";
    a.Ws = false;
    this.stopTransaction();
    bf2(a, true);
  };
  Le2.prototype.stopTransaction = function() {
    var a = this.diagram, b = ue2.prototype.stopTransaction.call(this);
    b && a.undoManager.transactionToUndo !== null && a.undoManager.transactionToUndo.Ns();
    return b;
  };
  function Ue2(a) {
    var b = a.diagram, c = b.skipsUndoManager;
    b.skipsUndoManager = true;
    cf2(a, b.lastInput, null);
    b.skipsUndoManager = c;
    a.Kg.length = 0;
  }
  function df2() {
    var a = Ne2;
    af2(a);
    ef2(a);
    var b = a.diagram;
    a.Kl.u() && (b.position = a.Kl);
    b.ug();
  }
  Le2.prototype.doCancel = function() {
    af2(this);
    ef2(this);
    var a = this.diagram;
    this.Kl.u() && (a.position = this.Kl);
    this.stopTool();
  };
  Le2.prototype.doKeyDown = function() {
    var a = this.diagram, b = a.lastInput;
    this.isActive && (b.key === "Esc" ? this.doCancel() : b.key !== a.previousInput.key && this.doMouseMove());
  };
  Le2.prototype.doKeyUp = function() {
    this.isActive && this.doMouseMove();
  };
  function ff2(a, b) {
    if (a.copiedParts === null) {
      var c = a.diagram;
      if ((!b || !c.isReadOnly && !c.isModelReadOnly) && a.draggedParts !== null) {
        var d = c.undoManager;
        d.isEnabled && d.isInTransaction ? d.currentTransaction !== null && 0 < d.currentTransaction.changes.count && (c.undoManager.Hf(), c.xa("Drag")) : ef2(a);
        c.skipsUndoManager = !b;
        c.partManager.addsToTemporaryLayer = !b;
        a.startPoint = c.firstInput.documentPoint;
        b = a.copiesEffectiveCollection ? a.draggedParts.If() : c.selection;
        b = c.Vj(b, c, true);
        c = new H2();
        for (d = a.draggedParts.iterator; d.next(); ) {
          var e = d.key;
          if (e.Mc() && e.canCopy()) {
            var f2 = b.H(e);
            f2 !== null && (f2.location = e.location, f2.Ta(), c.add(f2, a.Ad(f2.location)));
          }
        }
        for (b = b.iterator; b.next(); )
          d = b.value, d instanceof T2 && d.canCopy() && c.add(d, a.Ad());
        a.copiedParts = c;
        Oe2(a, c.If());
        a.draggedLink !== null && (c = a.draggedLink, b = c.routeBounds, gf2(c, a.startPoint.x - (b.x + b.width / 2), a.startPoint.y - (b.y + b.height / 2)));
        a.doUpdateCursor(null, true);
      }
    }
  }
  function af2(a) {
    var b = a.diagram;
    if (a.copiedParts !== null) {
      b.Qs(a.copiedParts.If(), false);
      a.copiedParts = null;
      if (a.draggedParts !== null)
        for (var c = a.draggedParts.iterator; c.next(); )
          c.key instanceof T2 && (c.value.point = new K2(0, 0));
      a.doUpdateCursor(null, true);
    }
    b.skipsUndoManager = false;
    b.partManager.addsToTemporaryLayer = false;
    a.startPoint = b.firstInput.documentPoint;
  }
  function Xe2(a) {
    if (a.draggedLink !== null) {
      if (a.dragsLink && a.cg !== null) {
        var b = a.cg;
        b.diagram.remove(b.temporaryFromNode);
        b.diagram.remove(b.temporaryToNode);
      }
      a.draggedLink = null;
      a.cg = null;
    }
  }
  function hf2(a, b, c) {
    var d = a.diagram, e = a.startPoint, f2 = K2.alloc();
    f2.assign(d.lastInput.documentPoint);
    a.moveParts(b, f2.ie(e), c);
    K2.free(f2);
    d.Ie("temporaryPixelRatio") === true && d.si === null && 30 < d.Bx && (Pe2(d), d.oq());
  }
  Le2.prototype.moveParts = function(a, b, c) {
    c === void 0 && (c = false);
    var d = this.diagram;
    d !== null && jf2(d, a, b, this.dragOptions, c);
  };
  function ef2(a) {
    if (a.draggedParts !== null) {
      for (var b = a.diagram, c = a.draggedParts.iterator; c.next(); ) {
        var d = c.key;
        d.Mc() && (d.location = c.value.point);
      }
      for (c = a.draggedParts.iterator; c.next(); )
        if (d = c.key, d instanceof T2 && d.suspendsRouting) {
          var e = c.value.point;
          a.draggedParts.add(d, a.Ad());
          gf2(d, -e.x, -e.y);
        }
      b.gd();
    }
  }
  function kf2(a, b) {
    var c = a.diagram;
    a.dragsLink && (a.draggedLink !== null && (a.draggedLink.fromNode = null, a.draggedLink.toNode = null), lf2(a, false));
    var d = a.findDragOverObject(b), e = c.lastInput;
    e.targetObject = d;
    a.doUpdateCursor(d, false);
    var f2 = c.skipsUndoManager, g2 = false;
    try {
      c.skipsUndoManager = true;
      g2 = cf2(a, e, d);
      if (!a.isActive && Ne2 === null)
        return;
      var h = d !== null ? d.part : null;
      if (h === null || c.handlesDragDropForTopLevelParts && h.isTopLevel && !(h instanceof U2)) {
        var k = c.mouseDragOver;
        k !== null && (k(e), g2 = true);
      }
      if (!a.isActive && Ne2 === null)
        return;
      a.doDragOver(b, d);
      if (!a.isActive && Ne2 === null)
        return;
    } finally {
      c.skipsUndoManager = f2, g2 && c.gd();
    }
    a.co = d;
    c.isReadOnly || !c.allowMove && !c.allowCopy || !c.allowHorizontalScroll && !c.allowVerticalScroll || c.ns(e.viewPoint);
  }
  Le2.prototype.findDragOverObject = function(a) {
    var b = this;
    return mf2(this.diagram, a, null, function(a2) {
      a2 === null ? a2 = true : (a2 = a2.part, a2 = a2 === null || a2 instanceof ze || a2.layer.isTemporary || b.draggedParts && b.draggedParts.contains(a2) || b.copiedParts && b.copiedParts.contains(a2) ? true : false);
      return !a2;
    });
  };
  Le2.prototype.doUpdateCursor = function(a, b) {
    var c = this.diagram;
    if (b || this.co !== a)
      !this.diagram.currentTool.isActive || this.mayCopy() ? c.currentCursor = this.copyCursor : this.mayMove() ? c.currentCursor = this.moveCursor : this.mayDragOut() && (c.currentCursor = this.nodropCursor);
  };
  function cf2(a, b, c) {
    var d = false, e = a.Kg.length, f2 = 0 < e ? a.Kg[0] : null;
    if (c === f2)
      return false;
    b.handled = false;
    for (var g2 = 0; g2 < e; g2++) {
      var h = a.Kg[g2], k = h.mouseDragLeave;
      if (k !== null && (k(b, h, c), d = true, b.handled))
        break;
    }
    a.Kg.length = 0;
    if (!a.isActive && Ne2 === null || c === null)
      return d;
    b.handled = false;
    for (e = c; e !== null; )
      a.Kg.push(e), e = nf2(e);
    e = a.Kg.length;
    for (c = 0; c < e && (g2 = a.Kg[c], h = g2.mouseDragEnter, h === null || (h(b, g2, f2), d = true, !b.handled)); c++)
      ;
    return d;
  }
  function nf2(a) {
    var b = a.panel;
    return b !== null ? b : a instanceof V2 && !(a instanceof U2) && (a = a.containingGroup, a !== null && a.handlesDragDropForMembers) ? a : null;
  }
  function of2(a, b, c) {
    var d = a.cg;
    if (d === null)
      return null;
    var e = a.diagram.qg(b, d.portGravity, function(a2) {
      return d.findValidLinkablePort(a2, c);
    });
    a = K2.alloc();
    var f2 = Infinity, g2 = null;
    for (e = e.iterator; e.next(); ) {
      var h = e.value;
      if (h.part !== null) {
        var k = h.da(yc2, a);
        k = b.xf(k);
        k < f2 && (g2 = h, f2 = k);
      }
    }
    K2.free(a);
    return g2;
  }
  function lf2(a, b) {
    var c = a.draggedLink;
    if (c !== null && !(2 > c.pointsCount)) {
      var d = a.diagram;
      if (!d.isReadOnly) {
        var e = a.cg;
        if (e !== null) {
          var f2 = null, g2 = null;
          c.fromNode === null && (f2 = of2(a, c.i(0), false), f2 !== null && (g2 = f2.part));
          var h = null, k = null;
          c.toNode === null && (h = of2(a, c.i(c.pointsCount - 1), true), h !== null && (k = h.part));
          e.isValidLink(g2, f2, k, h) ? b ? (c.defaultFromPoint = c.i(0), c.defaultToPoint = c.i(c.pointsCount - 1), c.suspendsRouting = false, c.fromNode = g2, f2 !== null && (c.fromPortId = f2.portId), c.toNode = k, h !== null && (c.toPortId = h.portId), c.fromPort !== d.oy && d.S("LinkRelinked", c, d.oy), c.toPort !== d.py && d.S("LinkRelinked", c, d.py)) : pf2(e, g2, f2, k, h) : pf2(e, null, null, null, null);
        }
      }
    }
  }
  Le2.prototype.doDragOver = function() {
  };
  function qf2(a, b) {
    var c = a.diagram;
    a.dragsLink && lf2(a, true);
    Ue2(a);
    var d = a.findDragOverObject(b), e = c.lastInput;
    e.targetObject = d;
    if (d !== null) {
      e.handled = false;
      for (var f2 = d; f2 !== null; ) {
        var g2 = f2.mouseDrop;
        if (g2 !== null && (g2(e, f2), e.handled))
          break;
        rf2(a, e, f2);
        f2 = nf2(f2);
      }
    } else
      f2 = c.mouseDrop, f2 !== null && f2(e);
    if (a.isActive || Ne2 !== null) {
      for (e = (a.copiedParts || a.draggedParts).iterator; e.next(); )
        f2 = e.key, f2 instanceof W2 && f2.linksConnected.each(function(a2) {
          a2.suspendsRouting = false;
        });
      a.doDropOnto(b, d);
      if (a.isActive || Ne2 !== null) {
        a = N2.alloc();
        for (b = c.selection.iterator; b.next(); )
          d = b.value, d instanceof W2 && sf2(c, d, a);
        N2.free(a);
      }
    }
  }
  function rf2(a, b, c) {
    a = a.diagram;
    c = c.part;
    !a.handlesDragDropForTopLevelParts || !c.isTopLevel || c instanceof U2 || (c = a.mouseDrop, c !== null && c(b));
  }
  function sf2(a, b, c) {
    var d = false;
    b.getAvoidableRect(c);
    a.viewportBounds.Ge(c) && (d = true);
    a = a.Yu(c, function(a2) {
      return a2.part;
    }, function(a2) {
      return a2 instanceof T2;
    }, true, function(a2) {
      return a2 instanceof T2;
    }, d);
    if (a.count !== 0)
      for (a = a.iterator; a.next(); )
        c = a.value, !c.Jd(b) && c.isAvoiding && c.Va();
  }
  Le2.prototype.doDropOnto = function() {
  };
  Le2.prototype.doMouseMove = function() {
    if (this.isActive) {
      var a = this.diagram, b = a.lastInput;
      this.simulatedMouseMove(b.event, b.documentPoint, b.targetDiagram) || this.currentPart === null || this.draggedParts === null || (this.mayCopy() ? (ff2(this, false), Qe2(a, this.copiedParts), hf2(this, this.copiedParts, false), Ve(a, this.copiedParts)) : this.mayMove() ? (af2(this), hf2(this, this.draggedParts, true)) : this.mayDragOut() ? (ff2(this, false), hf2(this, this.copiedParts, false)) : af2(this), kf2(this, a.lastInput.documentPoint));
    }
  };
  Le2.prototype.doMouseUp = function() {
    if (this.isActive) {
      var a = this.diagram, b = a.lastInput;
      if (!this.simulatedMouseUp(b.event, b.documentPoint, b.targetDiagram)) {
        b = false;
        var c = this.mayCopy();
        c && this.copiedParts !== null ? (af2(this), ff2(this, true), Qe2(a, this.copiedParts), hf2(this, this.copiedParts, false), Ve(a, this.copiedParts), this.copiedParts !== null && (a.S("ChangingSelection", a.selection), a.clearSelection(true), this.copiedParts.iteratorKeys.each(function(a2) {
          a2.isSelected = true;
        }))) : (b = true, af2(this), this.mayMove() && (hf2(this, this.draggedParts, true), kf2(this, a.lastInput.documentPoint)));
        this.sn = true;
        qf2(this, a.lastInput.documentPoint);
        if (this.isActive) {
          var d = c ? this.copiedParts.If() : this.draggedParts.If();
          this.copiedParts = null;
          b && tf2(this);
          a.Qa();
          Ve(a, this.draggedParts);
          this.transactionResult = c ? "Copy" : "Move";
          a.S(c ? "SelectionCopied" : "SelectionMoved", d);
        }
        this.stopTool();
        c && a.S("ChangedSelection", a.selection);
      }
    }
  };
  Le2.prototype.simulatedMouseMove = function(a, b, c) {
    if (Ne2 === null)
      return false;
    var d = Ne2.diagram;
    c instanceof R2 || (c = null);
    var e = Re2;
    c !== e && (e !== null && e !== d && (e.ug(), Ne2.isDragOutStarted = false, e = e.toolManager.findTool("Dragging"), e !== null && e.doSimulatedDragLeave()), Re2 = c, c !== null && c !== d && (df2(), e = c.toolManager.findTool("Dragging"), e !== null && (We.contains(e) || We.add(e), e.doSimulatedDragEnter())), this.doUpdateCursor(null, true));
    if (c === null || c === d || !c.allowDrop || c.isReadOnly || !c.allowInsert)
      return false;
    d = c.toolManager.findTool("Dragging");
    d !== null && (a !== null && (a.targetTouches !== void 0 && (0 < a.targetTouches.length ? a = a.targetTouches[0] : 0 < a.changedTouches.length && (a = a.changedTouches[0])), b = c.getMouse(a)), c.lastInput.documentPoint = b, c.lastInput.viewPoint = c.wq(b), c.lastInput.down = false, c.lastInput.up = false, d.doSimulatedDragOver());
    return true;
  };
  Le2.prototype.simulatedMouseUp = function(a, b, c) {
    if (Ne2 === null)
      return false;
    var d = Re2, e = Ne2.diagram;
    if (c === null)
      return Ne2.doCancel(), true;
    if (c !== d) {
      var f2 = d.toolManager.findTool("Dragging");
      if (d !== null && d !== e && f2 !== null)
        return d.ug(), Ne2.isDragOutStarted = false, f2.doSimulatedDragLeave(), false;
      Re2 = c;
      d = c.toolManager.findTool("Dragging");
      d !== null && (df2(), We.contains(d) || We.add(d), d.doSimulatedDragEnter());
    }
    return c !== this.diagram ? (a !== null ? (a.targetTouches !== void 0 && (0 < a.targetTouches.length ? a = a.targetTouches[0] : 0 < a.changedTouches.length && (a = a.changedTouches[0])), b = c.getMouse(a)) : b === null && (b = new K2()), c.lastInput.documentPoint = b, c.lastInput.viewPoint = c.wq(b), c.lastInput.down = false, c.lastInput.up = true, a = c.toolManager.findTool("Dragging"), a !== null && a.doSimulatedDrop(), a = Ne2, a !== null && (c = a.mayCopy(), a.transactionResult = c ? "Copy" : "Move", a.stopTool()), true) : false;
  };
  function tf2(a) {
    if (a.draggedParts !== null)
      for (var b = a.draggedParts.iterator; b.next(); ) {
        var c = b.key;
        c instanceof W2 && (c = c.containingGroup, c === null || c.placeholder === null || a.draggedParts.contains(c) || c.placeholder.s());
      }
  }
  Le2.prototype.mayCopy = function() {
    if (!this.isCopyEnabled)
      return false;
    var a = this.diagram;
    if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowCopy || (Ta2 ? !a.lastInput.alt : !a.lastInput.control))
      return false;
    for (a = a.selection.iterator; a.next(); )
      if (a.value.canCopy())
        return true;
    return this.draggedLink !== null && this.dragsLink && this.draggedLink.canCopy() ? true : false;
  };
  Le2.prototype.mayDragOut = function() {
    if (!this.isCopyEnabled)
      return false;
    var a = this.diagram;
    if (!a.allowDragOut || !a.allowCopy || a.allowMove)
      return false;
    for (a = a.selection.iterator; a.next(); )
      if (a.value.canCopy())
        return true;
    return this.draggedLink !== null && this.dragsLink && this.draggedLink.canCopy() ? true : false;
  };
  Le2.prototype.mayMove = function() {
    var a = this.diagram;
    if (a.isReadOnly || !a.allowMove)
      return false;
    for (a = a.selection.iterator; a.next(); )
      if (a.value.canMove())
        return true;
    return this.draggedLink !== null && this.dragsLink && this.draggedLink.canMove() ? true : false;
  };
  Le2.prototype.computeBorder = function(a, b, c) {
    return this.sn || this.draggedParts === null || this.draggedParts.contains(a) ? null : c.assign(b);
  };
  Le2.prototype.Yz = function() {
    return Ne2;
  };
  Le2.prototype.mayDragIn = function() {
    var a = this.diagram;
    if (!a.allowDrop || a.isReadOnly || a.isModelReadOnly || !a.allowInsert)
      return false;
    var b = Ne2;
    return b === null || b.diagram.model.dataFormat !== a.model.dataFormat ? false : true;
  };
  Le2.prototype.doSimulatedDragEnter = function() {
    if (this.mayDragIn()) {
      var a = this.diagram;
      a.animationManager.rc();
      uf2(a);
      a.animationManager.rc();
      a = Ne2;
      a !== null && (a.diagram.Ws = false);
      this.doUpdateCursor(null, true);
    }
  };
  Le2.prototype.doSimulatedDragLeave = function() {
    var a = Ne2;
    a !== null && a.doSimulatedDragOut();
    this.doCancel();
  };
  Le2.prototype.doSimulatedDragOver = function() {
    var a = this.diagram;
    a.animationManager.Um = true;
    var b = Ne2;
    if (b !== null && b.draggedParts !== null) {
      if (!this.mayDragIn())
        return;
      vf2(this, b.draggedParts.If(), false, a.firstInput);
      hf2(this, this.copiedParts, false);
      kf2(this, a.lastInput.documentPoint);
    }
    a.animationManager.Um = false;
  };
  Le2.prototype.doSimulatedDrop = function() {
    var a = this.diagram, b = Ne2;
    if (b !== null) {
      var c = b.diagram;
      b.sn = true;
      af2(this);
      if (!this.mayDragIn())
        return;
      a.animationManager.Um = true;
      a.S("ChangingSelection", a.selection);
      this.xa("Drop");
      vf2(this, b.draggedParts.If(), true, a.lastInput);
      hf2(this, this.copiedParts, false);
      this.copiedParts !== null && (a.clearSelection(true), this.copiedParts.iteratorKeys.each(function(a2) {
        a2.isSelected = true;
      }));
      qf2(this, a.lastInput.documentPoint);
      a.Qa();
      b = a.selection;
      this.copiedParts !== null ? this.transactionResult = "ExternalCopy" : b = new G2();
      this.copiedParts = null;
      a.doFocus();
      a.S("ExternalObjectsDropped", b, c);
      this.stopTransaction();
      a.S("ChangedSelection", a.selection);
    }
    a.animationManager.Um = false;
  };
  function vf2(a, b, c, d) {
    if (a.copiedParts === null) {
      var e = a.diagram;
      if (!e.isReadOnly && !e.isModelReadOnly) {
        e.skipsUndoManager = !c;
        e.partManager.addsToTemporaryLayer = !c;
        a.startPoint = d.documentPoint;
        c = e.Vj(b, e, true);
        var f2 = N2.alloc();
        e = d = Infinity;
        for (var g2 = -Infinity, h = -Infinity, k = b.iterator; k.next(); ) {
          var l2 = k.value;
          if (l2.isVisible()) {
            var m2 = l2.location;
            l2 = m2.x;
            m2 = m2.y;
            isNaN(l2) || isNaN(m2) || (l2 < d && (d = l2), m2 < e && (e = m2), l2 > g2 && (g2 = l2), m2 > h && (h = m2));
          }
        }
        d === Infinity ? f2.h(0, 0, 0, 0) : f2.h(d, e, g2 - d, h - e);
        d = f2.x + f2.width / 2;
        e = f2.y + f2.height / 2;
        N2.free(f2);
        f2 = a.Vr;
        g2 = new H2();
        h = K2.alloc();
        for (k = b.iterator; k.next(); )
          l2 = k.value, l2 instanceof T2 && l2.canCopy() && (m2 = c.H(l2), m2 !== null && (m2.points = l2.points, gf2(m2, f2.x - d, f2.y - e), m2.suspendsRouting = true, g2.add(m2, a.Ad())));
        for (b = b.iterator; b.next(); )
          l2 = b.value, l2.Mc() && l2.canCopy() && (k = c.H(l2), k !== null && (l2 = l2.location, h.h(f2.x - (d - l2.x), f2.y - (e - l2.y)), k.location = h, k.Ta(), g2.add(k, a.Ad(h))));
        K2.free(h);
        a.copiedParts = g2;
        Oe2(a, g2.If());
        a.draggedLink !== null && (c = a.draggedLink, b = c.routeBounds, gf2(c, a.startPoint.x - (b.x + b.width / 2), a.startPoint.y - (b.y + b.height / 2)));
        a.doUpdateCursor(null, true);
      }
    }
  }
  Le2.prototype.doSimulatedDragOut = function() {
    var a = this.diagram;
    a.Ws = false;
    this.mayCopy() || this.mayMove() ? a.currentCursor = "" : a.currentCursor = this.nodropCursor;
    this.co = null;
  };
  Le2.prototype.computeMove = function(a, b, c, d) {
    c = this.diagram;
    return c !== null ? c.computeMove(a, b, this.dragOptions, d) : new K2();
  };
  na2.Object.defineProperties(Le2.prototype, { isCopyEnabled: { get: function() {
    return this.Sb;
  }, set: function(a) {
    this.Sb = a;
  } }, copiesEffectiveCollection: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, dragOptions: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba = a;
  } }, isGridSnapEnabled: { get: function() {
    return this.dragOptions.isGridSnapEnabled;
  }, set: function(a) {
    this.dragOptions.isGridSnapEnabled = a;
  } }, isComplexRoutingRealtime: { get: function() {
    return this.Hb;
  }, set: function(a) {
    this.Hb = a;
  } }, isGridSnapRealtime: { get: function() {
    return this.dragOptions.isGridSnapRealtime;
  }, set: function(a) {
    this.dragOptions.isGridSnapRealtime = a;
  } }, gridSnapCellSize: { get: function() {
    return this.dragOptions.gridSnapCellSize;
  }, set: function(a) {
    this.dragOptions.gridSnapCellSize.A(a) || (a = a.I(), this.dragOptions.gridSnapCellSize = a);
  } }, gridSnapCellSpot: {
    get: function() {
      return this.dragOptions.gridSnapCellSpot;
    },
    set: function(a) {
      this.dragOptions.gridSnapCellSpot.A(a) || (a = a.I(), this.dragOptions.gridSnapCellSpot = a);
    }
  }, gridSnapOrigin: { get: function() {
    return this.dragOptions.gridSnapOrigin;
  }, set: function(a) {
    this.dragOptions.gridSnapOrigin.A(a) || (a = a.I(), this.dragOptions.gridSnapOrigin = a);
  } }, dragsLink: { get: function() {
    return this.dragOptions.dragsLink;
  }, set: function(a) {
    this.dragOptions.dragsLink = a;
  } }, dragsTree: { get: function() {
    return this.dragOptions.dragsTree;
  }, set: function(a) {
    this.dragOptions.dragsTree = a;
  } }, copyCursor: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, moveCursor: { get: function() {
    return this.Nd;
  }, set: function(a) {
    this.Nd = a;
  } }, nodropCursor: { get: function() {
    return this.Od;
  }, set: function(a) {
    this.Od = a;
  } }, currentPart: {
    get: function() {
      return this.wa;
    },
    set: function(a) {
      this.wa = a;
    }
  }, copiedParts: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, draggedParts: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma = a;
  } }, draggingParts: { get: function() {
    return this.copiedParts !== null ? this.copiedParts.If() : this.draggedParts !== null ? this.draggedParts.If() : this.ke;
  } }, draggedLink: { get: function() {
    return this.diagram.draggedLink;
  }, set: function(a) {
    this.diagram.draggedLink = a;
  } }, isDragOutStarted: { get: function() {
    return this.sc;
  }, set: function(a) {
    this.sc = a;
  } }, startPoint: { get: function() {
    return this.Vr;
  }, set: function(a) {
    this.Vr.A(a) || this.Vr.assign(a);
  } }, delay: { get: function() {
    return this.Qk;
  }, set: function(a) {
    this.Qk = a;
  } } });
  Le2.prototype.getDraggingSource = Le2.prototype.Yz;
  var We = null, Ne2 = null, Re2 = null;
  Le2.className = "DraggingTool";
  We = new F2();
  Ma2("draggingTool", function() {
    return this.findTool("Dragging");
  }, function(a) {
    this.Za("Dragging", a, this.mouseMoveTools);
  });
  Pa2.prototype.doCancel = function() {
    Ne2 !== null && Ne2.doCancel();
    ue2.prototype.doCancel.call(this);
  };
  function wf2() {
    ue2.call(this);
    this.Od = 100;
    this.Ba = false;
    this.Th = "pointer";
    var a = new T2(), b = new xf2();
    b.isPanelMain = true;
    b.stroke = "blue";
    a.add(b);
    b = new xf2();
    b.toArrow = "Standard";
    b.fill = "blue";
    b.stroke = "blue";
    a.add(b);
    a.layerName = "Tool";
    this.$i = a;
    a = new W2();
    b = new xf2();
    b.portId = "";
    b.figure = "Rectangle";
    b.fill = null;
    b.stroke = "magenta";
    b.strokeWidth = 2;
    b.desiredSize = Ib2;
    a.add(b);
    a.selectable = false;
    a.layerName = "Tool";
    this.Zi = a;
    this.j = b;
    a = new W2();
    b = new xf2();
    b.portId = "";
    b.figure = "Rectangle";
    b.fill = null;
    b.stroke = "magenta";
    b.strokeWidth = 2;
    b.desiredSize = Ib2;
    a.add(b);
    a.selectable = false;
    a.layerName = "Tool";
    this.aj = a;
    this.o = b;
    this.Nd = this.sc = this.Hb = this.Ma = this.Sb = null;
    this.wa = true;
    this.tk = new H2();
    this.ke = this.ii = this.Yi = null;
  }
  ma2(wf2, ue2);
  wf2.prototype.doStop = function() {
    this.diagram.ug();
    this.originalToPort = this.originalToNode = this.originalFromPort = this.originalFromNode = this.originalLink = null;
    this.validPortsCache.clear();
    this.targetPort = null;
  };
  wf2.prototype.copyPortProperties = function(a, b, c, d, e) {
    if (a !== null && b !== null && c !== null && d !== null) {
      var f2 = b.Af(), g2 = Gb2.alloc();
      g2.width = b.naturalBounds.width * f2;
      g2.height = b.naturalBounds.height * f2;
      d.desiredSize = g2;
      Gb2.free(g2);
      e ? (d.toSpot = b.toSpot, d.toEndSegmentLength = b.toEndSegmentLength) : (d.fromSpot = b.fromSpot, d.fromEndSegmentLength = b.fromEndSegmentLength);
      c.locationSpot = yc2;
      f2 = K2.alloc();
      c.location = b.da(yc2, f2);
      K2.free(f2);
      d.angle = b.Ki();
      this.portTargeted !== null && this.portTargeted(a, b, c, d, e);
    }
  };
  wf2.prototype.setNoTargetPortProperties = function(a, b, c) {
    b !== null && (b.desiredSize = Ib2, b.fromSpot = rc2, b.toSpot = rc2);
    a !== null && (a.location = this.diagram.lastInput.documentPoint);
    this.portTargeted !== null && this.portTargeted(null, null, a, b, c);
  };
  wf2.prototype.doMouseDown = function() {
    this.isActive && this.doMouseMove();
  };
  wf2.prototype.doMouseMove = function() {
    if (this.isActive) {
      var a = this.diagram;
      this.targetPort = this.findTargetPort(this.isForwards);
      if (this.targetPort !== null && this.targetPort.part instanceof W2) {
        var b = this.targetPort.part;
        this.isForwards ? this.copyPortProperties(b, this.targetPort, this.temporaryToNode, this.temporaryToPort, true) : this.copyPortProperties(b, this.targetPort, this.temporaryFromNode, this.temporaryFromPort, false);
      } else
        this.isForwards ? this.setNoTargetPortProperties(this.temporaryToNode, this.temporaryToPort, true) : this.setNoTargetPortProperties(this.temporaryFromNode, this.temporaryFromPort, false);
      (a.allowHorizontalScroll || a.allowVerticalScroll) && a.ns(a.lastInput.viewPoint);
    }
  };
  wf2.prototype.findValidLinkablePort = function(a, b) {
    if (a === null)
      return null;
    var c = a.part;
    if (!(c instanceof W2))
      return null;
    for (; a !== null; ) {
      var d = b ? a.toLinkable : a.fromLinkable;
      if (d === true && (a.portId !== null || a instanceof W2) && (b ? this.isValidTo(c, a) : this.isValidFrom(c, a)))
        return a;
      if (d === false)
        break;
      a = a.panel;
    }
    return null;
  };
  wf2.prototype.findTargetPort = function(a) {
    var b = this.diagram, c = b.lastInput.documentPoint, d = this.portGravity;
    0 >= d && (d = 0.1);
    var e = this, f2 = b.qg(c, d, function(b2) {
      return e.findValidLinkablePort(b2, a);
    }, null, true);
    d = Infinity;
    b = null;
    for (f2 = f2.iterator; f2.next(); ) {
      var g2 = f2.value, h = g2.part;
      if (h instanceof W2) {
        var k = g2.da(yc2, K2.alloc()), l2 = c.x - k.x, m2 = c.y - k.y;
        K2.free(k);
        k = l2 * l2 + m2 * m2;
        k < d && (l2 = this.validPortsCache.H(g2), l2 !== null ? l2 && (b = g2, d = k) : a && this.isValidLink(this.originalFromNode, this.originalFromPort, h, g2) || !a && this.isValidLink(h, g2, this.originalToNode, this.originalToPort) ? (this.validPortsCache.add(g2, true), b = g2, d = k) : this.validPortsCache.add(g2, false));
      }
    }
    return b !== null && (c = b.part, c instanceof W2 && (c.layer === null || c.layer.allowLink)) ? b : null;
  };
  wf2.prototype.isValidFrom = function(a, b) {
    if (a === null || b === null)
      return this.isUnconnectedLinkValid;
    if (this.diagram.currentTool === this && (a.layer !== null && !a.layer.allowLink || b.fromLinkable !== true))
      return false;
    var c = b.fromMaxLinks;
    if (Infinity > c) {
      if (this.originalLink !== null && a === this.originalFromNode && b === this.originalFromPort)
        return true;
      b = b.portId;
      b === null && (b = "");
      if (a.Wp(b).count >= c)
        return false;
    }
    return true;
  };
  wf2.prototype.isValidTo = function(a, b) {
    if (a === null || b === null)
      return this.isUnconnectedLinkValid;
    if (this.diagram.currentTool === this && (a.layer !== null && !a.layer.allowLink || b.toLinkable !== true))
      return false;
    var c = b.toMaxLinks;
    if (Infinity > c) {
      if (this.originalLink !== null && a === this.originalToNode && b === this.originalToPort)
        return true;
      b = b.portId;
      b === null && (b = "");
      if (a.Gd(b).count >= c)
        return false;
    }
    return true;
  };
  wf2.prototype.isInSameNode = function(a, b) {
    if (a === null || b === null)
      return false;
    if (a === b)
      return true;
    a = a.part;
    b = b.part;
    return a !== null && a === b;
  };
  wf2.prototype.isLinked = function(a, b) {
    if (a === null || b === null)
      return false;
    var c = a.part;
    if (!(c instanceof W2))
      return false;
    a = a.portId;
    a === null && (a = "");
    var d = b.part;
    if (!(d instanceof W2))
      return false;
    b = b.portId;
    b === null && (b = "");
    for (b = d.Gd(b); b.next(); )
      if (d = b.value, d.fromNode === c && d.fromPortId === a)
        return true;
    return false;
  };
  wf2.prototype.isValidLink = function(a, b, c, d) {
    if (!this.isValidFrom(a, b) || !this.isValidTo(c, d) || !(b === null || d === null || (b.fromLinkableSelfNode && d.toLinkableSelfNode || !this.isInSameNode(b, d)) && (b.fromLinkableDuplicates && d.toLinkableDuplicates || !this.isLinked(b, d))) || this.originalLink !== null && (a !== null && this.isLabelDependentOnLink(a, this.originalLink) || c !== null && this.isLabelDependentOnLink(c, this.originalLink)) || a !== null && c !== null && (a.data === null && c.data !== null || a.data !== null && c.data === null) || !this.isValidCycle(a, c, this.originalLink))
      return false;
    if (a !== null) {
      var e = a.linkValidation;
      if (e !== null && !e(a, b, c, d, this.originalLink))
        return false;
    }
    if (c !== null && (e = c.linkValidation, e !== null && !e(a, b, c, d, this.originalLink)))
      return false;
    e = this.linkValidation;
    return e !== null ? e(a, b, c, d, this.originalLink) : true;
  };
  wf2.prototype.isLabelDependentOnLink = function(a, b) {
    if (a === null)
      return false;
    var c = a.labeledLink;
    if (c === null)
      return false;
    if (c === b)
      return true;
    var d = new G2();
    d.add(a);
    return yf2(this, c, b, d);
  };
  function yf2(a, b, c, d) {
    if (b === c)
      return true;
    var e = b.fromNode;
    if (e !== null && e.isLinkLabel && (d.add(e), yf2(a, e.labeledLink, c, d)))
      return true;
    b = b.toNode;
    return b !== null && b.isLinkLabel && (d.add(b), yf2(a, b.labeledLink, c, d)) ? true : false;
  }
  wf2.prototype.isValidCycle = function(a, b, c) {
    c === void 0 && (c = null);
    if (a === null || b === null)
      return this.isUnconnectedLinkValid;
    var d = this.diagram.validCycle;
    if (d !== Cf2) {
      if (d === Df2) {
        d = c || this.temporaryLink;
        if (d !== null && !d.isTreeLink)
          return true;
        for (d = b.linksConnected; d.next(); ) {
          var e = d.value;
          if (e !== c && e.isTreeLink && e.toNode === b)
            return false;
        }
        return !Ef2(this, a, b, c, true);
      }
      if (d === Ff2) {
        d = c || this.temporaryLink;
        if (d !== null && !d.isTreeLink)
          return true;
        for (d = a.linksConnected; d.next(); )
          if (e = d.value, e !== c && e.isTreeLink && e.fromNode === a)
            return false;
        return !Ef2(this, a, b, c, true);
      }
      if (d === Gf2)
        return a === b ? a = true : (d = new G2(), d.add(b), a = Hf2(this, d, a, b, c)), !a;
      if (d === If2)
        return !Ef2(this, a, b, c, false);
      if (d === Jf2)
        return a === b ? a = true : (d = new G2(), d.add(b), a = Kf2(this, d, a, b, c)), !a;
    }
    return true;
  };
  function Ef2(a, b, c, d, e) {
    if (b === c)
      return true;
    if (b === null || c === null)
      return false;
    for (var f2 = b.linksConnected; f2.next(); ) {
      var g2 = f2.value;
      if (g2 !== d && (!e || g2.isTreeLink) && g2.toNode === b && (g2 = g2.fromNode, g2 !== b && Ef2(a, g2, c, d, e)))
        return true;
    }
    return false;
  }
  function Hf2(a, b, c, d, e) {
    if (c === d)
      return true;
    if (c === null || d === null || b.contains(c))
      return false;
    b.add(c);
    for (var f2 = c.linksConnected; f2.next(); ) {
      var g2 = f2.value;
      if (g2 !== e && g2.toNode === c && (g2 = g2.fromNode, g2 !== c && Hf2(a, b, g2, d, e)))
        return true;
    }
    return false;
  }
  function Kf2(a, b, c, d, e) {
    if (c === d)
      return true;
    if (c === null || d === null || b.contains(c))
      return false;
    b.add(c);
    for (var f2 = c.linksConnected; f2.next(); ) {
      var g2 = f2.value;
      if (g2 !== e) {
        var h = g2.fromNode;
        g2 = g2.toNode;
        h = h === c ? g2 : h;
        if (h !== c && Kf2(a, b, h, d, e))
          return true;
      }
    }
    return false;
  }
  na2.Object.defineProperties(wf2.prototype, { portGravity: { get: function() {
    return this.Od;
  }, set: function(a) {
    0 <= a && (this.Od = a);
  } }, isUnconnectedLinkValid: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba = a;
  } }, linkingCursor: { get: function() {
    return this.Th;
  }, set: function(a) {
    this.Th = a;
  } }, temporaryLink: { get: function() {
    return this.$i;
  }, set: function(a) {
    this.$i = a;
  } }, temporaryFromNode: {
    get: function() {
      return this.Zi;
    },
    set: function(a) {
      if (this.Zi = a)
        this.j = a.port;
    }
  }, temporaryFromPort: { get: function() {
    return this.j;
  }, set: function(a) {
    if (this.j !== null) {
      var b = this.j.panel;
      if (b !== null) {
        var c = b.T.indexOf(this.j);
        b.eb(c);
        b.wb(c, a);
      }
    }
    this.j = a;
  } }, temporaryToNode: { get: function() {
    return this.aj;
  }, set: function(a) {
    if (this.aj = a)
      this.o = a.port;
  } }, temporaryToPort: { get: function() {
    return this.o;
  }, set: function(a) {
    if (this.o !== null) {
      var b = this.o.panel;
      if (b !== null) {
        var c = b.T.indexOf(this.o);
        b.eb(c);
        b.wb(c, a);
      }
    }
    this.o = a;
  } }, originalLink: { get: function() {
    return this.Sb;
  }, set: function(a) {
    this.Sb = a;
  } }, originalFromNode: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma = a;
  } }, originalFromPort: { get: function() {
    return this.Hb;
  }, set: function(a) {
    this.Hb = a;
  } }, originalToNode: { get: function() {
    return this.sc;
  }, set: function(a) {
    this.sc = a;
  } }, originalToPort: { get: function() {
    return this.Nd;
  }, set: function(a) {
    this.Nd = a;
  } }, isForwards: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa = a;
  } }, validPortsCache: { get: function() {
    return this.tk;
  } }, targetPort: { get: function() {
    return this.Yi;
  }, set: function(a) {
    this.Yi = a;
  } }, linkValidation: { get: function() {
    return this.ii;
  }, set: function(a) {
    this.ii = a;
  } }, portTargeted: {
    get: function() {
      return this.ke;
    },
    set: function(a) {
      this.ke = a;
    }
  } });
  wf2.className = "LinkingBaseTool";
  function Lf2() {
    wf2.call(this);
    this.name = "Linking";
    this.L = {};
    this.C = null;
    this.K = Mf2;
    this.Pd = null;
  }
  ma2(Lf2, wf2);
  Lf2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return a.isReadOnly || a.isModelReadOnly || !a.allowLink || !a.model.Ds() || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? false : this.findLinkablePort() !== null;
  };
  Lf2.prototype.findLinkablePort = function() {
    var a = this.diagram, b = this.startObject;
    b === null && (b = a.Zb(a.firstInput.documentPoint, null, null));
    if (b === null)
      return null;
    a = b.part;
    if (!(a instanceof W2))
      return null;
    var c = this.direction;
    if (c === Mf2 || c === Nf2) {
      var d = this.findValidLinkablePort(b, false);
      if (d !== null || this.startObject === a && (d = a.port, this.findValidLinkablePort(d, false)))
        return this.isForwards = true, d;
    }
    if (c === Mf2 || c === Of2) {
      if (b = this.findValidLinkablePort(b, true), b !== null || this.startObject === a && (b = a.port, this.findValidLinkablePort(b, true)))
        return this.isForwards = false, b;
    }
    return null;
  };
  Lf2.prototype.doActivate = function() {
    var a = this.diagram, b = this.findLinkablePort();
    b === null ? this.stopTool() : (this.xa(this.name), a.isMouseCaptured = true, a.currentCursor = this.linkingCursor, this.isForwards ? (this.temporaryToNode === null || this.temporaryToNode.location.u() || (this.temporaryToNode.location = a.lastInput.documentPoint), this.originalFromPort = b, b = this.originalFromPort.part, b instanceof W2 && (this.originalFromNode = b), this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort, false)) : (this.temporaryFromNode === null || this.temporaryFromNode.location.u() || (this.temporaryFromNode.location = a.lastInput.documentPoint), this.originalToPort = b, b = this.originalToPort.part, b instanceof W2 && (this.originalToNode = b), this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, true)), a.add(this.temporaryFromNode), a.add(this.temporaryToNode), this.temporaryLink !== null && (this.temporaryFromNode !== null && (this.temporaryLink.fromNode = this.temporaryFromNode), this.temporaryToNode !== null && (this.temporaryLink.toNode = this.temporaryToNode), this.temporaryLink.isTreeLink = this.isNewTreeLink(), this.temporaryLink.Va(), a.add(this.temporaryLink)), this.isActive = true);
  };
  Lf2.prototype.doDeactivate = function() {
    this.isActive = false;
    var a = this.diagram;
    a.remove(this.temporaryLink);
    a.remove(this.temporaryFromNode);
    a.remove(this.temporaryToNode);
    a.isMouseCaptured = false;
    a.currentCursor = "";
    this.stopTransaction();
  };
  Lf2.prototype.doStop = function() {
    wf2.prototype.doStop.call(this);
    this.startObject = null;
  };
  Lf2.prototype.doMouseUp = function() {
    if (this.isActive) {
      var a = this.diagram, b = this.transactionResult = null, c = null, d = null, e = null, f2 = null;
      try {
        var g2 = this.targetPort = this.findTargetPort(this.isForwards);
        if (g2 !== null) {
          var h = g2.part;
          h instanceof W2 && (this.isForwards ? (this.originalFromNode !== null && (b = this.originalFromNode, c = this.originalFromPort), d = h, e = g2) : (b = h, c = g2, this.originalToNode !== null && (d = this.originalToNode, e = this.originalToPort)));
        } else
          this.isForwards ? this.originalFromNode !== null && this.isUnconnectedLinkValid && (b = this.originalFromNode, c = this.originalFromPort) : this.originalToNode !== null && this.isUnconnectedLinkValid && (d = this.originalToNode, e = this.originalToPort);
        b !== null || d !== null ? (f2 = this.insertLink(b, c, d, e), f2 !== null ? (g2 === null && (this.isForwards ? f2.defaultToPoint = a.lastInput.documentPoint : f2.defaultFromPoint = a.lastInput.documentPoint), a.allowSelect && (a.S("ChangingSelection", a.selection), a.clearSelection(true), f2.isSelected = true), this.transactionResult = this.name, a.S("LinkDrawn", f2)) : this.doNoLink(b, c, d, e)) : this.isForwards ? this.doNoLink(this.originalFromNode, this.originalFromPort, null, null) : this.doNoLink(null, null, this.originalToNode, this.originalToPort);
      } finally {
        this.stopTool(), f2 && a.allowSelect && a.S("ChangedSelection", a.selection);
      }
    }
  };
  Lf2.prototype.isNewTreeLink = function() {
    var a = this.archetypeLinkData;
    if (a === null)
      return true;
    if (a instanceof T2)
      return a.isTreeLink;
    var b = this.diagram;
    if (b === null)
      return true;
    a = b.partManager.getLinkCategoryForData(a);
    b = b.partManager.findLinkTemplateForCategory(a);
    return b !== null ? b.isTreeLink : true;
  };
  Lf2.prototype.insertLink = function(a, b, c, d) {
    return this.diagram.partManager.insertLink(a, b, c, d);
  };
  Lf2.prototype.doNoLink = function() {
  };
  na2.Object.defineProperties(Lf2.prototype, { archetypeLinkData: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, archetypeLabelNodeData: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, direction: { get: function() {
    return this.K;
  }, set: function(a) {
    this.K = a;
  } }, startObject: { get: function() {
    return this.Pd;
  }, set: function(a) {
    this.Pd = a;
  } } });
  var Mf2 = new D2(Lf2, "Either", 0), Nf2 = new D2(Lf2, "ForwardsOnly", 0), Of2 = new D2(Lf2, "BackwardsOnly", 0);
  Lf2.className = "LinkingTool";
  Lf2.Either = Mf2;
  Lf2.ForwardsOnly = Nf2;
  Lf2.BackwardsOnly = Of2;
  function Se2() {
    wf2.call(this);
    this.name = "Relinking";
    var a = new xf2();
    a.figure = "Diamond";
    a.desiredSize = Kb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    a.cursor = this.linkingCursor;
    a.segmentIndex = 0;
    this.L = a;
    a = new xf2();
    a.figure = "Diamond";
    a.desiredSize = Kb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    a.cursor = this.linkingCursor;
    a.segmentIndex = -1;
    this.Pd = a;
    this.C = null;
    this.gx = new N2();
  }
  ma2(Se2, wf2);
  Se2.prototype.updateAdornments = function(a) {
    if (a !== null && a instanceof T2) {
      var b = "RelinkFrom", c = null;
      if (a.isSelected && !this.diagram.isReadOnly) {
        var d = a.selectionObject;
        d !== null && a.canRelinkFrom() && a.actualBounds.u() && a.isVisible() && d.actualBounds.u() && d.Ff() && (c = a.Yj(b), c === null && (c = this.makeAdornment(d, false), a.xh(b, c)));
      }
      c === null && a.Gf(b);
      b = "RelinkTo";
      c = null;
      a.isSelected && !this.diagram.isReadOnly && (d = a.selectionObject, d !== null && a.canRelinkTo() && a.actualBounds.u() && a.isVisible() && d.actualBounds.u() && d.Ff() && (c = a.Yj(b), c === null ? (c = this.makeAdornment(d, true), a.xh(b, c)) : c.s()));
      c === null && a.Gf(b);
    }
  };
  Se2.prototype.makeAdornment = function(a, b) {
    var c = new ze();
    c.type = X2.Link;
    b = b ? this.toHandleArchetype : this.fromHandleArchetype;
    b !== null && c.add(b.copy());
    c.adornedObject = a;
    return c;
  };
  Se2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    if (a.isReadOnly || a.isModelReadOnly || !a.allowRelink || !a.model.Ds() || !a.lastInput.left)
      return false;
    var b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom");
    b === null && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo"));
    return b !== null;
  };
  Se2.prototype.doActivate = function() {
    var a = this.diagram;
    if (this.originalLink === null) {
      var b = this.handle;
      b === null && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkFrom"), b === null && (b = this.findToolHandleAt(a.firstInput.documentPoint, "RelinkTo")));
      if (b === null)
        return;
      var c = b.part;
      if (!(c instanceof ze && c.adornedPart instanceof T2))
        return;
      this.handle = b;
      this.isForwards = c === null || c.category === "RelinkTo";
      this.originalLink = c.adornedPart;
    }
    this.xa(this.name);
    a.isMouseCaptured = true;
    a.currentCursor = this.linkingCursor;
    this.originalFromPort = this.originalLink.fromPort;
    this.originalFromNode = this.originalLink.fromNode;
    this.originalToPort = this.originalLink.toPort;
    this.originalToNode = this.originalLink.toNode;
    this.gx.set(this.originalLink.actualBounds);
    this.originalLink !== null && 0 < this.originalLink.pointsCount && (this.originalLink.fromNode === null && (this.temporaryFromPort !== null && (this.temporaryFromPort.desiredSize = Hb2), this.temporaryFromNode !== null && (this.temporaryFromNode.location = this.originalLink.i(0))), this.originalLink.toNode === null && (this.temporaryToPort !== null && (this.temporaryToPort.desiredSize = Hb2), this.temporaryToNode !== null && (this.temporaryToNode.location = this.originalLink.i(this.originalLink.pointsCount - 1))));
    this.copyPortProperties(this.originalFromNode, this.originalFromPort, this.temporaryFromNode, this.temporaryFromPort, false);
    this.copyPortProperties(this.originalToNode, this.originalToPort, this.temporaryToNode, this.temporaryToPort, true);
    a.add(this.temporaryFromNode);
    a.add(this.temporaryToNode);
    this.temporaryLink !== null && (this.temporaryFromNode !== null && (this.temporaryLink.fromNode = this.temporaryFromNode), this.temporaryToNode !== null && (this.temporaryLink.toNode = this.temporaryToNode), this.copyLinkProperties(this.originalLink, this.temporaryLink), this.temporaryLink.Va(), a.add(this.temporaryLink));
    this.isActive = true;
  };
  Se2.prototype.copyLinkProperties = function(a, b) {
    if (a !== null && b !== null) {
      b.adjusting = a.adjusting;
      b.corner = a.corner;
      var c = a.curve;
      if (c === Pf2 || c === Qf2)
        c = Rf2;
      b.curve = c;
      b.curviness = a.curviness;
      b.isTreeLink = a.isTreeLink;
      b.points = a.points;
      b.routing = a.routing;
      b.smoothness = a.smoothness;
      b.fromSpot = a.fromSpot;
      b.fromEndSegmentLength = a.fromEndSegmentLength;
      b.fromShortLength = a.fromShortLength;
      b.toSpot = a.toSpot;
      b.toEndSegmentLength = a.toEndSegmentLength;
      b.toShortLength = a.toShortLength;
    }
  };
  Se2.prototype.doDeactivate = function() {
    this.isActive = false;
    var a = this.diagram;
    a.remove(this.temporaryLink);
    a.remove(this.temporaryFromNode);
    a.remove(this.temporaryToNode);
    a.isMouseCaptured = false;
    a.currentCursor = "";
    this.stopTransaction();
  };
  Se2.prototype.doStop = function() {
    wf2.prototype.doStop.call(this);
    this.handle = null;
  };
  Se2.prototype.doMouseUp = function() {
    if (this.isActive) {
      var a = this.diagram;
      this.transactionResult = null;
      var b = this.originalFromNode, c = this.originalFromPort, d = this.originalToNode, e = this.originalToPort, f2 = this.originalLink;
      try {
        this.targetPort = this.findTargetPort(this.isForwards);
        if (this.targetPort !== null) {
          var g2 = this.targetPort.part;
          g2 instanceof W2 && (this.isForwards ? (d = g2, e = this.targetPort) : (b = g2, c = this.targetPort));
        } else
          this.isUnconnectedLinkValid ? this.isForwards ? e = d = null : c = b = null : f2 = null;
        f2 !== null ? (this.reconnectLink(f2, this.isForwards ? d : b, this.isForwards ? e : c, this.isForwards), this.targetPort === null && (this.isForwards ? f2.defaultToPoint = a.lastInput.documentPoint : f2.defaultFromPoint = a.lastInput.documentPoint, f2.Va()), this.transactionResult = this.name, a.S("LinkRelinked", f2, this.isForwards ? this.originalToPort : this.originalFromPort)) : this.doNoRelink(this.originalLink, this.isForwards);
        this.originalLink.fq(this.gx);
      } finally {
        this.stopTool();
      }
    }
  };
  Se2.prototype.reconnectLink = function(a, b, c, d) {
    c = c !== null && c.portId !== null ? c.portId : "";
    d ? (a.toNode = b, a.toPortId = c) : (a.fromNode = b, a.fromPortId = c);
    return true;
  };
  Se2.prototype.doNoRelink = function() {
  };
  function pf2(a, b, c, d, e) {
    b !== null ? (a.copyPortProperties(b, c, a.temporaryFromNode, a.temporaryFromPort, false), a.diagram.add(a.temporaryFromNode)) : a.diagram.remove(a.temporaryFromNode);
    d !== null ? (a.copyPortProperties(d, e, a.temporaryToNode, a.temporaryToPort, true), a.diagram.add(a.temporaryToNode)) : a.diagram.remove(a.temporaryToNode);
  }
  na2.Object.defineProperties(Se2.prototype, { fromHandleArchetype: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, toHandleArchetype: { get: function() {
    return this.Pd;
  }, set: function(a) {
    this.Pd = a;
  } }, handle: { get: function() {
    return this.C;
  }, set: function(a) {
    if (a !== null && !(a.part instanceof ze))
      throw Error("new handle is not in an Adornment: " + a);
    this.C = a;
  } } });
  Se2.className = "RelinkingTool";
  Ma2("linkingTool", function() {
    return this.findTool("Linking");
  }, function(a) {
    this.Za("Linking", a, this.mouseMoveTools);
  });
  Ma2("relinkingTool", function() {
    return this.findTool("Relinking");
  }, function(a) {
    this.Za("Relinking", a, this.mouseDownTools);
  });
  function Sf2() {
    ue2.call(this);
    this.name = "LinkReshaping";
    var a = new xf2();
    a.figure = "Rectangle";
    a.desiredSize = Jb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    this.o = a;
    a = new xf2();
    a.figure = "Diamond";
    a.desiredSize = Kb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    a.cursor = "move";
    this.C = a;
    this.L = 3;
    this.ut = this.j = null;
    this.hx = new K2();
    this.Fr = new F2();
  }
  ma2(Sf2, ue2);
  Sf2.prototype.cv = function(a) {
    return a && a.Jr && a.Jr.value !== 0 ? a.Jr : Tf2;
  };
  Sf2.prototype.Am = function(a, b) {
    a.Jr = b;
  };
  Sf2.prototype.updateAdornments = function(a) {
    if (a !== null && a instanceof T2) {
      var b = null;
      if (a.isSelected && !this.diagram.isReadOnly) {
        var c = a.path;
        c !== null && a.canReshape() && a.actualBounds.u() && a.isVisible() && c.actualBounds.u() && c.Ff() && (b = a.Yj(this.name), b === null || b.$w !== a.pointsCount || b.vx !== a.resegmentable) && (b = this.makeAdornment(c), b !== null && (b.$w = a.pointsCount, b.vx = a.resegmentable, a.xh(this.name, b)));
      }
      b === null && a.Gf(this.name);
    }
  };
  Sf2.prototype.makeAdornment = function(a) {
    var b = a.part, c = b.pointsCount, d = b.isOrthogonal, e = null;
    if (b.points !== null && 1 < c) {
      e = new ze();
      e.type = X2.Link;
      c = b.firstPickIndex;
      var f2 = b.lastPickIndex, g2 = d ? 1 : 0;
      if (b.resegmentable && b.computeCurve() !== Uf2)
        for (var h = c + g2; h < f2 - g2; h++) {
          var k = this.makeResegmentHandle(a, h);
          k !== null && (k.segmentIndex = h, k.segmentFraction = 0.5, k.fromMaxLinks = 999, e.add(k));
        }
      for (g2 = c + 1; g2 < f2; g2++)
        if (h = this.makeHandle(a, g2), h !== null) {
          h.segmentIndex = g2;
          if (g2 !== c)
            if (g2 === c + 1 && d) {
              k = b.i(c);
              var l2 = b.i(c + 1);
              M2.w(k.x, l2.x) && M2.w(k.y, l2.y) && (l2 = b.i(c - 1));
              M2.w(k.x, l2.x) ? (this.Am(h, Vf2), h.cursor = "n-resize") : M2.w(k.y, l2.y) && (this.Am(h, Wf2), h.cursor = "w-resize");
            } else
              g2 === f2 - 1 && d ? (k = b.i(f2 - 1), l2 = b.i(f2), M2.w(k.x, l2.x) && M2.w(k.y, l2.y) && (k = b.i(f2 + 1)), M2.w(k.x, l2.x) ? (this.Am(h, Vf2), h.cursor = "n-resize") : M2.w(k.y, l2.y) && (this.Am(h, Wf2), h.cursor = "w-resize")) : g2 !== f2 && (this.Am(h, Xf2), h.cursor = "move");
          e.add(h);
        }
      e.adornedObject = a;
    }
    return e;
  };
  Sf2.prototype.makeHandle = function() {
    var a = this.handleArchetype;
    return a === null ? null : a.copy();
  };
  Sf2.prototype.makeResegmentHandle = function() {
    var a = this.midHandleArchetype;
    return a === null ? null : a.copy();
  };
  Sf2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return !a.isReadOnly && a.allowReshape && a.lastInput.left ? this.findToolHandleAt(a.firstInput.documentPoint, this.name) !== null : false;
  };
  Sf2.prototype.doActivate = function() {
    var a = this.diagram;
    this.handle === null && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
    if (this.handle !== null) {
      var b = this.handle.part.adornedPart;
      if (b instanceof T2) {
        this.ut = b;
        a.isMouseCaptured = true;
        this.xa(this.name);
        if (b.resegmentable && this.handle.fromMaxLinks === 999) {
          var c = b.points.copy(), d = this.getResegmentingPoint();
          c.wb(this.handle.segmentIndex + 1, d);
          b.isOrthogonal && c.wb(this.handle.segmentIndex + 1, d);
          b.points = c;
          b.Mb();
          b.updateAdornments();
          this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name);
          if (this.handle === null) {
            this.doDeactivate();
            return;
          }
        }
        this.hx = b.i(this.handle.segmentIndex);
        this.Fr = b.points.copy();
        this.isActive = true;
      }
    }
  };
  Sf2.prototype.doDeactivate = function() {
    this.stopTransaction();
    this.ut = this.handle = null;
    this.isActive = this.diagram.isMouseCaptured = false;
  };
  Sf2.prototype.doCancel = function() {
    var a = this.adornedLink;
    a !== null && (a.points = this.Fr);
    this.stopTool();
  };
  Sf2.prototype.getResegmentingPoint = function() {
    return this.handle.da(yc2);
  };
  Sf2.prototype.doMouseMove = function() {
    var a = this.diagram;
    this.isActive && (a = this.computeReshape(a.lastInput.documentPoint), this.reshape(a));
  };
  Sf2.prototype.doMouseUp = function() {
    var a = this.diagram;
    if (this.isActive) {
      var b = this.computeReshape(a.lastInput.documentPoint);
      this.reshape(b);
      b = this.adornedLink;
      if (b !== null && b.resegmentable) {
        var c = this.handle.segmentIndex, d = b.i(c - 1), e = b.i(c), f2 = b.i(c + 1);
        if (b.isOrthogonal) {
          if (c > b.firstPickIndex + 1 && c < b.lastPickIndex - 1) {
            var g2 = b.i(c - 2);
            if (Math.abs(d.x - e.x) < this.resegmentingDistance && Math.abs(d.y - e.y) < this.resegmentingDistance && (Yf2(this, g2, d, e, f2, true) || Yf2(this, g2, d, e, f2, false))) {
              var h = b.points.copy();
              Yf2(this, g2, d, e, f2, true) ? (h.Oc(c - 2, new K2(g2.x, (f2.y + g2.y) / 2)), h.Oc(c + 1, new K2(f2.x, (f2.y + g2.y) / 2))) : (h.Oc(c - 2, new K2((f2.x + g2.x) / 2, g2.y)), h.Oc(c + 1, new K2((f2.x + g2.x) / 2, f2.y)));
              h.eb(c);
              h.eb(c - 1);
              b.points = h;
              b.Mb();
            } else
              g2 = b.i(c + 2), Math.abs(e.x - f2.x) < this.resegmentingDistance && Math.abs(e.y - f2.y) < this.resegmentingDistance && (Yf2(this, d, e, f2, g2, true) || Yf2(this, d, e, f2, g2, false)) && (h = b.points.copy(), Yf2(this, d, e, f2, g2, true) ? (h.Oc(c - 1, new K2(d.x, (d.y + g2.y) / 2)), h.Oc(c + 2, new K2(g2.x, (d.y + g2.y) / 2))) : (h.Oc(c - 1, new K2((d.x + g2.x) / 2, d.y)), h.Oc(c + 2, new K2((d.x + g2.x) / 2, g2.y))), h.eb(c + 1), h.eb(c), b.points = h, b.Mb());
          }
        } else
          g2 = K2.alloc(), M2.Ih(d.x, d.y, f2.x, f2.y, e.x, e.y, g2) && g2.xf(e) < this.resegmentingDistance * this.resegmentingDistance && (d = b.points.copy(), d.eb(c), b.points = d, b.Mb()), K2.free(g2);
      }
      a.Qa();
      this.transactionResult = this.name;
      a.S("LinkReshaped", this.adornedLink, this.Fr);
    }
    this.stopTool();
  };
  function Yf2(a, b, c, d, e, f2) {
    return f2 ? Math.abs(b.y - c.y) < a.resegmentingDistance && Math.abs(c.y - d.y) < a.resegmentingDistance && Math.abs(d.y - e.y) < a.resegmentingDistance : Math.abs(b.x - c.x) < a.resegmentingDistance && Math.abs(c.x - d.x) < a.resegmentingDistance && Math.abs(d.x - e.x) < a.resegmentingDistance;
  }
  Sf2.prototype.reshape = function(a) {
    var b = this.adornedLink;
    b.Lh();
    var c = this.handle.segmentIndex, d = this.cv(this.handle);
    if (b.isOrthogonal)
      if (c === b.firstPickIndex + 1)
        c = b.firstPickIndex + 1, d === Vf2 ? (b.M(c, b.i(c - 1).x, a.y), b.M(c + 1, b.i(c + 2).x, a.y)) : d === Wf2 && (b.M(c, a.x, b.i(c - 1).y), b.M(c + 1, a.x, b.i(c + 2).y));
      else if (c === b.lastPickIndex - 1)
        c = b.lastPickIndex - 1, d === Vf2 ? (b.M(c - 1, b.i(c - 2).x, a.y), b.M(c, b.i(c + 1).x, a.y)) : d === Wf2 && (b.M(c - 1, a.x, b.i(c - 2).y), b.M(c, a.x, b.i(c + 1).y));
      else {
        d = c;
        var e = b.i(d), f2 = b.i(d - 1), g2 = b.i(d + 1);
        M2.w(f2.x, e.x) && M2.w(e.y, g2.y) ? (M2.w(f2.x, b.i(d - 2).x) && !M2.w(f2.y, b.i(d - 2).y) ? (b.l(d, a.x, f2.y), c++, d++) : b.M(d - 1, a.x, f2.y), M2.w(g2.y, b.i(d + 2).y) && !M2.w(g2.x, b.i(d + 2).x) ? b.l(d + 1, g2.x, a.y) : b.M(d + 1, g2.x, a.y)) : M2.w(f2.y, e.y) && M2.w(e.x, g2.x) ? (M2.w(f2.y, b.i(d - 2).y) && !M2.w(f2.x, b.i(d - 2).x) ? (b.l(d, f2.x, a.y), c++, d++) : b.M(d - 1, f2.x, a.y), M2.w(g2.x, b.i(d + 2).x) && !M2.w(g2.y, b.i(d + 2).y) ? b.l(d + 1, a.x, g2.y) : b.M(d + 1, a.x, g2.y)) : M2.w(f2.x, e.x) && M2.w(e.x, g2.x) ? (M2.w(f2.x, b.i(d - 2).x) && !M2.w(f2.y, b.i(d - 2).y) ? (b.l(d, a.x, f2.y), c++, d++) : b.M(d - 1, a.x, f2.y), M2.w(g2.x, b.i(d + 2).x) && !M2.w(g2.y, b.i(d + 2).y) ? b.l(d + 1, a.x, g2.y) : b.M(d + 1, a.x, g2.y)) : M2.w(f2.y, e.y) && M2.w(e.y, g2.y) && (M2.w(f2.y, b.i(d - 2).y) && !M2.w(f2.x, b.i(d - 2).x) ? (b.l(d, f2.x, a.y), c++, d++) : b.M(d - 1, f2.x, a.y), M2.w(g2.y, b.i(d + 2).y) && !M2.w(g2.x, b.i(d + 2).x) ? b.l(d + 1, g2.x, a.y) : b.M(d + 1, g2.x, a.y));
        b.M(c, a.x, a.y);
      }
    else
      b.M(c, a.x, a.y), d = b.fromNode, e = b.fromPort, d !== null && (f2 = d.findVisibleNode(), f2 !== null && f2 !== d && (d = f2, e = d.port)), c === 1 && b.computeSpot(true, e).Bc() && (f2 = e.da(yc2, K2.alloc()), d = b.getLinkPointFromPoint(d, e, f2, a, true, K2.alloc()), b.M(0, d.x, d.y), K2.free(f2), K2.free(d)), d = b.toNode, e = b.toPort, d !== null && (f2 = d.findVisibleNode(), f2 !== null && f2 !== d && (d = f2, e = d.port)), c === b.pointsCount - 2 && b.computeSpot(false, e).Bc() && (c = e.da(yc2, K2.alloc()), a = b.getLinkPointFromPoint(d, e, c, a, false, K2.alloc()), b.M(b.pointsCount - 1, a.x, a.y), K2.free(c), K2.free(a));
    b.vf();
  };
  Sf2.prototype.computeReshape = function(a) {
    var b = this.adornedLink, c = this.handle.segmentIndex;
    switch (this.cv(this.handle)) {
      case Xf2:
        return a;
      case Vf2:
        return new K2(b.i(c).x, a.y);
      case Wf2:
        return new K2(a.x, b.i(c).y);
      default:
      case Tf2:
        return b.i(c);
    }
  };
  na2.Object.defineProperties(Sf2.prototype, {
    handleArchetype: { get: function() {
      return this.o;
    }, set: function(a) {
      this.o = a;
    } },
    midHandleArchetype: { get: function() {
      return this.C;
    }, set: function(a) {
      this.C = a;
    } },
    handle: { get: function() {
      return this.j;
    }, set: function(a) {
      if (a !== null && !(a.part instanceof ze))
        throw Error("new handle is not in an Adornment: " + a);
      this.j = a;
    } },
    adornedLink: { get: function() {
      return this.ut;
    } },
    resegmentingDistance: { get: function() {
      return this.L;
    }, set: function(a) {
      this.L = a;
    } },
    originalPoint: { get: function() {
      return this.hx;
    } },
    originalPoints: { get: function() {
      return this.Fr;
    } }
  });
  Sf2.prototype.setReshapingBehavior = Sf2.prototype.Am;
  Sf2.prototype.getReshapingBehavior = Sf2.prototype.cv;
  var Tf2 = new D2(Sf2, "None", 0), Wf2 = new D2(Sf2, "Horizontal", 1), Vf2 = new D2(Sf2, "Vertical", 2), Xf2 = new D2(Sf2, "All", 3);
  Sf2.className = "LinkReshapingTool";
  Sf2.None = Tf2;
  Sf2.Horizontal = Wf2;
  Sf2.Vertical = Vf2;
  Sf2.All = Xf2;
  Ma2("linkReshapingTool", function() {
    return this.findTool("LinkReshaping");
  }, function(a) {
    this.Za("LinkReshaping", a, this.mouseDownTools);
  });
  function lg2() {
    ue2.call(this);
    this.name = "Resizing";
    this.Zf = new Gb2(1, 1).freeze();
    this.Yf = new Gb2(9999, 9999).freeze();
    this.zg = new Gb2(NaN, NaN).freeze();
    this.C = false;
    this.L = true;
    this.le = null;
    var a = new xf2();
    a.alignmentFocus = yc2;
    a.figure = "Rectangle";
    a.desiredSize = Jb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    a.strokeWidth = 1;
    a.cursor = "pointer";
    this.o = a;
    this.j = null;
    this.Er = new K2();
    this.ex = new Gb2();
    this.Io = new K2();
    this.Lt = new Gb2(0, 0);
    this.Kt = new Gb2(Infinity, Infinity);
    this.Jt = new Gb2(1, 1);
  }
  ma2(lg2, ue2);
  lg2.prototype.updateAdornments = function(a) {
    if (!(a === null || a instanceof T2)) {
      if (a.isSelected && !this.diagram.isReadOnly) {
        var b = a.resizeObject, c = a.Yj(this.name);
        if (b !== null && a.canResize() && a.actualBounds.u() && a.isVisible() && b.actualBounds.u() && b.Ff()) {
          if (c === null || c.adornedObject !== b)
            c = this.makeAdornment(b);
          if (c !== null) {
            b = b.Ki();
            mg2(a) && this.updateResizeHandles(c, b);
            a.xh(this.name, c);
            return;
          }
        }
      }
      a.Gf(this.name);
    }
  };
  lg2.prototype.makeAdornment = function(a) {
    var b = a.part.resizeAdornmentTemplate;
    if (b === null) {
      b = new ze();
      b.type = X2.Spot;
      b.locationSpot = yc2;
      var c = new ng2();
      c.isPanelMain = true;
      b.add(c);
      b.add(this.makeHandle(a, uc2));
      b.add(this.makeHandle(a, wc2));
      b.add(this.makeHandle(a, Cc2));
      b.add(this.makeHandle(a, Ac2));
      b.add(this.makeHandle(a, ad2));
      b.add(this.makeHandle(a, cd2));
      b.add(this.makeHandle(a, dd2));
      b.add(this.makeHandle(a, bd2));
    } else if (og2(b), b = b.copy(), b === null)
      return null;
    b.adornedObject = a;
    return b;
  };
  lg2.prototype.makeHandle = function(a, b) {
    a = this.handleArchetype;
    if (a === null)
      return null;
    a = a.copy();
    a.alignment = b;
    return a;
  };
  lg2.prototype.updateResizeHandles = function(a, b) {
    if (a !== null) {
      if (!a.alignment.Nb() && (a.cursor === "pointer" || 0 < a.cursor.indexOf("resize")))
        a: {
          var c = a.alignment;
          c.Bc() && (c = yc2);
          if (0 >= c.x)
            b = 0 >= c.y ? b + 225 : 1 <= c.y ? b + 135 : b + 180;
          else if (1 <= c.x)
            0 >= c.y ? b += 315 : 1 <= c.y && (b += 45);
          else if (0 >= c.y)
            b += 270;
          else if (1 <= c.y)
            b += 90;
          else
            break a;
          0 > b ? b += 360 : 360 <= b && (b -= 360);
          a.cursor = 22.5 > b ? "e-resize" : 67.5 > b ? "se-resize" : 112.5 > b ? "s-resize" : 157.5 > b ? "sw-resize" : 202.5 > b ? "w-resize" : 247.5 > b ? "nw-resize" : 292.5 > b ? "n-resize" : 337.5 > b ? "ne-resize" : "e-resize";
        }
      else if (a instanceof X2)
        for (a = a.elements; a.next(); )
          this.updateResizeHandles(a.value, b);
    }
  };
  lg2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return !a.isReadOnly && a.allowResize && a.lastInput.left ? this.findToolHandleAt(a.firstInput.documentPoint, this.name) !== null : false;
  };
  lg2.prototype.doActivate = function() {
    var a = this.diagram;
    this.handle === null && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
    this.handle !== null && (this.adornedObject = this.handle.part.adornedObject, this.adornedObject !== null && (a.isMouseCaptured = true, a.animationManager.rc(), this.xa(this.name), this.Er.set(this.adornedObject.da(this.handle.alignment.xv())), this.Io.set(this.adornedObject.part.location), this.ex.set(this.adornedObject.desiredSize), this.Jt = this.computeCellSize(), this.Lt = this.computeMinSize(), this.Kt = this.computeMaxSize(), this.isActive = true));
  };
  lg2.prototype.doDeactivate = function() {
    var a = this.diagram;
    this.stopTransaction();
    this.le = this.handle = null;
    this.isActive = a.isMouseCaptured = false;
  };
  lg2.prototype.doCancel = function() {
    this.adornedObject !== null && (this.adornedObject.desiredSize = this.originalDesiredSize, this.adornedObject.part.location = this.originalLocation);
    this.stopTool();
  };
  lg2.prototype.doMouseMove = function() {
    var a = this.diagram;
    if (this.isActive) {
      var b = this.Lt, c = this.Kt, d = this.Jt, e = this.adornedObject.vs(a.lastInput.documentPoint, K2.alloc()), f2 = this.computeReshape();
      b = this.computeResize(e, this.handle.alignment, b, c, d, f2);
      this.resize(b);
      a.gd();
      K2.free(e);
    }
  };
  lg2.prototype.doMouseUp = function() {
    var a = this.diagram;
    if (this.isActive) {
      var b = this.Lt, c = this.Kt, d = this.Jt, e = this.adornedObject.vs(a.lastInput.documentPoint, K2.alloc()), f2 = this.computeReshape();
      b = this.computeResize(e, this.handle.alignment, b, c, d, f2);
      this.resize(b);
      K2.free(e);
      a.Qa();
      this.transactionResult = this.name;
      a.S("PartResized", this.adornedObject, this.originalDesiredSize);
    }
    this.stopTool();
  };
  lg2.prototype.resize = function(a) {
    var b = this.diagram, c = this.adornedObject;
    if (c !== null) {
      c.desiredSize = a.size;
      a = c.part;
      a.Ta();
      c = c.da(this.handle.alignment.xv());
      if (a instanceof U2) {
        var d = new F2();
        d.add(a);
        if (!this.dragsMembers && a.placeholder === null) {
          var e = new Me2();
          e.dragsMembers = false;
        }
        b.moveParts(d, this.oppositePoint.copy().ie(c), true, e);
      } else
        a.location = a.location.copy().ie(c).add(this.oppositePoint);
      b.gd();
    }
  };
  lg2.prototype.computeResize = function(a, b, c, d, e, f2) {
    b.Bc() && (b = yc2);
    var g2 = this.adornedObject.naturalBounds, h = g2.x, k = g2.y, l2 = g2.x + g2.width, m2 = g2.y + g2.height, n2 = 1;
    if (!f2) {
      n2 = g2.width;
      var p2 = g2.height;
      0 >= n2 && (n2 = 1);
      0 >= p2 && (p2 = 1);
      n2 = p2 / n2;
    }
    p2 = K2.alloc();
    M2.Xp(a.x, a.y, h, k, e.width, e.height, p2);
    a = g2.copy();
    0 >= b.x ? 0 >= b.y ? (a.x = Math.max(p2.x, l2 - d.width), a.x = Math.min(a.x, l2 - c.width), a.width = Math.max(l2 - a.x, c.width), a.y = Math.max(p2.y, m2 - d.height), a.y = Math.min(a.y, m2 - c.height), a.height = Math.max(m2 - a.y, c.height), f2 || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2) : (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width), a.x = l2 - a.width, a.y = m2 - a.height)) : 1 <= b.y ? (a.x = Math.max(p2.x, l2 - d.width), a.x = Math.min(a.x, l2 - c.width), a.width = Math.max(l2 - a.x, c.width), a.height = Math.max(Math.min(p2.y - k, d.height), c.height), f2 || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2) : (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width), a.x = l2 - a.width)) : (a.x = Math.max(p2.x, l2 - d.width), a.x = Math.min(a.x, l2 - c.width), a.width = l2 - a.x, f2 || (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2, a.y = k + 0.5 * (m2 - k - a.height))) : 1 <= b.x ? 0 >= b.y ? (a.width = Math.max(Math.min(p2.x - h, d.width), c.width), a.y = Math.max(p2.y, m2 - d.height), a.y = Math.min(a.y, m2 - c.height), a.height = Math.max(m2 - a.y, c.height), f2 || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2) : (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width), a.y = m2 - a.height)) : 1 <= b.y ? (a.width = Math.max(Math.min(p2.x - h, d.width), c.width), a.height = Math.max(Math.min(p2.y - k, d.height), c.height), f2 || (1 <= a.height / a.width ? (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2) : (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width))) : (a.width = Math.max(Math.min(p2.x - h, d.width), c.width), f2 || (a.height = Math.max(Math.min(n2 * a.width, d.height), c.height), a.width = a.height / n2, a.y = k + 0.5 * (m2 - k - a.height))) : 0 >= b.y ? (a.y = Math.max(p2.y, m2 - d.height), a.y = Math.min(a.y, m2 - c.height), a.height = m2 - a.y, f2 || (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width, a.x = h + 0.5 * (l2 - h - a.width))) : 1 <= b.y && (a.height = Math.max(Math.min(p2.y - k, d.height), c.height), f2 || (a.width = Math.max(Math.min(a.height / n2, d.width), c.width), a.height = n2 * a.width, a.x = h + 0.5 * (l2 - h - a.width)));
    K2.free(p2);
    return a;
  };
  lg2.prototype.computeReshape = function() {
    var a = pg2;
    this.adornedObject instanceof xf2 && (a = qg2(this.adornedObject));
    return !(a === rg2 || this.diagram.lastInput.shift);
  };
  lg2.prototype.computeMinSize = function() {
    var a = this.adornedObject.minSize.copy(), b = this.minSize;
    !isNaN(b.width) && b.width > a.width && (a.width = b.width);
    !isNaN(b.height) && b.height > a.height && (a.height = b.height);
    return a;
  };
  lg2.prototype.computeMaxSize = function() {
    var a = this.adornedObject.maxSize.copy(), b = this.maxSize;
    !isNaN(b.width) && b.width < a.width && (a.width = b.width);
    !isNaN(b.height) && b.height < a.height && (a.height = b.height);
    return a;
  };
  lg2.prototype.computeCellSize = function() {
    var a = new Gb2(NaN, NaN), b = this.adornedObject.part;
    b !== null && (b = b.resizeCellSize, !isNaN(b.width) && 0 < b.width && (a.width = b.width), !isNaN(b.height) && 0 < b.height && (a.height = b.height));
    b = this.cellSize;
    isNaN(a.width) && !isNaN(b.width) && 0 < b.width && (a.width = b.width);
    isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height);
    b = this.diagram;
    (isNaN(a.width) || isNaN(a.height)) && b && (b = b.grid, b !== null && b.visible && this.isGridSnapEnabled && (b = b.gridCellSize, isNaN(a.width) && !isNaN(b.width) && 0 < b.width && (a.width = b.width), isNaN(a.height) && !isNaN(b.height) && 0 < b.height && (a.height = b.height)));
    if (isNaN(a.width) || a.width === 0 || a.width === Infinity)
      a.width = 1;
    if (isNaN(a.height) || a.height === 0 || a.height === Infinity)
      a.height = 1;
    return a;
  };
  na2.Object.defineProperties(lg2.prototype, {
    handleArchetype: { get: function() {
      return this.o;
    }, set: function(a) {
      this.o = a;
    } },
    handle: { get: function() {
      return this.j;
    }, set: function(a) {
      if (a !== null && !(a.part instanceof ze))
        throw Error("new handle is not in an Adornment: " + a);
      this.j = a;
    } },
    adornedObject: { get: function() {
      return this.le;
    }, set: function(a) {
      if (a !== null && a.part instanceof ze)
        throw Error("new handle must not be in an Adornment: " + a);
      this.le = a;
    } },
    minSize: { get: function() {
      return this.Zf;
    }, set: function(a) {
      if (!this.Zf.A(a)) {
        var b = a.width;
        isNaN(b) && (b = 0);
        a = a.height;
        isNaN(a) && (a = 0);
        this.Zf.h(b, a);
      }
    } },
    maxSize: { get: function() {
      return this.Yf;
    }, set: function(a) {
      if (!this.Yf.A(a)) {
        var b = a.width;
        isNaN(b) && (b = Infinity);
        a = a.height;
        isNaN(a) && (a = Infinity);
        this.Yf.h(b, a);
      }
    } },
    cellSize: { get: function() {
      return this.zg;
    }, set: function(a) {
      this.zg.A(a) || this.zg.assign(a);
    } },
    isGridSnapEnabled: { get: function() {
      return this.C;
    }, set: function(a) {
      this.C = a;
    } },
    dragsMembers: { get: function() {
      return this.L;
    }, set: function(a) {
      this.L = a;
    } },
    oppositePoint: { get: function() {
      return this.Er;
    }, set: function(a) {
      this.Er.A(a) || this.Er.assign(a);
    } },
    originalDesiredSize: { get: function() {
      return this.ex;
    } },
    originalLocation: { get: function() {
      return this.Io;
    } }
  });
  lg2.className = "ResizingTool";
  Ma2("resizingTool", function() {
    return this.findTool("Resizing");
  }, function(a) {
    this.Za("Resizing", a, this.mouseDownTools);
  });
  function sg2() {
    ue2.call(this);
    this.name = "Rotating";
    this.Ba = 45;
    this.wa = 2;
    this.Io = new K2();
    this.le = null;
    var a = new xf2();
    a.figure = "Ellipse";
    a.desiredSize = Kb2;
    a.fill = "lightblue";
    a.stroke = "dodgerblue";
    a.strokeWidth = 1;
    a.cursor = "pointer";
    this.o = a;
    this.j = null;
    this.bx = 0;
    this.Kr = new K2(NaN, NaN);
    this.C = 0;
    this.L = 50;
  }
  ma2(sg2, ue2);
  sg2.prototype.updateAdornments = function(a) {
    if (a !== null) {
      if (a.Hh()) {
        var b = a.rotateObject;
        if (b === a || b === a.path || b.isPanelMain)
          return;
      }
      if (a.isSelected && !this.diagram.isReadOnly && (b = a.rotateObject, b !== null && a.canRotate() && a.actualBounds.u() && a.isVisible() && b.actualBounds.u() && b.Ff())) {
        var c = a.Yj(this.name);
        if (c === null || c.adornedObject !== b)
          c = this.makeAdornment(b);
        if (c !== null) {
          c.angle = b.Ki();
          c.placeholder === null && (c.location = this.computeAdornmentLocation(b));
          a.xh(this.name, c);
          return;
        }
      }
      a.Gf(this.name);
    }
  };
  sg2.prototype.makeAdornment = function(a) {
    var b = a.part.rotateAdornmentTemplate;
    if (b === null) {
      b = new ze();
      b.type = X2.Position;
      b.locationSpot = yc2;
      var c = this.handleArchetype;
      c !== null && b.add(c.copy());
    } else if (og2(b), b = b.copy(), b === null)
      return null;
    b.adornedObject = a;
    return b;
  };
  sg2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return !a.isReadOnly && a.allowRotate && a.lastInput.left ? this.findToolHandleAt(a.firstInput.documentPoint, this.name) !== null : false;
  };
  sg2.prototype.doActivate = function() {
    var a = this.diagram;
    if (this.adornedObject === null) {
      this.handle === null && (this.handle = this.findToolHandleAt(a.firstInput.documentPoint, this.name));
      if (this.handle === null)
        return;
      this.adornedObject = this.handle.part.adornedObject;
    }
    this.adornedObject !== null && (a.isMouseCaptured = true, a.delaysLayout = true, this.xa(this.name), this.bx = this.adornedObject.angle, this.Kr = this.computeRotationPoint(this.adornedObject), this.Io = this.adornedObject.part.location.copy(), this.isActive = true);
  };
  sg2.prototype.computeRotationPoint = function(a) {
    var b = a.part, c = b.locationObject;
    return b.rotationSpot.hb() ? a.da(b.rotationSpot) : a === b || a === c ? c.da(b.locationSpot) : a.da(yc2);
  };
  sg2.prototype.computeAdornmentLocation = function(a) {
    var b = this.rotationPoint;
    b.u() || (b = this.computeRotationPoint(a));
    b = a.vs(b);
    var c = this.handleAngle;
    0 > c ? c += 360 : 360 <= c && (c -= 360);
    c = Math.round(45 * Math.round(c / 45));
    var d = this.handleDistance;
    c === 0 ? b.x = a.naturalBounds.width + d : c === 45 ? (b.x = a.naturalBounds.width + d, b.y = a.naturalBounds.height + d) : c === 90 ? b.y = a.naturalBounds.height + d : c === 135 ? (b.x = -d, b.y = a.naturalBounds.height + d) : c === 180 ? b.x = -d : c === 225 ? (b.x = -d, b.y = -d) : c === 270 ? b.y = -d : c === 315 && (b.x = a.naturalBounds.width + d, b.y = -d);
    return a.da(b);
  };
  sg2.prototype.doDeactivate = function() {
    var a = this.diagram;
    this.stopTransaction();
    this.le = this.handle = null;
    this.Kr = new K2(NaN, NaN);
    this.isActive = a.isMouseCaptured = false;
  };
  sg2.prototype.doCancel = function() {
    this.diagram.delaysLayout = false;
    this.rotate(this.originalAngle);
    this.stopTool();
  };
  sg2.prototype.doMouseMove = function() {
    var a = this.diagram;
    this.isActive && (a = this.computeRotate(a.lastInput.documentPoint), this.rotate(a));
  };
  sg2.prototype.doMouseUp = function() {
    var a = this.diagram;
    if (this.isActive) {
      a.delaysLayout = false;
      var b = this.computeRotate(a.lastInput.documentPoint);
      this.rotate(b);
      a.Qa();
      this.transactionResult = this.name;
      a.S("PartRotated", this.adornedObject, this.originalAngle);
    }
    this.stopTool();
  };
  sg2.prototype.rotate = function(a) {
    var b = this.adornedObject;
    if (b !== null) {
      b.angle = a;
      b = b.part;
      b.Ta();
      var c = b.locationObject, d = b.rotateObject;
      if (c === d || c.sg(d))
        c = this.Io.copy(), b.location = c.ie(this.rotationPoint).rotate(a - this.originalAngle).add(this.rotationPoint);
      this.diagram.gd();
    }
  };
  sg2.prototype.computeRotate = function(a) {
    a = this.rotationPoint.Pa(a) - this.handleAngle;
    var b = this.adornedObject.panel;
    b !== null && (a -= b.Ki());
    360 <= a ? a -= 360 : 0 > a && (a += 360);
    b = Math.min(Math.abs(this.snapAngleMultiple), 180);
    var c = Math.min(Math.abs(this.snapAngleEpsilon), b / 2);
    !this.diagram.lastInput.shift && 0 < b && 0 < c && (a % b < c ? a = Math.floor(a / b) * b : a % b > b - c && (a = (Math.floor(a / b) + 1) * b));
    360 <= a ? a -= 360 : 0 > a && (a += 360);
    return a;
  };
  na2.Object.defineProperties(sg2.prototype, { handleArchetype: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, handle: { get: function() {
    return this.j;
  }, set: function(a) {
    if (a !== null && !(a.part instanceof ze))
      throw Error("new handle is not in an Adornment: " + a);
    this.j = a;
  } }, adornedObject: { get: function() {
    return this.le;
  }, set: function(a) {
    if (a !== null && a.part instanceof ze)
      throw Error("new handle must not be in an Adornment: " + a);
    this.le = a;
  } }, snapAngleMultiple: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba = a;
  } }, snapAngleEpsilon: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa = a;
  } }, originalAngle: { get: function() {
    return this.bx;
  } }, rotationPoint: { get: function() {
    return this.Kr;
  }, set: function(a) {
    this.Kr = a.copy();
  } }, handleAngle: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, handleDistance: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } } });
  sg2.className = "RotatingTool";
  Ma2("rotatingTool", function() {
    return this.findTool("Rotating");
  }, function(a) {
    this.Za("Rotating", a, this.mouseDownTools);
  });
  function tg2() {
    ue2.call(this);
    this.name = "ClickSelecting";
  }
  ma2(tg2, ue2);
  tg2.prototype.canStart = function() {
    return !this.isEnabled || this.isBeyondDragSize() ? false : true;
  };
  tg2.prototype.doMouseUp = function() {
    this.isActive && (this.standardMouseSelect(), !this.standardMouseClick() && this.diagram.lastInput.isTouchEvent && this.diagram.toolManager.doToolTip());
    this.stopTool();
  };
  tg2.className = "ClickSelectingTool";
  function ug2() {
    ue2.call(this);
    this.name = "Action";
    this.uk = null;
  }
  ma2(ug2, ue2);
  ug2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram, b = a.lastInput, c = a.Zb(b.documentPoint, function(a2) {
      for (; a2.panel !== null && !a2.isActionable; )
        a2 = a2.panel;
      return a2;
    });
    if (c !== null) {
      if (!c.isActionable)
        return false;
      this.uk = c;
      a.Kk = a.Zb(b.documentPoint, null, null);
      return true;
    }
    return false;
  };
  ug2.prototype.doMouseDown = function() {
    if (this.isActive) {
      var a = this.diagram.lastInput, b = this.uk;
      b !== null && (a.targetObject = b, b.actionDown !== null && b.actionDown(a, b));
    } else
      this.canStart() && this.doActivate();
  };
  ug2.prototype.doMouseMove = function() {
    if (this.isActive) {
      var a = this.diagram.lastInput, b = this.uk;
      b !== null && (a.targetObject = b, b.actionMove !== null && b.actionMove(a, b));
    }
  };
  ug2.prototype.doMouseUp = function() {
    if (this.isActive) {
      var a = this.diagram.lastInput, b = this.uk;
      if (b === null)
        return;
      a.targetObject = b;
      b.actionUp !== null && b.actionUp(a, b);
      this.standardMouseClick(function(a2) {
        for (; a2.panel !== null && (!a2.isActionable || a2 !== b); )
          a2 = a2.panel;
        return a2;
      }, function(a2) {
        return a2 === b;
      });
    }
    this.stopTool();
  };
  ug2.prototype.doCancel = function() {
    var a = this.diagram.lastInput, b = this.uk;
    b !== null && (a.targetObject = b, b.actionCancel !== null && b.actionCancel(a, b), this.stopTool());
  };
  ug2.prototype.doStop = function() {
    this.uk = null;
  };
  ug2.className = "ActionTool";
  function vg2() {
    ue2.call(this);
    this.name = "ClickCreating";
    this.dj = null;
    this.o = true;
    this.j = false;
    this.Pw = new K2(0, 0);
  }
  ma2(vg2, ue2);
  vg2.prototype.canStart = function() {
    if (!this.isEnabled || this.archetypeNodeData === null)
      return false;
    var a = this.diagram;
    if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.lastInput.left || this.isBeyondDragSize())
      return false;
    if (this.isDoubleClick) {
      if (a.lastInput.clickCount === 1 && (this.Pw = a.lastInput.viewPoint.copy()), a.lastInput.clickCount !== 2 || this.isBeyondDragSize(this.Pw))
        return false;
    } else if (a.lastInput.clickCount !== 1)
      return false;
    return a.currentTool !== this && a.am(a.lastInput.documentPoint, true) !== null ? false : true;
  };
  vg2.prototype.doMouseUp = function() {
    var a = this.diagram;
    this.isActive && this.insertPart(a.lastInput.documentPoint);
    this.stopTool();
  };
  vg2.prototype.insertPart = function(a) {
    var b = this.diagram, c = this.archetypeNodeData;
    if (c === null)
      return null;
    var d = null;
    try {
      b.S("ChangingSelection", b.selection);
      this.xa(this.name);
      if (c instanceof V2)
        c.Mc() && (og2(c), d = c.copy(), d !== null && b.add(d));
      else if (c !== null) {
        var e = b.model.copyNodeData(c);
        za2(e) && (b.model.sf(e), d = b.Ac(e));
      }
      if (d !== null) {
        var f2 = K2.allocAt(a.x, a.y);
        this.isGridSnapEnabled && wg2(this.diagram, d, a, f2);
        d.location = f2;
        b.allowSelect && (b.clearSelection(true), d.isSelected = true);
        K2.free(f2);
      }
      b.Qa();
      this.transactionResult = this.name;
      b.S("PartCreated", d);
    } finally {
      this.stopTransaction(), b.S("ChangedSelection", b.selection);
    }
    return d;
  };
  na2.Object.defineProperties(vg2.prototype, { archetypeNodeData: { get: function() {
    return this.dj;
  }, set: function(a) {
    this.dj = a;
  } }, isDoubleClick: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, isGridSnapEnabled: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } } });
  vg2.className = "ClickCreatingTool";
  function xg2() {
    ue2.call(this);
    this.name = "DragSelecting";
    this.Qk = 175;
    this.o = false;
    var a = new V2();
    a.layerName = "Tool";
    a.selectable = false;
    var b = new xf2();
    b.name = "SHAPE";
    b.figure = "Rectangle";
    b.fill = null;
    b.stroke = "magenta";
    a.add(b);
    this.j = a;
  }
  ma2(xg2, ue2);
  xg2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    if (!a.allowSelect)
      return false;
    var b = a.lastInput;
    return !b.left || a.currentTool !== this && (!this.isBeyondDragSize() || b.timestamp - a.firstInput.timestamp < this.delay || a.am(b.documentPoint, true) !== null) ? false : true;
  };
  xg2.prototype.doActivate = function() {
    var a = this.diagram;
    this.isActive = true;
    a.isMouseCaptured = true;
    a.skipsUndoManager = true;
    a.add(this.box);
    this.doMouseMove();
  };
  xg2.prototype.doDeactivate = function() {
    var a = this.diagram;
    a.ug();
    a.remove(this.box);
    a.skipsUndoManager = false;
    this.isActive = a.isMouseCaptured = false;
  };
  xg2.prototype.doMouseMove = function() {
    var a = this.diagram;
    if (this.isActive && this.box !== null) {
      var b = this.computeBoxBounds(), c = this.box.Ya("SHAPE");
      c === null && (c = this.box.pb());
      var d = Gb2.alloc().h(b.width, b.height);
      c.desiredSize = d;
      this.box.ym(b.x, b.y, false);
      Gb2.free(d);
      (a.allowHorizontalScroll || a.allowVerticalScroll) && a.ns(a.lastInput.viewPoint);
    }
  };
  xg2.prototype.doMouseUp = function() {
    if (this.isActive) {
      var a = this.diagram;
      a.remove(this.box);
      try {
        a.currentCursor = "wait", a.S("ChangingSelection", a.selection), this.selectInRect(this.computeBoxBounds()), a.S("ChangedSelection", a.selection);
      } finally {
        a.currentCursor = "";
      }
    }
    this.stopTool();
  };
  xg2.prototype.computeBoxBounds = function() {
    var a = this.diagram;
    return new N2(a.firstInput.documentPoint, a.lastInput.documentPoint);
  };
  xg2.prototype.selectInRect = function(a) {
    var b = this.diagram, c = b.lastInput;
    a = b.Tx(a, this.isPartialInclusion);
    if (Ta2 ? c.meta : c.control)
      if (c.shift)
        for (a = a.iterator; a.next(); )
          b = a.value, b.isSelected && (b.isSelected = false);
      else
        for (a = a.iterator; a.next(); )
          b = a.value, b.isSelected = !b.isSelected;
    else if (c.shift)
      for (a = a.iterator; a.next(); )
        b = a.value, b.isSelected || (b.isSelected = true);
    else {
      c = new F2();
      for (b = b.selection.iterator; b.next(); ) {
        var d = b.value;
        a.contains(d) || c.add(d);
      }
      for (b = c.iterator; b.next(); )
        b.value.isSelected = false;
      for (a = a.iterator; a.next(); )
        b = a.value, b.isSelected || (b.isSelected = true);
    }
  };
  na2.Object.defineProperties(xg2.prototype, { delay: { get: function() {
    return this.Qk;
  }, set: function(a) {
    this.Qk = a;
  } }, isPartialInclusion: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, box: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } } });
  xg2.className = "DragSelectingTool";
  function yg2() {
    ue2.call(this);
    this.name = "Panning";
    this.eu = new K2();
    this.Vy = new K2();
    this.yg = false;
    var a = this;
    this.lx = function() {
      var b = a.diagram;
      b !== null && b.removeEventListener(x2.document, "scroll", a.lx, false);
      a.stopTool();
    };
  }
  ma2(yg2, ue2);
  yg2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return !a.allowHorizontalScroll && !a.allowVerticalScroll || !a.lastInput.left || a.currentTool !== this && !this.isBeyondDragSize() ? false : true;
  };
  yg2.prototype.doActivate = function() {
    var a = this.diagram;
    this.yg ? (a.lastInput.bubbles = true, a.addEventListener(x2.document, "scroll", this.lx, false)) : (a.currentCursor = "move", a.isMouseCaptured = true, this.eu.assign(a.position));
    this.isActive = true;
  };
  yg2.prototype.doDeactivate = function() {
    var a = this.diagram;
    a.currentCursor = "";
    this.isActive = a.isMouseCaptured = false;
  };
  yg2.prototype.doCancel = function() {
    var a = this.diagram;
    a.position = this.eu;
    a.isMouseCaptured = false;
    this.stopTool();
  };
  yg2.prototype.doMouseMove = function() {
    this.move();
  };
  yg2.prototype.doMouseUp = function() {
    this.move();
    this.stopTool();
  };
  yg2.prototype.move = function() {
    var a = this.diagram;
    if (this.isActive && a)
      if (this.yg)
        a.lastInput.bubbles = true;
      else {
        var b = a.position, c = a.firstInput.documentPoint, d = a.lastInput.documentPoint, e = b.x + c.x - d.x;
        c = b.y + c.y - d.y;
        a.allowHorizontalScroll || (e = b.x);
        a.allowVerticalScroll || (c = b.y);
        a.position = this.Vy.h(e, c);
      }
  };
  na2.Object.defineProperties(yg2.prototype, { bubbles: { get: function() {
    return this.yg;
  }, set: function(a) {
    this.yg = a;
  } }, originalPosition: { get: function() {
    return this.eu;
  } } });
  yg2.className = "PanningTool";
  Ma2("clickCreatingTool", function() {
    return this.findTool("ClickCreating");
  }, function(a) {
    this.Za("ClickCreating", a, this.mouseUpTools);
  });
  Ma2("clickSelectingTool", function() {
    return this.findTool("ClickSelecting");
  }, function(a) {
    this.Za("ClickSelecting", a, this.mouseUpTools);
  });
  Ma2("panningTool", function() {
    return this.findTool("Panning");
  }, function(a) {
    this.Za("Panning", a, this.mouseMoveTools);
  });
  Ma2("dragSelectingTool", function() {
    return this.findTool("DragSelecting");
  }, function(a) {
    this.Za("DragSelecting", a, this.mouseMoveTools);
  });
  Ma2("actionTool", function() {
    return this.findTool("Action");
  }, function(a) {
    this.Za("Action", a, this.mouseDownTools);
  });
  function Ee2() {
    this.L = this.C = this.j = this.o = null;
  }
  na2.Object.defineProperties(Ee2.prototype, { mainElement: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, show: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o !== a && (this.o = a);
  } }, hide: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j !== a && (this.j = a);
  } }, valueFunction: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } } });
  Ee2.className = "HTMLInfo";
  function zg2(a, b, c) {
    this.text = a;
    this.Hx = b;
    this.visible = c;
  }
  zg2.className = "ContextMenuButtonInfo";
  function Ag2() {
    ue2.call(this);
    this.name = "ContextMenu";
    this.o = this.At = this.j = null;
    this.Yw = new K2();
    this.Bt = null;
    this.St = false;
    var a = this;
    this.uu = function() {
      a.stopTool();
    };
  }
  ma2(Ag2, ue2);
  function Bg2(a) {
    var b = new Ee2();
    b.show = function(a2, b2, c2) {
      c2.showDefaultContextMenu();
    };
    b.hide = function(a2, b2) {
      b2.hideDefaultContextMenu();
    };
    Cg2 = b;
    a.uu = function() {
      a.stopTool();
    };
    b = va("div");
    var c = va("div");
    b.style.cssText = "top: 0px;z-index:10002;position: fixed;display: none;text-align: center;left: 25%;width: 50%;background-color: #F5F5F5;padding: 16px;border: 16px solid #444;border-radius: 10px;margin-top: 10px";
    c.style.cssText = "z-index:10001;position: fixed;display: none;top: 0;left: 0;width: 100%;height: 100%;background-color: black;opacity: 0.8;";
    var d = va("style");
    x2.document.getElementsByTagName("head")[0].appendChild(d);
    d.sheet.insertRule(".goCXul { list-style: none; }", 0);
    d.sheet.insertRule(".goCXli {font:700 1.5em Helvetica, Arial, sans-serif;position: relative;min-width: 60px; }", 0);
    d.sheet.insertRule(".goCXa {color: #444;display: inline-block;padding: 4px;text-decoration: none;margin: 2px;border: 1px solid gray;border-radius: 10px; }", 0);
    d = a.diagram;
    d !== null && (d.addEventListener(b, "contextmenu", Dg2, false), d.addEventListener(b, "selectstart", Dg2, false), d.addEventListener(c, "contextmenu", Dg2, false));
    b.className = "goCXforeground";
    c.className = "goCXbackground";
    x2.document.body && (x2.document.body.appendChild(b), x2.document.body.appendChild(c));
    Eg2 = b;
    Fg2 = c;
    Gg2 = true;
  }
  function Dg2(a) {
    a.preventDefault();
    return false;
  }
  Ag2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    return this.isBeyondDragSize() || !a.lastInput.right || 1 < a.lastInput.clickCount ? false : a.lastInput.isTouchEvent && this.defaultTouchContextMenu !== null || this.findObjectWithContextMenu() !== null ? true : false;
  };
  Ag2.prototype.doStart = function() {
    this.Yw.set(this.diagram.firstInput.documentPoint);
  };
  Ag2.prototype.doStop = function() {
    this.hideContextMenu();
    this.currentObject = null;
  };
  Ag2.prototype.findObjectWithContextMenu = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram, c = b.lastInput, d = null;
    a instanceof R2 || (a instanceof Y2 ? d = a : d = b.Zb(c.documentPoint, null, function(a2) {
      return !a2.layer.isTemporary;
    }));
    if (d !== null) {
      for (a = d; a !== null; ) {
        if (a.contextMenu !== null)
          return a;
        a = a.panel;
      }
      if (b.lastInput.isTouchEvent && this.defaultTouchContextMenu)
        return d.part;
    } else if (b.contextMenu !== null)
      return b;
    return null;
  };
  Ag2.prototype.doActivate = function() {
  };
  Ag2.prototype.doMouseDown = function() {
    ue2.prototype.doMouseDown.call(this);
    if (this.isActive && this.currentContextMenu instanceof ze) {
      var a = this.diagram.toolManager.findTool("Action");
      a !== null && a.canStart() && (a.doActivate(), a.doMouseDown(), a.doDeactivate());
    }
    this.diagram.toolManager.mouseDownTools.contains(this) && Hg2(this);
  };
  Ag2.prototype.doMouseUp = function() {
    if (this.isActive && this.currentContextMenu instanceof ze) {
      var a = this.diagram.toolManager.findTool("Action");
      a !== null && a.canStart() && (a.doActivate(), a.doCancel(), a.doDeactivate());
    }
    Hg2(this);
  };
  function Hg2(a) {
    var b = a.diagram;
    if (a.isActive) {
      var c = a.currentContextMenu;
      if (c !== null) {
        if (!(c instanceof Ee2)) {
          var d = b.Zb(b.lastInput.documentPoint, null, null);
          d !== null && d.sg(c) && a.standardMouseClick(null, null);
        }
        a.stopTool();
        a.canStart() && (b.currentTool = a, a.doMouseUp());
      }
    } else
      a.canStart() && (Ig2(a, true), a.isActive || a.stopTool());
  }
  function Ig2(a, b, c) {
    c === void 0 && (c = null);
    if (!a.St && (a.St = true, b && a.standardMouseSelect(), b = a.standardMouseClick(), a.St = false, !b)) {
      a.isActive = true;
      b = Cg2;
      c === null && (c = a.findObjectWithContextMenu());
      if (c !== null) {
        var d = c.contextMenu;
        d !== null ? (a.currentObject = c instanceof Y2 ? c : null, a.showContextMenu(d, a.currentObject)) : b !== null && a.showContextMenu(b, a.currentObject);
      } else
        b !== null && a.showContextMenu(b, null);
      a.currentContextMenu instanceof ze && !a.currentContextMenu.visible && a.stopTool();
    }
  }
  Ag2.prototype.doMouseMove = function() {
    var a = this.diagram.toolManager.findTool("Action");
    a !== null && a.doMouseMove();
    this.isActive && this.diagram.toolManager.doMouseMove();
  };
  Ag2.prototype.showContextMenu = function(a, b) {
    var c = this.diagram;
    a !== this.currentContextMenu && this.hideContextMenu();
    if (a instanceof ze) {
      a.layerName = "Tool";
      a.selectable = false;
      a.scale = 1 / c.scale;
      a.category = this.name;
      a.placeholder !== null && (a.placeholder.scale = c.scale);
      var d = a.diagram;
      d !== null && d !== c && d.remove(a);
      c.add(a);
      b !== null ? a.adornedObject = b : a.data = c.model;
      a.Ta();
      this.positionContextMenu(a, b);
    } else
      a instanceof Ee2 && a.show(b, c, this);
    this.currentContextMenu = a;
  };
  Ag2.prototype.positionContextMenu = function(a) {
    if (a.placeholder === null) {
      var b = this.diagram, c = b.lastInput.documentPoint.copy(), d = a.measuredBounds, e = b.viewportBounds;
      b.lastInput.isTouchEvent && (c.x -= d.width);
      c.x + d.width > e.right && (c.x -= d.width + 5 / b.scale);
      c.x < e.x && (c.x = e.x);
      c.y + d.height > e.bottom && (c.y -= d.height + 5 / b.scale);
      c.y < e.y && (c.y = e.y);
      a.position = c;
    }
  };
  Ag2.prototype.hideContextMenu = function() {
    var a = this.diagram, b = this.currentContextMenu;
    b !== null && (b instanceof ze ? (a.remove(b), this.At !== null && this.At.Gf(b.category), b.data = null, b.adornedObject = null) : b instanceof Ee2 && (b.hide !== null ? b.hide(a, this) : b.mainElement !== null && (b.mainElement.style.display = "none")), this.currentContextMenu = null, this.standardMouseOver());
  };
  function Jg2(a) {
    var b = new F2();
    b.add(new zg2("Copy", function(a2) {
      a2.commandHandler.copySelection();
    }, function(a2) {
      return a2.commandHandler.canCopySelection();
    }));
    b.add(new zg2("Cut", function(a2) {
      a2.commandHandler.cutSelection();
    }, function(a2) {
      return a2.commandHandler.canCutSelection();
    }));
    b.add(new zg2("Delete", function(a2) {
      a2.commandHandler.deleteSelection();
    }, function(a2) {
      return a2.commandHandler.canDeleteSelection();
    }));
    b.add(new zg2("Paste", function(b2) {
      b2.commandHandler.pasteSelection(a.mouseDownPoint);
    }, function(b2) {
      return b2.commandHandler.canPasteSelection(a.mouseDownPoint);
    }));
    b.add(new zg2("Select All", function(a2) {
      a2.commandHandler.selectAll();
    }, function(a2) {
      return a2.commandHandler.canSelectAll();
    }));
    b.add(new zg2("Undo", function(a2) {
      a2.commandHandler.undo();
    }, function(a2) {
      return a2.commandHandler.canUndo();
    }));
    b.add(new zg2("Redo", function(a2) {
      a2.commandHandler.redo();
    }, function(a2) {
      return a2.commandHandler.canRedo();
    }));
    b.add(new zg2("Scroll To Part", function(a2) {
      a2.commandHandler.scrollToPart();
    }, function(a2) {
      return a2.commandHandler.canScrollToPart();
    }));
    b.add(new zg2("Zoom To Fit", function(a2) {
      a2.commandHandler.zoomToFit();
    }, function(a2) {
      return a2.commandHandler.canZoomToFit();
    }));
    b.add(new zg2("Reset Zoom", function(a2) {
      a2.commandHandler.resetZoom();
    }, function(a2) {
      return a2.commandHandler.canResetZoom();
    }));
    b.add(new zg2("Group Selection", function(a2) {
      a2.commandHandler.groupSelection();
    }, function(a2) {
      return a2.commandHandler.canGroupSelection();
    }));
    b.add(new zg2("Ungroup Selection", function(a2) {
      a2.commandHandler.ungroupSelection();
    }, function(a2) {
      return a2.commandHandler.canUngroupSelection();
    }));
    b.add(new zg2("Edit Text", function(a2) {
      a2.commandHandler.editTextBlock();
    }, function(a2) {
      return a2.commandHandler.canEditTextBlock();
    }));
    return b;
  }
  Ag2.prototype.showDefaultContextMenu = function() {
    var a = this.diagram;
    this.Bt === null && (this.Bt = Jg2(this));
    Eg2.innerHTML = "";
    Fg2.addEventListener("pointerdown", this.uu, false);
    var b = this, c = va("ul");
    c.className = "goCXul";
    Eg2.appendChild(c);
    c.innerHTML = "";
    for (var d = this.Bt.iterator; d.next(); ) {
      var e = d.value, f2 = e.visible;
      if (typeof e.Hx === "function" && (typeof f2 !== "function" || f2(a))) {
        f2 = va("li");
        f2.className = "goCXli";
        var g2 = va("a");
        g2.className = "goCXa";
        g2.href = "#";
        g2.Ny = e.Hx;
        g2.addEventListener("pointerdown", function(c2) {
          this.Ny(a);
          b.stopTool();
          c2.preventDefault();
          return false;
        }, false);
        g2.textContent = e.text;
        f2.appendChild(g2);
        c.appendChild(f2);
      }
    }
    Eg2.style.display = "block";
    Fg2.style.display = "block";
  };
  Ag2.prototype.hideDefaultContextMenu = function() {
    if (this.currentContextMenu !== null && this.currentContextMenu === Cg2) {
      Eg2.style.display = "none";
      Fg2.style.display = "none";
      var a = this.diagram;
      a !== null && a.removeEventListener(Fg2, "pointerdown", this.uu, false);
      this.currentContextMenu = null;
    }
  };
  na2.Object.defineProperties(Ag2.prototype, { currentContextMenu: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
    this.At = a instanceof ze ? a.adornedPart : null;
  } }, defaultTouchContextMenu: { get: function() {
    Gg2 === false && Cg2 === null && Kg2 && Bg2(this);
    return Cg2;
  }, set: function(a) {
    a === null && (Gg2 = true);
    Cg2 = a;
  } }, currentObject: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, mouseDownPoint: { get: function() {
    return this.Yw;
  } } });
  var Cg2 = null, Gg2 = false, Fg2 = null, Eg2 = null;
  Ag2.className = "ContextMenuTool";
  Ma2("contextMenuTool", function() {
    return this.findTool("ContextMenu");
  }, function(a) {
    this.Za("ContextMenu", a, this.mouseUpTools);
  });
  function Lg2() {
    ue2.call(this);
    this.name = "TextEditing";
    this.qh = new Mg2();
    this.Ba = null;
    this.wa = Ng2;
    this.ui = null;
    this.ia = Og2;
    this.C = 1;
    this.L = true;
    this.o = null;
    this.j = new Ee2();
    this.Ct = null;
    Pg2(this, this.j);
  }
  ma2(Lg2, ue2);
  function Pg2(a, b) {
    if (Kg2) {
      var c = va("textarea");
      a.Ct = c;
      c.addEventListener("input", function() {
        if (a.textBlock !== null) {
          var b2 = a.my(this.value);
          this.style.width = 20 + b2.measuredBounds.width * this.SA + "px";
          this.rows = b2.lineCount;
        }
      }, false);
      c.addEventListener("keydown", function(b2) {
        if (a.textBlock !== null) {
          var c2 = b2.key;
          c2 === "Enter" ? (a.textBlock.isMultiline === false && b2.preventDefault(), a.acceptText(Qg2)) : c2 === "Tab" ? (a.acceptText(Rg2), b2.preventDefault()) : c2 === "Escape" && (a.doCancel(), a.diagram !== null && a.diagram.doFocus());
        }
      }, false);
      c.addEventListener("focus", function() {
        if (a.currentTextEditor !== null && a.state !== Og2) {
          var b2 = a.Ct;
          a.ia === Sg2 && (a.ia = Tg2);
          typeof b2.select === "function" && a.selectsTextOnActivate && (b2.select(), b2.setSelectionRange(0, 9999));
        }
      }, false);
      c.addEventListener("blur", function() {
        if (a.currentTextEditor !== null && a.state !== Og2) {
          var b2 = a.Ct;
          typeof b2.focus === "function" && b2.focus();
          typeof b2.select === "function" && a.selectsTextOnActivate && (b2.select(), b2.setSelectionRange(0, 9999));
        }
      }, false);
      b.valueFunction = function() {
        return c.value;
      };
      b.mainElement = c;
      b.show = function(a2, b2, f2) {
        if (a2 instanceof Mg2 && f2 instanceof Lg2)
          if (f2.state === Ug2)
            c.style.border = "3px solid red", c.focus();
          else {
            var d = a2.da(yc2), e = b2.position, k = b2.scale, l2 = a2.Af() * k;
            l2 < f2.minimumEditorScale && (l2 = f2.minimumEditorScale);
            var m2 = a2.naturalBounds.width * l2 + 6, n2 = a2.naturalBounds.height * l2 + 2, p2 = (d.x - e.x) * k;
            d = (d.y - e.y) * k;
            e = a2.verticalAlignment;
            k = (a2.lineHeight + a2.spacingAbove + a2.spacingBelow) * a2.lineCount * l2;
            n2 = e.y * n2 - e.y * k + e.offsetY - (0.5 * n2 - 0.5 * k) - k / 2;
            c.value = a2.text;
            b2.div.style.font = a2.font;
            c.style.position = "absolute";
            c.style.zIndex = "100";
            c.style.font = "inherit";
            c.style.fontSize = 100 * l2 + "%";
            c.style.lineHeight = "normal";
            c.style.width = m2 + "px";
            c.style.left = (p2 - m2 / 2 | 0) - 1 + "px";
            c.style.top = (d + n2 | 0) - 1 + "px";
            c.style.textAlign = a2.textAlign;
            c.style.margin = "0";
            c.style.padding = "1px";
            c.style.border = "0";
            c.style.outline = "none";
            c.style.whiteSpace = "pre-wrap";
            c.style.overflow = "hidden";
            c.rows = a2.lineCount;
            c.SA = l2;
            c.className = "goTXarea";
            b2.div.appendChild(c);
            c.focus();
            f2.selectsTextOnActivate && (c.select(), c.setSelectionRange(0, 9999));
          }
      };
      b.hide = function(a2) {
        a2.div.removeChild(c);
      };
    }
  }
  Lg2.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    if (a === null || a.isReadOnly || Vg2 && Vg2 !== this && (Vg2.acceptText(Wg2), Vg2 && Vg2 !== this) || !a.lastInput.left || this.isBeyondDragSize())
      return false;
    var b = a.Zb(a.lastInput.documentPoint);
    if (!(b !== null && b instanceof Mg2 && b.editable && b.part.canEdit()))
      return false;
    b = b.part;
    return b === null || this.starting === Ng2 && !b.isSelected || this.starting === Xg2 && 2 > a.lastInput.clickCount ? false : true;
  };
  Lg2.prototype.doStart = function() {
    Vg2 = this;
    this.textBlock !== null && this.doActivate();
  };
  Lg2.prototype.doActivate = function() {
    if (!this.isActive) {
      var a = this.diagram;
      if (a !== null) {
        var b = this.textBlock;
        b === null && (b = a.Zb(a.lastInput.documentPoint));
        if (b !== null && b instanceof Mg2 && (this.textBlock = b, b.part !== null)) {
          a.animationManager.rc();
          this.isActive = true;
          this.ia = Sg2;
          var c = this.defaultTextEditor;
          b.textEditor !== null && (c = b.textEditor);
          this.qh = this.textBlock.copy();
          var d = new N2(this.textBlock.da(uc2), this.textBlock.da(Cc2));
          a.Nv(d);
          c.show(b, a, this);
          this.currentTextEditor = c;
        }
      }
    }
  };
  Lg2.prototype.doCancel = function() {
    this.stopTool();
  };
  Lg2.prototype.doMouseUp = function() {
    this.canStart() && this.doActivate();
  };
  Lg2.prototype.doMouseDown = function() {
    this.isActive && this.acceptText(Wg2);
  };
  Lg2.prototype.acceptText = function(a) {
    switch (a) {
      case Wg2:
        if (this.ia === Yg2)
          this.currentTextEditor instanceof HTMLElement && this.currentTextEditor.focus();
        else if (this.ia === Sg2 || this.ia === Ug2 || this.ia === Tg2)
          this.ia = Zg2, $g2(this);
        break;
      case ah2:
      case Qg2:
      case Rg2:
        if (Qg2 !== a || this.textBlock.isMultiline !== true) {
          if (this.ia === Sg2 || this.ia === Ug2 || this.ia === Tg2)
            this.ia = Zg2, $g2(this);
        }
    }
  };
  function $g2(a) {
    var b = a.textBlock, c = a.diagram, d = a.currentTextEditor;
    if (b !== null && d !== null) {
      var e = b.text, f2 = "";
      d.valueFunction !== null && (f2 = d.valueFunction());
      a.isValidText(b, e, f2) ? (a.xa(a.name), a.ia = Yg2, a.transactionResult = a.name, b.text = f2, a.doSuccess(e, f2), c !== null && c.S("TextEdited", b, e), a.stopTransaction(), a.stopTool(), c !== null && c.doFocus()) : (a.ia = Ug2, a.doError(e, f2));
    }
  }
  Lg2.prototype.doError = function(a, b) {
    var c = this.textBlock;
    c.errorFunction !== null && c.errorFunction(this, a, b);
    (a = this.currentTextEditor) && a.show(c, this.diagram, this);
  };
  Lg2.prototype.doSuccess = function(a, b) {
    var c = this.textBlock;
    c.textEdited !== null && c.textEdited(c, a, b);
  };
  Lg2.prototype.doDeactivate = function() {
    var a = this.diagram;
    a !== null && (this.ia = Og2, this.currentTextEditor !== null && this.currentTextEditor.hide(a, this), this.textBlock = null, this.isActive = false);
  };
  Lg2.prototype.doStop = function() {
    Vg2 = null;
  };
  Lg2.prototype.isValidText = function(a, b, c) {
    var d = this.textValidation;
    if (d !== null && !d(a, b, c))
      return false;
    d = a.textValidation;
    return d === null || d(a, b, c) ? true : false;
  };
  Lg2.prototype.my = function(a) {
    var b = this.qh;
    b.text = a;
    b.measure(this.textBlock.ei, Infinity);
    return b;
  };
  na2.Object.defineProperties(Lg2.prototype, { textBlock: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba = a;
  } }, currentTextEditor: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, defaultTextEditor: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } }, starting: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa = a;
  } }, textValidation: {
    get: function() {
      return this.ui;
    },
    set: function(a) {
      this.ui = a;
    }
  }, minimumEditorScale: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, selectsTextOnActivate: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, state: { get: function() {
    return this.ia;
  }, set: function(a) {
    this.ia !== a && (this.ia = a);
  } } });
  Lg2.prototype.measureTemporaryTextBlock = Lg2.prototype.my;
  var ah2 = new D2(Lg2, "LostFocus", 0), Wg2 = new D2(Lg2, "MouseDown", 1), Rg2 = new D2(Lg2, "Tab", 2), Qg2 = new D2(Lg2, "Enter", 3), bh2 = new D2(Lg2, "SingleClick", 0), Ng2 = new D2(Lg2, "SingleClickSelected", 1), Xg2 = new D2(Lg2, "DoubleClick", 2), Og2 = new D2(Lg2, "StateNone", 0), Sg2 = new D2(Lg2, "StateActive", 1), Tg2 = new D2(Lg2, "StateEditing", 2), Zg2 = new D2(Lg2, "StateValidating", 3), Ug2 = new D2(Lg2, "StateInvalid", 4), Yg2 = new D2(Lg2, "StateValidated", 5), Vg2 = null;
  Lg2.className = "TextEditingTool";
  Lg2.LostFocus = ah2;
  Lg2.MouseDown = Wg2;
  Lg2.Tab = Rg2;
  Lg2.Enter = Qg2;
  Lg2.SingleClick = bh2;
  Lg2.SingleClickSelected = Ng2;
  Lg2.DoubleClick = Xg2;
  Lg2.StateNone = Og2;
  Lg2.StateActive = Sg2;
  Lg2.StateEditing = Tg2;
  Lg2.StateValidating = Zg2;
  Lg2.StateInvalid = Ug2;
  Lg2.StateValidated = Yg2;
  Ma2("textEditingTool", function() {
    return this.findTool("TextEditing");
  }, function(a) {
    this.Za("TextEditing", a, this.mouseUpTools);
  });
  function ch2(a) {
    dh2 || (eh2(), dh2 = true);
    this.D = ve2;
    this.Yk = this.tb = this.rr = this.lc = false;
    this.sx = true;
    this.Zk = fh2;
    this.Um = false;
    this.$h = this.vd = true;
    this.Lg = 600;
    this.Ew = this.px = false;
    this.Se = new G2();
    this.Td = new gh2();
    this.Td.Qd = this;
    this.cj = new G2();
    this.qu = new G2();
    this.ds = new G2();
    this.Al = new G2();
    a && Object.assign(this, a);
  }
  ch2.prototype.Ne = function(a) {
    this.D = a;
  };
  ch2.prototype.canStart = function() {
    return true;
  };
  function hh2(a, b) {
    a.vd && a.canStart(b) && (a.Se.add(b), a.defaultAnimation.isAnimating && a.rc(), ih2(a.D), a.tb = true);
  }
  function jh2(a) {
    if (a.vd && a.tb) {
      var b = a.Td, c = a.D, d = a.Se.contains("Model");
      d && (a.Yk = true, a.Zk === fh2 ? (b.isViewportUnconstrained = true, b.nc.clear(), b.add(c, "position", c.position.copy().offset(0, -200), c.position), b.add(c, "opacity", 0, 1)) : a.Zk === kh2 && b.nc.clear(), a.sx = a.Zk === lh2 && c.ku.A(c.ja) ? true : false, c.S("InitialAnimationStarting", a));
      d && !a.$h || b.nc.count === 0 ? (a.Se.clear(), a.tb = false, b.nc.clear(), mh2(b, c), a.Yk = false, c.N()) : (a.Se.clear(), c.kg = false, d = b.nc.get(c), c.autoScale !== nh2 && d !== null && (delete d.start.scale, delete d.end.scale), x2.requestAnimationFrame(function() {
        a.tb === false || b.lc || (c.Ie("temporaryPixelRatio") && Pe2(c), Ah2(c), a.tb = false, b.start(), Bh2(a), c.Qa(), Ch2(b, 0), uf2(c, true), Dh2(a), c.S("AnimationStarting", a));
      }));
    }
  }
  function Eh2(a, b, c, d) {
    a.isTicking || b instanceof T2 && (b.fromNode !== null || b.toNode !== null) || a.Td.add(b, "position", c, d, false);
  }
  t2 = ch2.prototype;
  t2.Ms = function(a) {
    return this.Td.Ms(a);
  };
  t2.kv = function(a) {
    return this.Td.kv(a);
  };
  function Fh2(a, b) {
    function c() {
      0 < e.ds.count && (d.addAll(e.ds), e.ds.clear(), e.lc = true);
      if (e.lc !== false && d.count !== 0) {
        e.qu.addAll(d);
        for (var a2 = e.qu.iterator; a2.next(); ) {
          var b2 = a2.value;
          if (b2.lc !== false) {
            a:
              if (0 < b2.Rl.count)
                var h = true;
              else {
                for (h = b2.nc.iterator; h.next(); ) {
                  var k = h.key;
                  if (k instanceof Y2 && k.diagram !== null || k instanceof R2) {
                    h = true;
                    break a;
                  }
                }
                h = false;
              }
            h ? Gh2(b2, false) : b2.gl = true;
          }
        }
        e.qu.clear();
        Bh2(e);
        uf2(e.D);
        Dh2(e);
        x2.requestAnimationFrame(c);
      }
    }
    var d = a.cj, e = a;
    a.lc ? a.ds.add(b) : (a.lc = true, d.add(b), x2.requestAnimationFrame(function() {
      c();
    }));
  }
  function Hh2(a) {
    for (a = a.cj.iterator; a.next(); )
      a.value.gl = false;
  }
  function Bh2(a) {
    if (!a.rr) {
      var b = a.D;
      a.px = b.skipsUndoManager;
      a.Ew = b.skipsModelSourceBindings;
      b.skipsUndoManager = true;
      b.skipsModelSourceBindings = true;
      a.rr = true;
    }
  }
  function Dh2(a) {
    var b = a.D;
    b.skipsUndoManager = a.px;
    b.skipsModelSourceBindings = a.Ew;
    a.rr = false;
  }
  t2.rc = function(a) {
    var b = this.Td;
    this.tb === true && (this.Yk = this.tb = false, this.Se.clear(), 0 < b.nc.count && this.D.Gb());
    if (this.lc) {
      if (b.Zl(true), b.nc.clear(), mh2(b, null), a === true)
        for (a = this.cj.ya(), b = 0; b < a.length; b++)
          a[b].Zl(true);
    } else
      b.nc.clear(), mh2(b, this.D);
  };
  t2.Zl = function(a) {
    a === this.defaultAnimation && this.defaultAnimation.nc.clear();
    this.cj.remove(a);
    this.cj.count === 0 && (this.lc = false, this.D.Gb());
    a === this.defaultAnimation && (this.defaultAnimation.nc.clear(), this.D.S("AnimationFinished", this));
  };
  t2.Oj = function(a, b) {
    this.tb && (this.Se.contains("Expand Tree") || this.Se.contains("Expand SubGraph")) && (this.Td.Oj(a, b), Ih2(this, a));
  };
  t2.Mj = function(a, b) {
    this.tb && (this.Se.contains("Collapse Tree") || this.Se.contains("Collapse SubGraph")) && (this.Td.Mj(a, b), Jh2(this.Td, b, "position", b.position, b.position), Ih2(this, a));
  };
  function Kh2(a, b, c) {
    a.tb && !b.A(c) && (a.D.Oi || (b = c.copy()), Jh2(a.Td, a.D, "position", b, c));
  }
  function Ih2(a, b) {
    for (b = b.findLinksConnected(); b.next(); ) {
      var c = b.value;
      c.gf = c.points.copy();
      a.Al.add(c);
    }
  }
  function Lh2(a, b, c, d, e) {
    a === null && (a = [0, 0, 0, 0]);
    b === null && (b = [0, 0, 0, 0]);
    var f2 = a[0], g2 = a[1], h = a[2];
    a = a[3];
    var k = b[0], l2 = b[1], m2 = b[2];
    b = b[3];
    if (h === 0 || h === 100)
      f2 = k, g2 = l2;
    else if (m2 === 0 || m2 === 100)
      k = f2, l2 = g2;
    180 < Math.abs(k - f2) && (k > f2 ? f2 += 360 : k += 360);
    f2 = e(c, f2, k - f2, d) % 360;
    g2 = e(c, g2, l2 - g2, d);
    h = e(c, h, m2 - h, d);
    c = e(c, a, b - a, d);
    return "hsla(" + f2 + ", " + g2 + "%, " + h + "%, " + c + ")";
  }
  function eh2() {
    function a(a2, b2, e, f2, g2, h) {
      a2.position = new K2(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h));
    }
    var b = new H2();
    b.add("position:diagram", a);
    b.add("position", a);
    b.add("position:part", function(a2, b2, e, f2, g2, h) {
      g2 < h ? a2.ym(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h), false) : a2.position = new K2(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h));
    });
    b.add("location", function(a2, b2, e, f2, g2, h) {
      g2 < h ? a2.ym(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h), true) : a2.location = new K2(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h));
    });
    b.add("position:placeholder", function(a2, b2, e, f2, g2, h) {
      g2 < h ? a2.ym(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h), false) : a2.position = new K2(f2(g2, b2.x, e.x - b2.x, h), f2(g2, b2.y, e.y - b2.y, h));
    });
    b.add("position:nodeCollapse", function(a2, b2, e, f2, g2, h) {
      var c = a2.actualBounds, d = e.actualBounds;
      e = d.x + d.width / 2 - c.width / 2;
      c = d.y + d.height / 2 - c.height / 2;
      g2 < h ? a2.ym(f2(g2, b2.x, e - b2.x, h), f2(g2, b2.y, c - b2.y, h), false) : a2.position = new K2(f2(g2, b2.x, e - b2.x, h), f2(g2, b2.y, c - b2.y, h));
    });
    b.add("desiredSize", function(a2, b2, e, f2, g2, h) {
      a2.desiredSize = new N2(f2(g2, b2.width, e.width - b2.width, h), f2(g2, b2.height, e.height - b2.height, h));
    });
    b.add("width", function(a2, b2, e, f2, g2, h) {
      a2.width = f2(g2, b2, e - b2, h);
    });
    b.add("height", function(a2, b2, e, f2, g2, h) {
      a2.height = f2(g2, b2, e - b2, h);
    });
    b.add("fill", function(a2, b2, e, f2, g2, h) {
      a2.fill = Lh2(b2, e, g2, h, f2);
    });
    b.add("stroke", function(a2, b2, e, f2, g2, h) {
      a2.stroke = Lh2(b2, e, g2, h, f2);
    });
    b.add("strokeWidth", function(a2, b2, e, f2, g2, h) {
      a2.strokeWidth = f2(g2, b2, e - b2, h);
    });
    b.add("strokeDashOffset", function(a2, b2, e, f2, g2, h) {
      a2.strokeDashOffset = f2(g2, b2, e - b2, h);
    });
    b.add("background", function(a2, b2, e, f2, g2, h) {
      a2.background = Lh2(b2, e, g2, h, f2);
    });
    b.add("areaBackground", function(a2, b2, e, f2, g2, h) {
      a2.areaBackground = Lh2(b2, e, g2, h, f2);
    });
    b.add("opacity", function(a2, b2, e, f2, g2, h) {
      a2.opacity = f2(g2, b2, e - b2, h);
    });
    b.add("scale", function(a2, b2, e, f2, g2, h) {
      a2.scale = f2(g2, b2, e - b2, h);
    });
    b.add("angle", function(a2, b2, e, f2, g2, h) {
      a2.angle = f2(g2, b2, e - b2, h);
    });
    Mh2 = b;
  }
  na2.Object.defineProperties(ch2.prototype, {
    animationReasons: { get: function() {
      return this.Se;
    } },
    isEnabled: { get: function() {
      return this.vd;
    }, set: function(a) {
      (this.vd = a) && this.cj.each(function(a2) {
        a2.isAnimating || a2.runCount !== Infinity || a2.start();
      });
    } },
    duration: { get: function() {
      return this.Lg;
    }, set: function(a) {
      1 > a && xa2(a, ">= 1", ch2, "duration");
      this.Lg = a;
    } },
    isAnimating: { get: function() {
      return this.lc;
    } },
    isTicking: { get: function() {
      return this.rr;
    } },
    isInitial: { get: function() {
      return this.$h;
    }, set: function(a) {
      this.$h = a;
    } },
    defaultAnimation: { get: function() {
      return this.Td;
    } },
    activeAnimations: { get: function() {
      return this.cj;
    } },
    initialAnimationStyle: { get: function() {
      return this.Zk;
    }, set: function(a) {
      this.Zk = a;
    } }
  });
  ch2.prototype.stopAnimation = ch2.prototype.rc;
  var Mh2 = null, dh2 = false, fh2 = new D2(ch2, "Default", 1), lh2 = new D2(ch2, "AnimateLocations", 2), kh2 = new D2(ch2, "None", 3);
  ch2.className = "AnimationManager";
  ch2.defineAnimationEffect = function(a, b) {
    dh2 || (eh2(), dh2 = true);
    Mh2.add(a, b);
  };
  ch2.Default = fh2;
  ch2.AnimateLocations = lh2;
  ch2.None = kh2;
  function gh2(a) {
    this.vu = this.ox = this.Qd = this.D = null;
    this.gl = this.lc = this.j = false;
    this.yn = this.Cd = 0;
    this.Pq = this.It = Nh2;
    this.fl = this.Xo = false;
    this.ju = 1;
    this.hu = 0;
    this.ud = this.Lg = NaN;
    this.Iw = 0;
    this.zn = null;
    this.o = zb2;
    this.nc = new H2();
    this.cu = new H2();
    this.Rl = new G2();
    this.du = new G2();
    this.Fw = Oh2;
    a && Object.assign(this, a);
  }
  gh2.prototype.suspend = function() {
    this.gl = true;
  };
  gh2.prototype.advanceTo = function(a, b) {
    b && (this.gl = false);
    this.Xo && a >= this.ud && (this.fl = true, a -= this.ud);
    this.Iw = a;
    Gh2(this, true);
    Bh2(this.Qd);
    uf2(this.D);
    Dh2(this.Qd);
    this.D.redraw();
  };
  function mh2(a, b) {
    a.cu.clear();
    a.fl = false;
    a.hu = 0;
    a.ud = NaN;
    0 < a.Rl.count && a.Rl.clear();
    0 < a.du.count && a.du.clear();
    if (b !== null)
      for (a = b.links; a.next(); )
        a.value.gf = null;
  }
  t2 = gh2.prototype;
  t2.start = function() {
    if (this.nc.count === 0 || this.lc)
      return this;
    for (var a = this.D, b = this.nc.iterator; b.next(); ) {
      var c = b.value.end, d = b.key;
      if (c["position:placeholder"]) {
        var e = d.findVisibleNode();
        if (e instanceof U2 && e.placeholder !== null) {
          var f2 = e.placeholder;
          e = f2.da(uc2);
          f2 = f2.padding;
          e.x += f2.left;
          e.y += f2.top;
          c["position:placeholder"] = e;
        }
      }
      a === null && (d instanceof R2 ? a = d : d instanceof Y2 && (a = d.diagram));
    }
    if (a !== null)
      this.D = a, this.Qd = a.animationManager;
    else
      return this;
    b = this.Qd;
    if (b.isEnabled === false)
      return this;
    this.ud = isNaN(this.Lg) ? b.duration : this.Lg;
    this.Pq = this.It;
    b.Yk && b.Zk === fh2 && this === b.defaultAnimation && (this.Pq = Ph2, this.ud = isNaN(this.Lg) ? b.duration === 600 ? 900 : b.duration : this.Lg);
    this.Fw = a.scrollMode;
    this.isViewportUnconstrained && (a.Ij = Qh2);
    Bh2(b);
    this.Rl.each(function(b2) {
      b2.data = null;
      a.add(b2);
    });
    Dh2(b);
    this.lc = true;
    this.Cd = +new Date();
    this.yn = this.Cd + this.ud;
    Fh2(b, this);
    return this;
  };
  t2.dz = function(a, b) {
    if (!a.Mc())
      return this;
    this.Rl.add(a);
    this.D = b;
    return this;
  };
  t2.add = function(a, b, c, d, e) {
    if (b === "position" && c.A(d))
      return this;
    this.D === null && (a instanceof R2 ? this.D = a : a instanceof Y2 && a.diagram !== null && (this.D = a.diagram));
    if (a instanceof V2) {
      if (!a.isAnimated)
        return this;
      b === "position" && (b = "position:part");
    }
    Jh2(this, a, b, c, d, e);
    return this;
  };
  function Jh2(a, b, c, d, e, f2) {
    var g2 = a.nc;
    b instanceof R2 && c === "position" && (c = "position:diagram");
    if (c === "fill" || c === "stroke" || c === "background" || c === "areaBackground")
      Rh2(d), Sh2(), d = [Th2.j, Th2.C, Th2.o, Th2.L], Rh2(e), Sh2(), e = [Th2.j, Th2.C, Th2.o, Th2.L];
    if (g2.contains(b)) {
      var h = g2.H(b);
      var k = h.start;
      var l2 = h.end;
      k[c] === void 0 && (k[c] = Uh2(d));
      l2[c] = Uh2(e);
    } else
      k = {}, l2 = {}, k[c] = Uh2(d), l2[c] = Uh2(e), h = k.position, b instanceof Y2 && h instanceof K2 && !h.u() && b.diagram.animationManager.Se.contains("Expand SubGraph") && h.assign(l2.position), h = new Vh2(k, l2, f2), g2.add(b, h);
    g2 = k[c];
    g2 instanceof K2 && !g2.u() && g2.assign(a.o);
    f2 && c.indexOf("position:") === 0 && b instanceof V2 ? h.Tu.location = Uh2(b.location) : f2 && (h.Tu[c] = Uh2(d));
  }
  function Uh2(a) {
    return a instanceof K2 ? a.copy() : a instanceof Gb2 ? a.copy() : a;
  }
  t2.Ms = function(a) {
    if (!this.lc)
      return false;
    a = this.nc.H(a);
    return a !== null && a.Gv;
  };
  t2.kv = function(a) {
    if (!this.lc)
      return false;
    a = this.nc.H(a);
    return a !== null && (a.start.position || a.start.location);
  };
  function Gh2(a, b) {
    if (!a.gl || b) {
      var c = a.Qd;
      if (a.lc !== false) {
        var d = +new Date(), e = d > a.yn ? a.ud : d - a.Cd;
        b && (e = a.Iw, e < a.ud ? (a.Cd = +new Date() - e, a.yn = a.Cd + a.ud) : e = a.ud);
        Bh2(c);
        Ch2(a, e);
        uf2(a.D, true);
        Dh2(c);
        d > a.yn && (a.Xo && !a.fl ? (a.Cd = +new Date(), a.yn = a.Cd + a.ud, a.fl = true) : a.Zl(false));
      }
    }
  }
  function Ch2(a, b) {
    for (var c = a.ud, d = a.nc.iterator, e = a.fl; d.next(); ) {
      var f2 = d.key;
      if (!(f2 instanceof Y2 && f2.diagram === null)) {
        var g2 = d.value, h = e ? g2.end : g2.start;
        g2 = e ? g2.start : g2.end;
        var k = Mh2, l2;
        for (l2 in g2)
          l2 === "position" && (g2["position:placeholder"] || g2["position:nodeCollapse"]) || k.get(l2) === null || k.get(l2)(f2, h[l2], g2[l2], a.Pq, b, c, a);
      }
    }
  }
  t2.stop = function() {
    if (!this.lc)
      return this;
    this.Zl(true);
    return this;
  };
  t2.Zl = function(a) {
    this.vu !== null && this.vu.ep.remove(this.ox);
    if (this.lc) {
      var b = this.D, c = this.Qd;
      this.gl = this.lc = c.Yk = false;
      Bh2(c);
      for (var d = this.nc, e = this.Rl.iterator; e.next(); )
        b.remove(e.value);
      for (e = this.du.iterator; e.next(); )
        e.value.s();
      e = this.Xo;
      d = d.iterator;
      for (var f2 = Mh2; d.next(); ) {
        var g2 = d.key, h = d.value, k = e ? h.end : h.start, l2 = e ? h.start : h.end, m2 = h.Tu, n2;
        for (n2 in l2)
          if (f2.get(n2) !== null) {
            var p2 = n2;
            !h.Lu || p2 !== "position:nodeCollapse" && p2 !== "position:placeholder" || (p2 = "position");
            f2.get(p2)(g2, k[n2], m2[n2] !== void 0 ? m2[n2] : h.Lu ? k[n2] : l2[n2], this.Pq, this.ud, this.ud, this);
          }
        h.Lu && m2.location !== void 0 && g2 instanceof V2 && (g2.location = m2.location);
        h.Gv && g2 instanceof V2 && g2.Pb(false);
      }
      b.Hs.clear();
      bf2(b, false);
      b.Qa();
      b.N();
      uf2(b, true);
      if (c.defaultAnimation === this) {
        for (n2 = c.Al.iterator; n2.next(); )
          e = n2.value, e.gf !== null && (e.points = e.gf, e.gf = null);
        c.Al.clear();
      }
      this.isViewportUnconstrained && (b.scrollMode = this.Fw);
      Dh2(c);
      this.hu++;
      !a && this.ju > this.hu ? (this.fl = false, this.start()) : (this.zn && this.zn(this), mh2(this, null), c.Zl(this), b.Gb());
    }
  };
  t2.Oj = function(a, b) {
    var c = b.actualBounds, d = null;
    b instanceof U2 && (d = b.placeholder);
    d !== null ? (c = d.da(uc2), d = d.padding, c.x += d.left, c.y += d.top, this.add(a, "position", c, a.position, false)) : this.add(a, "position", new K2(c.x + c.width / 2, c.y + c.height / 2), a.position, false);
    this.add(a, "scale", 0.01, a.scale, false);
    if (a instanceof U2)
      for (a = a.memberParts; a.next(); )
        d = a.value, d instanceof W2 && this.Oj(d, b);
  };
  t2.Mj = function(a, b) {
    if (a.isVisible()) {
      var c = null;
      b instanceof U2 && (c = b.placeholder);
      c !== null ? this.add(a, "position:placeholder", a.position, c, true) : this.add(a, "position:nodeCollapse", a.position, b, true);
      this.add(a, "scale", a.scale, 0.01, true);
      c = this.nc;
      c.contains(a) && (c.H(a).Gv = true);
      if (a instanceof U2)
        for (a = a.memberParts; a.next(); )
          c = a.value, c instanceof W2 && this.Mj(c, b);
    }
  };
  t2.bA = function(a) {
    var b = this.cu.get(a);
    b === null && (b = {}, this.cu.add(a, b));
    return b;
  };
  na2.Object.defineProperties(gh2.prototype, { duration: { get: function() {
    return this.Lg;
  }, set: function(a) {
    1 > a && xa2(a, ">= 1", gh2, "duration");
    this.Lg = a;
  } }, reversible: { get: function() {
    return this.Xo;
  }, set: function(a) {
    this.Xo = a;
  } }, runCount: { get: function() {
    return this.ju;
  }, set: function(a) {
    0 < a ? this.ju = a : C2("Animation.runCount value must be a positive integer.");
  } }, finished: {
    get: function() {
      return this.zn;
    },
    set: function(a) {
      this.zn !== a && (this.zn = a);
    }
  }, easing: { get: function() {
    return this.It;
  }, set: function(a) {
    this.It = a;
  } }, isViewportUnconstrained: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } }, isAnimating: { get: function() {
    return this.lc;
  } } });
  gh2.prototype.getTemporaryState = gh2.prototype.bA;
  gh2.prototype.stop = gh2.prototype.stop;
  gh2.prototype.add = gh2.prototype.add;
  gh2.prototype.addTemporaryPart = gh2.prototype.dz;
  function Nh2(a, b, c, d) {
    a /= d / 2;
    return 1 > a ? c / 2 * a * a + b : -c / 2 * (--a * (a - 2) - 1) + b;
  }
  function Ph2(a, b, c, d) {
    return a === d ? b + c : c * (-Math.pow(2, -10 * a / d) + 1) + b;
  }
  gh2.className = "Animation";
  gh2.EaseLinear = function(a, b, c, d) {
    return c * a / d + b;
  };
  gh2.EaseInOutQuad = Nh2;
  gh2.EaseInQuad = function(a, b, c, d) {
    return c * (a /= d) * a + b;
  };
  gh2.EaseOutQuad = function(a, b, c, d) {
    return -c * (a /= d) * (a - 2) + b;
  };
  gh2.EaseInExpo = function(a, b, c, d) {
    return a === 0 ? b : c * Math.pow(2, 10 * (a / d - 1)) + b;
  };
  gh2.EaseOutExpo = Ph2;
  function Vh2(a, b, c) {
    this.start = a;
    this.end = b;
    this.Tu = {};
    this.Lu = c;
    this.Gv = false;
  }
  Vh2.className = "AnimationState";
  function Wh2(a, b, c) {
    this.od = null;
    this.ff = a;
    this.wp = c || Xh2;
    this.zk = null;
    b !== void 0 && (this.zk = b, c === void 0 && (this.wp = Yh2));
  }
  Wh2.prototype.copy = function() {
    var a = new Wh2(this.ff);
    a.wp = this.wp;
    var b = this.zk;
    if (b !== null) {
      var c = {};
      b.duration !== void 0 && (c.duration = b.duration);
      b.finished !== void 0 && (c.finished = b.finished);
      b.easing !== void 0 && (c.easing = b.easing);
      a.zk = c;
    }
    return a;
  };
  function Zh2(a, b) {
    a = a.zk;
    a !== null && (a.duration && (b.duration = a.duration), a.finished && (b.finished = a.finished), a.easing && (b.easing = a.easing));
  }
  na2.Object.defineProperties(Wh2.prototype, { propertyName: { get: function() {
    return this.ff;
  }, set: function(a) {
    this.ff = a;
  } }, animationSettings: { get: function() {
    return this.zk;
  }, set: function(a) {
    this.zk = a;
  } }, startCondition: { get: function() {
    return this.wp;
  }, set: function(a) {
    this.wp = a;
  } } });
  var Xh2 = new D2(Wh2, "Default", 1), Yh2 = new D2(Wh2, "Immediate", 2), $h2 = new D2(Wh2, "Bundled", 3);
  Wh2.className = "AnimationTrigger";
  Wh2.Default = Xh2;
  Wh2.Immediate = Yh2;
  Wh2.Bundled = $h2;
  function ai2(a) {
    Va2(this);
    this.D = null;
    this.Ha = new F2();
    this.na = "";
    this.mb = 1;
    this.o = false;
    this.j = this.oi = this.C = this.Od = this.Nd = this.sc = this.Sb = this.Rb = this.Hb = this.Ma = this.Pd = this.Ba = this.ke = this.wa = this.L = true;
    this.Jo = [];
    a && Object.assign(this, a);
  }
  t2 = ai2.prototype;
  t2.clear = function() {
    this.Ha.clear();
    this.Jo.length = 0;
  };
  t2.Ne = function(a) {
    this.D = a;
  };
  t2.toString = function(a) {
    a === void 0 && (a = 0);
    var b = 'Layer "' + this.name + '"';
    if (0 >= a)
      return b;
    for (var c = 0, d = 0, e = 0, f2 = 0, g2 = 0, h = this.Ha.iterator; h.next(); ) {
      var k = h.value;
      k instanceof U2 ? e++ : k instanceof W2 ? d++ : k instanceof T2 ? f2++ : k instanceof ze ? g2++ : c++;
    }
    h = "";
    0 < c && (h += c + " Parts ");
    0 < d && (h += d + " Nodes ");
    0 < e && (h += e + " Groups ");
    0 < f2 && (h += f2 + " Links ");
    0 < g2 && (h += g2 + " Adornments ");
    if (1 < a)
      for (a = this.Ha.iterator; a.next(); )
        c = a.value, h += "\n    " + c.toString(), d = c.data, d !== null && ib2(d) && (h += " #" + ib2(d)), c instanceof W2 ? h += " " + Ka2(d) : c instanceof T2 && (h += " " + Ka2(c.fromNode) + " " + Ka2(c.toNode));
    return b + " " + this.Ha.count + ": " + h;
  };
  t2.Zb = function(a, b, c) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    if (this.oi === false)
      return null;
    var d = false;
    this.diagram !== null && this.diagram.viewportBounds.$(a) && (d = true);
    for (var e = K2.alloc(), f2 = this.Ha.m, g2 = f2.length; g2--; ) {
      var h = f2[g2];
      if ((d !== true || mg2(h) !== false) && h.isVisible() && (e.assign(a), ub2(e, h.fe), h = h.Zb(e, b, c), h !== null && (b !== null && (h = b(h)), h !== null && (c === null || c(h)))))
        return K2.free(e), h;
    }
    K2.free(e);
    return null;
  };
  t2.Hi = function(a, b, c, d) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    d instanceof F2 || d instanceof G2 || (d = new G2());
    if (this.oi === false)
      return d;
    var e = false;
    this.diagram !== null && this.diagram.viewportBounds.$(a) && (e = true);
    for (var f2 = K2.alloc(), g2 = this.Ha.m, h = g2.length; h--; ) {
      var k = g2[h];
      if ((e !== true || mg2(k) !== false) && k.isVisible()) {
        f2.assign(a);
        ub2(f2, k.fe);
        var l2 = k;
        k.Hi(f2, b, c, d) && (b !== null && (l2 = b(l2)), l2 === null || c !== null && !c(l2) || d.add(l2));
      }
    }
    K2.free(f2);
    return d;
  };
  t2.zf = function(a, b, c, d, e) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    d === void 0 && (d = false);
    e instanceof F2 || e instanceof G2 || (e = new G2());
    if (this.oi === false)
      return e;
    var f2 = false;
    this.diagram !== null && this.diagram.viewportBounds.Ge(a) && (f2 = true);
    for (var g2 = this.Ha.m, h = g2.length; h--; ) {
      var k = g2[h];
      if ((f2 !== true || mg2(k) !== false) && k.isVisible()) {
        var l2 = k;
        k.zf(a, b, c, d, e) && (b !== null && (l2 = b(l2)), l2 === null || c !== null && !c(l2) || e.add(l2));
      }
    }
    return e;
  };
  t2.Yu = function(a, b, c, d, e, f2, g2) {
    if (this.oi === false)
      return e;
    for (var h = this.Ha.m, k = h.length; k--; ) {
      var l2 = h[k];
      if ((g2 !== true || mg2(l2) !== false) && f2(l2) && l2.isVisible()) {
        var m2 = l2;
        l2.zf(a, b, c, d, e) && (b !== null && (m2 = b(m2)), m2 === null || c !== null && !c(m2) || e.add(m2));
      }
    }
    return e;
  };
  t2.qg = function(a, b, c, d, e, f2) {
    c === void 0 && (c = null);
    d === void 0 && (d = null);
    e === void 0 && (e = true);
    if (e !== false && e !== true) {
      if (e instanceof F2 || e instanceof G2)
        f2 = e;
      e = true;
    }
    f2 instanceof F2 || f2 instanceof G2 || (f2 = new G2());
    if (this.oi === false)
      return f2;
    var g2 = false;
    this.diagram !== null && this.diagram.viewportBounds.$(a) && (g2 = true);
    for (var h = K2.alloc(), k = K2.alloc(), l2 = this.Ha.m, m2 = l2.length; m2--; ) {
      var n2 = l2[m2];
      if ((g2 !== true || mg2(n2) !== false) && n2.isVisible()) {
        h.assign(a);
        ub2(h, n2.fe);
        k.h(a.x + b, a.y);
        ub2(k, n2.fe);
        var p2 = n2;
        n2.qg(h, k, c, d, e, f2) && (c !== null && (p2 = c(p2)), p2 === null || d !== null && !d(p2) || f2.add(p2));
      }
    }
    K2.free(h);
    K2.free(k);
    return f2;
  };
  t2.Md = function(a, b) {
    if (this.visible) {
      var c = this.Ha.m, d = c.length;
      if (d !== 0) {
        a = Ea2();
        for (var e = Ea2(), f2 = 0; f2 < d; f2++) {
          var g2 = c[f2];
          g2.Ww = f2;
          if (g2 instanceof T2) {
            if (g2.td === false)
              continue;
          } else if (g2 instanceof ze && g2.adornedPart !== null)
            continue;
          var h = g2.actualBounds;
          g2.isVisible() && $b2(h, b) ? (g2.Md(true), a.push(g2)) : (g2.Md(false), g2.adornments !== null && 0 < g2.adornments.count && e.push(g2));
        }
        for (b = 0; b < a.length; b++)
          for (c = a[b], bi2(c), c = c.adornments; c.next(); )
            d = c.value, d.measure(Infinity, Infinity), d.arrange(), d.Md(true);
        for (b = 0; b < e.length; b++)
          bi2(e[b]);
        Ia2(a);
        Ia2(e);
      }
    }
  };
  function ci2(a, b) {
    var c = 1;
    a.mb !== 1 && (c = b.globalAlpha, b.globalAlpha = c * a.mb);
    return c;
  }
  t2.pc = function(a, b, c) {
    if (this.visible && this.mb !== 0 && (c === void 0 && (c = true), c || !this.isTemporary)) {
      c = this.Ha.m;
      var d = c.length;
      if (d !== 0) {
        var e = ci2(this, a), f2 = this.Jo;
        f2.length = 0;
        for (var g2 = b.scale, h = N2.alloc(), k = 0; k < d; k++)
          this.Di(a, c[k], b, f2, g2, h, true);
        N2.free(h);
        a.globalAlpha = e;
      }
    }
  };
  t2.Di = function(a, b, c, d, e, f2, g2) {
    if (!g2 || mg2(b)) {
      if (d !== null && b instanceof T2 && (b.isOrthogonal && d.push(b), b.td === false))
        return;
      g2 = false;
      for (d = b.containingGroup; d !== null; )
        g2 ? d.$a !== null && f2.ey(d.$a) : d.$a !== null && (g2 = true, f2.assign(d.$a)), d = d.containingGroup;
      var h = b.actualBounds;
      d = false;
      if (g2 && b.isVisible()) {
        if (!f2.Lc(h))
          return;
        d = !f2.Ge(h);
      }
      d && (a.save(), a.beginPath(), a.rect(f2.x, f2.y, f2.width, f2.height), a.clip());
      h.width * e > c.wr || h.height * e > c.wr ? b.pc(a, c) : (e = b.actualBounds, f2 = b.naturalBounds, e.width === 0 || e.height === 0 || isNaN(e.x) || isNaN(e.y) || !b.isVisible() || (c = b.transform, b.areaBackground !== null && (di2(b, a, b.areaBackground, true, true, f2, e), a.fillRect(e.x, e.y, e.width, e.height)), b.areaBackground === null && b.background === null && (di2(b, a, "rgba(0,0,0,0.3)", true, false, f2, e), a.fillRect(e.x, e.y, e.width, e.height)), b.background !== null && (a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy), di2(b, a, b.background, true, false, f2, e), a.fillRect(0, 0, f2.width / 2, f2.height / 2), c.Cs() || (b = 1 / (c.m11 * c.m22 - c.m12 * c.m21), a.transform(c.m22 * b, -c.m12 * b, -c.m21 * b, c.m11 * b, b * (c.m21 * c.dy - c.m22 * c.dx), b * (c.m12 * c.dx - c.m11 * c.dy))))));
      d && (a.restore(), a.Hc(true));
    }
  };
  t2.g = function(a, b, c, d, e) {
    var f2 = this.diagram;
    f2 !== null && f2.Wa(ge2, a, this, b, c, d, e);
  };
  t2.Ni = function(a, b, c) {
    var d = this.Ha;
    b.fi = this;
    if (a >= d.count)
      a = d.count;
    else if (d.J(a) === b)
      return -1;
    d.wb(a, b);
    b.cq(c);
    d = this.diagram;
    d !== null && (c ? d.N() : d.Ni(b));
    ei2(this, a, b);
    return a;
  };
  t2.fc = function(a, b, c) {
    if (!c && b.layer !== this && b.layer !== null)
      return b.layer.fc(a, b, c);
    var d = this.Ha;
    if (0 > a || a >= d.length) {
      if (a = d.indexOf(b), 0 > a)
        return -1;
    } else if (d.J(a) !== b && (a = d.indexOf(b), 0 > a))
      return -1;
    b.eq(c);
    d.eb(a);
    d = this.diagram;
    d !== null && (c ? d.N() : d.fc(b));
    b.fi = null;
    return a;
  };
  function ei2(a, b, c) {
    b = fi2(a, b, c);
    if (c instanceof U2 && c !== null && isNaN(c.zOrder)) {
      if (c.memberParts.count !== 0) {
        for (var d = -1, e = a.Ha.m, f2 = e.length, g2 = 0; g2 < f2; g2++) {
          var h = e[g2];
          if (h === c && (b = g2, 0 <= d))
            break;
          if (0 > d && h.containingGroup === c && (d = g2, 0 <= b))
            break;
        }
        !(0 > d) && d < b && (e = a.Ha, e.eb(b), e.wb(d, c));
      }
      c = c.containingGroup;
      c !== null && ei2(a, -1, c);
    }
  }
  function fi2(a, b, c) {
    var d = c.zOrder;
    if (isNaN(d))
      return b;
    a = a.Ha;
    var e = a.count;
    if (1 >= e)
      return b;
    0 > b && (b = a.indexOf(c));
    if (0 > b)
      return -1;
    for (var f2 = b - 1, g2 = NaN; 0 <= f2; ) {
      g2 = a.J(f2).zOrder;
      if (!isNaN(g2))
        break;
      f2--;
    }
    for (var h = b + 1, k = NaN; h < e; ) {
      k = a.J(h).zOrder;
      if (!isNaN(k))
        break;
      h++;
    }
    if (!isNaN(g2) && g2 > d)
      for (; ; ) {
        if (f2 === -1 || g2 <= d) {
          f2++;
          if (f2 === b)
            break;
          a.eb(b);
          a.wb(f2, c);
          return f2;
        }
        for (g2 = NaN; 0 <= --f2 && (g2 = a.J(f2).zOrder, isNaN(g2)); )
          ;
      }
    else if (!isNaN(k) && k < d)
      for (; ; ) {
        if (h === e || k >= d) {
          h--;
          if (h === b)
            break;
          a.eb(b);
          a.wb(h, c);
          return h;
        }
        for (k = NaN; ++h < e && (k = a.J(h).zOrder, isNaN(k)); )
          ;
      }
    return b;
  }
  na2.Object.defineProperties(ai2.prototype, {
    parts: { get: function() {
      return this.Ha.iterator;
    } },
    partsBackwards: { get: function() {
      return this.Ha.iteratorBackwards;
    } },
    diagram: { get: function() {
      return this.D;
    } },
    name: { get: function() {
      return this.na;
    }, set: function(a) {
      var b = this.na;
      if (b !== a) {
        var c = this.diagram;
        if (c !== null)
          for (b === "" && C2("Cannot rename default Layer to: " + a), c = c.layers; c.next(); )
            c.value.name === a && C2("Layer.name is already present in this diagram: " + a);
        this.na = a;
        this.g("name", b, a);
        for (a = this.Ha.iterator; a.next(); )
          a.value.layerName = this.na;
      }
    } },
    opacity: { get: function() {
      return this.mb;
    }, set: function(a) {
      var b = this.mb;
      b !== a && ((0 > a || 1 < a) && xa2(a, "0 <= value <= 1", ai2, "opacity"), this.mb = a, this.g("opacity", b, a), a = this.diagram, a !== null && a.N());
    } },
    isTemporary: { get: function() {
      return this.o;
    }, set: function(a) {
      var b = this.o;
      if (b !== a) {
        if (this.o = a)
          this.isInDocumentBounds = false;
        this.g("isTemporary", b, a);
      }
    } },
    visible: { get: function() {
      return this.C;
    }, set: function(a) {
      var b = this.C;
      if (b !== a) {
        this.C = a;
        this.g("visible", b, a);
        for (b = this.Ha.iterator; b.next(); )
          b.value.Pb(a);
        a = this.diagram;
        a !== null && a.N();
      }
    } },
    pickable: { get: function() {
      return this.oi;
    }, set: function(a) {
      var b = this.oi;
      b !== a && (this.oi = a, this.g("pickable", b, a));
    } },
    isInDocumentBounds: { get: function() {
      return this.j;
    }, set: function(a) {
      this.j !== a && (this.j = a, this.diagram !== null && this.diagram.Qa());
    } },
    allowCopy: { get: function() {
      return this.L;
    }, set: function(a) {
      var b = this.L;
      b !== a && (this.L = a, this.g("allowCopy", b, a));
    } },
    allowDelete: { get: function() {
      return this.wa;
    }, set: function(a) {
      var b = this.wa;
      b !== a && (this.wa = a, this.g("allowDelete", b, a));
    } },
    allowTextEdit: { get: function() {
      return this.ke;
    }, set: function(a) {
      var b = this.ke;
      b !== a && (this.ke = a, this.g("allowTextEdit", b, a));
    } },
    allowGroup: { get: function() {
      return this.Ba;
    }, set: function(a) {
      var b = this.Ba;
      b !== a && (this.Ba = a, this.g("allowGroup", b, a));
    } },
    allowUngroup: { get: function() {
      return this.Pd;
    }, set: function(a) {
      var b = this.Pd;
      b !== a && (this.Pd = a, this.g("allowUngroup", b, a));
    } },
    allowLink: { get: function() {
      return this.Ma;
    }, set: function(a) {
      var b = this.Ma;
      b !== a && (this.Ma = a, this.g("allowLink", b, a));
    } },
    allowRelink: {
      get: function() {
        return this.Hb;
      },
      set: function(a) {
        var b = this.Hb;
        b !== a && (this.Hb = a, this.g("allowRelink", b, a));
      }
    },
    allowMove: { get: function() {
      return this.Rb;
    }, set: function(a) {
      var b = this.Rb;
      b !== a && (this.Rb = a, this.g("allowMove", b, a));
    } },
    allowReshape: { get: function() {
      return this.Sb;
    }, set: function(a) {
      var b = this.Sb;
      b !== a && (this.Sb = a, this.g("allowReshape", b, a));
    } },
    allowResize: { get: function() {
      return this.sc;
    }, set: function(a) {
      var b = this.sc;
      b !== a && (this.sc = a, this.g("allowResize", b, a));
    } },
    allowRotate: { get: function() {
      return this.Nd;
    }, set: function(a) {
      var b = this.Nd;
      b !== a && (this.Nd = a, this.g("allowRotate", b, a));
    } },
    allowSelect: { get: function() {
      return this.Od;
    }, set: function(a) {
      var b = this.Od;
      b !== a && (this.Od = a, this.g("allowSelect", b, a));
    } }
  });
  ai2.prototype.findObjectsNear = ai2.prototype.qg;
  ai2.prototype.findObjectsIn = ai2.prototype.zf;
  ai2.prototype.findObjectsAt = ai2.prototype.Hi;
  ai2.prototype.findObjectAt = ai2.prototype.Zb;
  ai2.className = "Layer";
  function R2(a, b) {
    gi2 || (hi2(), gi2 = true);
    Va2(this);
    ve2 = this;
    this.qb = true;
    this.Ga = null;
    this.ta = this.ua = 0;
    this.Ca = null;
    if (Kg2) {
      var c = this, d = function() {
        c.removeEventListener(x2.document, "DOMContentLoaded", d, false);
        c.setRTL();
      };
      x2.document.body !== null ? this.setRTL() : c.addEventListener(x2.document, "DOMContentLoaded", d, false);
    }
    this.at = this.Ab = this.zl = null;
    ii2.add("Model", ji2);
    this.dc = null;
    var e = this;
    this.rw = function(a2) {
      var b2 = e.partManager;
      if (a2.model === b2.diagram.model && b2.diagram.Z) {
        b2.diagram.Z = false;
        try {
          var c2 = a2.change;
          a2.modelChange === "" && c2 === ge2 && b2.updateDataBindings(a2.object, a2.propertyName);
        } finally {
          b2.diagram.Z = true;
        }
      }
    };
    this.sw = function(a2) {
      e.partManager.doModelChanged(a2);
    };
    this.Wq = this.gp = this.Or = null;
    ki2(this);
    this.model = li2();
    this.kh = true;
    mi2(this);
    this.layout = new ni2();
    this.kh = false;
    this.nk = this.pk = this.mk = this.lk = this.xA = this.ik = this.gw = this.Mw = this.Ht = null;
    this.oq = function() {
    };
    this.preventDefault = null;
    this.Tn = false;
    this.Zh = new oi2();
    a !== void 0 && (typeof a === "string" || x2.Element && a instanceof Element ? pi2(this, a) : b = a);
    this.qb = false;
    b && this.zm(b);
    return this;
  }
  function ki2(a) {
    a.Qd = new ch2();
    a.Qd.Ne(a);
    a.ub = 17;
    a.ix = false;
    a.Vn = false;
    a.iu = "default";
    a.Oa = new F2();
    a.Qy = new H2();
    a.dg = null;
    a.wy();
    a.bl = null;
    a.vy();
    a.mb = 1;
    a.ja = new K2(NaN, NaN).freeze();
    a.ku = new K2(NaN, NaN);
    a.sa = 1;
    a.Sq = 1;
    a.uv = new K2(NaN, NaN).freeze();
    a.wv = NaN;
    a.$v = 1e-4;
    a.Lv = 100;
    a.vb = new od2();
    a.lt = new K2(NaN, NaN).freeze();
    a.ov = new N2(NaN, NaN, NaN, NaN).freeze();
    a.Hj = new lc2(0, 0, 0, 0).freeze();
    a.Ij = Oh2;
    a.ft = false;
    a.bt = null;
    a.ct = null;
    a.Ph = nh2;
    a.Hk = Uc2;
    a.Rg = nh2;
    a.ir = Uc2;
    a.qv = uc2;
    a.zv = uc2;
    a.Vc = true;
    a.Qn = false;
    a.te = new G2();
    a.Xh = new H2();
    a.rn = true;
    a.Cq = 250;
    a.Ak = -1;
    a.Eq = new lc2(16, 16, 16, 16).freeze();
    a.kg = false;
    a.Rk = false;
    a.An = true;
    a.cr = new ce2();
    a.cr.diagram = a;
    a.hh = new ce2();
    a.hh.diagram = a;
    a.tj = new ce2();
    a.tj.diagram = a;
    a.Ag = null;
    a.df = null;
    a.ru = false;
    a.Ft = null;
    a.Et = null;
    qi2(a);
    a.wi = new G2();
    a.Av = true;
    a.it = ri2;
    a.ow = false;
    a.kt = Cf2;
    a.gt = null;
    a.$u = null;
    a.Su = null;
    a.Nu = "auto";
    a.Zi = "auto";
    a.Bg = null;
    a.Jg = null;
    a.Dg = null;
    a.bh = null;
    a.$g = null;
    a.Zg = null;
    a.fw = null;
    a.Xg = null;
    a.pv = false;
    a.Yg = null;
    a.ah = null;
    a.uh = null;
    a.Eg = null;
    a.bu = false;
    a.fu = {};
    a.wl = [null, null];
    a.Gu = null;
    a.kh = false;
    a.tw = false;
    a.pu = false;
    a.Dt = false;
    a.qw = true;
    a.Wc = false;
    a.pj = false;
    a.ux = true;
    a.se = -2;
    a.fh = new H2();
    a.Oo = new F2();
    a.Sg = false;
    a.vd = true;
    a.ot = true;
    a.L = true;
    a.wa = true;
    a.pt = false;
    a.qt = true;
    a.ke = true;
    a.Ba = true;
    a.Pd = true;
    a.tt = true;
    a.Ma = true;
    a.Hb = true;
    a.Rb = true;
    a.Sb = true;
    a.sc = true;
    a.Nd = true;
    a.Od = true;
    a.Zs = true;
    a.Fu = true;
    a.pw = false;
    a.el = false;
    a.Nn = true;
    a.On = true;
    a.st = true;
    a.zu = true;
    a.dt = 16;
    a.et = 16;
    a.Nr = false;
    a.mu = false;
    a.ou = 0;
    a.nu = 0;
    a.nb = new lc2(5).freeze();
    a.jx = new G2().freeze();
    a.Wv = 999999999;
    a.Rw = new G2().freeze();
    a.lj = true;
    a.mj = true;
    a.nj = true;
    a.Ye = false;
    a.Sf = false;
    a.uc = null;
    a.Oh = true;
    a.Uf = false;
    a.Ky = new G2();
    a.Sw = new G2();
    a.Zc = null;
    a.ax = 1;
    a.kx = 0;
    a.dd = { scale: 1, position: new K2(), bounds: new N2(), Ex: new Gb2(), ny: new Gb2(), iy: false };
    a.tx = new N2(NaN, NaN, NaN, NaN).freeze();
    a.Gp = new Gb2(NaN, NaN).freeze();
    a.Uq = new N2(NaN, NaN, NaN, NaN).freeze();
    a.Dv = false;
    a.j = null;
    a.C = null;
    a.o = null;
    a.Lw = null;
    a.Jw = null;
    a.Kw = null;
    a.tk = null;
    a.$i = null;
    a.bj = null;
    a.j = new H2();
    var b = new W2(), c = new Mg2();
    c.bind(new si2("text", "", Ka2));
    b.add(c);
    a.Lw = b;
    a.j.add("", b);
    b = new W2();
    c = new Mg2();
    c.stroke = "brown";
    c.bind(new si2("text", "", Ka2));
    b.add(c);
    a.j.add("Comment", b);
    b = new W2();
    b.selectable = false;
    b.avoidable = false;
    c = new xf2();
    c.figure = "Ellipse";
    c.fill = "black";
    c.stroke = null;
    c.desiredSize = new Gb2(3, 3).ca();
    b.add(c);
    a.j.add("LinkLabel", b);
    a.C = new H2();
    b = new U2();
    b.selectionObjectName = "GROUPPANEL";
    b.type = X2.Vertical;
    c = new Mg2();
    c.font = "bold 12pt sans-serif";
    c.bind(new si2("text", "", Ka2));
    b.add(c);
    c = new X2(X2.Auto);
    c.name = "GROUPPANEL";
    var d = new xf2();
    d.figure = "Rectangle";
    d.fill = "rgba(128,128,128,0.2)";
    d.stroke = "black";
    c.add(d);
    d = new ng2();
    d.padding = new lc2(5, 5, 5, 5).ca();
    c.add(d);
    b.add(c);
    a.Jw = b;
    a.C.add("", b);
    a.o = new H2();
    b = new T2();
    c = new xf2();
    c.isPanelMain = true;
    b.add(c);
    c = new xf2();
    c.toArrow = "Standard";
    c.fill = "black";
    c.stroke = null;
    c.strokeWidth = 0;
    b.add(c);
    a.Kw = b;
    a.o.add("", b);
    b = new T2();
    c = new xf2();
    c.isPanelMain = true;
    c.stroke = "brown";
    b.add(c);
    a.o.add("Comment", b);
    b = new ze();
    b.type = X2.Auto;
    c = new xf2();
    c.fill = null;
    c.stroke = "dodgerblue";
    c.strokeWidth = 3;
    b.add(c);
    c = new ng2();
    c.margin = new lc2(1.5, 1.5, 1.5, 1.5).ca();
    b.add(c);
    a.tk = b;
    a.$i = b;
    b = new ze();
    b.type = X2.Link;
    c = new xf2();
    c.isPanelMain = true;
    c.fill = null;
    c.stroke = "dodgerblue";
    c.strokeWidth = 3;
    b.add(c);
    a.bj = b;
    a.Wb = null;
    a.gr = false;
    a.Kk = null;
    a.partManager = new ji2();
    a.toolManager = new Pa2();
    a.toolManager.initializeStandardTools();
    a.defaultTool = a.toolManager;
    a.currentTool = a.defaultTool;
    a.ev = null;
    a.pn = new Me2();
    a.lw = null;
    a.$s = null;
    a.Zr = false;
    a.commandHandler = ti2();
    a.$r = false;
    a.er = null;
    a.fr = Fb2;
    a.qx = false;
    a.ec = 1;
    a.si = null;
    a.wr = 1;
    a.zr = 0;
    a.Zw = [0, 0, 0, 0, 0];
    a.Ar = 0;
    a.sr = 1;
    a.Uw = 0;
    a.Vw = new K2();
    a.Xy = 500;
    a.Dq = new K2();
    a.Vt = false;
  }
  R2.prototype.clear = function() {
    this.animationManager.rc();
    this.model.clear();
    ui2 = null;
    Bi2 = "";
    Ci2(this, false);
    this.Oo.clear();
    Di2();
    this.fh.clear();
    this.Qa();
    this.Ta();
    this.N();
  };
  function Ci2(a, b) {
    a.animationManager.rc(true);
    a.jx = new G2().freeze();
    a.Rw = new G2().freeze();
    var c = a.skipsUndoManager;
    a.model !== null && (a.skipsUndoManager = true);
    var d = null;
    a.Wb !== null && (d = a.Wb.part, d !== null && a.remove(d));
    var e = [], f2 = a.Oa.length;
    if (b) {
      for (b = 0; b < f2; b++)
        for (var g2 = a.Oa.m[b].parts; g2.next(); ) {
          var h = g2.value;
          h !== d && h.data === null && e.push(h);
        }
      for (b = 0; b < e.length; b++)
        a.remove(e[b]);
    }
    for (b = 0; b < f2; b++)
      a.Oa.m[b].clear();
    a.partManager.clear();
    a.te.clear();
    a.Xh.clear();
    a.wi.clear();
    a.Kk = null;
    a.Oo.clear();
    Di2();
    a.fh.clear();
    Fa2 = [];
    d !== null && (a.add(d), a.partManager.parts.remove(d));
    a.model !== null && (a.skipsUndoManager = c);
    return e;
  }
  function ti2() {
    return null;
  }
  R2.prototype.reset = function() {
    this.clear();
    this.qb = true;
    ki2(this);
    Ei2(this);
    this.kh = true;
    mi2(this);
    this.layout = new ni2();
    this.kh = false;
    this.model = li2();
    this.model.undoManager = new se2();
    this.qb = this.Tn = false;
    this.N();
  };
  R2.prototype.setRTL = function(a) {
    a = a === void 0 ? this.div : a;
    a === null && (a = x2.document.body);
    var b = va("div");
    b.dir = "rtl";
    b.style.cssText = "font-size: 14px; width: 1px; height: 1px; position: absolute; top: -1000px; overflow: scroll;";
    b.textContent = "A";
    a.appendChild(b);
    var c = "reverse";
    0 < b.scrollLeft ? c = "default" : (b.scrollLeft = 1, b.scrollLeft === 0 && (c = "negative"));
    a.removeChild(b);
    this.iu = c;
  };
  R2.prototype.setScrollWidth = function(a) {
    a = a === void 0 ? this.div : a;
    a === null && (a = x2.document.body);
    var b = 0;
    if (Kg2) {
      var c = Fi2;
      b = Gi2;
      c === null && (c = Fi2 = va("p"), c.style.width = "100%", c.style.height = "200px", c.style.boxSizing = "content-box", b = Gi2 = va("div"), b.style.position = "absolute", b.style.visibility = "hidden", b.style.width = "200px", b.style.height = "150px", b.style.boxSizing = "content-box", b.appendChild(c));
      b.style.overflow = "hidden";
      a.appendChild(b);
      var d = c.offsetWidth;
      b.style.overflow = "scroll";
      c = c.offsetWidth;
      d === c && (c = b.clientWidth);
      a.removeChild(b);
      b = d - c;
      b !== 0 || Ua2 || (b = 11);
    }
    this.ub = b;
    this.ix = true;
  };
  R2.prototype.gb = function(a) {
    a.classType === R2 && (this.autoScale = a);
  };
  R2.prototype.toString = function(a) {
    a === void 0 && (a = 0);
    var b = "";
    this.div && this.div.id && (b = this.div.id);
    b = 'Diagram "' + b + '"';
    if (0 >= a)
      return b;
    for (var c = this.Oa.iterator; c.next(); )
      b += "\n  " + c.value.toString(a - 1);
    return b;
  };
  R2.prototype.addEventListener = function(a, b, c, d) {
    a.addEventListener(b, c, { capture: d, passive: false });
  };
  R2.prototype.removeEventListener = function(a, b, c, d) {
    a.removeEventListener(b, c, { capture: d });
  };
  function Hi2(a) {
    var b = a.Ca.La;
    b instanceof HTMLCanvasElement && (a.addEventListener(b, "pointerdown", a.lk, false), a.addEventListener(b, "pointermove", a.mk, false), a.addEventListener(b, "pointerup", a.pk, false), a.addEventListener(b, "pointerout", a.nk, false), a.addEventListener(b, "pointerenter", a.zz, false), a.addEventListener(b, "pointerleave", a.Az, false), a.addEventListener(b, "wheel", a.ik, false), a.addEventListener(b, "keydown", a.nA, false), a.addEventListener(b, "keyup", a.oA, false), a.addEventListener(b, "blur", a.kz, false), a.addEventListener(b, "focus", a.lz, false), a.addEventListener(b, "selectstart", function(a2) {
      a2.preventDefault();
      return false;
    }, false), a.addEventListener(b, "contextmenu", function(a2) {
      a2.preventDefault();
      return false;
    }, false), a.addEventListener(x2, "resize", a.gw, false), Ua2 && a.addEventListener(b, "touchstart", function(a2) {
      a2.preventDefault();
    }, false));
  }
  function Pe2(a) {
    30 < a.zr && (a.si = 1);
  }
  function bf2(a, b) {
    a.si !== null && (a.si = null, b && a.oq(), Za2 && Za2.Ox || (a.zr = 0, a.Zw = [0, 0, 0, 0, 0], a.Ar = 0));
  }
  R2.prototype.computePixelRatio = function() {
    return this.si !== null ? this.si : x2.devicePixelRatio || 1;
  };
  R2.prototype.doMouseMove = function() {
    this.currentTool.doMouseMove();
  };
  R2.prototype.doMouseDown = function() {
    this.currentTool.doMouseDown();
  };
  R2.prototype.doMouseUp = function() {
    this.currentTool.doMouseUp();
  };
  R2.prototype.doMouseWheel = function() {
    this.currentTool.doMouseWheel();
  };
  R2.prototype.doKeyDown = function() {
    this.currentTool.doKeyDown();
  };
  R2.prototype.doKeyUp = function() {
    this.currentTool.doKeyUp();
  };
  R2.prototype.doFocus = function() {
    this.focus();
  };
  R2.prototype.focus = function() {
    if (this.Ca)
      if (this.scrollsPageOnFocus)
        this.Ca.focus();
      else {
        var a = x2.scrollX || x2.pageXOffset, b = x2.scrollY || x2.pageYOffset;
        this.Ca.focus();
        x2.scrollTo(a, b);
      }
  };
  R2.prototype.lz = function() {
    this.D.S("GainedFocus");
  };
  R2.prototype.kz = function() {
    this.D.S("LostFocus");
  };
  function Ah2(a) {
    if (a.Ca !== null) {
      var b = a.Ga;
      if (b.clientWidth !== 0 && b.clientHeight !== 0) {
        a.ix || a.setScrollWidth();
        var c = a.Sf ? a.ub : 0, d = a.Ye ? a.ub : 0, e = a.ec;
        a.ec = a.computePixelRatio();
        a.ec !== e && (a.Qn = true, a.Gb());
        if (b.clientWidth !== a.ua + c || b.clientHeight !== a.ta + d)
          a.mj = true, a.Vc = true, b = a.layout, b !== null && b.isViewportSized && a.autoScale === nh2 && (a.Rk = true, b.B()), a.Wc || a.Gb();
      }
    }
  }
  function mi2(a) {
    var b = new ai2();
    b.name = "Background";
    a.Ul(b);
    b = new ai2();
    b.name = "";
    a.Ul(b);
    b = new ai2();
    b.name = "Foreground";
    a.Ul(b);
    b = new ai2();
    b.name = "Adornment";
    b.isTemporary = true;
    b.isInDocumentBounds = false;
    a.Ul(b);
    b = new ai2();
    b.name = "Tool";
    b.isTemporary = true;
    b.isInDocumentBounds = true;
    a.Ul(b);
    b = new ai2();
    b.name = "Grid";
    b.allowSelect = false;
    b.pickable = false;
    b.isTemporary = true;
    b.isInDocumentBounds = false;
    a.xx(b, a.Zj("Background"));
  }
  function Ii2(a) {
    a.Wb = new X2(X2.Grid);
    a.Wb.name = "GRID";
    var b = new xf2();
    b.figure = "LineH";
    b.stroke = "lightgray";
    b.strokeWidth = 0.5;
    b.interval = 1;
    a.Wb.add(b);
    b = new xf2();
    b.figure = "LineH";
    b.stroke = "gray";
    b.strokeWidth = 0.5;
    b.interval = 5;
    a.Wb.add(b);
    b = new xf2();
    b.figure = "LineH";
    b.stroke = "gray";
    b.strokeWidth = 1;
    b.interval = 10;
    a.Wb.add(b);
    b = new xf2();
    b.figure = "LineV";
    b.stroke = "lightgray";
    b.strokeWidth = 0.5;
    b.interval = 1;
    a.Wb.add(b);
    b = new xf2();
    b.figure = "LineV";
    b.stroke = "gray";
    b.strokeWidth = 0.5;
    b.interval = 5;
    a.Wb.add(b);
    b = new xf2();
    b.figure = "LineV";
    b.stroke = "gray";
    b.strokeWidth = 1;
    b.interval = 10;
    a.Wb.add(b);
    b = new V2();
    b.add(a.Wb);
    b.layerName = "Grid";
    b.zOrder = 0;
    b.isInDocumentBounds = false;
    b.isAnimated = false;
    b.pickable = false;
    b.locationObjectName = "GRID";
    a.add(b);
    a.partManager.parts.remove(b);
    a.Wb.visible = false;
  }
  function Ji2() {
    this.D.mu ? this.D.mu = false : this.D.isEnabled ? this.D.Kx(this) : Ki2(this.D);
  }
  function Li2(a) {
    this.D.isEnabled ? (this.D.ou = a.target.scrollTop, this.D.nu = a.target.scrollLeft) : Ki2(this.D);
  }
  R2.prototype.Kx = function(a) {
    if (this.Ca !== null) {
      this.Nr = true;
      var b = this.documentBounds, c = this.viewportBounds, d = this.Hj, e = b.x - d.left, f2 = b.y - d.top, g2 = b.width + d.left + d.right, h = b.height + d.top + d.bottom, k = b.right + d.right;
      d = b.bottom + d.bottom;
      var l2 = c.x;
      b = c.y;
      var m2 = c.width, n2 = c.height, p2 = c.right, r2 = c.bottom;
      c = this.scale;
      var q2 = a.scrollLeft;
      if (this.Vn)
        switch (this.iu) {
          case "negative":
            q2 = q2 + a.scrollWidth - a.clientWidth;
            break;
          case "reverse":
            q2 = a.scrollWidth - q2 - a.clientWidth;
        }
      var u2 = q2;
      m2 < g2 || n2 < h ? (q2 = K2.allocAt(this.position.x, this.position.y), this.allowHorizontalScroll && this.nu !== u2 && (q2.x = u2 / c + e, this.nu = u2), this.allowVerticalScroll && this.ou !== a.scrollTop && (q2.y = a.scrollTop / c + f2, this.ou = a.scrollTop), this.position = q2, K2.free(q2), this.mj = this.Nr = false) : (q2 = K2.alloc(), a.Sy && this.allowHorizontalScroll && (e < l2 && (this.position = q2.h(u2 + e, this.position.y)), k > p2 && (this.position = q2.h(-(this.Or.scrollWidth - this.ua) + u2 - this.ua / c + k, this.position.y))), a.Ty && this.allowVerticalScroll && (f2 < b && (this.position = q2.h(this.position.x, a.scrollTop + f2)), d > r2 && (this.position = q2.h(this.position.x, -(this.Or.scrollHeight - this.ta) + a.scrollTop - this.ta / c + d))), K2.free(q2), Mi2(this), this.mj = this.Nr = false, b = this.documentBounds, c = this.viewportBounds, k = b.right, p2 = c.right, d = b.bottom, r2 = c.bottom, e = b.x, l2 = c.x, f2 = b.y, b = c.y, m2 >= g2 && e >= l2 && k <= p2 && (this.gp.style.width = "1px"), n2 >= h && f2 >= b && d <= r2 && (this.gp.style.height = "1px"));
    }
  };
  R2.prototype.computeBounds = function(a) {
    a === void 0 && (a = new N2());
    ih2(this);
    return Ni2(this, a);
  };
  function Ni2(a, b) {
    if (a.fixedBounds.u())
      return b.assign(a.fixedBounds), b.Mp(a.nb), b;
    for (var c = true, d = a.Oa.m, e = d.length, f2 = 0; f2 < e; f2++) {
      var g2 = d[f2];
      if (g2.visible && g2.isInDocumentBounds) {
        g2 = g2.Ha.m;
        for (var h = g2.length, k = 0; k < h; k++) {
          var l2 = g2[k];
          l2.isInDocumentBounds && l2.isVisible() && (l2 = l2.actualBounds, l2.u() && (c ? (c = false, b.assign(l2)) : b.Qc(l2)));
        }
      }
    }
    c && b.h(0, 0, 0, 0);
    b.Mp(a.nb);
    return b;
  }
  R2.prototype.computePartsBounds = function(a, b) {
    b === void 0 && (b = false);
    var c = null;
    if (Aa2(a))
      for (var d = 0; d < a.length; d++) {
        var e = a[d];
        !b && e instanceof T2 || (e.Ta(), c === null ? c = e.actualBounds.copy() : c.Qc(e.actualBounds));
      }
    else
      for (a = a.iterator; a.next(); )
        d = a.value, !b && d instanceof T2 || (d.Ta(), c === null ? c = d.actualBounds.copy() : c.Qc(d.actualBounds));
    return c === null ? new N2(NaN, NaN, 0, 0) : c;
  };
  function Oi2(a, b) {
    if ((b || a.Uf) && !a.qb && a.Ca !== null && a.documentBounds.u()) {
      if (b) {
        var c = a.initialPosition;
        if (c.u()) {
          a.position = c;
          return;
        }
        c = K2.alloc();
        c.Ti(a.documentBounds, a.initialDocumentSpot);
        var d = a.viewportBounds;
        d = N2.allocAt(0, 0, d.width, d.height);
        var e = K2.alloc();
        e.Ti(d, a.initialViewportSpot);
        e.h(c.x - e.x, c.y - e.y);
        a.position = e;
        N2.free(d);
        K2.free(e);
        K2.free(c);
      }
      a.qb = true;
      c = a.Ph;
      b && a.Rg !== nh2 && (c = a.Rg);
      var f2 = c !== nh2 ? Pi2(a, c) : a.scale;
      c = a.ja.x;
      d = a.ja.y;
      e = a.ua / f2;
      var g2 = a.ta / f2, h = a.Hk, k = a.ir;
      b && !h.hb() && (k.hb() || k.Nb()) && (h = k.Nb() ? yc2 : k);
      Qi2(a, a.documentBounds, e, g2, h, b);
      b = a.scale;
      a.scale = f2;
      a.qb = false;
      Ri2(a);
      Si2(a, true, false);
      f2 = a.viewportBounds;
      if (!(M2.w(f2.x, c) && M2.w(f2.y, d) && M2.w(f2.width, e) && M2.w(f2.height, g2)))
        a.onViewportBoundsChanged(new N2(c, d, e, g2), f2, b, false);
    }
  }
  function Pi2(a, b) {
    var c = a.Sq;
    if (a.Ca === null)
      return c;
    a.Ta();
    var d = a.documentBounds;
    if (!d.u())
      return c;
    var e = d.width;
    d = d.height;
    var f2 = a.ua + (a.Sf ? a.ub : 0), g2 = a.ta + (a.Ye ? a.ub : 0), h = f2 / e, k = g2 / d;
    return b === Ti2 ? (b = Math.min(k, h), b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : b === Ui2 ? (b = k > h ? (g2 - a.ub) / d : (f2 - a.ub) / e, b > c && (b = c), b < a.minScale && (b = a.minScale), b > a.maxScale && (b = a.maxScale), b) : a.scale;
  }
  R2.prototype.zoomToFit = function() {
    var a = this.Ij;
    this.Ij = Oh2;
    this.scale = Pi2(this, Ti2);
    a !== Oh2 && (Oi2(this, false), Qi2(this, this.documentBounds, this.ua / this.sa, this.ta / this.sa, this.Hk, false));
    this.Ij = a;
  };
  t2 = R2.prototype;
  t2.$A = function(a, b) {
    b === void 0 && (b = Ti2);
    var c = a.width, d = a.height;
    if (!(c === 0 || d === 0 || isNaN(c) && isNaN(d))) {
      var e = 1;
      if (b === Ti2 || b === Ui2)
        if (isNaN(c))
          e = this.viewportBounds.height * this.scale / d;
        else if (isNaN(d))
          e = this.viewportBounds.width * this.scale / c;
        else {
          e = this.ua;
          var f2 = this.ta;
          e = b === Ui2 ? f2 / d > e / c ? (f2 - (this.Ye ? this.ub : 0)) / d : (e - (this.Sf ? this.ub : 0)) / c : Math.min(f2 / d, e / c);
        }
      this.scale = e;
      this.position = new K2(a.x, a.y);
    }
  };
  t2.ez = function(a, b) {
    this.Ta();
    var c = this.documentBounds, d = this.viewportBounds;
    this.position = new K2(c.x + (a.x * c.width + a.offsetX) - (b.x * d.width - b.offsetX), c.y + (a.y * c.height + a.offsetY) - (b.y * d.height - b.offsetY));
  };
  t2.Xz = function(a) {
    if (a instanceof Y2) {
      this.er = a;
      var b = K2.alloc();
      this.fr = this.wq(a.da(uc2, b));
      K2.free(b);
    } else
      this.er = null, this.fr = Fb2;
  };
  function Qi2(a, b, c, d, e, f2) {
    var g2 = K2.allocAt(a.ja.x, a.ja.y), h = g2.x, k = g2.y;
    if (a.er !== null) {
      var l2 = K2.alloc();
      l2 = a.er.da(uc2, l2);
      h = l2.x - a.fr.x / a.scale;
      k = l2.y - a.fr.y / a.scale;
      e = rc2;
      K2.free(l2);
    }
    if (f2 || a.scrollMode === Oh2)
      e.hb() && (c > b.width && (h = b.x + (e.x * b.width + e.offsetX) - (e.x * c - e.offsetX)), d > b.height && (k = b.y + (e.y * b.height + e.offsetY) - (e.y * d - e.offsetY))), e = a.Hj, f2 = c - b.width, c < b.width + e.left + e.right ? (h = Math.min(h + c / 2, b.right + Math.max(f2, e.right) - c / 2), h = Math.max(h, b.left - Math.max(f2, e.left) + c / 2), h -= c / 2) : h > b.left ? h = b.left : h < b.right - c && (h = b.right - c), c = d - b.height, d < b.height + e.top + e.bottom ? (k = Math.min(k + d / 2, b.bottom + Math.max(c, e.bottom) - d / 2), k = Math.max(k, b.top - Math.max(c, e.top) + d / 2), k -= d / 2) : k > b.top ? k = b.top : k < b.bottom - d && (k = b.bottom - d);
    g2.x = isFinite(h) ? h : -a.nb.left;
    g2.y = isFinite(k) ? k : -a.nb.top;
    a.positionComputation !== null && (b = a.positionComputation(a, g2), g2.x = b.x, g2.y = b.y);
    Kh2(a.Qd, a.ja, g2);
    a.ja.h(g2.x, g2.y);
    Ei2(a);
    K2.free(g2);
  }
  t2.am = function(a, b) {
    b === void 0 && (b = true);
    if (b) {
      if (a = mf2(this, a, function(a2) {
        return a2.part;
      }, function(a2) {
        return a2.canSelect();
      }), a instanceof V2)
        return a;
    } else if (a = mf2(this, a, function(a2) {
      return a2.part;
    }), a instanceof V2)
      return a;
    return null;
  };
  t2.Zb = function(a, b, c) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    ih2(this);
    for (var d = this.Oa.iteratorBackwards; d.next(); ) {
      var e = d.value;
      if (e.visible && (e = e.Zb(a, b, c), e !== null))
        return e;
    }
    return null;
  };
  function mf2(a, b, c, d) {
    c === void 0 && (c = null);
    d === void 0 && (d = null);
    ih2(a);
    for (a = a.Oa.iteratorBackwards; a.next(); ) {
      var e = a.value;
      if (e.visible && !e.isTemporary && (e = e.Zb(b, c, d), e !== null))
        return e;
    }
    return null;
  }
  t2.Kz = function(a, b, c) {
    b === void 0 && (b = true);
    return Vi2(this, a, function(a2) {
      return a2.part;
    }, b ? function(a2) {
      return a2 instanceof V2 && a2.canSelect();
    } : null, c);
  };
  function Vi2(a, b, c, d, e) {
    c === void 0 && (c = null);
    d === void 0 && (d = null);
    e instanceof F2 || e instanceof G2 || (e = new G2());
    ih2(a);
    for (a = a.Oa.iteratorBackwards; a.next(); ) {
      var f2 = a.value;
      f2.visible && !f2.isTemporary && f2.Hi(b, c, d, e);
    }
    return e;
  }
  t2.Hi = function(a, b, c, d) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    d instanceof F2 || d instanceof G2 || (d = new G2());
    ih2(this);
    for (var e = this.Oa.iteratorBackwards; e.next(); ) {
      var f2 = e.value;
      f2.visible && f2.Hi(a, b, c, d);
    }
    return d;
  };
  t2.Tx = function(a, b, c, d) {
    b === void 0 && (b = false);
    c === void 0 && (c = true);
    return Wi2(this, a, function(a2) {
      return a2 instanceof V2 && (!c || a2.canSelect());
    }, b, d);
  };
  t2.zf = function(a, b, c, d, e) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    d === void 0 && (d = false);
    e instanceof F2 || e instanceof G2 || (e = new G2());
    ih2(this);
    for (var f2 = this.Oa.iteratorBackwards; f2.next(); ) {
      var g2 = f2.value;
      g2.visible && g2.zf(a, b, c, d, e);
    }
    return e;
  };
  t2.Yu = function(a, b, c, d, e, f2) {
    var g2 = new G2();
    ih2(this);
    for (var h = this.Oa.iteratorBackwards; h.next(); ) {
      var k = h.value;
      k.visible && k.Yu(a, b, c, d, g2, e, f2);
    }
    return g2;
  };
  function Wi2(a, b, c, d, e) {
    var f2 = null;
    c === void 0 && (c = null);
    d === void 0 && (d = false);
    e instanceof F2 || e instanceof G2 || (e = new G2());
    ih2(a);
    for (a = a.Oa.iteratorBackwards; a.next(); ) {
      var g2 = a.value;
      g2.visible && !g2.isTemporary && g2.zf(b, f2, c, d, e);
    }
    return e;
  }
  t2.Lz = function(a, b, c, d, e) {
    c === void 0 && (c = true);
    d === void 0 && (d = true);
    return Xi2(this, a, b, function(a2) {
      return a2 instanceof V2 && (!d || a2.canSelect());
    }, c, e);
  };
  t2.qg = function(a, b, c, d, e, f2) {
    c === void 0 && (c = null);
    d === void 0 && (d = null);
    e === void 0 && (e = true);
    if (e !== false && e !== true) {
      if (e instanceof F2 || e instanceof G2)
        f2 = e;
      e = true;
    }
    f2 instanceof F2 || f2 instanceof G2 || (f2 = new G2());
    ih2(this);
    for (var g2 = this.Oa.iteratorBackwards; g2.next(); ) {
      var h = g2.value;
      h.visible && h.qg(a, b, c, d, e, f2);
    }
    return f2;
  };
  function Xi2(a, b, c, d, e, f2) {
    var g2 = null;
    d === void 0 && (d = null);
    e === void 0 && (e = true);
    if (e !== false && e !== true) {
      if (e instanceof F2 || e instanceof G2)
        f2 = e;
      e = true;
    }
    f2 instanceof F2 || f2 instanceof G2 || (f2 = new G2());
    ih2(a);
    for (a = a.Oa.iteratorBackwards; a.next(); ) {
      var h = a.value;
      h.visible && !h.isTemporary && h.qg(b, c, g2, d, e, f2);
    }
    return f2;
  }
  R2.prototype.acceptEvent = function(a) {
    return Yi2(this, a, a instanceof MouseEvent);
  };
  function Yi2(a, b, c) {
    var d = a.hh;
    a.hh = a.tj;
    a.tj = d;
    d.diagram = a;
    d.event = b;
    c ? Zi2(a, b, d) : (d.viewPoint = a.hh.viewPoint, d.documentPoint = a.hh.documentPoint);
    a = 0;
    b.ctrlKey && (a += 1);
    b.altKey && (a += 2);
    b.shiftKey && (a += 4);
    b.metaKey && (a += 8);
    d.modifiers = a;
    d.button = b.button;
    b.buttons !== void 0 && (d.buttons = b.buttons);
    Ta2 && b.button === 0 && b.ctrlKey && (d.button = 2);
    d.down = false;
    d.up = false;
    d.clickCount = 1;
    d.delta = 0;
    d.handled = false;
    d.bubbles = false;
    d.timestamp = b.timeStamp;
    d.isMultiTouch = false;
    d.targetDiagram = $i2(b, b.target);
    d.targetObject = null;
    return d;
  }
  function $i2(a, b) {
    if (b = b.D)
      return b;
    (b = a.path) || typeof a.composedPath !== "function" || (b = a.composedPath());
    return b && b[0] ? b[0].D : null;
  }
  function aj2(a, b, c, d, e, f2) {
    var g2 = a.hh;
    a.hh = a.tj;
    a.tj = g2;
    g2.diagram = a;
    g2.clickCount = 1;
    a = g2.delta = 0;
    b.ctrlKey && (a += 1);
    b.altKey && (a += 2);
    b.shiftKey && (a += 4);
    b.metaKey && (a += 8);
    g2.modifiers = a;
    g2.event = b;
    g2.timestamp = b.timeStamp;
    g2.button = b.button;
    g2.buttons = b.buttons;
    Ta2 && b.button === 0 && b.ctrlKey && (g2.button = 2);
    g2.down = c;
    g2.up = d;
    g2.handled = false;
    g2.bubbles = e;
    g2.isMultiTouch = f2;
    return g2;
  }
  function bj2(a, b) {
    if (a.bubbles)
      return true;
    b.stopPropagation !== void 0 && b.stopPropagation();
    b.cancelable !== false && b.preventDefault();
    b.cancelBubble = true;
    return false;
  }
  R2.prototype.nA = function(a) {
    var b = this.D;
    if (!this.D.isEnabled)
      return false;
    var c = Yi2(b, a, false);
    c.key = String.fromCharCode(a.which);
    c.down = true;
    switch (a.which) {
      case 8:
        c.key = "Backspace";
        break;
      case 33:
        c.key = "PageUp";
        break;
      case 34:
        c.key = "PageDown";
        break;
      case 35:
        c.key = "End";
        break;
      case 36:
        c.key = "Home";
        break;
      case 37:
        c.key = "Left";
        break;
      case 38:
        c.key = "Up";
        break;
      case 39:
        c.key = "Right";
        break;
      case 40:
        c.key = "Down";
        break;
      case 45:
        c.key = "Insert";
        break;
      case 46:
        c.key = "Del";
        break;
      case 48:
        c.key = "0";
        break;
      case 187:
      case 61:
      case 107:
        c.key = "Add";
        break;
      case 189:
      case 173:
      case 109:
        c.key = "Subtract";
        break;
      case 27:
        c.key = "Esc";
    }
    b.doKeyDown();
    return bj2(c, a);
  };
  R2.prototype.oA = function(a) {
    var b = this.D;
    if (!b.isEnabled)
      return false;
    var c = Yi2(b, a, false);
    c.key = String.fromCharCode(a.which);
    c.up = true;
    switch (a.which) {
      case 8:
        c.key = "Backspace";
        break;
      case 33:
        c.key = "PageUp";
        break;
      case 34:
        c.key = "PageDown";
        break;
      case 35:
        c.key = "End";
        break;
      case 36:
        c.key = "Home";
        break;
      case 37:
        c.key = "Left";
        break;
      case 38:
        c.key = "Up";
        break;
      case 39:
        c.key = "Right";
        break;
      case 40:
        c.key = "Down";
        break;
      case 45:
        c.key = "Insert";
        break;
      case 46:
        c.key = "Del";
    }
    b.doKeyUp();
    return bj2(c, a);
  };
  R2.prototype.zz = function(a) {
    var b = this.D;
    if (!b.isEnabled)
      return false;
    var c = Yi2(b, a, true);
    b.mouseEnter !== null && b.mouseEnter(c);
    return bj2(c, a);
  };
  R2.prototype.Az = function(a) {
    var b = this.D;
    if (!b.isEnabled)
      return false;
    var c = Yi2(b, a, true);
    b.mouseLeave !== null && b.mouseLeave(c);
    return bj2(c, a);
  };
  R2.prototype.getMouse = function(a) {
    var b = this.Ca;
    if (b === null)
      return new K2(0, 0);
    var c = b.getBoundingClientRect();
    b = a.clientX - this.ua / c.width * c.left;
    a = a.clientY - this.ta / c.height * c.top;
    return this.vb !== null ? ub2(new K2(b, a), this.vb) : new K2(b, a);
  };
  function Zi2(a, b, c) {
    var d = a.Ca, e = a.ua, f2 = a.ta, g2 = 0, h = 0;
    d !== null && (d = d.getBoundingClientRect(), g2 = b.clientX - e / d.width * d.left, h = b.clientY - f2 / d.height * d.top);
    c.viewPoint.h(g2, h);
    a.vb !== null ? (b = K2.allocAt(g2, h), a.vb.Hd(b), c.documentPoint.assign(b), K2.free(b)) : c.documentPoint.h(g2, h);
  }
  function de2(a, b, c, d) {
    if (b.targetTouches !== void 0) {
      if (2 > b.targetTouches.length)
        return;
      b = b.targetTouches[c];
    } else if (a.wl[0] !== null)
      b = a.wl[c];
    else
      return;
    c = a.Ca;
    c !== null && (c = c.getBoundingClientRect(), d.h(b.clientX - a.ua / c.width * c.left, b.clientY - a.ta / c.height * c.top));
  }
  R2.prototype.Qa = function() {
    this.lj || (this.lj = true, this.Gb(true));
  };
  function cj2(a) {
    a.Wc || ih2(a);
    a.Ta();
  }
  R2.prototype.redraw = function() {
    this.qb || this.Wc || (this.N(), Ri2(this), this.gd());
  };
  t2 = R2.prototype;
  t2.mA = function() {
    return this.kg;
  };
  t2.uz = function(a) {
    a === void 0 && (a = null);
    var b = this.animationManager, c = b.isEnabled;
    b.rc();
    b.isEnabled = false;
    uf2(this);
    this.Uf = false;
    this.ku = new K2(NaN, NaN);
    b.isEnabled = c;
    this.Wc = true;
    var d = this;
    a !== null && ua2(function() {
      d.Wc = false;
      hh2(b, "Model");
      a(d);
    }, 1);
  };
  t2.Gb = function(a) {
    a === void 0 && (a = false);
    if (this.kg !== true && !(this.qb || a === false && this.Wc)) {
      this.kg = true;
      var b = this;
      x2.requestAnimationFrame(function() {
        b.kg && b.gd();
      });
    }
  };
  t2.gd = function() {
    if (!this.An || this.kg)
      this.An && (this.An = false), uf2(this);
  };
  function Si2(a, b, c) {
    a.animationManager.defaultAnimation.isAnimating || a.qb || !a.mj || Ki2(a) || (b && ih2(a), c && Oi2(a, false));
  }
  function uf2(a, b) {
    if (!a.Wc && (a.kg = false, a.Ga !== null || a.Gp.u())) {
      a.Wc = true;
      var c = a.animationManager, d = a.Oo;
      if (!c.isAnimating && d.length !== 0) {
        for (var e = d.m, f2 = e.length, g2 = 0; g2 < f2; g2++) {
          var h = e[g2];
          dj2(h, false);
          h.s();
        }
        d.clear();
      }
      d = a.Sw;
      0 < d.count && (d.each(function(a2) {
        a2.ew();
      }), d.clear());
      e = d = false;
      c.defaultAnimation.isAnimating && (e = true, d = a.skipsUndoManager, a.skipsUndoManager = true);
      c.tb || Ah2(a);
      Si2(a, false, true);
      a.Wb !== null && (a.Wb.visible && !a.gr && (ej2(a), a.gr = true), !a.Wb.visible && a.gr && (a.gr = false));
      ih2(a);
      f2 = false;
      if (!a.Uf || a.Oh)
        a.Uf ? fj2(a, !a.Rk) : (a.xa("Initial Layout"), c.isEnabled === false && c.rc(), fj2(a, false)), f2 = true;
      a.Rk = false;
      ih2(a);
      a.pu || cj2(a);
      Si2(a, true, false);
      g2 = false;
      f2 ? (c = N2.alloc(), c.assign(a.viewportBounds), a.Uf || (g2 = a.Uf = true, a.skipsUndoManager || (a.undoManager.isPendingClear = true), a.undoManager.isPendingUnmodified = true, gj2(a)), a.S("LayoutCompleted"), c.A(a.viewportBounds) || Si2(a, true, false), N2.free(c)) : c.Yk && c.sx && (a.Rg !== nh2 ? a.scale = Pi2(a, a.Rg) : a.Ph !== nh2 ? a.scale = Pi2(a, a.Ph) : (c = a.initialScale, isFinite(c) && 0 < c && (a.scale = c)), Oi2(a, true));
      ih2(a);
      f2 && g2 && a.Xa("Initial Layout");
      a.Iu();
      b || a.pc(a.Ab);
      e && (a.skipsUndoManager = d);
      a.Wc = false;
    }
  }
  function gj2(a) {
    var b = a.sa;
    if (a.Rg !== nh2)
      a.scale = Pi2(a, a.Rg);
    else if (a.Ph !== nh2)
      a.scale = Pi2(a, a.Ph);
    else {
      var c = a.initialScale;
      isFinite(c) && 0 < c && (a.scale = c);
    }
    a.sa !== b && (Ri2(a), Si2(a, true, false));
    Oi2(a, true);
    b = a.Oa.m;
    a.Md(b, b.length, a, a.viewportBounds);
    a.S("InitialLayoutCompleted");
    a.ku.assign(a.ja);
    ej2(a);
  }
  function ih2(a) {
    if (a.te.count !== 0 && (a.Wc || !a.animationManager.isTicking)) {
      for (var b = 0; 23 > b; b++) {
        var c = a.te.iterator;
        if (c === null || a.te.count === 0)
          break;
        a.te = new G2();
        a.ew(c, a.te);
      }
      a.nodes.each(function(a2) {
        a2 instanceof U2 && (a2.R & 65536) !== 0 !== false && (a2.R = a2.R ^ 65536);
      });
    }
  }
  t2.ew = function(a, b) {
    for (a.reset(); a.next(); ) {
      var c = a.value;
      !c.Mc() || c instanceof U2 || (c.Ri() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c));
    }
    for (a.reset(); a.next(); )
      c = a.value, c instanceof U2 && c.isVisible() && hj2(this, c);
    for (a.reset(); a.next(); )
      c = a.value, c instanceof T2 && c.isVisible() && (c.Ri() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c));
    for (a.reset(); a.next(); )
      c = a.value, c instanceof ze && c.isVisible() && (c.Ri() ? (c.measure(Infinity, Infinity), c.arrange()) : b.add(c));
  };
  function hj2(a, b) {
    for (var c = Ea2(), d = Ea2(), e = b.memberParts; e.next(); ) {
      var f2 = e.value;
      f2.isVisible() && (f2 instanceof U2 ? (ij2(f2) || jj2(f2) || kj2(f2)) && hj2(a, f2) : f2 instanceof T2 ? f2.fromNode === b || f2.toNode === b ? d.push(f2) : c.push(f2) : (f2.measure(Infinity, Infinity), f2.arrange()));
    }
    a = c.length;
    for (e = 0; e < a; e++)
      f2 = c[e], f2.measure(Infinity, Infinity), f2.arrange();
    Ia2(c);
    b.measure(Infinity, Infinity);
    b.arrange();
    a = d.length;
    for (b = 0; b < a; b++)
      c = d[b], c.measure(Infinity, Infinity), c.arrange();
    Ia2(d);
  }
  t2.Md = function(a, b, c, d) {
    if (this.nj || this.animationManager.isAnimating)
      for (var e = 0; e < b; e++)
        a[e].Md(c, d);
  };
  t2.pc = function(a, b) {
    b === void 0 && (b = null);
    if (this.Ga !== null) {
      this.Ca === null && C2("No canvas specified");
      var c = this.animationManager;
      if (!c.tb && (!c.isAnimating || c.isTicking)) {
        var d = new Date();
        lj2(this);
        if (this.Ga.style.opacity !== "0") {
          var e = a !== this.Ab, f2 = this.Oa.m, g2 = f2.length, h = this;
          this.Md(f2, g2, h, h.viewportBounds);
          if (e)
            a.Hc(true), Mi2(this);
          else if (!this.Vc && b === null && !c.isAnimating)
            return;
          g2 = this.ja;
          var k = this.sa, l2 = Math.round(g2.x * k) / k, m2 = Math.round(g2.y * k) / k;
          c = this.vb;
          c.reset();
          k !== 1 && c.scale(k);
          g2.x === 0 && g2.y === 0 || c.translate(-l2, -m2);
          k = this.ec;
          a.setTransform(k, 0, 0, k, 0, 0);
          a.clearRect(0, 0, this.ua, this.ta);
          this.mb !== 1 && (a.globalAlpha = this.mb);
          mj2(this, a);
          l2 = b !== null ? function(c2) {
            var d2 = b;
            if (c2.visible && c2.mb !== 0) {
              var e2 = c2.Ha.m, f3 = e2.length;
              if (f3 !== 0) {
                var g3 = ci2(c2, a), k2 = c2.Jo;
                k2.length = 0;
                for (var l3 = h.scale, m3 = N2.alloc(), n2 = 0; n2 < f3; n2++) {
                  var B2 = e2[n2];
                  d2.contains(B2) || c2.Di(a, B2, h, k2, l3, m3, true);
                }
                N2.free(m3);
                a.globalAlpha = g3;
              }
            }
          } : function(b2) {
            b2.pc(a, h);
          };
          g2 = f2.length;
          for (m2 = 0; m2 < g2; m2++)
            a.setTransform(k, 0, 0, k, 0, 0), a.transform(c.m11, c.m12, c.m21, c.m22, c.dx, c.dy), l2(f2[m2]);
          f2 = false;
          this.Zh ? nj2(this.Zh, this) && (f2 = this.Wq()) : f2 = true;
          f2 && (od2.prototype.Hd = od2.prototype.Cx);
          e ? (this.Ab.Hc(true), Mi2(this)) : this.Vc = this.nj = false;
          f2 = +new Date() - +d;
          e = Za2 && Za2.Ox;
          d = this.Zw;
          if (e || this.si === null) {
            d[this.Ar] = f2;
            this.Ar = (this.Ar + 1) % d.length;
            for (c = f2 = 0; c < d.length; c++)
              f2 += d[c];
            this.zr = f2 / d.length;
          }
          this.mb !== 1 && (a.globalAlpha = 1);
          if (e)
            for (a.setTransform(1, 0, 0, 1, 0, 0), e = 0; e < d.length; e++)
              a.fillText(d[e].toString(), 20, 150 + +(20 * e));
        }
      }
    }
  };
  function oj2(a, b, c, d, e, f2, g2, h, k, l2) {
    if (a.Ga !== null) {
      a.Ca === null && C2("No canvas specified");
      g2 === void 0 && (g2 = null);
      h === void 0 && (h = null);
      k === void 0 && (k = false);
      l2 === void 0 && (l2 = false);
      lj2(a);
      a.Ab.Hc(true);
      Mi2(a);
      a.pj = true;
      var m2 = a.sa;
      a.sa = e;
      var n2 = a.Oa.m, p2 = n2.length;
      try {
        var r2 = new N2(f2.x, f2.y, d.width / e, d.height / e), q2 = r2.copy();
        q2.Mp(c);
        ej2(a, q2);
        ih2(a);
        a.Md(n2, p2, a, r2);
        b.setTransform(1, 0, 0, 1, 0, 0);
        b.clearRect(0, 0, d.width, d.height);
        h !== null && h !== "" && (b.fillStyle = h, b.fillRect(0, 0, d.width, d.height));
        var u2 = a.ec;
        b.scale(u2, u2);
        var w = od2.alloc();
        w.reset();
        w.translate(c.left, c.top);
        w.scale(e);
        f2.x === 0 && f2.y === 0 || w.translate(-f2.x, -f2.y);
        b.setTransform(w.m11, w.m12, w.m21, w.m22, w.dx, w.dy);
        od2.free(w);
        mj2(a, b);
        b.globalAlpha = a.mb;
        var v2 = a.Zj("Grid");
        if (g2) {
          var z2 = new G2(), y2 = g2.iterator;
          for (y2.reset(); y2.next(); ) {
            var B2 = y2.value;
            B2 instanceof V2 && (l2 || B2.layer !== v2) && z2.add(B2);
          }
          for (l2 = 0; l2 < p2; l2++) {
            var A2 = n2[l2];
            v2 = b;
            var E = a;
            if (A2.visible && A2.mb !== 0 && (k || !A2.isTemporary)) {
              var Q2 = A2.Ha.m, J2 = Q2.length;
              if (J2 !== 0) {
                var S2 = ci2(A2, v2), L2 = A2.Jo;
                L2.length = 0;
                var I2 = E.scale, ja2 = N2.alloc();
                for (c = 0; c < J2; c++) {
                  var ca2 = Q2[c];
                  z2.contains(ca2) && A2.Di(v2, ca2, E, L2, I2, ja2, false);
                }
                N2.free(ja2);
                v2.globalAlpha = S2;
              }
            }
          }
        } else
          for (z2 = 0; z2 < p2; z2++)
            E = n2[z2], E === v2 ? l2 && E.pc(b, a, true) : E.pc(b, a, k);
        a.pj = false;
        a.Zh && nj2(a.Zh, a) && a.Wq();
      } finally {
        a.sa = m2, a.Ab.Hc(true), Mi2(a), a.Md(n2, p2, a, a.viewportBounds), ej2(a);
      }
    }
  }
  t2.Ie = function(a) {
    return this.dg[a];
  };
  t2.Ay = function(a, b) {
    a === "minDrawingLength" && (this.wr = b);
    this.dg[a] = b;
    this.redraw();
  };
  t2.wy = function() {
    this.dg = new Ya2();
    this.dg.drawShadows = true;
    this.dg.textGreeking = true;
    this.dg.viewportOptimizations = Ua2 || Ra2 ? false : true;
    this.dg.temporaryPixelRatio = true;
    this.dg.pictureRatioOptimization = true;
    this.wr = this.dg.minDrawingLength = 1;
  };
  function mj2(a, b) {
    a = a.dg;
    a !== null && (a.imageSmoothingEnabled !== void 0 && b.zy(!!a.imageSmoothingEnabled), a = a.defaultFont, a !== void 0 && a !== null && (b.font = a));
  }
  t2.cm = function(a) {
    return this.bl[a];
  };
  t2.OA = function(a, b) {
    this.bl[a] = b;
  };
  t2.vy = function() {
    this.bl = new Ya2();
    this.bl.extraTouchArea = 10;
    this.bl.extraTouchThreshold = 10;
    this.bl.hasGestureZoom = true;
  };
  t2.set = function(a) {
    Object.assign(this, a);
    return this;
  };
  t2.Eu = function(a) {
    return this.zm(a);
  };
  t2.zm = function(a) {
    pj2(this, a);
    return this;
  };
  function pj2(a, b) {
    var c = a instanceof X2, d = a instanceof R2, e;
    for (e in b) {
      e === "" && C2("Setting properties requires non-empty property names");
      var f2 = a, g2 = e;
      if (c || d) {
        var h = e.indexOf(".");
        if (0 < h) {
          var k = e.substring(0, h);
          if (c)
            f2 = a.Ya(k);
          else if (f2 = a[k], f2 === void 0 || f2 === null)
            f2 = a.toolManager[k];
          za2(f2) ? g2 = e.substr(h + 1) : C2("Unable to find object named: " + k + " in " + a.toString() + " when trying to set property: " + e);
        }
      }
      if (g2[0] !== "_" && !La2(f2, g2))
        if (d && g2 === "ModelChanged") {
          a.zx(b[g2]);
          continue;
        } else if (d && g2 === "Changed") {
          a.yh(b[g2]);
          continue;
        } else if (d && La2(a.toolManager, g2))
          f2 = a.toolManager;
        else if (d && qj2(a, g2)) {
          a.Nj(g2, b[g2]);
          continue;
        } else if (a instanceof Z2 && g2 === "Changed") {
          a.yh(b[g2]);
          continue;
        } else
          C2('Trying to set undefined property "' + g2 + '" on object: ' + f2.toString());
      f2[g2] = b[e];
      g2[0] === "_" && f2 instanceof Y2 && f2.wx(g2);
    }
  }
  t2.Iu = function() {
    if (this.undoManager.transactionLevel === 0 && this.Xh.count !== 0) {
      for (; 0 < this.Xh.count; ) {
        var a = this.Xh;
        this.Xh = new H2();
        for (a = a.iterator; a.next(); ) {
          var b = a.key;
          b.fq(a.value);
          b.gc(false);
        }
      }
      this.N();
    }
  };
  t2.N = function(a) {
    a === void 0 && (a = null);
    if (a === null)
      this.Vc = true, this.Gb();
    else {
      var b = this.viewportBounds;
      a !== null && a.u() && b.Lc(a) && (this.Vc = true, this.Gb());
    }
    this.S("InvalidateDraw");
  };
  R2.prototype.invalidateViewport = function(a, b) {
    if (this.Vc !== true) {
      this.Vc = true;
      var c = this.Ie("temporaryPixelRatio") === true;
      if (this.Ie("viewportOptimizations") === true && this.scrollMode !== Qh2 && this.Hj.Fi(0, 0, 0, 0) && b.width === a.width && b.height === a.height) {
        var d = this.scale, e = Math.max(a.x, b.x), f2 = Math.max(a.y, b.y);
        d = N2.allocAt(e, f2, Math.max(0, Math.min(a.x + a.width, b.x + b.width) - e) * d, Math.max(0, Math.min(a.y + a.height, b.y + b.height) - f2) * d);
        if (!this.$r && 0 < d.width && 0 < d.height) {
          if (!(this.Wc || (this.kg = false, this.Ga === null || (this.Wc = true, this.Iu(), this.documentBounds.u() || (e = N2.alloc(), rj2(this, this.computeBounds(e)), N2.free(e)), e = this.Ca, e === null || e instanceof sj2)))) {
            var g2 = this.ec;
            f2 = this.ua * g2;
            var h = this.ta * g2, k = this.scale * g2, l2 = Math.round(Math.round(b.x * k) - Math.round(a.x * k));
            b = Math.round(Math.round(b.y * k) - Math.round(a.y * k));
            k = this.Ht;
            a = this.Mw;
            k.width !== f2 && (k.width = f2);
            k.height !== h && (k.height = h);
            a.clearRect(0, 0, f2, h);
            k = 190 * g2;
            var m2 = 70 * g2, n2 = Math.max(l2, 0), p2 = Math.max(b, 0), r2 = Math.floor(f2 - n2), q2 = Math.floor(h - p2);
            a.drawImage(e.La, n2, p2, r2, q2, 0, 0, r2, q2);
            nj2(this.Zh, this) && a.clearRect(0, 0, k, m2);
            e = Ea2();
            a = Ea2();
            q2 = Math.abs(l2);
            r2 = Math.abs(b);
            var u2 = n2 === 0 ? 0 : f2 - q2;
            n2 = K2.allocAt(u2, 0);
            q2 = K2.allocAt(q2 + u2, h);
            a.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y)));
            var w = this.vb;
            w.reset();
            w.scale(g2, g2);
            this.sa !== 1 && w.scale(this.sa);
            g2 = this.ja;
            (g2.x !== 0 || g2.y !== 0) && isFinite(g2.x) && isFinite(g2.y) && w.translate(-g2.x, -g2.y);
            ub2(n2, w);
            ub2(q2, w);
            e.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y)));
            u2 = p2 === 0 ? 0 : h - r2;
            n2.h(0, u2);
            q2.h(f2, r2 + u2);
            a.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y)));
            ub2(n2, w);
            ub2(q2, w);
            e.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y)));
            nj2(this.Zh, this) && (f2 = 0 < l2 ? 0 : -l2, h = 0 < b ? 0 : -b, n2.h(f2, h), q2.h(k + f2, m2 + h), a.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y))), ub2(n2, w), ub2(q2, w), e.push(new N2(Math.min(n2.x, q2.x), Math.min(n2.y, q2.y), Math.abs(n2.x - q2.x), Math.abs(n2.y - q2.y))));
            K2.free(n2);
            K2.free(q2);
            Si2(this, false, true);
            this.Ga === null && C2("No div specified");
            this.Ca === null && C2("No canvas specified");
            if (!this.animationManager.tb && (f2 = this.Ab, this.Vc)) {
              lj2(this);
              h = this.ec;
              f2.setTransform(1, 0, 0, 1, 0, 0);
              f2.clearRect(0, 0, this.ua * h, this.ta * h);
              f2.drawImage(this.Ht.La, 0 < l2 ? 0 : Math.round(-l2), 0 < b ? 0 : Math.round(-b));
              l2 = this.ja;
              g2 = this.sa;
              k = Math.round(l2.x * g2) / g2;
              m2 = Math.round(l2.y * g2) / g2;
              b = this.vb;
              b.reset();
              g2 !== 1 && b.scale(g2);
              l2.x === 0 && l2.y === 0 || b.translate(-k, -m2);
              f2.save();
              f2.beginPath();
              l2 = a.length;
              for (g2 = 0; g2 < l2; g2++)
                k = a[g2], k.width !== 0 && k.height !== 0 && f2.rect(Math.floor(k.x), Math.floor(k.y), Math.ceil(k.width), Math.ceil(k.height));
              f2.clip();
              f2.setTransform(1, 0, 0, 1, 0, 0);
              f2.scale(h, h);
              f2.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy);
              b = this.Oa.m;
              l2 = b.length;
              this.Md(b, l2, this, this.viewportBounds);
              mj2(this, f2);
              f2.globalAlpha = this.mb;
              for (h = 0; h < l2; h++)
                if (g2 = b[h], k = e, g2.visible && g2.mb !== 0) {
                  m2 = ci2(g2, f2);
                  p2 = g2.Jo;
                  p2.length = 0;
                  n2 = this.scale;
                  r2 = N2.alloc();
                  q2 = g2.Ha.m;
                  w = q2.length;
                  u2 = k.length;
                  for (var v2 = 0; v2 < w; v2++) {
                    var z2 = q2[v2], y2 = tj2(z2, z2.actualBounds);
                    a: {
                      for (var B2 = 2 / n2, A2 = 4 / n2, E = 0; E < u2; E++) {
                        var Q2 = k[E];
                        if (Q2.width !== 0 && Q2.height !== 0 && y2.iv(Q2.x - B2, Q2.y - B2, Q2.width + A2, Q2.height + A2)) {
                          y2 = true;
                          break a;
                        }
                      }
                      y2 = false;
                    }
                    y2 && g2.Di(f2, z2, this, p2, n2, r2, true);
                  }
                  N2.free(r2);
                  f2.globalAlpha = m2;
                }
              f2.restore();
              f2.Hc(true);
              this.Zh && nj2(this.Zh, this) && this.Wq();
              this.Vc = this.nj = false;
              this.oq();
            }
            Ia2(e);
            Ia2(a);
            this.Wc = false;
          }
        } else
          this.gd();
        N2.free(d);
        c && (Pe2(this), this.gd(), bf2(this, true));
      } else
        c ? (Pe2(this), this.gd(), bf2(this, true)) : this.gd();
    }
  };
  function Ri2(a) {
    a.mj === false && (a.mj = true);
  }
  function Mi2(a) {
    a.nj === false && (a.nj = true);
  }
  function lj2(a) {
    a.Qn !== false && (a.Qn = false, uj2(a, a.ua, a.ta));
  }
  function uj2(a, b, c) {
    Ei2(a);
    var d = a.ec;
    a.Ca.resize(b * d, c * d, b, c) && (a.Vc = true, a.Ab.Hc(true));
  }
  function Ki2(a) {
    var b = a.Ca;
    if (b === null || a.Gp.u())
      return true;
    var c = a.Ga, d = a.ua, e = a.ta, f2 = a.viewportBounds;
    if (!a.viewportBounds.u())
      return true;
    var g2 = f2.x, h = f2.y, k = f2.width, l2 = f2.height, m2 = false, n2 = a.Sf ? a.ub : 0, p2 = a.Ye ? a.ub : 0, r2 = c.clientWidth || d + n2, q2 = c.clientHeight || e + p2;
    if (r2 !== d + n2 || q2 !== e + p2)
      a.Sf = false, a.Ye = false, p2 = n2 = 0, a.ua = r2, a.ta = q2, m2 = a.Qn = true, Ei2(a);
    if (!(m2 || a.Sf || a.Ye || a.Nn || a.On))
      return true;
    a.mj = false;
    var u2 = a.documentBounds, w = 0, v2 = 0, z2 = 0, y2 = 0;
    c = f2.width;
    var B2 = f2.height, A2 = a.Hj;
    a.contentAlignment.hb() ? (u2.width > c && (w = A2.left, v2 = A2.right), u2.height > B2 && (z2 = A2.top, y2 = A2.bottom)) : (w = A2.left, v2 = A2.right, z2 = A2.top, y2 = A2.bottom);
    A2 = u2.width + w + v2;
    var E = u2.height + z2 + y2;
    w = u2.x - w;
    var Q2 = f2.x;
    v2 = u2.right + v2;
    var J2 = f2.right + n2;
    z2 = u2.y - z2;
    var S2 = f2.y;
    u2 = u2.bottom + y2;
    y2 = f2.bottom + p2;
    var L2 = "1px", I2 = "1px";
    f2 = a.scale;
    r2 = A2 > r2 / f2;
    q2 = E > q2 / f2;
    a.scrollMode === Oh2 && (r2 || q2) && (r2 && a.hasHorizontalScrollbar && a.allowHorizontalScroll && (r2 = 1, w + 1 < Q2 && (r2 = Math.max((Q2 - w) * f2 + a.ua, r2)), v2 > J2 + 1 && (r2 = Math.max((v2 - J2) * f2 + a.ua, r2)), c + n2 + 1 < A2 && (r2 = Math.max((A2 - c) * f2 + a.ua, r2)), L2 = r2.toString() + "px"), q2 && a.hasVerticalScrollbar && a.allowVerticalScroll && (r2 = 1, z2 + 1 < S2 && (r2 = Math.max((S2 - z2) * f2 + a.ta, r2)), u2 > y2 + 1 && (r2 = Math.max((u2 - y2) * f2 + a.ta, r2)), B2 + p2 + 1 < E && (r2 = Math.max((E - B2) * f2 + a.ta, r2)), I2 = r2.toString() + "px"));
    r2 = L2 !== "1px";
    q2 = I2 !== "1px";
    r2 && q2 || !r2 && !q2 || (q2 && (J2 -= a.ub), r2 && (y2 -= a.ub), A2 < c + n2 || !a.hasHorizontalScrollbar || !a.allowHorizontalScroll || (n2 = 1, w + 1 < Q2 && (n2 = Math.max((Q2 - w) * f2 + a.ua, n2)), v2 > J2 + 1 && (n2 = Math.max((v2 - J2) * f2 + a.ua, n2)), c + 1 < A2 && (n2 = Math.max((A2 - c) * f2 + a.ua, n2)), L2 = n2.toString() + "px"), r2 = L2 !== "1px", n2 = a.ta, r2 !== a.Ye && (n2 = r2 ? a.ta - a.ub : a.ta + a.ub), E < B2 + p2 || !a.hasVerticalScrollbar || !a.allowVerticalScroll || (p2 = 1, z2 + 1 < S2 && (p2 = Math.max((S2 - z2) * f2 + n2, p2)), u2 > y2 + 1 && (p2 = Math.max((u2 - y2) * f2 + n2, p2)), B2 + 1 < E && (p2 = Math.max((E - B2) * f2 + n2, p2)), I2 = p2.toString() + "px"), q2 = I2 !== "1px");
    if (a.Nr && r2 === a.Ye && q2 === a.Sf)
      return d === a.ua && e === a.ta || a.gd(), false;
    r2 !== a.Ye && (L2 === "1px" ? a.ta = a.ta + a.ub : a.ta = Math.max(a.ta - a.ub, 1), m2 = true);
    a.Ye = r2;
    a.gp.style.width = L2;
    q2 !== a.Sf && (I2 === "1px" ? a.ua = a.ua + a.ub : a.ua = Math.max(a.ua - a.ub, 1), m2 = true, a.Vn && (p2 = K2.alloc(), q2 ? (b.style.left = a.ub + "px", a.position = p2.h(a.ja.x + a.ub / a.scale, a.ja.y)) : (b.style.left = "0px", a.position = p2.h(a.ja.x - a.ub / a.scale, a.ja.y)), K2.free(p2)));
    m2 && Ei2(a);
    a.Sf = q2;
    a.gp.style.height = I2;
    a.mu = true;
    m2 && (a.Qn = true);
    b = a.Or;
    p2 = b.scrollLeft;
    a.hasHorizontalScrollbar && a.allowHorizontalScroll && (c + 1 < A2 ? p2 = (a.position.x - w) * f2 : w + 1 < Q2 ? p2 = b.scrollWidth - b.clientWidth : v2 > J2 + 1 && (p2 = a.position.x * f2));
    if (a.Vn)
      switch (a.iu) {
        case "negative":
          p2 = -(b.scrollWidth - p2 - b.clientWidth);
          break;
        case "reverse":
          p2 = b.scrollWidth - p2 - b.clientWidth;
      }
    b.scrollLeft = p2;
    a.hasVerticalScrollbar && a.allowVerticalScroll && (B2 + 1 < E ? b.scrollTop = (a.position.y - z2) * f2 : z2 + 1 < S2 ? b.scrollTop = b.scrollHeight - b.clientHeight : u2 > y2 + 1 && (b.scrollTop = a.position.y * f2));
    r2 = a.ua;
    q2 = a.ta;
    b.style.width = r2 + (a.Sf ? a.ub : 0) + "px";
    b.style.height = q2 + (a.Ye ? a.ub : 0) + "px";
    return d !== r2 || e !== q2 || a.animationManager.tb ? (d = N2.allocAt(g2, h, k, l2), a.onViewportBoundsChanged(d, a.viewportBounds, f2, m2), N2.free(d), false) : true;
  }
  t2 = R2.prototype;
  t2.add = function(a) {
    var b = a.diagram;
    if (b !== this && (b !== null && C2("Cannot add part " + a.toString() + " to " + this.toString() + ". It is already a part of " + b.toString()), b = this.Zj(a.layerName), b === null && (b = this.Zj("")), b === null && C2('Cannot add a Part when unable find a Layer named "' + a.layerName + '" and there is no default Layer'), a.layer !== b)) {
      var c = b.Ni(99999999, a, a.diagram === this);
      0 <= c && this.Wa(pe2, "parts", b, null, a, null, c);
      b.isTemporary || this.Qa();
      a.B(1);
      c = a.layerChanged;
      c !== null && c(a, null, b);
    }
  };
  t2.Ni = function(a) {
    this.partManager.Ni(a);
    var b = this;
    vj2(a, function(a2) {
      wj2(b, a2);
    });
    (a instanceof ze || a instanceof U2 && a.placeholder !== null) && a.s();
    a.data !== null && vj2(a, function(a2) {
      xj2(b.partManager, a2);
    });
    jj2(a) !== true && kj2(a) !== true || this.te.add(a);
    yj2(a, true, this);
    zj2(a) ? (a.actualBounds.u() && this.N(tj2(a, a.actualBounds)), this.Qa()) : a.isVisible() && a.actualBounds.u() && this.N(tj2(a, a.actualBounds));
    this.Gb();
  };
  t2.fc = function(a) {
    a.Qj();
    this.partManager.fc(a);
    var b = this;
    a.data !== null && vj2(a, function(a2) {
      Aj2(b.partManager, a2, b);
    });
    this.te.remove(a);
    zj2(a) ? (a.actualBounds.u() && this.N(tj2(a, a.actualBounds)), this.Qa()) : a.isVisible() && a.actualBounds.u() && this.N(tj2(a, a.actualBounds));
    this.Gb();
  };
  t2.remove = function(a) {
    Bj2(this, a, true);
  };
  function Bj2(a, b, c) {
    var d = b.layer;
    d !== null && d.diagram === a && (b.isSelected = false, b.isHighlighted = false, b.B(2), c && b.Wj(), c = d.fc(-1, b, false), 0 <= c && a.Wa(qe2, "parts", d, b, null, c, null), a = b.layerChanged, a !== null && a(b, d, null));
  }
  t2.Qs = function(a, b) {
    b === void 0 && (b = false);
    if (Aa2(a))
      for (var c = a.length, d = 0; d < c; d++) {
        var e = a[d];
        b && !e.canDelete() || this.remove(e);
      }
    else
      for (c = new G2(), c.addAll(a), a = c.iterator; a.next(); )
        c = a.value, b && !c.canDelete() || this.remove(c);
  };
  t2.Vj = function(a, b, c) {
    c === void 0 && (c = false);
    return this.partManager.Vj(a, b, c);
  };
  R2.prototype.moveParts = function(a, b, c, d) {
    c === void 0 && (c = false);
    d === void 0 && (d = Cj2(this));
    if (this.toolManager !== null) {
      var e = new H2();
      if (a !== null)
        if (Aa2(a))
          for (var f2 = 0; f2 < a.length; f2++)
            Dj2(this, e, a[f2], c, d);
        else
          for (a = a.iterator; a.next(); )
            Dj2(this, e, a.value, c, d);
      else {
        for (a = this.parts; a.next(); )
          Dj2(this, e, a.value, c, d);
        for (a = this.nodes; a.next(); )
          Dj2(this, e, a.value, c, d);
        for (a = this.links; a.next(); )
          Dj2(this, e, a.value, c, d);
      }
      jf2(this, e, b, d, c);
    }
  };
  function Dj2(a, b, c, d, e, f2) {
    if (!b.contains(c) && (f2 === void 0 && (f2 = false), !d || f2 || c.canMove() || c.canCopy()))
      if (e === void 0 && (e = Cj2(a)), c instanceof W2) {
        b.add(c, a.Ad(e, c, c.location));
        if (c instanceof U2 && (c.placeholder !== null || e.dragsMembers))
          for (f2 = c.memberParts; f2.next(); )
            Dj2(a, b, f2.value, d, e, e.groupsAlwaysMove);
        for (f2 = c.linksConnected; f2.next(); ) {
          var g2 = f2.value;
          if (!b.contains(g2)) {
            var h = g2.fromNode, k = g2.toNode;
            h !== null && b.contains(h) && k !== null && b.contains(k) && Dj2(a, b, g2, d, e);
          }
        }
        if (e.dragsTree)
          for (c = c.Zu(); c.next(); )
            Dj2(a, b, c.value, d, e);
      } else if (c instanceof T2)
        for (b.add(c, a.Ad(e, c)), c = c.labelNodes; c.next(); )
          Dj2(a, b, c.value, d, e);
      else
        c instanceof ze || b.add(c, a.Ad(e, c, c.location));
  }
  function jf2(a, b, c, d, e) {
    if (b !== null && b.count !== 0) {
      var f2 = K2.alloc(), g2 = K2.alloc();
      g2.assign(c);
      isNaN(g2.x) && (g2.x = 0);
      isNaN(g2.y) && (g2.y = 0);
      (c = a.Zr) || Qe2(a, b);
      for (var h = Ea2(), k = Ea2(), l2 = b.iterator, m2 = K2.alloc(); l2.next(); ) {
        var n2 = l2.key, p2 = l2.value;
        if (n2.Mc()) {
          var r2 = Ej2(a, n2, b);
          if (r2 !== null)
            h.push(new Fj2(n2, p2, r2));
          else if (!e || n2.canMove())
            r2 = p2.point, f2.assign(r2), a.computeMove(n2, f2.add(g2), d, m2), n2.location = m2, p2.shifted === void 0 && (p2.shifted = new K2()), p2.shifted.assign(m2.ie(r2));
        } else
          l2.key instanceof T2 && k.push(l2.ka);
      }
      K2.free(m2);
      e = h.length;
      for (l2 = 0; l2 < e; l2++)
        n2 = h[l2], f2.assign(n2.info.point), n2.dv.shifted === void 0 && (n2.dv.shifted = new K2()), n2.node.location = f2.add(n2.dv.shifted);
      e = K2.alloc();
      l2 = K2.alloc();
      n2 = k.length;
      for (p2 = 0; p2 < n2; p2++) {
        var q2 = k[p2];
        r2 = q2.key;
        if (r2 instanceof T2) {
          if (r2.suspendsRouting) {
            r2.gf = null;
            m2 = r2.fromNode;
            var u2 = r2.toNode;
            if (a.draggedLink !== null && d.dragsLink)
              if (u2 = q2.value.point, r2.dragComputation === null)
                b.add(r2, a.Ad(d, r2, g2)), gf2(r2, g2.x - u2.x, g2.y - u2.y);
              else {
                q2 = K2.allocAt(0, 0);
                (m2 = r2.i(0)) && m2.u() && q2.assign(m2);
                var w = m2 = K2.alloc().assign(q2).add(g2);
                d.isGridSnapEnabled && (d.isGridSnapRealtime || a.lastInput.up) && (w = K2.alloc(), wg2(a, r2, m2, w, d));
                m2.assign(r2.dragComputation(r2, m2, w)).ie(q2);
                b.add(r2, a.Ad(d, r2, m2));
                gf2(r2, m2.x - u2.x, m2.y - u2.y);
                K2.free(q2);
                K2.free(m2);
                w !== m2 && K2.free(w);
              }
            else
              m2 !== null && (e.assign(m2.location), w = b.H(m2), w !== null && e.ie(w.point)), u2 !== null && (l2.assign(u2.location), w = b.H(u2), w !== null && l2.ie(w.point)), m2 !== null && u2 !== null ? e.Ua(l2) ? (m2 = q2.value.point, u2 = f2, u2.assign(e), u2.ie(m2), b.add(r2, a.Ad(d, r2, e)), gf2(r2, u2.x, u2.y)) : (r2.suspendsRouting = false, r2.Va()) : (q2 = q2.value.point, m2 = m2 !== null ? e : u2 !== null ? l2 : g2, b.add(r2, a.Ad(d, r2, m2)), gf2(r2, m2.x - q2.x, m2.y - q2.y));
          } else if (r2.fromNode === null || r2.toNode === null)
            m2 = q2.value.point, b.add(r2, a.Ad(d, r2, g2)), gf2(r2, g2.x - m2.x, g2.y - m2.y);
        }
      }
      K2.free(f2);
      K2.free(g2);
      K2.free(e);
      K2.free(l2);
      Ia2(h);
      Ia2(k);
      c || (ih2(a), Ve(a, b));
    }
  }
  R2.prototype.computeMove = function(a, b, c, d) {
    d === void 0 && (d = new K2());
    d.assign(b);
    if (a === null)
      return d;
    var e = b, f2 = c.isGridSnapEnabled;
    f2 && (c.isGridSnapRealtime || this.lastInput.up) && (e = K2.alloc(), wg2(this, a, b, e, c));
    c = a.dragComputation !== null ? a.dragComputation(a, b, e) : e;
    var g2 = a.minLocation, h = g2.x;
    isNaN(h) && (h = f2 ? Math.round(1e3 * a.location.x) / 1e3 : a.location.x);
    g2 = g2.y;
    isNaN(g2) && (g2 = f2 ? Math.round(1e3 * a.location.y) / 1e3 : a.location.y);
    var k = a.maxLocation, l2 = k.x;
    isNaN(l2) && (l2 = f2 ? Math.round(1e3 * a.location.x) / 1e3 : a.location.x);
    k = k.y;
    isNaN(k) && (k = f2 ? Math.round(1e3 * a.location.y) / 1e3 : a.location.y);
    d.h(Math.max(h, Math.min(c.x, l2)), Math.max(g2, Math.min(c.y, k)));
    e !== b && K2.free(e);
    return d;
  };
  function Cj2(a) {
    var b = a.toolManager.findTool("Dragging");
    return b !== null ? b.dragOptions : a.pn;
  }
  function wg2(a, b, c, d, e) {
    e === void 0 && (e = Cj2(a));
    d.assign(c);
    if (b !== null) {
      var f2 = a.grid;
      b = e.gridSnapCellSize;
      a = b.width;
      b = b.height;
      var g2 = e.gridSnapOrigin, h = g2.x;
      g2 = g2.y;
      e = e.gridSnapCellSpot;
      if (f2 !== null) {
        var k = f2.gridCellSize;
        isNaN(a) && (a = k.width);
        isNaN(b) && (b = k.height);
        f2 = f2.gridOrigin;
        isNaN(h) && (h = f2.x);
        isNaN(g2) && (g2 = f2.y);
      }
      f2 = K2.allocAt(0, 0);
      f2.Ui(0, 0, a, b, e);
      M2.Xp(c.x, c.y, h + f2.x, g2 + f2.y, a, b, d);
      K2.free(f2);
    }
  }
  function Qe2(a, b) {
    if (b !== null)
      for (a.Zr = true, a = b.iterator; a.next(); )
        b = a.key, b instanceof T2 && (b.suspendsRouting = true);
  }
  function Ve(a, b) {
    if (b !== null) {
      for (b = b.iterator; b.next(); ) {
        var c = b.key;
        c instanceof T2 && (c.suspendsRouting = false, Gj2(c) && c.Va());
      }
      a.Zr = false;
    }
  }
  function Ej2(a, b, c) {
    b = b.containingGroup;
    if (b !== null) {
      a = Ej2(a, b, c);
      if (a !== null)
        return a;
      a = c.H(b);
      if (a !== null)
        return a;
    }
    return null;
  }
  t2 = R2.prototype;
  t2.Ad = function(a, b, c) {
    if (c === void 0)
      return new Te2(zb2);
    var d = a.isGridSnapEnabled;
    a.groupsSnapMembers || b.containingGroup === null || (d = false);
    return d ? new Te2(new K2(Math.round(1e3 * c.x) / 1e3, Math.round(1e3 * c.y) / 1e3)) : new Te2(c.copy());
  };
  function Hj2(a, b, c) {
    b.diagram !== null && b.diagram !== a && C2("Cannot share a Layer with another Diagram: " + b + " of " + b.diagram);
    c === null ? b.diagram !== null && C2("Cannot add an existing Layer to this Diagram again: " + b) : (c.diagram !== a && C2("Existing Layer must be in this Diagram: " + c + " not in " + c.diagram), b === c && C2("Cannot move a Layer before or after itself: " + b));
    if (b.diagram !== a) {
      b = b.name;
      a = a.Oa;
      c = a.count;
      for (var d = 0; d < c; d++)
        a.J(d).name === b && C2("Cannot add Layer with the name '" + b + "'; a Layer with the same name is already present in this Diagram.");
    }
  }
  t2.Ul = function(a) {
    Hj2(this, a, null);
    a.Ne(this);
    var b = this.Oa, c = b.count - 1;
    if (!a.isTemporary)
      for (; 0 <= c && b.J(c).isTemporary; )
        c--;
    b.wb(c + 1, a);
    this.dc !== null && this.Wa(pe2, "layers", this, null, a, null, c + 1);
    this.N();
    this.Qa();
    return this;
  };
  t2.xx = function(a, b) {
    Hj2(this, a, b);
    a.Ne(this);
    var c = this.Oa, d = c.indexOf(a);
    0 <= d && (c.remove(a), this.dc !== null && this.Wa(qe2, "layers", this, a, null, d, null));
    var e = c.count, f2;
    for (f2 = 0; f2 < e; f2++)
      if (c.J(f2) === b) {
        c.wb(f2, a);
        break;
      }
    this.dc !== null && this.Wa(pe2, "layers", this, null, a, null, f2);
    this.N();
    0 > d && this.Qa();
    return this;
  };
  t2.Zy = function(a, b) {
    Hj2(this, a, b);
    a.Ne(this);
    var c = this.Oa, d = c.indexOf(a);
    0 <= d && (c.remove(a), this.dc !== null && this.Wa(qe2, "layers", this, a, null, d, null));
    var e = c.count, f2;
    for (f2 = 0; f2 < e; f2++)
      if (c.J(f2) === b) {
        c.wb(f2 + 1, a);
        break;
      }
    this.dc !== null && this.Wa(pe2, "layers", this, null, a, null, f2 + 1);
    this.N();
    0 > d && this.Qa();
    return this;
  };
  t2.GA = function(a) {
    a.diagram !== this && C2("Cannot remove a Layer from another Diagram: " + a + " of " + a.diagram);
    if (a.name !== "") {
      var b = this.Oa, c = b.indexOf(a);
      if (b.remove(a)) {
        for (b = a.Ha.copy().iterator; b.next(); ) {
          var d = b.value, e = d.layerName;
          e !== a.name ? d.layerName = e : d.layerName = "";
        }
        this.dc !== null && this.Wa(qe2, "layers", this, a, null, c, null);
        this.N();
        this.Qa();
      }
    }
  };
  t2.Zj = function(a) {
    for (var b = this.layers; b.next(); ) {
      var c = b.value;
      if (c.name === a)
        return c;
    }
    return null;
  };
  t2.zx = function(a) {
    this.df === null && (this.df = new F2());
    this.df.add(a);
    this.model.yh(a);
    return this;
  };
  t2.IA = function(a) {
    this.df !== null && (this.df.remove(a), this.df.count === 0 && (this.df = null));
    this.model.rk(a);
  };
  t2.yh = function(a) {
    this.Ag === null && (this.Ag = new F2());
    this.Ag.add(a);
    return this;
  };
  t2.rk = function(a) {
    this.Ag !== null && (this.Ag.remove(a), this.Ag.count === 0 && (this.Ag = null));
  };
  t2.ks = function(a) {
    this.skipsUndoManager || this.model.skipsUndoManager || this.model.undoManager.fv(a);
    a.change !== oe2 && (this.isModified = true);
    if (this.Ag !== null)
      for (var b = this.Ag, c = b.length, d = 0; d < c; d++)
        b.J(d)(a);
  };
  t2.Wa = function(a, b, c, d, e, f2, g2) {
    f2 === void 0 && (f2 = null);
    g2 === void 0 && (g2 = null);
    var h = new fe2();
    h.diagram = this;
    h.change = a;
    h.propertyName = b;
    h.object = c;
    h.oldValue = d;
    h.oldParam = f2;
    h.newValue = e;
    h.newParam = g2;
    this.ks(h);
  };
  t2.g = function(a, b, c, d, e) {
    this.Wa(ge2, a, this, b, c, d, e);
  };
  R2.prototype.changeState = function(a, b) {
    if (a !== null && a.diagram === this) {
      var c = this.skipsModelSourceBindings;
      try {
        this.skipsModelSourceBindings = true;
        var d = a.change;
        if (d === ge2) {
          var e = a.object;
          Ij2(e, a.propertyName, a.H(b));
          if (e instanceof Y2) {
            var f2 = e.part;
            f2 !== null && f2.Mb();
          }
          this.isModified = true;
        } else if (d === pe2) {
          var g2 = a.object, h = a.newParam, k = a.newValue;
          if (g2 instanceof X2)
            if (typeof h === "number" && k instanceof Y2) {
              b ? g2.fc(h) : g2.wb(h, k);
              var l2 = g2.part;
              l2 !== null && l2.Mb();
            } else
              typeof h === "number" && k instanceof Jj2 && (k.isRow ? Kj2(g2, h, b ? void 0 : k) : Lj2(g2, h, b ? void 0 : k));
          else if (g2 instanceof ai2) {
            var m2 = a.oldParam === true;
            typeof h === "number" && k instanceof V2 && (b ? (k.isSelected = false, k.isHighlighted = false, k.Mb(), g2.fc(m2 ? h : -1, k, m2)) : g2.Ni(h, k, m2));
          } else
            g2 instanceof R2 ? typeof h === "number" && k instanceof ai2 && (b ? this.Oa.eb(h) : (k.Ne(this), this.Oa.wb(h, k))) : C2("unknown ChangedEvent.Insert object: " + a.toString());
          this.isModified = true;
        } else if (d === qe2) {
          var n2 = a.object, p2 = a.oldParam, r2 = a.oldValue;
          if (n2 instanceof X2)
            typeof p2 === "number" && r2 instanceof Y2 ? b ? n2.wb(p2, r2) : n2.fc(p2) : typeof p2 === "number" && r2 instanceof Jj2 && (r2.isRow ? Kj2(n2, p2, b ? r2 : void 0) : Lj2(n2, p2, b ? r2 : void 0));
          else if (n2 instanceof ai2) {
            var q2 = a.newParam === true;
            typeof p2 === "number" && r2 instanceof V2 && (b ? 0 > n2.Ha.indexOf(r2) && n2.Ni(p2, r2, q2) : (r2.isSelected = false, r2.isHighlighted = false, r2.Mb(), n2.fc(q2 ? p2 : -1, r2, q2)));
          } else
            n2 instanceof R2 ? typeof p2 === "number" && r2 instanceof ai2 && (b ? (r2.Ne(this), this.Oa.wb(p2, r2)) : this.Oa.eb(p2)) : C2("unknown ChangedEvent.Remove object: " + a.toString());
          this.isModified = true;
        } else
          d !== oe2 && C2("unknown ChangedEvent: " + a.toString());
      } finally {
        this.skipsModelSourceBindings = c;
      }
    }
  };
  R2.prototype.xa = function(a) {
    return this.undoManager.xa(a);
  };
  R2.prototype.Xa = function(a) {
    return this.undoManager.Xa(a);
  };
  R2.prototype.Hf = function() {
    return this.undoManager.Hf();
  };
  R2.prototype.commit = function(a, b) {
    b === void 0 && (b = "");
    var c = this.skipsUndoManager;
    b === null && (this.skipsUndoManager = true, b = "");
    this.undoManager.xa(b);
    var d = false;
    try {
      a(this), d = true;
    } finally {
      d ? this.undoManager.Xa(b) : this.undoManager.Hf(), this.skipsUndoManager = c;
    }
  };
  R2.prototype.updateAllTargetBindings = function(a) {
    this.partManager.updateAllTargetBindings(a);
  };
  R2.prototype.zq = function() {
    this.partManager.zq();
  };
  function Mj2(a, b, c) {
    var d = a.animationManager;
    if (a.qb || a.Wc)
      a.sa = c, Ei2(a), d.tb && d.Td.add(d.D, "scale", b, a.sa);
    else if (a.Ca === null)
      a.sa = c, Ei2(a);
    else {
      a.qb = true;
      var e = a.viewportBounds.copy(), f2 = a.ua, g2 = a.ta;
      e.width = a.ua / b;
      e.height = a.ta / b;
      var h = a.zoomPoint.x, k = a.zoomPoint.y, l2 = a.contentAlignment;
      isNaN(h) && (l2.Nc() ? l2.Df(Fc2) ? h = 0 : l2.Df(Gc2) && (h = f2 - 1) : h = l2.hb() ? l2.x * (f2 - 1) : f2 / 2);
      isNaN(k) && (l2.Nc() ? l2.Df(Ec2) ? k = 0 : l2.Df(Hc2) && (k = g2 - 1) : k = l2.hb() ? l2.y * (g2 - 1) : g2 / 2);
      a.scaleComputation === null || a.animationManager.defaultAnimation.isAnimating || (c = a.scaleComputation(a, c));
      c < a.minScale && (c = a.minScale);
      c > a.maxScale && (c = a.maxScale);
      f2 = K2.allocAt(a.ja.x + h / b - h / c, a.ja.y + k / b - k / c);
      a.position = f2;
      K2.free(f2);
      a.sa = c;
      Ei2(a);
      a.onViewportBoundsChanged(e, a.viewportBounds, b, false);
      a.qb = false;
      Oi2(a, false);
      d.tb && d.Td.add(d.D, "scale", b, a.sa);
      a.N();
      Ri2(a);
    }
  }
  R2.prototype.onViewportBoundsChanged = function(a, b, c, d) {
    if (!a.A(b)) {
      d === void 0 && (d = false);
      d || Ri2(this);
      Mi2(this);
      var e = this.layout;
      e === null || !e.isViewportSized || this.autoScale !== nh2 || d || a.width === b.width && a.height === b.height || e.B();
      e = this.currentTool;
      this.el === true && e instanceof Pa2 && (this.lastInput.documentPoint = this.Ys(this.lastInput.viewPoint), De2(e, this));
      this.qb || this.invalidateViewport(a, b);
      ej2(this);
      this.dd.scale = c;
      this.dd.position.x = a.x;
      this.dd.position.y = a.y;
      this.dd.bounds.assign(a);
      this.dd.Ex.width = Math.round(a.width * c);
      this.dd.Ex.height = Math.round(a.height * c);
      this.dd.ny.width = this.ua;
      this.dd.ny.height = this.ta;
      this.dd.iy = d;
      this.S("ViewportBoundsChanged", this.dd, a);
      this.isVirtualized && this.links.each(function(a2) {
        a2.isAvoiding && a2.actualBounds.Lc(b) && a2.Va();
      });
    }
  };
  function ej2(a, b) {
    b === void 0 && (b = null);
    var c = a.Wb;
    if (c !== null && c.visible) {
      for (var d = Gb2.alloc(), e = 1, f2 = 1, g2 = c.T.m, h = g2.length, k = 0; k < h; k++) {
        var l2 = g2[k], m2 = Math.abs(l2.interval);
        2 > m2 || (Nj2(l2.figure) ? f2 = f2 * m2 / M2.Ux(f2, m2) : e = e * m2 / M2.Ux(e, m2));
      }
      g2 = c.gridCellSize;
      d.h(f2 * g2.width, e * g2.height);
      if (b !== null)
        e = b.width, f2 = b.height, a = b.x, g2 = b.y;
      else {
        b = N2.alloc();
        a = a.viewportBounds;
        b.h(a.x, a.y, a.width, a.height);
        if (!b.u()) {
          N2.free(b);
          return;
        }
        e = b.width;
        f2 = b.height;
        a = b.x;
        g2 = b.y;
        N2.free(b);
      }
      c.width = e + 2 * d.width;
      c.height = f2 + 2 * d.height;
      b = K2.alloc();
      M2.Xp(a, g2, 0, 0, d.width, d.height, b);
      b.offset(-d.width, -d.height);
      Gb2.free(d);
      c.part.location = b;
      K2.free(b);
    }
  }
  R2.prototype.clearSelection = function(a) {
    a === void 0 && (a = false);
    var b = this.selection;
    if (b.count !== 0) {
      a || this.S("ChangingSelection", b);
      for (var c = b.ya(), d = c.length, e = 0; e < d; e++)
        c[e].isSelected = false;
      b.ea();
      b.clear();
      b.freeze();
      a || this.S("ChangedSelection", b);
    }
  };
  R2.prototype.select = function(a) {
    a !== null && a.layer.diagram === this && (!a.isSelected || 1 < this.selection.count) && (this.S("ChangingSelection", this.selection), this.clearSelection(true), a.isSelected = true, this.S("ChangedSelection", this.selection));
  };
  R2.prototype.NA = function(a) {
    this.S("ChangingSelection", this.selection);
    this.clearSelection(true);
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++) {
        var d = a[c];
        d instanceof V2 || C2("Diagram.selectCollection given something that is not a Part: " + d);
        d.isSelected = true;
      }
    else
      for (a = a.iterator; a.next(); )
        b = a.value, b instanceof V2 || C2("Diagram.selectCollection given something that is not a Part: " + b), b.isSelected = true;
    this.S("ChangedSelection", this.selection);
  };
  R2.prototype.clearHighlighteds = function() {
    var a = this.highlighteds;
    if (0 < a.count) {
      for (var b = a.ya(), c = b.length, d = 0; d < c; d++)
        b[d].isHighlighted = false;
      a.ea();
      a.clear();
      a.freeze();
    }
  };
  t2 = R2.prototype;
  t2.gA = function(a) {
    a !== null && a.layer.diagram === this && (!a.isHighlighted || 1 < this.highlighteds.count) && (this.clearHighlighteds(), a.isHighlighted = true);
  };
  t2.hA = function(a) {
    a = new G2().addAll(a);
    for (var b = this.highlighteds.copy().pq(a).iterator; b.next(); )
      b.value.isHighlighted = false;
    for (a = a.iterator; a.next(); )
      b = a.value, b instanceof V2 || C2("Diagram.highlightCollection given something that is not a Part: " + b), b.isHighlighted = true;
  };
  t2.scroll = function(a, b, c) {
    c === void 0 && (c = 1);
    var d = b === "up" || b === "down", e = 0;
    if (a === "pixel")
      e = c;
    else if (a === "line")
      e = c * (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange);
    else if (a === "page")
      a = d ? this.viewportBounds.height : this.viewportBounds.width, a *= this.scale, a !== 0 && (e = c * Math.max(a - (d ? this.scrollVerticalLineChange : this.scrollHorizontalLineChange), 0));
    else {
      if (a === "document") {
        e = this.documentBounds;
        c = this.viewportBounds;
        d = K2.alloc();
        b === "up" ? this.position = d.h(c.x, e.y) : b === "left" ? this.position = d.h(e.x, c.y) : b === "down" ? this.position = d.h(c.x, e.bottom - c.height) : b === "right" && (this.position = d.h(e.right - c.width, c.y));
        K2.free(d);
        return;
      }
      C2("scrolling unit must be 'pixel', 'line', 'page', or 'document', not: " + a);
    }
    e /= this.scale;
    c = this.position.copy();
    b === "up" ? c.y = this.position.y - e : b === "down" ? c.y = this.position.y + e : b === "left" ? c.x = this.position.x - e : b === "right" ? c.x = this.position.x + e : C2("scrolling direction must be 'up', 'down', 'left', or 'right', not: " + b);
    this.position = c;
  };
  t2.Nv = function(a) {
    var b = this.viewportBounds;
    b.Ge(a) || (a = a.center, a.x -= b.width / 2, a.y -= b.height / 2, this.position = a);
  };
  t2.ls = function(a) {
    var b = this.viewportBounds;
    a = a.center;
    a.x -= b.width / 2;
    a.y -= b.height / 2;
    this.position = a;
  };
  t2.wq = function(a) {
    var b = this.vb;
    b.reset();
    this.sa !== 1 && b.scale(this.sa);
    var c = this.ja;
    (c.x !== 0 || c.y !== 0) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
    return a.copy().transform(this.vb);
  };
  t2.WA = function(a) {
    var b = this.vb, c = a.x, d = a.y, e = c + a.width, f2 = d + a.height, g2 = b.m11, h = b.m12, k = b.m21, l2 = b.m22, m2 = b.dx, n2 = b.dy, p2 = c * g2 + d * k + m2;
    b = c * h + d * l2 + n2;
    var r2 = e * g2 + d * k + m2;
    a = e * h + d * l2 + n2;
    d = c * g2 + f2 * k + m2;
    c = c * h + f2 * l2 + n2;
    g2 = e * g2 + f2 * k + m2;
    e = e * h + f2 * l2 + n2;
    f2 = Math.min(p2, r2);
    p2 = Math.max(p2, r2);
    r2 = Math.min(b, a);
    b = Math.max(b, a);
    f2 = Math.min(f2, d);
    p2 = Math.max(p2, d);
    r2 = Math.min(r2, c);
    b = Math.max(b, c);
    f2 = Math.min(f2, g2);
    p2 = Math.max(p2, g2);
    r2 = Math.min(r2, e);
    b = Math.max(b, e);
    return new N2(f2, r2, p2 - f2, b - r2);
  };
  t2.Ys = function(a) {
    var b = this.vb;
    b.reset();
    this.sa !== 1 && b.scale(this.sa);
    var c = this.ja;
    (c.x !== 0 || c.y !== 0) && isFinite(c.x) && isFinite(c.y) && b.translate(-c.x, -c.y);
    return ub2(a.copy(), this.vb);
  };
  function Oj2(a) {
    var b = a.isModified;
    a.ux !== b && (a.ux = b, a.S("Modified"));
  }
  function Pj2(a) {
    a = ii2.get(a);
    return a !== null ? new a() : new ji2();
  }
  R2.prototype.doModelChanged = function(a) {
    var b = this;
    if (a.model === this.model) {
      var c = a.change, d = a.propertyName;
      if (c === oe2 && d[0] === "S")
        if (d === "StartingFirstTransaction") {
          var e = this;
          a = this.toolManager;
          a.mouseDownTools.each(function(a2) {
            a2.diagram = e;
          });
          a.mouseMoveTools.each(function(a2) {
            a2.diagram = e;
          });
          a.mouseUpTools.each(function(a2) {
            a2.diagram = e;
          });
          this.Wc || this.Uf || (this.Rk = true, this.An && (this.kg = true));
        } else
          d === "StartingUndo" || d === "StartingRedo" ? (a = this.animationManager, a.defaultAnimation.isAnimating && !this.skipsUndoManager && a.rc(), this.S("ChangingSelection", this.selection)) : d === "StartedTransaction" && (a = this.animationManager, a.defaultAnimation.isAnimating && !this.skipsUndoManager && a.rc());
      else if (this.Z) {
        this.Z = false;
        try {
          if (a.modelChange === "" && c === oe2) {
            if (d === "FinishedUndo" || d === "FinishedRedo")
              this.S("ChangedSelection", this.selection), ih2(this);
            var f2 = this.animationManager;
            d === "RolledBackTransaction" && f2.rc();
            this.Rk = true;
            this.gd();
            this.undoManager.transactionLevel !== 0 && this.undoManager.transactionLevel !== 1 || jh2(f2);
            d === "CommittedTransaction" && this.undoManager.isJustDiscarded && (this.se = Math.min(this.se, this.undoManager.historyIndex - 1));
            d !== "CommittedTransaction" && d !== "RolledBackTransaction" || !this.undoManager.isPendingUnmodified || setTimeout(function() {
              b.isModified = false;
            }, 1);
            var g2 = a.isTransactionFinished;
            g2 && (Oj2(this), this.Hs.clear(), Hh2(this.animationManager));
            if (!this.bu && g2 && this.lastInput.targetDiagram) {
              this.bu = true;
              var h = this;
              ua2(function() {
                h.currentTool.standardMouseOver();
                h.bu = false;
              }, 10);
            }
          }
        } finally {
          this.Z = true;
        }
      }
    }
  };
  function wj2(a, b) {
    b = b.T.m;
    for (var c = b.length, d = 0; d < c; d++)
      Qj2(a, b[d]);
  }
  function Qj2(a, b) {
    if (b instanceof Rj2) {
      var c = b.element;
      if (c !== null && c instanceof HTMLImageElement) {
        c.Ig instanceof G2 && c.Ig.add(a);
        var d = b.Mg;
        d !== null && d.mr === true && b.diagram !== null && b.diagram.Oo.add(b);
        if (c.Fn)
          if (c = c.getAttribute("src"), d = a.fh.H(c), d === null)
            d = [], d.push(b), a.fh.add(c, d);
          else {
            for (a = 0; a < d.length; a++)
              if (d[a] === b)
                return;
            d.push(b);
          }
      }
    }
  }
  function Sj2(a, b) {
    if (b instanceof Rj2) {
      var c = b.element;
      if (c !== null && c instanceof HTMLImageElement && (c.Ig instanceof G2 && c.Ig.remove(a), Tj2(c), c.Fn)) {
        c = c.getAttribute("src");
        var d = a.fh.H(c);
        if (d !== null) {
          for (var e = 0; e < d.length; e++)
            if (d[e] === b) {
              d.splice(e, 1);
              d.length === 0 && (a.fh.remove(c), Di2(c));
              break;
            }
        }
      }
    }
  }
  R2.prototype.Ld = function() {
    this.partManager.Ld();
  };
  R2.prototype.Mj = function(a, b) {
    this.Qd.Mj(a, b);
  };
  R2.prototype.Oj = function(a, b) {
    this.Qd.Oj(a, b);
  };
  R2.prototype.findPartForKey = function(a) {
    return this.partManager.findPartForKey(a);
  };
  R2.prototype.Fb = function(a) {
    return this.partManager.Fb(a);
  };
  R2.prototype.findLinkForKey = function(a) {
    return this.partManager.findLinkForKey(a);
  };
  t2 = R2.prototype;
  t2.Ac = function(a) {
    return this.partManager.Ac(a);
  };
  t2.Gi = function(a) {
    return this.partManager.Gi(a);
  };
  t2.zc = function(a) {
    return this.partManager.zc(a);
  };
  t2.rs = function(a) {
    for (var b = [], c = 0; c < arguments.length; ++c)
      b[c] = arguments[c];
    return this.partManager.rs.apply(this.partManager, b instanceof Array ? b : da2(ba2(b)));
  };
  t2.qs = function(a) {
    for (var b = [], c = 0; c < arguments.length; ++c)
      b[c] = arguments[c];
    return this.partManager.qs.apply(this.partManager, b instanceof Array ? b : da2(ba2(b)));
  };
  function Ei2(a) {
    var b = a.ja, c = a.sa;
    a.tx.h(b.x, b.y, Math.max(a.ua, 0) / c, Math.max(a.ta, 0) / c);
  }
  function rj2(a, b) {
    a.lj = false;
    var c = a.Uq;
    c.A(b) || (c = c.copy(), a.Uq.assign(b), Oi2(a, false), a.S("DocumentBoundsChanged", null, c), Ri2(a));
  }
  t2.Ta = function() {
    if (this.lj) {
      var a = N2.alloc();
      rj2(this, this.computeBounds(a));
      N2.free(a);
    }
  };
  t2.Qz = function() {
    for (var a = new G2(), b = this.nodes; b.next(); ) {
      var c = b.value;
      c.isTopLevel && a.add(c);
    }
    for (b = this.links; b.next(); )
      c = b.value, c.isTopLevel && a.add(c);
    return a.iterator;
  };
  t2.Pz = function() {
    return this.wi.iterator;
  };
  t2.qA = function(a) {
    ih2(this);
    a && Uj2(this, true);
    this.Wc ? fj2(this, false) : (this.Rk = true, uf2(this));
  };
  function Uj2(a, b) {
    for (var c = a.wi.iterator; c.next(); )
      Vj2(a, c.value, b);
    a.layout !== null && (b ? a.layout.isValidLayout = false : a.layout.B());
  }
  function Vj2(a, b, c) {
    if (b !== null) {
      for (var d = b.rl.iterator; d.next(); )
        Vj2(a, d.value, c);
      b.layout !== null && (c ? b.layout.isValidLayout = false : b.layout.B());
    }
  }
  function fj2(a, b) {
    if (a.Oh && !a.Dt) {
      var c = a.Z;
      a.Z = true;
      var d = a.undoManager.transactionLevel, e = a.layout, f2 = a.animationManager;
      try {
        d === 0 && (a.undoManager.isInternalTransaction = true, a.xa("Layout"));
        1 >= d && !f2.defaultAnimation.isAnimating && !f2.tb && (b || hh2(f2, "Layout"));
        a.Oh = false;
        for (var g2 = a.wi.iterator; g2.next(); )
          Wj2(a, g2.value, b, d);
        e.isValidLayout || (!b || e.isRealtime || e.isRealtime === null || d === 0 ? (e.doLayout(a), ih2(a), e.isValidLayout = true) : a.Oh = true);
      } finally {
        b = a.undoManager.isInternalTransaction, d === 0 && (a.Xa("Layout"), a.undoManager.isInternalTransaction = false), !b || d !== 0 && d !== 1 || jh2(f2), a.Z = c;
      }
    }
  }
  function Wj2(a, b, c, d) {
    if (b !== null) {
      for (var e = b.rl.iterator; e.next(); )
        Wj2(a, e.value, c, d);
      e = b.layout;
      e === null || e.isValidLayout || (!c || e.isRealtime || d === 0 ? (b.Jh = !b.location.u(), e.doLayout(b), b.B(32), hj2(a, b), e.isValidLayout = true) : a.Oh = true);
    }
  }
  t2.Wz = function() {
    for (var a = new F2(), b = this.nodes; b.next(); ) {
      var c = b.value;
      c.isTopLevel && c.Ii() === null && a.add(c);
    }
    return a.iterator;
  };
  function qi2(a) {
    function b(a2) {
      var b2 = a2.toLowerCase(), e = new F2();
      c.add(a2, e);
      c.add(b2, e);
      d.add(a2, a2);
      d.add(b2, a2);
    }
    var c = new H2(), d = new H2();
    b("InitialAnimationStarting");
    b("AnimationStarting");
    b("AnimationFinished");
    b("BackgroundSingleClicked");
    b("BackgroundDoubleClicked");
    b("BackgroundContextClicked");
    b("ClipboardChanged");
    b("ClipboardPasted");
    b("DocumentBoundsChanged");
    b("ExternalObjectsDropped");
    b("GainedFocus");
    b("InitialLayoutCompleted");
    b("LayoutCompleted");
    b("LinkDrawn");
    b("LinkRelinked");
    b("LinkReshaped");
    b("LostFocus");
    b("Modified");
    b("ObjectSingleClicked");
    b("ObjectDoubleClicked");
    b("ObjectContextClicked");
    b("PartCreated");
    b("PartResized");
    b("PartRotated");
    b("SelectionMoved");
    b("SelectionCopied");
    b("SelectionDeleting");
    b("SelectionDeleted");
    b("SelectionGrouped");
    b("SelectionUngrouped");
    b("ChangingSelection");
    b("ChangedSelection");
    b("SubGraphCollapsed");
    b("SubGraphExpanded");
    b("TextEdited");
    b("TreeCollapsed");
    b("TreeExpanded");
    b("ViewportBoundsChanged");
    b("InvalidateDraw");
    a.Ft = c;
    a.Et = d;
  }
  function qj2(a, b) {
    var c = a.Et.H(b);
    return c !== null ? c : a.Et.H(b.toLowerCase());
  }
  function ek2(a, b) {
    var c = a.Ft.H(b);
    if (c !== null)
      return c;
    c = a.Ft.H(b.toLowerCase());
    if (c !== null)
      return c;
    C2("Unknown DiagramEvent name: " + b);
  }
  t2.Nj = function(a, b) {
    a = ek2(this, a);
    a !== null && a.add(b);
    return this;
  };
  t2.mm = function(a, b) {
    a = ek2(this, a);
    a !== null && a.remove(b);
  };
  t2.S = function(a, b, c) {
    var d = ek2(this, a), e = new ee2();
    e.diagram = this;
    a = qj2(this, a);
    a !== null && (e.name = a);
    b !== void 0 && (e.subject = b);
    c !== void 0 && (e.parameter = c);
    b = d.length;
    if (b === 1)
      d.J(0)(e);
    else if (b !== 0)
      for (d = d.ya(), c = 0; c < b; c++)
        (0, d[c])(e);
  };
  function ik2(a) {
    if (a.animationManager.isTicking)
      return false;
    var b = a.currentTool;
    return b === a.toolManager.findTool("Dragging") ? !a.Zr || b.isComplexRoutingRealtime : true;
  }
  t2.fk = function(a, b) {
    b === void 0 && (b = null);
    return jk2(this, false, null, b).fk(a.x, a.y, a.width, a.height);
  };
  R2.prototype.computeOccupiedArea = function(a) {
    return this.isVirtualized ? this.viewportBounds.copy() : this.lj ? Ni2(this, a) : a.assign(this.documentBounds);
  };
  function jk2(a, b, c, d) {
    a.Zc === null && (a.Zc = new kk2());
    if (a.Zc.As || a.Zc.group !== c || a.Zc.Cy !== d) {
      c !== null && (c = lk2(a, c));
      if (c === null) {
        b = N2.alloc();
        a.computeOccupiedArea(b);
        b.Jc(100, 100);
        a.Zc.initialize(b);
        for (var e = a.nodes; e.next(); ) {
          var f2 = e.value, g2 = f2.layer;
          g2 !== null && g2.visible && !g2.isTemporary && mk2(a, f2, d, b);
        }
        N2.free(b);
      } else {
        0 < c.memberParts.count && (b = a.computePartsBounds(c.memberParts, false), b.Jc(20, 20), a.Zc.initialize(b));
        b = N2.alloc();
        for (e = c.memberParts; e.next(); )
          f2 = e.value, f2 instanceof W2 && mk2(a, f2, d, b);
        N2.free(b);
      }
      a.Zc.group = c;
      a.Zc.Cy = d;
      a.Zc.As = false;
    } else
      b && nk2(a.Zc);
    return a.Zc;
  }
  function lk2(a, b) {
    return b.avoidable && !b.isLinkLabel ? b : b.containingGroup !== null ? lk2(a, b.containingGroup) : null;
  }
  function mk2(a, b, c, d) {
    if (b !== c && b.isVisible()) {
      if (b.avoidable && !b.isLinkLabel) {
        b = b.getAvoidableRect(d);
        a = a.Zc;
        var e = b.x, f2 = b.y;
        if (ok2(a, e, f2))
          for (c = (f2 - a.zd) / a.ic | 0, d = Math.min((e + b.width - a.yd) / a.hc | 0, a.yi), b = Math.min((f2 + b.height - a.zd) / a.ic | 0, a.zi), e = (e - a.yd) / a.hc | 0; e <= d; e++)
            if (f2 = a.Ub[e], f2.fill)
              f2.fill(pk2, c, b + 1);
            else
              for (var g2 = c; g2 <= b; g2++)
                f2[g2] = pk2;
      } else if (b instanceof U2)
        for (b = b.memberParts; b.next(); )
          e = b.value, e instanceof W2 && mk2(a, e, c, d);
    }
  }
  function qk2(a, b) {
    a.Zc !== null && !a.Zc.As && (b === void 0 && (b = null), b === null || b.avoidable && !b.isLinkLabel) && (a.Zc.As = true);
  }
  R2.prototype.ns = function(a) {
    this.Dq.assign(a);
    this.computeAutoScrollPosition(this.Dq).Ua(this.position) ? this.ug() : rk2(this);
  };
  function rk2(a) {
    a.Ak === -1 && (a.Ak = ua2(function() {
      if (a.Ak !== -1 && (a.ug(), a.lastInput.event !== null)) {
        var b = a.computeAutoScrollPosition(a.Dq);
        b.Ua(a.position) || (a.position = b, a.lastInput.documentPoint = a.Ys(a.Dq), a.doMouseMove(), a.lj = true, b = N2.alloc(), a.computeBounds(b), b.Qc(a.documentBounds), rj2(a, b), N2.free(b), a.Vc = true, a.gd(), rk2(a));
      }
    }, a.Cq));
  }
  R2.prototype.ug = function() {
    this.Ak !== -1 && (x2.clearTimeout(this.Ak), this.Ak = -1);
  };
  R2.prototype.computeAutoScrollPosition = function(a) {
    var b = this.position, c = this.Eq;
    if (0 >= c.top && 0 >= c.left && 0 >= c.right && 0 >= c.bottom)
      return b;
    var d = this.viewportBounds, e = this.scale;
    d = N2.allocAt(0, 0, d.width * e, d.height * e);
    var f2 = K2.allocAt(0, 0);
    if (a.x >= d.x && a.x < d.x + c.left && this.allowHorizontalScroll) {
      var g2 = Math.max(this.scrollHorizontalLineChange, 1);
      g2 |= 0;
      f2.x -= g2;
      a.x < d.x + c.left / 2 && (f2.x -= g2);
      a.x < d.x + c.left / 4 && (f2.x -= 4 * g2);
    } else
      a.x <= d.x + d.width && a.x > d.x + d.width - c.right && this.allowHorizontalScroll && (g2 = Math.max(this.scrollHorizontalLineChange, 1), g2 |= 0, f2.x += g2, a.x > d.x + d.width - c.right / 2 && (f2.x += g2), a.x > d.x + d.width - c.right / 4 && (f2.x += 4 * g2));
    a.y >= d.y && a.y < d.y + c.top && this.allowVerticalScroll ? (g2 = Math.max(this.scrollVerticalLineChange, 1), g2 |= 0, f2.y -= g2, a.y < d.y + c.top / 2 && (f2.y -= g2), a.y < d.y + c.top / 4 && (f2.y -= 4 * g2)) : a.y <= d.y + d.height && a.y > d.y + d.height - c.bottom && this.allowVerticalScroll && (g2 = Math.max(this.scrollVerticalLineChange, 1), g2 |= 0, f2.y += g2, a.y > d.y + d.height - c.bottom / 2 && (f2.y += g2), a.y > d.y + d.height - c.bottom / 4 && (f2.y += 4 * g2));
    f2.Ua(zb2) || (b = new K2(b.x + f2.x / e, b.y + f2.y / e));
    N2.free(d);
    K2.free(f2);
    return b;
  };
  t2 = R2.prototype;
  t2.Js = function() {
    return null;
  };
  t2.sv = function() {
    return null;
  };
  t2.cz = function(a, b) {
    this.Qy.add(a, b);
  };
  t2.Hu = function(a) {
    (this.qx = a) || this.nodes.each(function(a2) {
      a2 instanceof U2 && (a2.$q = null);
    });
  };
  function sk2(a, b, c) {
    function d() {
      var a2 = +new Date();
      f2 = true;
      for (g2.reset(); g2.next(); )
        if (!g2.value[0].ml) {
          f2 = false;
          break;
        }
      f2 || a2 - l2 > k ? b(c, e, h) : x2.requestAnimationFrame(d);
    }
    for (var e = c.callback, f2 = true, g2 = a.fh.iterator; g2.next(); )
      if (!g2.value[0].ml) {
        f2 = false;
        break;
      }
    if (typeof e !== "function" || f2)
      return b(c, e, a);
    var h = a, k = c.callbackTimeout || 300, l2 = +new Date();
    x2.requestAnimationFrame(function() {
      d();
    });
    return null;
  }
  t2.sA = function(a) {
    if (!Kg2)
      return null;
    a === void 0 && (a = new Ya2());
    a.returnType = "Image";
    return this.ky(a);
  };
  t2.ky = function(a) {
    a === void 0 && (a = new Ya2());
    return sk2(this, this.tA, a);
  };
  t2.tA = function(a, b, c) {
    var d = tk2(c, a, "canvas", null);
    if (d === null)
      return null;
    c = d.Y.canvas;
    var e = null;
    if (c !== null)
      switch (e = a.returnType, e === void 0 ? e = "string" : e = e.toLowerCase(), e) {
        case uk2 + "data":
          e = d.getImageData(0, 0, c.width, c.height);
          break;
        case uk2:
          d = (a.document || document).createElement("img");
          d.src = c.toDataURL(a.type, a.details);
          e = d;
          break;
        case "blob":
          typeof b !== "function" && C2('Error: Diagram.makeImageData called with "returnType: toBlob", but no required "callback" function property defined.');
          if (typeof c.toBlob === "function")
            return c.toBlob(b, a.type, a.details), "toBlob";
          if (typeof c.msToBlob === "function")
            return b(c.msToBlob()), "msToBlob";
          b(null);
          return null;
        default:
          e = c.toDataURL(a.type, a.details);
      }
    return typeof b === "function" ? (b(e), null) : e;
  };
  function tk2(a, b, c, d) {
    a.animationManager.rc();
    a.gd();
    if (a.Ca === null)
      return null;
    typeof b !== "object" && C2("properties argument must be an Object.");
    var e = b.size || null, f2 = b.scale || null;
    b.scale !== void 0 && isNaN(b.scale) && (f2 = "NaN");
    var g2 = b.maxSize;
    b.maxSize === void 0 && (g2 = c === "SVG" ? new Gb2(Infinity, Infinity) : new Gb2(2e3, 2e3));
    var h = b.position || null, k = b.parts || null, l2 = b.padding === void 0 ? 1 : b.padding, m2 = b.background || null, n2 = b.omitTemporary;
    n2 === void 0 && (n2 = true);
    var p2 = b.document || document, r2 = b.elementFinished || null, q2 = b.showTemporary;
    q2 === void 0 && (q2 = !n2);
    b = b.showGrid;
    b === void 0 && (b = q2);
    e !== null && isNaN(e.width) && isNaN(e.height) && (e = null);
    typeof l2 === "number" ? l2 = new lc2(l2) : l2 instanceof lc2 || C2("MakeImage padding must be a Margin or a number.");
    l2.left = Math.max(l2.left, 0);
    l2.right = Math.max(l2.right, 0);
    l2.top = Math.max(l2.top, 0);
    l2.bottom = Math.max(l2.bottom, 0);
    a.Ab.Hc(true);
    n2 = new vk2(null, p2);
    var u2 = n2.context;
    if (!(e || f2 || k || h)) {
      n2.width = a.ua + Math.ceil(l2.left + l2.right);
      n2.height = a.ta + Math.ceil(l2.top + l2.bottom);
      if (c === "SVG") {
        if (d === null)
          return null;
        d.resize(n2.width, n2.height, n2.width, n2.height);
        d.ownerDocument = p2;
        d.Up = r2;
        oj2(a, d.context, l2, new Gb2(n2.width, n2.height), a.sa, a.ja, k, m2, q2, b);
        return d.context;
      }
      a.rn = false;
      oj2(a, u2, l2, new Gb2(n2.width, n2.height), a.sa, a.ja, k, m2, q2, b);
      a.rn = true;
      return n2.context;
    }
    var w = a.Sq, v2 = a.documentBounds.copy();
    v2.Vv(a.nb);
    if (q2)
      for (var z2 = a.Oa.m, y2 = z2.length, B2 = 0; B2 < y2; B2++) {
        var A2 = z2[B2];
        if (A2.visible && A2.isTemporary) {
          A2 = A2.Ha.m;
          for (var E = A2.length, Q2 = 0; Q2 < E; Q2++) {
            var J2 = A2[Q2];
            J2.isInDocumentBounds && J2.isVisible() && (J2 = J2.actualBounds, J2.u() && v2.Qc(J2));
          }
        }
      }
    z2 = new K2(v2.x, v2.y);
    if (k !== null) {
      y2 = true;
      B2 = k.iterator;
      for (B2.reset(); B2.next(); )
        if (A2 = B2.value, A2 instanceof V2 && (E = A2.layer, (E === null || E.visible) && (E === null || q2 || !E.isTemporary) && A2.isVisible() && (A2 = A2.actualBounds, A2.u())))
          if (y2) {
            y2 = false;
            var S2 = A2.copy();
          } else
            S2.Qc(A2);
      y2 && (S2 = new N2(0, 0, 0, 0));
      v2.width = S2.width;
      v2.height = S2.height;
      z2.x = S2.x;
      z2.y = S2.y;
    }
    h !== null && h.u() && (z2 = h, f2 || (f2 = w));
    S2 = h = 0;
    l2 !== null && (h = l2.left + l2.right, S2 = l2.top + l2.bottom);
    y2 = B2 = 0;
    e !== null && (B2 = e.width, y2 = e.height, isFinite(B2) && (B2 = Math.max(0, B2 - h)), isFinite(y2) && (y2 = Math.max(0, y2 - S2)));
    e !== null && f2 !== null ? (f2 === "NaN" && (f2 = w), e.u() ? (e = B2, v2 = y2) : isNaN(y2) ? (e = B2, v2 = v2.height * f2) : (e = v2.width * f2, v2 = y2)) : e !== null ? e.u() ? (f2 = Math.min(B2 / v2.width, y2 / v2.height), e = B2, v2 = y2) : isNaN(y2) ? (f2 = B2 / v2.width, e = B2, v2 = v2.height * f2) : (f2 = y2 / v2.height, e = v2.width * f2, v2 = y2) : f2 !== null ? f2 === "NaN" && g2.u() ? (f2 = Math.min((g2.width - h) / v2.width, (g2.height - S2) / v2.height), f2 > w ? (f2 = w, e = v2.width, v2 = v2.height) : (e = g2.width, v2 = g2.height)) : (e = v2.width * f2, v2 = v2.height * f2) : (f2 = w, e = v2.width, v2 = v2.height);
    l2 !== null ? (e += h, v2 += S2) : l2 = new lc2(0);
    g2 !== null && (w = g2.width, g2 = g2.height, isNaN(w) && (w = 2e3), isNaN(g2) && (g2 = 2e3), isFinite(w) && (e = Math.min(e, w)), isFinite(g2) && (v2 = Math.min(v2, g2)));
    n2.width = Math.ceil(e);
    n2.height = Math.ceil(v2);
    if (c === "SVG") {
      if (d === null)
        return null;
      d.resize(n2.width, n2.height, n2.width, n2.height);
      d.ownerDocument = p2;
      d.Up = r2;
      oj2(a, d.context, l2, new Gb2(Math.ceil(e), Math.ceil(v2)), f2, z2, k, m2, q2, b);
      return d.context;
    }
    a.rn = false;
    oj2(a, u2, l2, new Gb2(Math.ceil(e), Math.ceil(v2)), f2, z2, k, m2, q2, b);
    a.rn = true;
    return n2.context;
  }
  na2.Object.defineProperties(R2.prototype, {
    div: { get: function() {
      return this.Ga;
    }, set: function(a) {
      if (this.Ga !== a) {
        var b = this.Ga;
        b !== null ? (b.D = void 0, b.goDiagram = void 0, b.go = void 0, b.innerHTML = "", this.Ca !== null && (b = this.Ca.La, this.removeEventListener(b, "pointermove", this.mk, false), this.removeEventListener(b, "pointerdown", this.lk, false), this.removeEventListener(b, "pointerup", this.pk, false), this.removeEventListener(b, "pointerout", this.nk, false), this.Ca.Mx()), this.zl && (this.zl.disconnect(), this.zl = null), b = this.toolManager, b !== null && (b.mouseDownTools.each(function(a2) {
          a2.cancelWaitAfter();
        }), b.mouseMoveTools.each(function(a2) {
          a2.cancelWaitAfter();
        }), b.mouseUpTools.each(function(a2) {
          a2.cancelWaitAfter();
        })), b.cancelWaitAfter(), this.currentTool.doCancel(), this.Ab = this.Ca = null, this.removeEventListener(x2, "resize", this.gw, false), this.removeEventListener(x2, "wheel", this.ik, true), ve2 === this && (ve2 = null)) : this.Uf = false;
        this.Ga = null;
        if (a !== null) {
          if (b = a.D)
            b.div = null;
          pi2(this, a);
          this.redraw();
        }
      }
    } },
    Bx: {
      get: function() {
        return this.zr;
      }
    },
    Oi: { get: function() {
      return this.Uf;
    } },
    draggedLink: { get: function() {
      return this.ev;
    }, set: function(a) {
      this.ev !== a && (this.ev = a, a !== null && (this.lw = a.fromPort, this.$s = a.toPort));
    } },
    oy: { get: function() {
      return this.lw;
    }, set: function(a) {
      this.lw = a;
    } },
    py: { get: function() {
      return this.$s;
    }, set: function(a) {
      this.$s = a;
    } },
    animationManager: {
      get: function() {
        return this.Qd;
      }
    },
    undoManager: { get: function() {
      return this.dc.undoManager;
    } },
    skipsUndoManager: { get: function() {
      return this.kh;
    }, set: function(a) {
      this.kh = a;
      this.dc.skipsUndoManager = a;
    } },
    delaysLayout: { get: function() {
      return this.Dt;
    }, set: function(a) {
      this.Dt = a;
    } },
    opacity: { get: function() {
      return this.mb;
    }, set: function(a) {
      var b = this.mb;
      b !== a && ((0 > a || 1 < a) && xa2(a, "0 <= value <= 1", R2, "opacity"), this.mb = a, this.g("opacity", b, a), this.N());
    } },
    validCycle: { get: function() {
      return this.kt;
    }, set: function(a) {
      var b = this.kt;
      b !== a && (this.kt = a, this.g("validCycle", b, a));
    } },
    layers: { get: function() {
      return this.Oa.iterator;
    } },
    isModelReadOnly: { get: function() {
      var a = this.dc;
      return a === null ? false : a.isReadOnly;
    }, set: function(a) {
      var b = this.dc;
      b !== null && (b.isReadOnly = a);
    } },
    isReadOnly: {
      get: function() {
        return this.Sg;
      },
      set: function(a) {
        var b = this.Sg;
        b !== a && (this.Sg = a, this.g("isReadOnly", b, a));
      }
    },
    isEnabled: { get: function() {
      return this.vd;
    }, set: function(a) {
      var b = this.vd;
      b !== a && (this.vd = a, this.g("isEnabled", b, a));
    } },
    allowClipboard: { get: function() {
      return this.ot;
    }, set: function(a) {
      var b = this.ot;
      b !== a && (this.ot = a, this.g("allowClipboard", b, a));
    } },
    allowCopy: { get: function() {
      return this.L;
    }, set: function(a) {
      var b = this.L;
      b !== a && (this.L = a, this.g("allowCopy", b, a));
    } },
    allowDelete: { get: function() {
      return this.wa;
    }, set: function(a) {
      var b = this.wa;
      b !== a && (this.wa = a, this.g("allowDelete", b, a));
    } },
    allowDragOut: { get: function() {
      return this.pt;
    }, set: function(a) {
      var b = this.pt;
      b !== a && (this.pt = a, this.g("allowDragOut", b, a));
    } },
    allowDrop: { get: function() {
      return this.qt;
    }, set: function(a) {
      var b = this.qt;
      b !== a && (this.qt = a, this.g("allowDrop", b, a));
    } },
    allowTextEdit: {
      get: function() {
        return this.ke;
      },
      set: function(a) {
        var b = this.ke;
        b !== a && (this.ke = a, this.g("allowTextEdit", b, a));
      }
    },
    allowGroup: { get: function() {
      return this.Ba;
    }, set: function(a) {
      var b = this.Ba;
      b !== a && (this.Ba = a, this.g("allowGroup", b, a));
    } },
    allowUngroup: { get: function() {
      return this.Pd;
    }, set: function(a) {
      var b = this.Pd;
      b !== a && (this.Pd = a, this.g("allowUngroup", b, a));
    } },
    allowInsert: { get: function() {
      return this.tt;
    }, set: function(a) {
      var b = this.tt;
      b !== a && (this.tt = a, this.g("allowInsert", b, a));
    } },
    allowLink: { get: function() {
      return this.Ma;
    }, set: function(a) {
      var b = this.Ma;
      b !== a && (this.Ma = a, this.g("allowLink", b, a));
    } },
    allowRelink: { get: function() {
      return this.Hb;
    }, set: function(a) {
      var b = this.Hb;
      b !== a && (this.Hb = a, this.g("allowRelink", b, a));
    } },
    allowMove: { get: function() {
      return this.Rb;
    }, set: function(a) {
      var b = this.Rb;
      b !== a && (this.Rb = a, this.g("allowMove", b, a));
    } },
    allowReshape: {
      get: function() {
        return this.Sb;
      },
      set: function(a) {
        var b = this.Sb;
        b !== a && (this.Sb = a, this.g("allowReshape", b, a));
      }
    },
    allowResize: { get: function() {
      return this.sc;
    }, set: function(a) {
      var b = this.sc;
      b !== a && (this.sc = a, this.g("allowResize", b, a));
    } },
    allowRotate: { get: function() {
      return this.Nd;
    }, set: function(a) {
      var b = this.Nd;
      b !== a && (this.Nd = a, this.g("allowRotate", b, a));
    } },
    allowSelect: { get: function() {
      return this.Od;
    }, set: function(a) {
      var b = this.Od;
      b !== a && (this.Od = a, this.g("allowSelect", b, a));
    } },
    allowUndo: { get: function() {
      return this.Zs;
    }, set: function(a) {
      var b = this.Zs;
      b !== a && (this.Zs = a, this.g("allowUndo", b, a));
    } },
    allowZoom: { get: function() {
      return this.Fu;
    }, set: function(a) {
      var b = this.Fu;
      b !== a && (this.Fu = a, this.g("allowZoom", b, a));
    } },
    hasVerticalScrollbar: { get: function() {
      return this.On;
    }, set: function(a) {
      var b = this.On;
      b !== a && (this.On = a, Ri2(this), this.N(), this.g("hasVerticalScrollbar", b, a), Oi2(this, false));
    } },
    hasHorizontalScrollbar: { get: function() {
      return this.Nn;
    }, set: function(a) {
      var b = this.Nn;
      b !== a && (this.Nn = a, Ri2(this), this.N(), this.g("hasHorizontalScrollbar", b, a), Oi2(this, false));
    } },
    allowHorizontalScroll: { get: function() {
      return this.st;
    }, set: function(a) {
      var b = this.st;
      b !== a && (this.st = a, this.g("allowHorizontalScroll", b, a), Oi2(this, false));
    } },
    allowVerticalScroll: { get: function() {
      return this.zu;
    }, set: function(a) {
      var b = this.zu;
      b !== a && (this.zu = a, this.g("allowVerticalScroll", b, a), Oi2(this, false));
    } },
    scrollHorizontalLineChange: { get: function() {
      return this.dt;
    }, set: function(a) {
      var b = this.dt;
      b !== a && (0 > a && xa2(a, ">= 0", R2, "scrollHorizontalLineChange"), this.dt = a, this.g("scrollHorizontalLineChange", b, a));
    } },
    scrollVerticalLineChange: { get: function() {
      return this.et;
    }, set: function(a) {
      var b = this.et;
      b !== a && (0 > a && xa2(a, ">= 0", R2, "scrollVerticalLineChange"), this.et = a, this.g("scrollVerticalLineChange", b, a));
    } },
    lastInput: { get: function() {
      return this.tj;
    }, set: function(a) {
      this.tj = a;
    } },
    previousInput: { get: function() {
      return this.hh;
    }, set: function(a) {
      this.hh = a;
    } },
    firstInput: { get: function() {
      return this.cr;
    }, set: function(a) {
      this.cr = a;
    } },
    currentCursor: { get: function() {
      return this.Nu;
    }, set: function(a) {
      a === "" && (a = this.Zi);
      if (this.Nu !== a) {
        var b = this.Ca, c = this.Ga;
        if (b !== null) {
          this.Nu = a;
          var d = b.style.cursor;
          b.style.cursor = a;
          c.style.cursor = a;
          b.style.cursor === d && (b.style.cursor = "-webkit-" + a, c.style.cursor = "-webkit-" + a, b.style.cursor === d && (b.style.cursor = "-moz-" + a, c.style.cursor = "-moz-" + a, b.style.cursor === d && (b.style.cursor = a, c.style.cursor = a)));
        }
      }
    } },
    defaultCursor: { get: function() {
      return this.Zi;
    }, set: function(a) {
      a === "" && (a = "auto");
      var b = this.Zi;
      b !== a && (this.Zi = a, this.g("defaultCursor", b, a));
    } },
    click: { get: function() {
      return this.Bg;
    }, set: function(a) {
      var b = this.Bg;
      b !== a && (this.Bg = a, this.g("click", b, a));
    } },
    doubleClick: { get: function() {
      return this.Jg;
    }, set: function(a) {
      var b = this.Jg;
      b !== a && (this.Jg = a, this.g("doubleClick", b, a));
    } },
    contextClick: { get: function() {
      return this.Dg;
    }, set: function(a) {
      var b = this.Dg;
      b !== a && (this.Dg = a, this.g("contextClick", b, a));
    } },
    mouseOver: { get: function() {
      return this.bh;
    }, set: function(a) {
      var b = this.bh;
      b !== a && (this.bh = a, this.g("mouseOver", b, a));
    } },
    mouseHover: {
      get: function() {
        return this.$g;
      },
      set: function(a) {
        var b = this.$g;
        b !== a && (this.$g = a, this.g("mouseHover", b, a));
      }
    },
    mouseHold: { get: function() {
      return this.Zg;
    }, set: function(a) {
      var b = this.Zg;
      b !== a && (this.Zg = a, this.g("mouseHold", b, a));
    } },
    mouseDragOver: { get: function() {
      return this.fw;
    }, set: function(a) {
      var b = this.fw;
      b !== a && (this.fw = a, this.g("mouseDragOver", b, a));
    } },
    mouseDrop: { get: function() {
      return this.Xg;
    }, set: function(a) {
      var b = this.Xg;
      b !== a && (this.Xg = a, this.g("mouseDrop", b, a));
    } },
    handlesDragDropForTopLevelParts: { get: function() {
      return this.pv;
    }, set: function(a) {
      var b = this.pv;
      b !== a && (this.pv = a, this.g("handlesDragDropForTopLevelParts", b, a));
    } },
    mouseEnter: { get: function() {
      return this.Yg;
    }, set: function(a) {
      var b = this.Yg;
      b !== a && (this.Yg = a, this.g("mouseEnter", b, a));
    } },
    mouseLeave: { get: function() {
      return this.ah;
    }, set: function(a) {
      var b = this.ah;
      b !== a && (this.ah = a, this.g("mouseLeave", b, a));
    } },
    toolTip: { get: function() {
      return this.uh;
    }, set: function(a) {
      var b = this.uh;
      b !== a && (this.uh = a, this.g("toolTip", b, a));
    } },
    contextMenu: { get: function() {
      return this.Eg;
    }, set: function(a) {
      var b = this.Eg;
      b !== a && (this.Eg = a, this.g("contextMenu", b, a));
    } },
    commandHandler: { get: function() {
      return this.Gu;
    }, set: function(a) {
      this.Gu !== a && (this.Gu = a, a.Ne(this));
    } },
    toolManager: {
      get: function() {
        return this.gt;
      },
      set: function(a) {
        this.gt !== a && (this.gt = a, a.diagram = this);
      }
    },
    defaultTool: { get: function() {
      return this.$u;
    }, set: function(a) {
      var b = this.$u;
      b !== a && (this.$u = a, a.diagram = this, this.currentTool === b && (this.currentTool = a));
    } },
    currentTool: { get: function() {
      return this.Su;
    }, set: function(a) {
      var b = this.Su;
      b !== null && (b.isActive && b.doDeactivate(), b.cancelWaitAfter(), b.doStop());
      a === null && (a = this.defaultTool);
      a !== null && (this.Su = a, a.diagram = this, a.doStart());
    } },
    selection: { get: function() {
      return this.jx;
    } },
    maxSelectionCount: { get: function() {
      return this.Wv;
    }, set: function(a) {
      var b = this.Wv;
      if (b !== a)
        if (0 <= a && !isNaN(a)) {
          if (this.Wv = a, this.g("maxSelectionCount", b, a), !this.undoManager.isUndoingRedoing && (a = this.selection.count - a, 0 < a)) {
            this.S("ChangingSelection", this.selection);
            b = this.selection.ya();
            for (var c = 0; c < a; c++)
              b[c].isSelected = false;
            this.S("ChangedSelection", this.selection);
          }
        } else
          xa2(a, ">= 0", R2, "maxSelectionCount");
    } },
    nodeSelectionAdornmentTemplate: { get: function() {
      return this.tk;
    }, set: function(a) {
      var b = this.tk;
      b !== a && (this.tk = a, this.g("nodeSelectionAdornmentTemplate", b, a));
    } },
    groupSelectionAdornmentTemplate: { get: function() {
      return this.$i;
    }, set: function(a) {
      var b = this.$i;
      b !== a && (this.$i = a, this.g("groupSelectionAdornmentTemplate", b, a));
    } },
    linkSelectionAdornmentTemplate: {
      get: function() {
        return this.bj;
      },
      set: function(a) {
        var b = this.bj;
        b !== a && (this.bj = a, this.g("linkSelectionAdornmentTemplate", b, a));
      }
    },
    highlighteds: { get: function() {
      return this.Rw;
    } },
    isModified: { get: function() {
      var a = this.undoManager;
      return a.isEnabled ? a.currentTransaction !== null ? true : this.Tn && this.se !== a.historyIndex : this.Tn;
    }, set: function(a) {
      if (this.Tn !== a) {
        this.Tn = a;
        var b = this.undoManager;
        !a && b.isEnabled && (this.se = b.historyIndex);
        a || Oj2(this);
      }
    } },
    model: {
      get: function() {
        return this.dc;
      },
      set: function(a) {
        var b = this.dc;
        if (b !== a) {
          this.currentTool.doCancel();
          b !== null && b.undoManager !== a.undoManager && b.undoManager.isInTransaction && C2("Do not replace a Diagram.model while a transaction is in progress.");
          this.animationManager.rc(true);
          var c = Ci2(this, true);
          this.Uf = false;
          this.An = true;
          this.se = -2;
          this.kg = false;
          var d = this.qb;
          this.qb = true;
          hh2(this.animationManager, "Model");
          b !== null && (this.df !== null && this.df.each(function(a2) {
            b.rk(a2);
          }), b.rk(this.sw));
          this.dc = a;
          this.partManager = Pj2(this.dc.type);
          for (var e = 0; e < c.length; e++)
            this.add(c[e]);
          a.yh(this.rw);
          this.partManager.addAllModeledParts();
          a.rk(this.rw);
          a.yh(this.sw);
          this.df !== null && this.df.each(function(b2) {
            a.yh(b2);
          });
          this.qb = d;
          this.Qa();
          this.qb || this.N();
          b !== null && a.undoManager.copyProperties(b.undoManager);
        }
      }
    },
    Z: { get: function() {
      return this.qw;
    }, set: function(a) {
      this.qw = a;
    } },
    Hs: { get: function() {
      return this.Ky;
    } },
    skipsModelSourceBindings: {
      get: function() {
        return this.tw;
      },
      set: function(a) {
        this.tw = a;
      }
    },
    Ws: { get: function() {
      return this.pu;
    }, set: function(a) {
      this.pu = a;
    } },
    nodeTemplate: { get: function() {
      return this.j.H("");
    }, set: function(a) {
      var b = this.j.H("");
      b !== a && (this.j.add("", a), this.g("nodeTemplate", b, a), this.undoManager.isUndoingRedoing || this.Ld());
    } },
    nodeTemplateMap: { get: function() {
      return this.j;
    }, set: function(a) {
      var b = this.j;
      b !== a && (this.j = a, this.g("nodeTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.Ld());
    } },
    groupTemplate: { get: function() {
      return this.C.H("");
    }, set: function(a) {
      var b = this.C.H("");
      b !== a && (this.C.add("", a), this.g("groupTemplate", b, a), this.undoManager.isUndoingRedoing || this.Ld());
    } },
    groupTemplateMap: { get: function() {
      return this.C;
    }, set: function(a) {
      var b = this.C;
      b !== a && (this.C = a, this.g("groupTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.Ld());
    } },
    linkTemplate: {
      get: function() {
        return this.o.H("");
      },
      set: function(a) {
        var b = this.o.H("");
        b !== a && (this.o.add("", a), this.g("linkTemplate", b, a), this.undoManager.isUndoingRedoing || this.Ld());
      }
    },
    linkTemplateMap: { get: function() {
      return this.o;
    }, set: function(a) {
      var b = this.o;
      b !== a && (this.o = a, this.g("linkTemplateMap", b, a), this.undoManager.isUndoingRedoing || this.Ld());
    } },
    isMouseCaptured: { get: function() {
      return this.pw;
    }, set: function(a) {
      var b = this.Ca;
      b !== null && (b = b.La, b instanceof SVGElement || (a ? (this.lastInput.bubbles = false, this.removeEventListener(b, "pointermove", this.mk, false), this.removeEventListener(b, "pointerdown", this.lk, false), this.removeEventListener(b, "pointerup", this.pk, false), this.removeEventListener(b, "pointerout", this.nk, false), this.addEventListener(x2, "pointermove", this.mk, true), this.addEventListener(x2, "pointerdown", this.lk, true), this.addEventListener(x2, "pointerup", this.pk, true), this.addEventListener(x2, "pointerout", this.nk, true), this.removeEventListener(b, "wheel", this.ik, false), this.addEventListener(x2, "wheel", this.ik, true), this.addEventListener(x2, "selectstart", this.preventDefault, false)) : (this.removeEventListener(x2, "pointermove", this.mk, true), this.removeEventListener(x2, "pointerdown", this.lk, true), this.removeEventListener(x2, "pointerup", this.pk, true), this.removeEventListener(x2, "pointerout", this.nk, true), this.addEventListener(b, "pointermove", this.mk, false), this.addEventListener(b, "pointerdown", this.lk, false), this.addEventListener(b, "pointerup", this.pk, false), this.addEventListener(b, "pointerout", this.nk, false), this.removeEventListener(x2, "wheel", this.ik, true), this.removeEventListener(x2, "selectstart", this.preventDefault, false), this.addEventListener(b, "wheel", this.ik, false)), this.pw = a));
    } },
    position: { get: function() {
      return this.ja;
    }, set: function(a) {
      var b = K2.alloc().assign(this.ja);
      if (!b.A(a)) {
        var c = this.viewportBounds.copy();
        this.ja.assign(a);
        Kh2(this.animationManager, b, this.ja);
        this.qb || this.Ca === null && !this.Gp.u() ? Ei2(this) : (this.qb = true, a = this.scale, Qi2(this, this.Uq, this.ua / a, this.ta / a, this.Hk, false), this.qb = false);
        if (!this.qb)
          this.onViewportBoundsChanged(c, this.viewportBounds, this.sa, false);
      }
      K2.free(b);
    } },
    initialPosition: { get: function() {
      return this.uv;
    }, set: function(a) {
      this.uv.A(a) || (this.uv = a.I());
    } },
    initialScale: { get: function() {
      return this.wv;
    }, set: function(a) {
      this.wv !== a && (this.wv = a);
    } },
    grid: { get: function() {
      this.Wb === null && Ii2(this);
      return this.Wb;
    }, set: function(a) {
      var b = this.Wb;
      if (b !== a) {
        b === null && (Ii2(this), b = this.Wb);
        a.type !== X2.Grid && C2("Diagram.grid must be a Panel of type Panel.Grid");
        var c = b.panel;
        c !== null && c.remove(b);
        this.Wb = a;
        a.name = "GRID";
        c !== null && c.add(a);
        ej2(this);
        this.N();
        this.g("grid", b, a);
      }
    } },
    viewportBounds: { get: function() {
      return this.tx;
    } },
    viewSize: { get: function() {
      return this.Gp;
    }, set: function(a) {
      var b = this.viewSize;
      b.A(a) || (this.Gp = a = a.I(), this.ta = this.ua = 0, a.u() ? (this.ua = a.width, this.ta = a.height) : this.Ga !== null && (this.ua = this.Ga.clientWidth || 1, this.ta = this.Ga.clientHeight || 1), Ei2(this), this.Qa(), this.g("viewSize", b, a), this.redraw());
    } },
    fixedBounds: { get: function() {
      return this.ov;
    }, set: function(a) {
      var b = this.ov;
      b.A(a) || (a.width !== -Infinity && a.height !== Infinity && a.height !== -Infinity || C2("fixedBounds width/height must not be Infinity"), this.ov = a = a.I(), this.Qa(), this.g("fixedBounds", b, a));
    } },
    scrollMargin: { get: function() {
      return this.Hj;
    }, set: function(a) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.Hj;
      b.A(a) || (this.Hj = a = a.I(), this.g("scrollMargin", b, a), this.oq());
    } },
    scrollMode: { get: function() {
      return this.Ij;
    }, set: function(a) {
      var b = this.Ij;
      b !== a && (this.Ij = a, a === Oh2 && Oi2(this, false), this.g("scrollMode", b, a), this.N());
    } },
    scrollsPageOnFocus: { get: function() {
      return this.ft;
    }, set: function(a) {
      var b = this.ft;
      b !== a && (this.ft = a, this.g("scrollsPageOnFocus", b, a));
    } },
    positionComputation: { get: function() {
      return this.bt;
    }, set: function(a) {
      var b = this.bt;
      b !== a && (this.bt = a, Oi2(this, false), this.g("positionComputation", b, a));
    } },
    scaleComputation: { get: function() {
      return this.ct;
    }, set: function(a) {
      var b = this.ct;
      b !== a && (this.ct = a, Mj2(this, this.scale, this.scale), this.g("scaleComputation", b, a));
    } },
    documentBounds: { get: function() {
      return this.Uq;
    } },
    isVirtualized: { get: function() {
      return this.Dv;
    }, set: function(a) {
      var b = this.Dv;
      b !== a && (this.Dv = a, this.g("isVirtualized", b, a));
    } },
    scale: {
      get: function() {
        return this.sa;
      },
      set: function(a) {
        var b = this.sa;
        b !== a && Mj2(this, b, a);
      }
    },
    defaultScale: { get: function() {
      return this.Sq;
    }, set: function(a) {
      this.Sq = a;
    } },
    autoScale: { get: function() {
      return this.Ph;
    }, set: function(a) {
      var b = this.Ph;
      b !== a && (this.Ph = a, this.g("autoScale", b, a), a !== nh2 && Oi2(this, false));
    } },
    initialAutoScale: { get: function() {
      return this.Rg;
    }, set: function(a) {
      var b = this.Rg;
      b !== a && (this.Rg = a, this.g("initialAutoScale", b, a));
    } },
    initialViewportSpot: {
      get: function() {
        return this.zv;
      },
      set: function(a) {
        var b = this.zv;
        b !== a && (a.hb() || C2("initialViewportSpot must be a specific Spot: " + a), this.zv = a, this.g("initialViewportSpot", b, a));
      }
    },
    initialDocumentSpot: { get: function() {
      return this.qv;
    }, set: function(a) {
      var b = this.qv;
      b !== a && (a.hb() || C2("initialViewportSpot must be a specific Spot: " + a), this.qv = a, this.g("initialDocumentSpot", b, a));
    } },
    minScale: { get: function() {
      return this.$v;
    }, set: function(a) {
      var b = this.$v;
      b !== a && (0 < a ? (this.$v = a, this.g("minScale", b, a), a > this.scale && (this.scale = a)) : xa2(a, "> 0", R2, "minScale"));
    } },
    maxScale: { get: function() {
      return this.Lv;
    }, set: function(a) {
      var b = this.Lv;
      b !== a && (0 < a ? (this.Lv = a, this.g("maxScale", b, a), a < this.scale && (this.scale = a)) : xa2(a, "> 0", R2, "maxScale"));
    } },
    zoomPoint: { get: function() {
      return this.lt;
    }, set: function(a) {
      this.lt.A(a) || (this.lt = a = a.I());
    } },
    contentAlignment: {
      get: function() {
        return this.Hk;
      },
      set: function(a) {
        var b = this.Hk;
        b.A(a) || (this.Hk = a = a.I(), this.g("contentAlignment", b, a), Oi2(this, false));
      }
    },
    initialContentAlignment: { get: function() {
      return this.ir;
    }, set: function(a) {
      var b = this.ir;
      b.A(a) || (this.ir = a = a.I(), this.g("initialContentAlignment", b, a));
    } },
    padding: { get: function() {
      return this.nb;
    }, set: function(a) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.nb;
      b.A(a) || (this.nb = a = a.I(), this.Qa(), this.g("padding", b, a));
    } },
    partManager: {
      get: function() {
        return this.at;
      },
      set: function(a) {
        var b = this.at;
        b !== a && (a.diagram !== null && C2("Cannot share PartManagers between Diagrams: " + a.toString()), b !== null && b.Ne(null), this.at = a, a.Ne(this));
      }
    },
    nodes: { get: function() {
      return this.partManager.nodes.iterator;
    } },
    links: { get: function() {
      return this.partManager.links.iterator;
    } },
    parts: { get: function() {
      return this.partManager.parts.iterator;
    } },
    layout: {
      get: function() {
        return this.uc;
      },
      set: function(a) {
        var b = this.uc;
        b !== a && (this.uc = a, a.diagram = this, a.group = null, this.Oh = true, this.g("layout", b, a), this.Gb());
      }
    },
    isTreePathToChildren: { get: function() {
      return this.Av;
    }, set: function(a) {
      var b = this.Av;
      if (b !== a && (this.Av = a, this.g("isTreePathToChildren", b, a), !this.undoManager.isUndoingRedoing))
        for (a = this.nodes; a.next(); )
          wk2(a.value);
    } },
    treeCollapsePolicy: { get: function() {
      return this.it;
    }, set: function(a) {
      var b = this.it;
      b !== a && (a !== ri2 && a !== xk2 && a !== yk && C2("Unknown Diagram.treeCollapsePolicy: " + a), this.it = a, this.g("treeCollapsePolicy", b, a));
    } },
    Ke: { get: function() {
      return this.ow;
    }, set: function(a) {
      this.ow = a;
    } },
    autoScrollInterval: { get: function() {
      return this.Cq;
    }, set: function(a) {
      var b = this.Cq;
      b !== a && (this.Cq = a, this.g("autoScrollInterval", b, a));
    } },
    autoScrollRegion: { get: function() {
      return this.Eq;
    }, set: function(a) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.Eq;
      b.A(a) || (this.Eq = a = a.I(), this.Qa(), this.g("autoScrollRegion", b, a));
    } }
  });
  na2.Object.defineProperties(R2, { licenseKey: { get: function() {
    return zk.$b();
  }, set: function(a) {
    zk.add(a);
  } }, version: { get: function() {
    return Ak;
  } } });
  R2.prototype.makeImageData = R2.prototype.ky;
  R2.prototype.makeImage = R2.prototype.sA;
  R2.prototype.cacheGroupExternalLinks = R2.prototype.Hu;
  R2.prototype.addRenderer = R2.prototype.cz;
  R2.prototype.makeSVG = R2.prototype.sv;
  R2.prototype.makeSvg = R2.prototype.Js;
  R2.prototype.stopAutoScroll = R2.prototype.ug;
  R2.prototype.doAutoScroll = R2.prototype.ns;
  R2.prototype.isUnoccupied = R2.prototype.fk;
  R2.prototype.raiseDiagramEvent = R2.prototype.S;
  R2.prototype.removeDiagramListener = R2.prototype.mm;
  R2.prototype.addDiagramListener = R2.prototype.Nj;
  R2.prototype.findTreeRoots = R2.prototype.Wz;
  R2.prototype.layoutDiagram = R2.prototype.qA;
  R2.prototype.findTopLevelGroups = R2.prototype.Pz;
  R2.prototype.findTopLevelNodesAndLinks = R2.prototype.Qz;
  R2.prototype.ensureBounds = R2.prototype.Ta;
  R2.prototype.findLinksByExample = R2.prototype.qs;
  R2.prototype.findNodesByExample = R2.prototype.rs;
  R2.prototype.findLinkForData = R2.prototype.zc;
  R2.prototype.findNodeForData = R2.prototype.Gi;
  R2.prototype.findPartForData = R2.prototype.Ac;
  R2.prototype.findLinkForKey = R2.prototype.findLinkForKey;
  R2.prototype.findNodeForKey = R2.prototype.Fb;
  R2.prototype.findPartForKey = R2.prototype.findPartForKey;
  R2.prototype.rebuildParts = R2.prototype.Ld;
  R2.prototype.transformViewToDoc = R2.prototype.Ys;
  R2.prototype.transformRectDocToView = R2.prototype.WA;
  R2.prototype.transformDocToView = R2.prototype.wq;
  R2.prototype.centerRect = R2.prototype.ls;
  R2.prototype.scrollToRect = R2.prototype.Nv;
  R2.prototype.scroll = R2.prototype.scroll;
  R2.prototype.highlightCollection = R2.prototype.hA;
  R2.prototype.highlight = R2.prototype.gA;
  R2.prototype.selectCollection = R2.prototype.NA;
  R2.prototype.select = R2.prototype.select;
  R2.prototype.updateAllRelationshipsFromData = R2.prototype.zq;
  R2.prototype.updateAllTargetBindings = R2.prototype.updateAllTargetBindings;
  R2.prototype.commit = R2.prototype.commit;
  R2.prototype.rollbackTransaction = R2.prototype.Hf;
  R2.prototype.commitTransaction = R2.prototype.Xa;
  R2.prototype.startTransaction = R2.prototype.xa;
  R2.prototype.raiseChanged = R2.prototype.g;
  R2.prototype.raiseChangedEvent = R2.prototype.Wa;
  R2.prototype.removeChangedListener = R2.prototype.rk;
  R2.prototype.addChangedListener = R2.prototype.yh;
  R2.prototype.removeModelChangedListener = R2.prototype.IA;
  R2.prototype.addModelChangedListener = R2.prototype.zx;
  R2.prototype.findLayer = R2.prototype.Zj;
  R2.prototype.removeLayer = R2.prototype.GA;
  R2.prototype.addLayerAfter = R2.prototype.Zy;
  R2.prototype.addLayerBefore = R2.prototype.xx;
  R2.prototype.addLayer = R2.prototype.Ul;
  R2.prototype.moveParts = R2.prototype.moveParts;
  R2.prototype.copyParts = R2.prototype.Vj;
  R2.prototype.removeParts = R2.prototype.Qs;
  R2.prototype.remove = R2.prototype.remove;
  R2.prototype.add = R2.prototype.add;
  R2.prototype.clearDelayedGeometries = R2.prototype.Iu;
  R2.prototype.setProperties = R2.prototype.zm;
  R2.prototype.attach = R2.prototype.Eu;
  R2.prototype.set = R2.prototype.set;
  R2.prototype.resetInputOptions = R2.prototype.vy;
  R2.prototype.setInputOption = R2.prototype.OA;
  R2.prototype.getInputOption = R2.prototype.cm;
  R2.prototype.resetRenderingHints = R2.prototype.wy;
  R2.prototype.setRenderingHint = R2.prototype.Ay;
  R2.prototype.getRenderingHint = R2.prototype.Ie;
  R2.prototype.maybeUpdate = R2.prototype.gd;
  R2.prototype.requestUpdate = R2.prototype.Gb;
  R2.prototype.delayInitialization = R2.prototype.uz;
  R2.prototype.isUpdateRequested = R2.prototype.mA;
  R2.prototype.invalidateDocumentBounds = R2.prototype.Qa;
  R2.prototype.findObjectsNear = R2.prototype.qg;
  R2.prototype.findPartsNear = R2.prototype.Lz;
  R2.prototype.findObjectsIn = R2.prototype.zf;
  R2.prototype.findPartsIn = R2.prototype.Tx;
  R2.prototype.findObjectsAt = R2.prototype.Hi;
  R2.prototype.findPartsAt = R2.prototype.Kz;
  R2.prototype.findObjectAt = R2.prototype.Zb;
  R2.prototype.findPartAt = R2.prototype.am;
  R2.prototype.focusObject = R2.prototype.Xz;
  R2.prototype.alignDocument = R2.prototype.ez;
  R2.prototype.zoomToRect = R2.prototype.$A;
  R2.prototype.zoomToFit = R2.prototype.zoomToFit;
  R2.prototype.diagramScroll = R2.prototype.Kx;
  R2.prototype.focus = R2.prototype.focus;
  var ve2 = null, ii2 = new H2(), Gi2 = null, Fi2 = null, Kg2 = x2.document !== void 0, ui2 = null, Bi2 = "", nh2 = new D2(R2, "None", 0), Ti2 = new D2(R2, "Uniform", 1), Ui2 = new D2(R2, "UniformToFill", 2), Cf2 = new D2(R2, "CycleAll", 10), Gf2 = new D2(R2, "CycleNotDirected", 11), If2 = new D2(R2, "CycleNotDirectedFast", 12), Jf2 = new D2(R2, "CycleNotUndirected", 13), Df2 = new D2(R2, "CycleDestinationTree", 14), Ff2 = new D2(R2, "CycleSourceTree", 15), Oh2 = new D2(R2, "DocumentScroll", 1), Qh2 = new D2(R2, "InfiniteScroll", 2), ri2 = new D2(R2, "TreeParentCollapsed", 21), xk2 = new D2(R2, "AllParentsCollapsed", 22), yk = new D2(R2, "AnyParentsCollapsed", 23), zk = new F2(), Ak = "2.2.5", uk2 = "image", Bk = null, gi2 = false;
  function hi2() {
    if (Kg2) {
      var a = x2.document.createElement("canvas"), b = a.getContext("2d"), c = Qa2("7ca11abfd022028846");
      b[c] = Qa2("398c3597c01238");
      for (var d = ["5da73c80a36455d6038e4972187c3cae51fd22", sa2.Dx + "4ae6247590da4bb21c324ba3a84e385776", od2.xF + "fb236cdfda5de14c134ba1a95a2d4c7cc6f93c1387", M2.za], e = 1; 5 > e; e++)
        Qa2(d[e - 1]);
      b[c] = Qa2("39f046ebb36e4b");
      for (c = 1; 5 > c; c++)
        Qa2(d[c - 1]);
      if (d.length !== 4 || d[0][0] !== "5" || d[3][0] !== "7")
        od2.prototype.Hd = od2.prototype.Cx;
      Bk = a;
    }
  }
  R2.className = "Diagram";
  R2.fromDiv = function(a) {
    var b = a;
    typeof a === "string" && (b = x2.document.getElementById(a));
    return b instanceof HTMLDivElement && b.D instanceof R2 ? b.D : null;
  };
  R2.inherit = function(a, b) {
    function c() {
    }
    if (Object.getPrototypeOf(a).prototype)
      throw Error("Used go.Diagram.inherit defining already defined class \n" + a);
    c.prototype = b.prototype;
    a.prototype = new c();
    a.prototype.constructor = a;
  };
  R2.useDOM = function(a) {
    Kg2 = a ? x2.document !== void 0 : false;
  };
  R2.isUsingDOM = function() {
    return Kg2;
  };
  R2.None = nh2;
  R2.Uniform = Ti2;
  R2.UniformToFill = Ui2;
  R2.CycleAll = Cf2;
  R2.CycleNotDirected = Gf2;
  R2.CycleNotDirectedFast = If2;
  R2.CycleNotUndirected = Jf2;
  R2.CycleDestinationTree = Df2;
  R2.CycleSourceTree = Ff2;
  R2.DocumentScroll = Oh2;
  R2.InfiniteScroll = Qh2;
  R2.TreeParentCollapsed = ri2;
  R2.AllParentsCollapsed = xk2;
  R2.AnyParentsCollapsed = yk;
  function oi2() {
    this.Uy = null;
    this.j = "zz@orderNum";
    this._tk === "63ad05bbe23a1786468a4c741b6d2" ? this.kd = this.j = true : this.kd = null;
  }
  function nj2(a, b) {
    b.Ab.setTransform(b.ec, 0, 0, b.ec, 0, 0);
    b.Ab.Ed();
    if (a.kd === null)
      a: {
        b = "f";
        var c = x2[Qa2("76a715b2f73f148a")][Qa2("72ba13b5")];
        a.kd = true;
        if (Kg2) {
          var d = R2[Qa2("76a115b6ed251eaf4692")];
          if (d)
            for (var e = zk.iterator; e.next(); ) {
              d = e.value;
              d = Qa2(d).split(Qa2("39e9"));
              if (6 > d.length)
                break;
              var f2 = Qa2(d[1]).split(".");
              if (d[4] !== "7da71ca0")
                break;
              var g2 = Qa2(sa2[Qa2("6cae19")]).split(".");
              if (f2[0] > g2[0] || f2[0] === g2[0] && f2[1] >= g2[1]) {
                var h = x2[Qa2("74a900bae4370f8b51")][Qa2("6fbb13a1c2311e8a57")].toLowerCase();
                g2 = h[Qa2("73a612b6fb191d")](Qa2("3aad1ab6e022098b4dc4"));
                f2 = Qa2(d[2]);
                if (-1 < g2 && (h = h[Qa2("73a612b6fb191d")](f2.toLowerCase() + "/"), a.kd = !(-1 < h && h < g2), !a.kd))
                  break;
                g2 = c[Qa2("76ad18b4f73e")];
                for (h = c[Qa2("73a612b6fb191d")](Qa2("35e7")) + 2; h < g2; h++)
                  b += c[h];
                g2 = b[Qa2("73a612b6fb191d")](f2);
                0 > g2 && f2 !== Qa2("7da71ca0ad381e90") && (g2 = b[Qa2("73a612b6fb191d")](Qa2("76a715b2ef3e149757")));
                0 > g2 && (g2 = b[Qa2("73a612b6fb191d")](Qa2("76a715b2ef3e149757")));
                0 > g2 && (g2 = c[Qa2("73a612b6fb191d")](Qa2("7baa19a6f76c1988428554")));
                a.kd = !(0 <= g2 && g2 < b[Qa2("73a612b6fb191d")](Qa2("35")) || b[Qa2("73a612b6fb191d")](Qa2("35")) === -1);
                if (!a.kd)
                  break;
                if (c[Qa2("73a612b6fb191d")](Qa2("7fb002b6ed25128b4da25b2e")) && c[Qa2("73a612b6fb191d")](Qa2("75ba1beee63a1e875799507d")) && (a.kd = !(-1 < c[Qa2("73a612b6fb191d")](f2)), !a.kd))
                  break;
                if (f2[0] === "#") {
                  g2 = x2.document.createElement("div");
                  for (h = d[0].replace(/[A-Za-z]/g, ""); 4 > h.length; )
                    h += "9";
                  h = h.substr(h.length - 4);
                  d = "";
                  d += ["gsh", "gsf"][parseInt(h.substr(0, 1), 10) % 2];
                  d += ["Header", "Background", "Display", "Feedback"][parseInt(h.substr(0, 1), 10) % 4];
                  g2[Qa2("79a417a0f0181a8946")] = d;
                  if (x2.document[Qa2("78a712aa")]) {
                    if (x2.document[Qa2("78a712aa")][Qa2("7bb806b6ed32388c4a875b")](g2), h = x2.getComputedStyle(g2).getPropertyValue(Qa2("78a704b7e62456904c9b12701b6532a8")), x2.document[Qa2("78a712aa")][Qa2("68ad1bbcf533388c4a875b")](g2), h) {
                      if (g2 = x2[Qa2("77a902b0eb1b1e804a8a")], h.indexOf(parseInt(f2[1] + f2[2], 16)) !== -1 && h.indexOf(parseInt(f2[3] + f2[4], 16)) !== -1) {
                        a.kd = false;
                        break;
                      } else if (g2 && g2(Qa2("32ae19a1e0331fc94084537c067a67fa59f1386b89d006")).matches)
                        for (d = "." + d, f2 = 0; f2 < document.styleSheets.length; f2++) {
                          g2 = document.styleSheets[f2].rules || document.styleSheets[f2].cssRules;
                          for (var k in g2)
                            if (d === g2[k].selectorText) {
                              a.kd = false;
                              break a;
                            }
                        }
                    }
                  } else
                    a.kd = null, a.kd = false;
                }
              }
            }
          else {
            k = c[Qa2("76ad18b4f73e")];
            for (e = c[Qa2("73a612b6fb191d")](Qa2("35e7")) + 2; e < k; e++)
              b += c[e];
            c = b[Qa2("73a612b6fb191d")](Qa2("7da71ca0ad381e90"));
            a.kd = !(0 <= c && c < b[Qa2("73a612b6fb191d")](Qa2("35")));
          }
        }
      }
    return 0 < a.kd && a !== a.Uy ? true : false;
  }
  function pi2(a, b) {
    if (Kg2) {
      b !== void 0 && b !== null || C2("Diagram setup requires an argument DIV.");
      a.Ga !== null && C2("Diagram has already completed setup.");
      typeof b === "string" ? a.Ga = x2.document.getElementById(b) : b instanceof HTMLDivElement ? a.Ga = b : C2("No DIV or DIV id supplied: " + b);
      a.Ga === null && C2("Invalid DIV id; could not get element with id: " + b);
      a.Ga.D !== void 0 && C2("Invalid div id; div already has a Diagram associated with it.");
      if (!a.zl && x2.ResizeObserver) {
        var c = ta2(function() {
          a.Gb();
        }, 250);
        a.zl = new x2.ResizeObserver(function() {
          c();
        });
        a.zl.observe(a.Ga);
      }
      x2.getComputedStyle(a.Ga, null).position === "static" && (a.Ga.style.position = "relative");
      b = 5;
      var d = "rgba(2" + b + "5, 255, 255, 0)";
      b--;
      a.Ga.style["-webkit-tap-highlight-color"] = d;
      a.Ga.innerHTML = "";
      a.Ga.D = a;
      a.Ga.goDiagram = a;
      a.Ga.go = x2.go;
      var e = a.$r ? new sj2(a) : new vk2(a);
      e.style !== void 0 && (e.style.position = "absolute", e.style.top = "0px", e.style.left = "0px", x2.getComputedStyle(a.Ga, null).getPropertyValue("direction") === "rtl" && (a.Vn = true), e.style.zIndex = "2", e.style.userSelect = "none", e.style.MozUserSelect = "none", e.style.touchAction = "none");
      a.Ca = e;
      a.Ab = e.context;
      d = a.Ab;
      a.ec = a.computePixelRatio();
      a.viewSize.u() || (a.ua = a.Ga.clientWidth || 1, a.ta = a.Ga.clientHeight || 1);
      uj2(a, a.ua, a.ta);
      a.Ga.insertBefore(e.La, a.Ga.firstChild);
      e = new vk2(null);
      e.width = 1;
      e.height = 1;
      a.Ht = e;
      a.Mw = e.context;
      if (Kg2) {
        e = va("div");
        var f2 = va("div");
        e.style.position = "absolute";
        e.style.overflow = "auto";
        e.style.width = a.ua + "px";
        e.style.height = a.ta + "px";
        e.style.zIndex = "1";
        f2.style.position = "absolute";
        f2.style.width = "1px";
        f2.style.height = "1px";
        a.Ga.appendChild(e);
        e.appendChild(f2);
        e.onscroll = Ji2;
        e.addEventListener("pointerdown", Li2);
        e.D = a;
        e.Sy = true;
        e.Ty = true;
        a.Or = e;
        a.gp = f2;
      }
      a.oq = ta2(function() {
        a.si = null;
        a.N();
      }, 300);
      a.gw = ta2(function() {
        Ah2(a);
      }, 250);
      a.preventDefault = function(a2) {
        a2.preventDefault();
        return false;
      };
      a.ik = function(b2) {
        if (a.isEnabled) {
          var c2 = Yi2(a, b2, true);
          c2.bubbles = true;
          var d2 = 0, e2 = 0;
          c2.delta = 0;
          b2.deltaX !== void 0 ? (b2.deltaX !== 0 && (d2 = 0 < b2.deltaX ? 1 : -1), b2.deltaY !== 0 && (e2 = 0 < b2.deltaY ? 1 : -1), c2.delta = Math.abs(b2.deltaX) > Math.abs(b2.deltaY) ? -d2 : -e2) : b2.wheelDeltaX !== void 0 ? (b2.wheelDeltaX !== 0 && (d2 = 0 < b2.wheelDeltaX ? -1 : 1), b2.wheelDeltaY !== 0 && (e2 = 0 < b2.wheelDeltaY ? -1 : 1), c2.delta = Math.abs(b2.wheelDeltaX) > Math.abs(b2.wheelDeltaY) ? -d2 : -e2) : b2.wheelDelta !== void 0 && b2.wheelDelta !== 0 && (c2.delta = 0 < b2.wheelDelta ? 1 : -1);
          a.doMouseWheel();
          bj2(c2, b2);
        }
      };
      a.xA = function(b2) {
        a.isEnabled && (a.el = false, Yi2(a, b2, true), b2 = a.currentTool, b2.cancelWaitAfter(), b2.standardMouseOver());
      };
      a.lk = function(b2) {
        if (a.isEnabled) {
          a.el = true;
          var c2 = a.fu;
          c2[b2.pointerId] === void 0 && (c2[b2.pointerId] = b2);
          c2 = a.wl;
          var d2 = false;
          if (c2[0] !== null && c2[0].pointerId === b2.pointerId)
            c2[0] = b2;
          else if (c2[1] !== null && c2[1].pointerId === b2.pointerId)
            c2[1] = b2, d2 = true;
          else if (c2[0] === null)
            c2[0] = b2;
          else if (c2[1] === null)
            c2[1] = b2, d2 = true;
          else {
            b2.preventDefault();
            return;
          }
          if (c2 = b2.pointerType === "touch" || b2.pointerType === "pen")
            a.ru = false, a.Vt = true;
          var e2 = d2;
          d2 = aj2(a, b2, true, false, true, e2);
          Zi2(a, b2, d2);
          d2.targetDiagram = $i2(b2, b2.target);
          d2.targetObject = null;
          e2 || d2.clone(a.cr);
          e2 = a.Vw;
          c2 = c2 ? 25 : 10;
          b2.timeStamp - a.Uw < a.Xy && !(Math.abs(e2.x - b2.screenX) > c2 || Math.abs(e2.y - b2.screenY) > c2) ? a.sr++ : a.sr = 1;
          d2.clickCount = a.sr;
          a.Uw = b2.timeStamp;
          a.Vw.tg(b2.screenX, b2.screenY);
          a.doMouseDown();
          b2.button === 1 ? b2.preventDefault() : bj2(d2, b2);
        }
      };
      a.mk = function(b2) {
        if (a.isEnabled) {
          a.el = true;
          var c2 = a.wl;
          if (c2[0] !== null && c2[0].pointerId === b2.pointerId)
            c2[0] = b2;
          else {
            if (c2[1] !== null && c2[1].pointerId === b2.pointerId) {
              c2[1] = b2;
              return;
            }
            if (c2[0] === null)
              c2[0] = b2;
            else
              return;
          }
          if (c2[0].pointerId === b2.pointerId) {
            c2 = aj2(a, b2, false, false, false, c2[1] !== null);
            var d2 = x2.document.elementFromPoint(b2.clientX, b2.clientY);
            d2 !== null && d2.shadowRoot !== void 0 && d2.shadowRoot !== null && (d2 = d2.shadowRoot.elementFromPoint(b2.clientX, b2.clientY));
            var e2 = a, f3 = b2;
            d2 && d2.D && (f3 = b2, e2 = d2.D);
            c2.targetDiagram = e2;
            Zi2(a, f3, c2);
            c2.targetObject = null;
            a.doMouseMove();
            bj2(c2, b2);
          }
        }
      };
      a.pk = function(b2) {
        if (a.isEnabled) {
          a.el = true;
          var c2 = b2.pointerType === "touch" || b2.pointerType === "pen", d2 = a.fu;
          if (c2 && a.ru)
            delete d2[b2.pointerId], b2.preventDefault();
          else if (d2 = a.wl, d2[0] !== null && d2[0].pointerId === b2.pointerId) {
            d2[0] = null;
            d2 = aj2(a, b2, false, true, true, false);
            var e2 = x2.document.elementFromPoint(b2.clientX, b2.clientY);
            e2 !== null && e2.shadowRoot !== void 0 && e2.shadowRoot !== null && (e2 = e2.shadowRoot.elementFromPoint(b2.clientX, b2.clientY));
            e2 !== null && e2.D instanceof R2 && e2.D !== a && Zi2(e2.D, b2, d2);
            e2 === null && (e2 = b2.target);
            Zi2(a, b2, d2);
            d2.clickCount = a.sr;
            d2.targetDiagram = $i2(b2, e2);
            d2.targetObject = null;
            a.doMouseUp();
            bj2(d2, b2);
            c2 && (a.Vt = false);
          } else
            d2[1] !== null && d2[1].pointerId === b2.pointerId && (d2[1] = null);
        }
      };
      a.nk = function(b2) {
        if (a.isEnabled) {
          a.el = false;
          var c2 = a.fu;
          c2[b2.pointerId] && delete c2[b2.pointerId];
          c2 = a.wl;
          c2[0] !== null && c2[0].pointerId === b2.pointerId && (c2[0] = null);
          c2[1] !== null && c2[1].pointerId === b2.pointerId && (c2[1] = null);
          b2.pointerType !== "touch" && b2.pointerType !== "pen" && (b2 = a.currentTool, b2.cancelWaitAfter(), b2.standardMouseOver());
        }
      };
      a.Wq = d.Y["d" + Ck[1] + Ck[2] + "wI" + uk2.slice(1, 5)]["b" + Dk.slice(1, b)](d.Y, Bk, b, b);
      d.Hc(true);
      Hi2(a);
    }
  }
  oi2.className = "DiagramHelper";
  function Te2(a) {
    this.j = a === void 0 ? new K2() : a;
    this.o = new K2();
  }
  na2.Object.defineProperties(Te2.prototype, { point: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } }, shifted: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } } });
  var Ck = "DraggingInfo";
  Te2.className = "DraggingInfo";
  function Fj2(a, b, c) {
    this.node = a;
    this.info = b;
    this.dv = c;
  }
  Fj2.className = "DraggingNodeInfoPair";
  function Me2() {
    this.reset();
  }
  Me2.prototype.reset = function() {
    this.isGridSnapEnabled = false;
    this.isGridSnapRealtime = true;
    this.gridSnapCellSize = new Gb2(NaN, NaN).freeze();
    this.gridSnapCellSpot = uc2;
    this.gridSnapOrigin = new K2(NaN, NaN).freeze();
    this.groupsSnapMembers = this.dragsTree = this.dragsLink = false;
    this.dragsMembers = this.groupsAlwaysMove = true;
  };
  Me2.className = "DraggingOptions";
  function Ek(a, b) {
    if (typeof a === "string" || x2.Element && a instanceof Element)
      var c = R2.call(this, a) || this;
    else
      c = R2.call(this) || this, b = a;
    Fk(c);
    b && c.zm(b);
    return c;
  }
  ma2(Ek, R2);
  function Fk(a) {
    a.allowDragOut = true;
    a.allowMove = false;
    a.isReadOnly = true;
    a.contentAlignment = vc2;
    a.layout = new Gk();
  }
  Ek.prototype.reset = function() {
    R2.prototype.reset.call(this);
    Fk(this);
  };
  Ek.className = "Palette";
  function Hk(a, b) {
    if (typeof a === "string" || x2.Element && a instanceof Element)
      var c = R2.call(this, a) || this;
    else
      c = R2.call(this) || this, b = a;
    var d = c;
    c.animationManager.isEnabled = false;
    c.qb = true;
    c.kw = null;
    c.Nn = false;
    c.On = false;
    c.nv = true;
    c.gv = true;
    c.jt = 0;
    c.aj = false;
    c.Gl = null;
    c.Ay("drawShadows", false);
    a = new V2();
    var e = new xf2();
    e.stroke = "magenta";
    e.strokeWidth = 2;
    e.fill = "transparent";
    e.name = "BOXSHAPE";
    a.selectable = true;
    a.selectionAdorned = false;
    a.selectionObjectName = "BOXSHAPE";
    a.locationObjectName = "BOXSHAPE";
    a.resizeObjectName = "BOXSHAPE";
    a.cursor = "move";
    a.add(e);
    c.Yi = a;
    c.allowCopy = false;
    c.allowDelete = false;
    c.allowSelect = true;
    c.autoScrollRegion = new lc2(0, 0, 0, 0);
    c.ja.h(0, 0);
    c.toolManager.Za("Dragging", new Ik(), c.toolManager.mouseMoveTools);
    c.click = function() {
      var a2 = d.observed;
      if (a2 !== null) {
        var b2 = a2.viewportBounds, c2 = d.lastInput.documentPoint;
        a2.position = new K2(c2.x - b2.width / 2, c2.y - b2.height / 2);
      }
    };
    c.xw = function() {
      d.Qa();
      Jk(d);
    };
    c.ww = function() {
      d.observed !== null && (d.Qa(), d.N());
    };
    c.mt = function() {
      1 > d.updateDelay ? d.N() : d.aj || (d.aj = true, setTimeout(function() {
        return d.redraw();
      }, d.updateDelay));
    };
    c.vw = function() {
      d.observed !== null && Jk(d);
    };
    c.autoScale = Ti2;
    c.qb = false;
    b && Object.assign(c, b);
    return c;
  }
  ma2(Hk, R2);
  Hk.prototype.computePixelRatio = function() {
    return 1;
  };
  Hk.prototype.redraw = function() {
    if (this.aj && 1 <= this.updateDelay) {
      this.aj = false;
      var a = this.Ca, b = this.Ab;
      if (a !== null && b !== null) {
        lj2(this);
        if (this.Gl === null) {
          var c = new vk2(null);
          c.width = a.width;
          c.height = a.height;
          this.Gl = c;
        }
        try {
          this.Ca = this.Gl, this.Ab = this.Ca.context, this.Ab.Hc(true), this.Ab.setTransform(1, 0, 0, 1, 0, 0), this.Ab.clearRect(0, 0, this.Ca.width, this.Ca.height), Kk(this);
        } finally {
          this.Ca = a, this.Ab = b;
        }
      }
    }
    R2.prototype.redraw.call(this);
  };
  Hk.prototype.pc = function() {
    this.Ga === null && C2("No div specified");
    this.Ca === null && C2("No canvas specified");
    if (!(this.Ca instanceof sj2) && (bi2(this.box), this.Vc)) {
      var a = this.observed;
      if (a !== null && !a.animationManager.defaultAnimation.isAnimating && a.Oi) {
        lj2(this);
        var b = this.Ca;
        a = this.Ab;
        a.Hc(true);
        a.setTransform(1, 0, 0, 1, 0, 0);
        a.clearRect(0, 0, b.width, b.height);
        1 > this.updateDelay ? Kk(this) : this.Gl !== null && (a.drawImage(this.Gl.La, 0, 0), b = this.vb, b.reset(), this.scale !== 1 && b.scale(this.scale), this.position.x === 0 && this.position.y === 0 || b.translate(-this.position.x, -this.position.y), a.scale(this.ec, this.ec), a.transform(b.m11, b.m12, b.m21, b.m22, b.dx, b.dy));
        b = this.Oa.m;
        for (var c = b.length, d = 0; d < c; d++)
          b[d].pc(a, this);
        this.Vc = this.nj = false;
      }
    }
  };
  function Kk(a) {
    var b = a.observed;
    if (b !== null) {
      var c = a.drawsTemporaryLayers, d = a.drawsGrid && c, e = b.grid;
      d && e !== null && e.visible && !isNaN(e.width) && !isNaN(e.height) && (e = N2.alloc().assign(a.viewportBounds).Qc(b.viewportBounds), ej2(b, e), N2.free(e), ih2(b));
      var f2 = a.vb;
      f2.reset();
      a.scale !== 1 && f2.scale(a.scale);
      a.position.x === 0 && a.position.y === 0 || f2.translate(-a.position.x, -a.position.y);
      e = a.Ab;
      e.scale(a.ec, a.ec);
      e.transform(f2.m11, f2.m12, f2.m21, f2.m22, f2.dx, f2.dy);
      b = b.Oa.m;
      f2 = b.length;
      for (var g2 = 0; g2 < f2; g2++) {
        var h = b[g2], k = a;
        if (h.visible && h.opacity !== 0) {
          var l2 = h.diagram.grid.part;
          if (!c && h.isTemporary)
            d && l2.layer === h && (h = ci2(h, e), l2.pc(e, k), e.globalAlpha = h);
          else {
            for (var m2 = ci2(h, e), n2 = k.scale, p2 = N2.alloc(), r2 = h.Ha.m, q2 = r2.length, u2 = 0; u2 < q2; u2++) {
              var w = r2[u2];
              (d || w !== l2) && h.Di(e, w, k, null, n2, p2, false);
            }
            N2.free(p2);
            e.globalAlpha = m2;
          }
        }
      }
    }
  }
  function Jk(a) {
    var b = a.box;
    if (b !== null) {
      var c = a.observed;
      if (c !== null) {
        a.Vc = true;
        c = c.viewportBounds;
        var d = b.selectionObject, e = Gb2.alloc();
        e.h(c.width, c.height);
        d.desiredSize = e;
        Gb2.free(e);
        a = 2 / a.scale;
        d instanceof xf2 && (d.strokeWidth = a);
        b.location = new K2(c.x - a / 2, c.y - a / 2);
        b.isSelected = true;
      }
    }
  }
  Hk.prototype.computeBounds = function() {
    var a = this.observed;
    if (a === null)
      return hc2;
    var b = a.documentBounds.copy();
    b.Qc(a.viewportBounds);
    return b;
  };
  Hk.prototype.invalidateViewport = function() {
    this.Vc !== true && (this.Vc = true, this.Gb());
  };
  Hk.prototype.onViewportBoundsChanged = function(a, b, c, d) {
    this.qb || (Mi2(this), this.N(), Ri2(this), this.Qa(), Jk(this), this.dd.scale = c, this.dd.position.x = a.x, this.dd.position.y = a.y, this.dd.bounds.assign(a), this.dd.iy = d, this.S("ViewportBoundsChanged", this.dd, a));
  };
  na2.Object.defineProperties(Hk.prototype, { observed: { get: function() {
    return this.kw;
  }, set: function(a) {
    var b = this.kw;
    a instanceof Hk && C2("Overview.observed Diagram may not be an Overview itself: " + a);
    if (b !== a) {
      b !== null && (this.remove(this.box), b.mm("ViewportBoundsChanged", this.xw), b.mm("DocumentBoundsChanged", this.ww), b.mm("InvalidateDraw", this.mt), b.mm("AnimationFinished", this.vw));
      this.kw = a;
      a !== null && (a.Nj("ViewportBoundsChanged", this.xw), a.Nj("DocumentBoundsChanged", this.ww), a.Nj("InvalidateDraw", this.mt), a.Nj("AnimationFinished", this.vw), this.add(this.box));
      this.Qa();
      if (a === null) {
        this.Gl = null;
        var c = this.Ca, d = this.Ab;
        c && d && (d.setTransform(1, 0, 0, 1, 0, 0), d.clearRect(0, 0, c.width, c.height));
      } else
        this.mt(null), Jk(this), this.N();
      this.g("observed", b, a);
    }
  } }, box: { get: function() {
    return this.Yi;
  }, set: function(a) {
    var b = this.Yi;
    b !== a && (this.Yi = a, this.remove(b), this.add(this.Yi), Jk(this), this.g("box", b, a));
  } }, drawsTemporaryLayers: {
    get: function() {
      return this.nv;
    },
    set: function(a) {
      this.nv !== a && (this.nv = a, this.redraw());
    }
  }, drawsGrid: { get: function() {
    return this.gv;
  }, set: function(a) {
    this.gv !== a && (this.gv = a, this.redraw());
  } }, updateDelay: { get: function() {
    return this.jt;
  }, set: function(a) {
    0 > a && (a = 0);
    this.jt !== a && (this.jt = a);
  } } });
  Hk.className = "Overview";
  function Ik() {
    Le2.call(this);
    this.j = null;
  }
  ma2(Ik, Le2);
  Ik.prototype.canStart = function() {
    if (!this.isEnabled)
      return false;
    var a = this.diagram;
    if (a === null || !a.allowMove || !a.allowSelect)
      return false;
    var b = a.observed;
    if (b === null)
      return false;
    var c = a.lastInput;
    if (!c.left || a.currentTool !== this && (!this.isBeyondDragSize() || c.isTouchEvent && c.timestamp - a.firstInput.timestamp < this.delay))
      return false;
    this.findDraggablePart() === null && (c = b.viewportBounds, this.j = new K2(c.width / 2, c.height / 2), a = a.firstInput.documentPoint, b.position = new K2(a.x - this.j.x, a.y - this.j.y));
    return true;
  };
  Ik.prototype.doActivate = function() {
    this.j = null;
    Le2.prototype.doActivate.call(this);
  };
  Ik.prototype.doUpdateCursor = function() {
    var a = this.diagram, b = a.box;
    b !== null && b.cursor && (a.currentCursor = b.cursor);
  };
  Ik.prototype.moveParts = function() {
    var a = this.diagram, b = a.observed;
    if (b !== null) {
      var c = a.box;
      if (c !== null) {
        if (this.j === null) {
          var d = a.firstInput.documentPoint;
          c = c.location;
          this.j = new K2(d.x - c.x, d.y - c.y);
        }
        a = a.lastInput.documentPoint;
        b.position = new K2(a.x - this.j.x, a.y - this.j.y);
      }
    }
  };
  Ik.className = "OverviewDraggingTool";
  function Lk() {
    Va2(this);
    this.D = ve2;
    this.Ma = this.C = this.o = true;
    this.L = this.wa = this.Rb = this.Ba = false;
    this.ki = this.j = null;
    this.sc = 1.05;
    this.Wt = NaN;
    this.Tw = null;
    this.yu = NaN;
    this.xu = hc2;
    this.Hb = true;
    this.eg = null;
    this.Sb = 200;
  }
  Lk.prototype.toString = function() {
    return "CommandHandler";
  };
  Lk.prototype.Ne = function(a) {
    this.D = a;
  };
  Lk.prototype.doKeyDown = function() {
    var a = this.diagram, b = a.lastInput, c = Ta2 ? b.meta : b.control, d = b.shift, e = b.alt, f2 = b.key;
    !c || f2 !== "C" && f2 !== "Insert" ? c && f2 === "X" || d && f2 === "Del" ? this.canCutSelection() && this.cutSelection() : c && f2 === "V" || d && f2 === "Insert" ? this.canPasteSelection() && this.pasteSelection() : c && f2 === "Y" || e && d && f2 === "Backspace" ? this.canRedo() && this.redo() : c && f2 === "Z" || e && f2 === "Backspace" ? this.canUndo() && this.undo() : f2 === "Del" || f2 === "Backspace" ? this.canDeleteSelection() && this.deleteSelection() : c && f2 === "A" ? this.canSelectAll() && this.selectAll() : f2 === "Esc" ? this.canStopCommand() && this.stopCommand() : f2 === "Up" ? a.allowVerticalScroll && (c ? a.scroll("pixel", "up") : a.scroll("line", "up")) : f2 === "Down" ? a.allowVerticalScroll && (c ? a.scroll("pixel", "down") : a.scroll("line", "down")) : f2 === "Left" ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "left") : a.scroll("line", "left")) : f2 === "Right" ? a.allowHorizontalScroll && (c ? a.scroll("pixel", "right") : a.scroll("line", "right")) : f2 === "PageUp" ? d && a.allowHorizontalScroll ? a.scroll("page", "left") : a.allowVerticalScroll && a.scroll("page", "up") : f2 === "PageDown" ? d && a.allowHorizontalScroll ? a.scroll("page", "right") : a.allowVerticalScroll && a.scroll("page", "down") : f2 === "Home" ? c && a.allowVerticalScroll ? a.scroll("document", "up") : !c && a.allowHorizontalScroll && a.scroll("document", "left") : f2 === "End" ? c && a.allowVerticalScroll ? a.scroll("document", "down") : !c && a.allowHorizontalScroll && a.scroll("document", "right") : f2 === " " ? this.canScrollToPart() && this.scrollToPart() : f2 === "Subtract" ? this.canDecreaseZoom() && this.decreaseZoom() : f2 === "Add" ? this.canIncreaseZoom() && this.increaseZoom() : c && f2 === "0" ? this.canResetZoom() && this.resetZoom() : d && f2 === "Z" ? this.canZoomToFit() && this.zoomToFit() : c && !d && f2 === "G" ? this.canGroupSelection() && this.groupSelection() : c && d && f2 === "G" ? this.canUngroupSelection() && this.ungroupSelection() : f2 === "F2" || b.event && b.event.key === "F2" ? this.canEditTextBlock() && this.editTextBlock() : f2 === "ContextMenu" || b.event && b.event.key === "ContextMenu" ? this.canShowContextMenu() && this.showContextMenu() : b.bubbles = true : this.canCopySelection() && this.copySelection();
  };
  Lk.prototype.doKeyUp = function() {
    this.diagram.lastInput.bubbles = true;
  };
  Lk.prototype.stopCommand = function() {
    var a = this.diagram, b = a.currentTool;
    b instanceof Pa2 && a.allowSelect && a.clearSelection();
    b !== null && b.doCancel();
  };
  Lk.prototype.canStopCommand = function() {
    return true;
  };
  Lk.prototype.selectAll = function() {
    var a = this.diagram;
    a.N();
    try {
      a.currentCursor = "wait";
      a.S("ChangingSelection", a.selection);
      for (var b = a.parts; b.next(); )
        b.value.isSelected = true;
      for (var c = a.nodes; c.next(); )
        c.value.isSelected = true;
      for (var d = a.links; d.next(); )
        d.value.isSelected = true;
    } finally {
      a.S("ChangedSelection", a.selection), a.currentCursor = "";
    }
  };
  Lk.prototype.canSelectAll = function() {
    return this.diagram.allowSelect;
  };
  Lk.prototype.deleteSelection = function() {
    var a = this.diagram;
    try {
      a.currentCursor = "wait";
      a.S("ChangingSelection", a.selection);
      a.xa("Delete");
      a.S("SelectionDeleting", a.selection);
      for (var b = new G2(), c = a.selection.iterator; c.next(); )
        Mk(b, c.value, true, this.deletesTree ? Infinity : 0, this.deletesConnectedLinks ? null : false, function(a2) {
          return a2.canDelete();
        });
      a.Qs(b, true);
      a.S("SelectionDeleted", b);
    } finally {
      a.Xa("Delete"), a.S("ChangedSelection", a.selection), a.currentCursor = "";
    }
  };
  Lk.prototype.canDeleteSelection = function() {
    var a = this.diagram;
    return a.isReadOnly || a.isModelReadOnly || !a.allowDelete || a.selection.count === 0 ? false : true;
  };
  Lk.prototype.copySelection = function() {
    var a = this.diagram, b = new G2();
    for (a = a.selection.iterator; a.next(); )
      Mk(b, a.value, true, this.copiesTree ? Infinity : 0, this.copiesConnectedLinks, function(a2) {
        return a2.canCopy();
      });
    this.copyToClipboard(b);
  };
  Lk.prototype.canCopySelection = function() {
    var a = this.diagram;
    return a.allowCopy && a.allowClipboard && a.selection.count !== 0 ? true : false;
  };
  Lk.prototype.cutSelection = function() {
    this.copySelection();
    this.deleteSelection();
  };
  Lk.prototype.canCutSelection = function() {
    var a = this.diagram;
    return !a.isReadOnly && !a.isModelReadOnly && a.allowCopy && a.allowDelete && a.allowClipboard && a.selection.count !== 0 ? true : false;
  };
  Lk.prototype.copyToClipboard = function(a) {
    var b = this.diagram, c = null;
    if (a === null)
      ui2 = null, Bi2 = "";
    else {
      c = b.model;
      var d = false, e = false, f2 = null;
      try {
        c.fm() && (d = c.Uj, c.Uj = this.copiesParentKey), c.dk() && (e = c.Tj, c.Tj = this.copiesGroupKey), f2 = b.Vj(a, null, true);
      } finally {
        c.fm() && (c.Uj = d), c.dk() && (c.Tj = e), c = new F2(), c.addAll(f2), ui2 = c, Bi2 = b.model.dataFormat;
      }
    }
    b.S("ClipboardChanged", c);
  };
  Lk.prototype.pasteFromClipboard = function() {
    var a = new G2(), b = ui2;
    if (b === null)
      return a;
    var c = this.diagram;
    if (Bi2 !== c.model.dataFormat)
      return a;
    var d = c.model, e = false, f2 = false, g2 = null;
    try {
      d.fm() && (e = d.Uj, d.Uj = this.copiesParentKey), d.dk() && (f2 = d.Tj, d.Tj = this.copiesGroupKey), g2 = c.Vj(b, c, false);
    } finally {
      for (d.fm() && (d.Uj = e), d.dk() && (d.Tj = f2), b = g2.iterator; b.next(); )
        c = b.value, d = b.key, c.location.u() || (d.location.u() ? c.location = d.location : !c.position.u() && d.position.u() && (c.position = d.position)), a.add(c);
    }
    return a;
  };
  Lk.prototype.pasteSelection = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    try {
      b.currentCursor = "wait";
      b.S("ChangingSelection", b.selection);
      b.xa("Paste");
      var c = this.pasteFromClipboard();
      0 < c.count && b.clearSelection(true);
      for (var d = c.iterator; d.next(); )
        d.value.isSelected = true;
      if (a !== null) {
        var e = b.computePartsBounds(b.selection);
        if (e.u()) {
          var f2 = this.computeEffectiveCollection(b.selection, b.pn);
          jf2(b, f2, new K2(a.x - e.centerX, a.y - e.centerY), b.pn, false);
        }
      }
      b.S("ClipboardPasted", c);
    } finally {
      b.Xa("Paste"), b.S("ChangedSelection", b.selection), b.currentCursor = "";
    }
  };
  Lk.prototype.canPasteSelection = function() {
    var a = this.diagram;
    return a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowClipboard || ui2 === null || ui2.count === 0 || Bi2 !== a.model.dataFormat ? false : true;
  };
  Lk.prototype.undo = function() {
    this.diagram.undoManager.undo();
  };
  Lk.prototype.canUndo = function() {
    var a = this.diagram;
    return a.isReadOnly || a.isModelReadOnly ? false : a.allowUndo && a.undoManager.canUndo();
  };
  Lk.prototype.redo = function() {
    this.diagram.undoManager.redo();
  };
  Lk.prototype.canRedo = function() {
    var a = this.diagram;
    return a.isReadOnly || a.isModelReadOnly ? false : a.allowUndo && a.undoManager.canRedo();
  };
  Lk.prototype.decreaseZoom = function(a) {
    a === void 0 && (a = 1 / this.zoomFactor);
    var b = this.diagram;
    b.autoScale === nh2 && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a));
  };
  Lk.prototype.canDecreaseZoom = function(a) {
    a === void 0 && (a = 1 / this.zoomFactor);
    var b = this.diagram;
    if (b.autoScale !== nh2)
      return false;
    a = b.scale * a;
    return a < b.minScale || a > b.maxScale ? false : b.allowZoom;
  };
  Lk.prototype.increaseZoom = function(a) {
    a === void 0 && (a = this.zoomFactor);
    var b = this.diagram;
    b.autoScale === nh2 && (a = b.scale * a, a < b.minScale || a > b.maxScale || (b.scale = a));
  };
  Lk.prototype.canIncreaseZoom = function(a) {
    a === void 0 && (a = this.zoomFactor);
    var b = this.diagram;
    if (b.autoScale !== nh2)
      return false;
    a = b.scale * a;
    return a < b.minScale || a > b.maxScale ? false : b.allowZoom;
  };
  Lk.prototype.resetZoom = function(a) {
    a === void 0 && (a = this.defaultScale);
    var b = this.diagram;
    a < b.minScale || a > b.maxScale || (b.scale = a);
  };
  Lk.prototype.canResetZoom = function(a) {
    a === void 0 && (a = this.defaultScale);
    var b = this.diagram;
    return a < b.minScale || a > b.maxScale ? false : b.allowZoom;
  };
  Lk.prototype.zoomToFit = function() {
    var a = this.diagram, b = a.animationManager;
    b.rc();
    a.redraw();
    var c = a.position, d = a.scale;
    hh2(b, "Zoom To Fit");
    this.isZoomToFitRestoreEnabled && d === this.yu && !isNaN(this.Wt) && a.documentBounds.A(this.xu) ? (a.scale = this.Wt, a.position = this.Tw, this.yu = NaN, this.xu = hc2) : (this.Wt = d, this.Tw = c.copy(), a.zoomToFit(), this.yu = a.scale, this.xu = a.documentBounds.copy());
    jh2(b);
  };
  Lk.prototype.canZoomToFit = function() {
    return this.diagram.allowZoom;
  };
  Lk.prototype.scrollToPart = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    b.Ta();
    if (a === null) {
      try {
        this.eg !== null && (this.eg.next() ? a = this.eg.value : this.eg = null);
      } catch (k) {
        this.eg = null;
      }
      a === null && (0 < b.highlighteds.count ? this.eg = b.highlighteds.iterator : 0 < b.selection.count && (this.eg = b.selection.iterator), this.eg !== null && this.eg.next() && (a = this.eg.value));
    }
    if (a !== null) {
      var c = b.animationManager;
      hh2(c, "Scroll To Part");
      var d = this.scrollToPartPause;
      if (0 < d) {
        var e = Nk(this, a, [a]);
        if (e.length === 1)
          b.xa(), b.ls(a.actualBounds), b.Xa("Scroll To Part");
        else {
          var f2 = function() {
            b.xa();
            for (var a2 = e.pop(); 0 < e.length && a2 instanceof W2 && a2.isTreeExpanded && (!(a2 instanceof U2) || a2.isSubGraphExpanded); )
              a2 = e.pop();
            0 < e.length ? (a2 instanceof V2 && b.Nv(a2.actualBounds), a2 instanceof W2 && !a2.isTreeExpanded && (a2.isTreeExpanded = true), a2 instanceof U2 && !a2.isSubGraphExpanded && (a2.isSubGraphExpanded = true)) : (a2 instanceof V2 && b.ls(a2.actualBounds), b.mm("LayoutCompleted", g2));
            b.Xa("Scroll To Part");
          }, g2 = function() {
            ua2(f2, (c.isEnabled ? c.duration : 0) + d);
          };
          b.Nj("LayoutCompleted", g2);
          f2();
        }
      } else {
        var h = b.position.copy();
        b.ls(a.actualBounds);
        h.Ua(b.position) && c.rc();
      }
    }
  };
  function Nk(a, b, c) {
    if (b.isVisible())
      return c;
    if (b instanceof ze)
      Nk(a, b.adornedPart, c);
    else if (b instanceof T2) {
      var d = b.fromNode;
      d !== null && Nk(a, d, c);
      b = b.toNode;
      b !== null && Nk(a, b, c);
    } else
      b instanceof W2 && (d = b.labeledLink, d !== null && Nk(a, d, c), d = b.rg(), d !== null && (d.isTreeExpanded || d.wasTreeExpanded || c.push(d), Nk(a, d, c))), b = b.containingGroup, b !== null && (b.isSubGraphExpanded || b.wasSubGraphExpanded || c.push(b), Nk(a, b, c));
    return c;
  }
  Lk.prototype.canScrollToPart = function(a) {
    a === void 0 && (a = null);
    if (a !== null && !(a instanceof V2))
      return false;
    a = this.diagram;
    return a.selection.count === 0 && a.highlighteds.count === 0 ? false : a.allowHorizontalScroll && a.allowVerticalScroll;
  };
  Lk.prototype.collapseTree = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    try {
      b.xa("Collapse Tree");
      hh2(b.animationManager, "Collapse Tree");
      var c = new F2();
      if (a !== null && a.isTreeExpanded)
        a.collapseTree(), c.add(a);
      else if (a === null)
        for (var d = b.selection.iterator; d.next(); ) {
          var e = d.value;
          e instanceof W2 && e.isTreeExpanded && (e.collapseTree(), c.add(e));
        }
      b.S("TreeCollapsed", c);
    } finally {
      b.Xa("Collapse Tree");
    }
  };
  Lk.prototype.canCollapseTree = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly)
      return false;
    if (a !== null) {
      if (!(a instanceof W2 && a.isTreeExpanded))
        return false;
      if (0 < a.Yp().count)
        return true;
    } else
      for (a = b.selection.iterator; a.next(); )
        if (b = a.value, b instanceof W2 && b.isTreeExpanded && 0 < b.Yp().count)
          return true;
    return false;
  };
  Lk.prototype.expandTree = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    try {
      b.xa("Expand Tree");
      hh2(b.animationManager, "Expand Tree");
      var c = new F2();
      if (a !== null && !a.isTreeExpanded)
        a.expandTree(), c.add(a);
      else if (a === null)
        for (var d = b.selection.iterator; d.next(); ) {
          var e = d.value;
          e instanceof W2 && !e.isTreeExpanded && (e.expandTree(), c.add(e));
        }
      b.S("TreeExpanded", c);
    } finally {
      b.Xa("Expand Tree");
    }
  };
  Lk.prototype.canExpandTree = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly)
      return false;
    if (a !== null) {
      if (!(a instanceof W2) || a.isTreeExpanded)
        return false;
      if (0 < a.Yp().count)
        return true;
    } else
      for (a = b.selection.iterator; a.next(); )
        if (b = a.value, b instanceof W2 && !b.isTreeExpanded && 0 < b.Yp().count)
          return true;
    return false;
  };
  Lk.prototype.groupSelection = function() {
    var a = this.diagram, b = a.model;
    if (b.ek()) {
      var c = this.archetypeGroupData;
      if (c !== null) {
        var d = null;
        try {
          a.currentCursor = "wait";
          a.S("ChangingSelection", a.selection);
          a.xa("Group");
          for (var e = new F2(), f2 = a.selection.iterator; f2.next(); ) {
            var g2 = f2.value;
            g2.Mc() && g2.canGroup() && e.add(g2);
          }
          for (var h = new F2(), k = e.iterator; k.next(); ) {
            var l2 = k.value;
            f2 = false;
            for (var m2 = e.iterator; m2.next(); )
              if (l2.Jd(m2.value)) {
                f2 = true;
                break;
              }
            f2 || h.add(l2);
          }
          if (0 < h.count) {
            var n2 = h.first().containingGroup;
            if (n2 !== null)
              for (; n2 !== null; ) {
                e = false;
                for (var p2 = h.iterator; p2.next(); )
                  if (!p2.value.Jd(n2)) {
                    e = true;
                    break;
                  }
                if (e)
                  n2 = n2.containingGroup;
                else
                  break;
              }
            if (c instanceof U2)
              og2(c), d = c.copy(), d !== null && a.add(d);
            else if (b.lv(c)) {
              var r2 = b.copyNodeData(c);
              za2(r2) && (b.sf(r2), d = a.Gi(r2));
            }
            if (d !== null) {
              n2 !== null && this.isValidMember(n2, d) && (d.containingGroup = n2);
              for (var q2 = h.iterator; q2.next(); ) {
                var u2 = q2.value;
                this.isValidMember(d, u2) && (u2.containingGroup = d);
              }
              a.clearSelection(true);
              d.isSelected = true;
            }
          }
          a.S("SelectionGrouped", d);
        } finally {
          a.Xa("Group"), a.S("ChangedSelection", a.selection), a.currentCursor = "";
        }
      }
    }
  };
  Lk.prototype.canGroupSelection = function() {
    var a = this.diagram;
    if (a.isReadOnly || a.isModelReadOnly || !a.allowInsert || !a.allowGroup || !a.model.ek() || this.archetypeGroupData === null)
      return false;
    for (a = a.selection.iterator; a.next(); ) {
      var b = a.value;
      if (b.Mc() && b.canGroup())
        return true;
    }
    return false;
  };
  function Ok(a) {
    var b = Ea2();
    for (a = a.iterator; a.next(); ) {
      var c = a.value;
      c instanceof T2 || b.push(c);
    }
    a = new G2();
    c = b.length;
    for (var d = 0; d < c; d++) {
      for (var e = b[d], f2 = true, g2 = 0; g2 < c; g2++)
        if (e.Jd(b[g2])) {
          f2 = false;
          break;
        }
      f2 && a.add(e);
    }
    Ia2(b);
    return a;
  }
  Lk.prototype.isValidMember = function(a, b) {
    if (b === null || a === b || b instanceof T2)
      return false;
    if (a !== null) {
      if (a === b || a.Jd(b))
        return false;
      var c = a.memberValidation;
      if (c !== null && !c(a, b) || a.data === null && b.data !== null || a.data !== null && b.data === null)
        return false;
    }
    c = this.memberValidation;
    return c !== null ? c(a, b) : true;
  };
  Lk.prototype.ungroupSelection = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram, c = b.model;
    if (c.ek())
      try {
        b.currentCursor = "wait";
        b.S("ChangingSelection", b.selection);
        b.xa("Ungroup");
        var d = new F2();
        if (a !== null)
          d.add(a);
        else
          for (var e = b.selection.iterator; e.next(); ) {
            var f2 = e.value;
            f2 instanceof U2 && f2.canUngroup() && d.add(f2);
          }
        var g2 = new F2();
        if (0 < d.count) {
          b.clearSelection(true);
          for (var h = d.iterator; h.next(); ) {
            var k = h.value;
            k.expandSubGraph();
            var l2 = k.containingGroup, m2 = l2 !== null && l2.data !== null ? c.pa(l2.data) : void 0;
            g2.addAll(k.memberParts);
            for (var n2 = g2.iterator; n2.next(); ) {
              var p2 = n2.value;
              p2.isSelected = true;
              if (!(p2 instanceof T2)) {
                var r2 = p2.data;
                r2 !== null ? c.uq(r2, m2) : p2.containingGroup = l2;
              }
            }
            b.remove(k);
          }
        }
        b.S("SelectionUngrouped", d, g2);
      } finally {
        b.Xa("Ungroup"), b.S("ChangedSelection", b.selection), b.currentCursor = "";
      }
  };
  Lk.prototype.canUngroupSelection = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly || b.isModelReadOnly || !b.allowDelete || !b.allowUngroup || !b.model.ek())
      return false;
    if (a !== null) {
      if (!(a instanceof U2))
        return false;
      if (a.canUngroup())
        return true;
    } else
      for (a = b.selection.iterator; a.next(); )
        if (b = a.value, b instanceof U2 && b.canUngroup())
          return true;
    return false;
  };
  Lk.prototype.addTopLevelParts = function(a, b) {
    var c = true;
    for (a = Ok(a).iterator; a.next(); ) {
      var d = a.value;
      d.containingGroup !== null && (!b || this.isValidMember(null, d) ? d.containingGroup = null : c = false);
    }
    return c;
  };
  Lk.prototype.collapseSubGraph = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    try {
      b.xa("Collapse SubGraph");
      hh2(b.animationManager, "Collapse SubGraph");
      var c = new F2();
      if (a !== null && a.isSubGraphExpanded)
        a.collapseSubGraph(), c.add(a);
      else if (a === null)
        for (var d = b.selection.iterator; d.next(); ) {
          var e = d.value;
          e instanceof U2 && e.isSubGraphExpanded && (e.collapseSubGraph(), c.add(e));
        }
      b.S("SubGraphCollapsed", c);
    } finally {
      b.Xa("Collapse SubGraph");
    }
  };
  Lk.prototype.canCollapseSubGraph = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly)
      return false;
    if (a !== null)
      return a instanceof U2 && a.isSubGraphExpanded ? true : false;
    for (a = b.selection.iterator; a.next(); )
      if (b = a.value, b instanceof U2 && b.isSubGraphExpanded)
        return true;
    return false;
  };
  Lk.prototype.expandSubGraph = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    try {
      b.xa("Expand SubGraph");
      hh2(b.animationManager, "Expand SubGraph");
      var c = new F2();
      if (a !== null && !a.isSubGraphExpanded)
        a.expandSubGraph(), c.add(a);
      else if (a === null)
        for (var d = b.selection.iterator; d.next(); ) {
          var e = d.value;
          e instanceof U2 && !e.isSubGraphExpanded && (e.expandSubGraph(), c.add(e));
        }
      b.S("SubGraphExpanded", c);
    } finally {
      b.Xa("Expand SubGraph");
    }
  };
  Lk.prototype.canExpandSubGraph = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly)
      return false;
    if (a !== null)
      return a instanceof U2 && !a.isSubGraphExpanded ? true : false;
    for (a = b.selection.iterator; a.next(); )
      if (b = a.value, b instanceof U2 && !b.isSubGraphExpanded)
        return true;
    return false;
  };
  Lk.prototype.editTextBlock = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram, c = b.toolManager.findTool("TextEditing");
    if (c !== null) {
      if (a === null) {
        a = null;
        for (var d = b.selection.iterator; d.next(); ) {
          var e = d.value;
          if (e.canEdit()) {
            a = e;
            break;
          }
        }
        if (a === null)
          return;
        a = a.$l(function(a2) {
          return a2 instanceof Mg2 && a2.editable;
        });
      }
      a !== null && (b.currentTool = null, c.textBlock = a, b.currentTool = c);
    }
  };
  Lk.prototype.canEditTextBlock = function(a) {
    a === void 0 && (a = null);
    var b = this.diagram;
    if (b.isReadOnly || b.isModelReadOnly || !b.allowTextEdit || b.toolManager.findTool("TextEditing") === null)
      return false;
    if (a !== null) {
      if (!(a instanceof Mg2))
        return false;
      a = a.part;
      if (a !== null && a.canEdit())
        return true;
    } else
      for (b = b.selection.iterator; b.next(); )
        if (a = b.value, a.canEdit() && (a = a.$l(function(a2) {
          return a2 instanceof Mg2 && a2.editable;
        }), a !== null))
          return true;
    return false;
  };
  Lk.prototype.showContextMenu = function(a) {
    var b = this.diagram, c = b.toolManager.findTool("ContextMenu");
    if (c !== null && (a === void 0 && (a = 0 < b.selection.count ? b.selection.first() : b), a = c.findObjectWithContextMenu(a), a !== null)) {
      var d = b.lastInput, e = null;
      a instanceof Y2 ? e = a.da(yc2) : b.viewportBounds.$(d.documentPoint) || (e = b.viewportBounds, e = new K2(e.x + e.width / 2, e.y + e.height / 2));
      e !== null && (d.viewPoint = b.wq(e), d.documentPoint = e, d.left = false, d.right = true, d.up = true);
      b.currentTool = c;
      Ig2(c, false, a);
    }
  };
  Lk.prototype.canShowContextMenu = function(a) {
    var b = this.diagram, c = b.toolManager.findTool("ContextMenu");
    if (c === null)
      return false;
    a === void 0 && (a = 0 < b.selection.count ? b.selection.first() : b);
    return c.findObjectWithContextMenu(a) === null ? false : true;
  };
  Lk.prototype.computeEffectiveCollection = function(a, b) {
    var c = this.diagram, d = c.toolManager.findTool("Dragging"), e = c.currentTool === d;
    b === void 0 && (b = e ? d.dragOptions : c.pn);
    d = new H2();
    if (a === null)
      return d;
    for (var f2 = a.iterator; f2.next(); )
      Dj2(c, d, f2.value, e, b);
    if (c.draggedLink !== null && b.dragsLink)
      return d;
    for (f2 = a.iterator; f2.next(); )
      a = f2.value, a instanceof T2 && (b = a.fromNode, b === null || d.contains(b) ? (b = a.toNode, b === null || d.contains(b) || d.remove(a)) : d.remove(a));
    return d;
  };
  na2.Object.defineProperties(Lk.prototype, { diagram: { get: function() {
    return this.D;
  } }, copiesClipboardData: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o = a;
  } }, copiesConnectedLinks: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C = a;
  } }, deletesConnectedLinks: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma = a;
  } }, copiesTree: {
    get: function() {
      return this.Ba;
    },
    set: function(a) {
      this.Ba = a;
    }
  }, deletesTree: { get: function() {
    return this.Rb;
  }, set: function(a) {
    this.Rb = a;
  } }, copiesParentKey: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa = a;
  } }, copiesGroupKey: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L = a;
  } }, archetypeGroupData: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j = a;
  } }, memberValidation: {
    get: function() {
      return this.ki;
    },
    set: function(a) {
      this.ki = a;
    }
  }, defaultScale: { get: function() {
    return this.diagram.defaultScale;
  }, set: function(a) {
    this.diagram.defaultScale = a;
  } }, zoomFactor: { get: function() {
    return this.sc;
  }, set: function(a) {
    1 < a || C2("zoomFactor must be larger than 1.0, not: " + a);
    this.sc = a;
  } }, isZoomToFitRestoreEnabled: { get: function() {
    return this.Hb;
  }, set: function(a) {
    this.Hb = a;
  } }, scrollToPartPause: {
    get: function() {
      return this.Sb;
    },
    set: function(a) {
      this.Sb = a;
    }
  } });
  Lk.className = "CommandHandler";
  ti2 = function() {
    return new Lk();
  };
  function Y2() {
    Va2(this);
    this.G = 4225027;
    this.mb = 1;
    this.bg = null;
    this.na = "";
    this.hd = this.Vb = null;
    this.ja = new K2(NaN, NaN).freeze();
    this.Tc = Nb2;
    this.Zf = Hb2;
    this.Yf = Mb2;
    this.vb = new od2();
    this.Nh = new od2();
    this.Cb = null;
    this.sa = this.Sk = 1;
    this.zb = 0;
    this.Ee = Pk;
    this.Vg = pc2;
    this.mc = new N2(NaN, NaN, NaN, NaN).freeze();
    this.xb = new N2(NaN, NaN, NaN, NaN).freeze();
    this.wc = new N2(0, 0, NaN, NaN).freeze();
    this.P = this.Po = this.Qo = null;
    this.xk = this.yb = Uc2;
    this.ap = 0;
    this.bp = 1;
    this.Cg = 0;
    this.Zm = 1;
    this.tp = null;
    this.hp = -Infinity;
    this.Bl = 0;
    this.Cl = zb2;
    this.Dl = Rf2;
    this.Th = "";
    this.fb = this.O = null;
    this.Dk = -1;
    this.Fl = this.$a = this.Sh = this.Jl = null;
    this.Jr = pg2;
    this.ep = this.xg = this.Dj = null;
  }
  var qd2, pg2, rg2, Pk, Qk, Rk, Sk, Tk, Uk, Vk;
  Y2.prototype.cloneProtected = function(a) {
    a.G = this.G | 6144;
    a.mb = this.mb;
    a.na = this.na;
    a.Vb = this.Vb;
    a.hd = this.hd;
    a.xg = this.xg;
    a.ja.assign(this.ja);
    a.Tc = this.Tc.I();
    a.Zf = this.Zf.I();
    a.Yf = this.Yf.I();
    this.Cb !== null ? a.Cb = this.Cb.copy() : a.Cb = null;
    a.sa = this.sa;
    a.zb = this.zb;
    a.Ee = this.Ee;
    a.Vg = this.Vg.I();
    a.mc.assign(this.mc);
    a.xb.assign(this.xb);
    a.wc.assign(this.wc);
    a.Po = this.Po;
    this.P !== null && (a.P = this.P.copy());
    a.yb = this.yb.I();
    a.xk = this.xk.I();
    a.ap = this.ap;
    a.bp = this.bp;
    a.Cg = this.Cg;
    a.Zm = this.Zm;
    a.tp = this.tp;
    a.hp = this.hp;
    a.Bl = this.Bl;
    a.Cl = this.Cl.I();
    a.Dl = this.Dl;
    a.Th = this.Th;
    this.O !== null && (a.O = this.O.copy());
    a.fb = this.fb;
    a.Dk = this.Dk;
    this.Sh !== null && (a.Sh = Ba2(this.Sh));
    this.$a !== null && (a.$a = this.$a.copy());
    a.Fl = this.Fl;
  };
  Y2.prototype.wx = function(a) {
    var b = this.Sh;
    if (Aa2(b))
      for (var c = 0; c < b.length; c++) {
        if (b[c] === a)
          return;
      }
    else
      this.Sh = b = [];
    b.push(a);
  };
  Y2.prototype.wf = function(a) {
    a.Qo = null;
    a.Dj = null;
    a.s();
  };
  Y2.prototype.clone = function() {
    var a = new this.constructor();
    this.cloneProtected(a);
    if (this.Sh !== null)
      for (var b = 0; b < this.Sh.length; b++) {
        var c = this.Sh[b];
        a[c] = this[c];
      }
    return a;
  };
  Y2.prototype.copy = function() {
    return this.clone();
  };
  t2 = Y2.prototype;
  t2.gb = function(a) {
    a.classType === T2 ? a.name.indexOf("Orient") === 0 ? this.segmentOrientation = a : C2("Unknown Link enum value for GraphObject.segmentOrientation property: " + a) : a.classType === Y2 && (this.stretch = a);
  };
  t2.toString = function() {
    return Ja2(this.constructor) + "#" + ib2(this);
  };
  function Wk(a) {
    a.O === null && (a.O = new Xk());
  }
  t2.Kc = function() {
    if (this.P === null) {
      var a = new Yk();
      a.Pg = rc2;
      a.th = rc2;
      a.Ng = 10;
      a.rh = 10;
      a.Og = 0;
      a.sh = 0;
      this.P = a;
    }
  };
  t2.Wa = function(a, b, c, d, e, f2, g2) {
    var h = this.part;
    if (h !== null && (h.qk(a, b, c, d, e, f2, g2), c === this && a === ge2 && Zk(this) && $k(this, h, b), f2 = this.diagram, this.xg === null || f2 === null || !f2.Oi || f2.undoManager.isUndoingRedoing || f2.animationManager.Um || (a = this.xg.get(b), a !== null && f2.animationManager.isEnabled && !f2.animationManager.isTicking && (this.ep === null && (this.ep = new H2()), g2 = f2.undoManager.transactionLevel === 0, a.startCondition === Yh2 ? g2 = true : a.startCondition === $h2 && (g2 = false), g2 ? (f2 = new gh2(), Zh2(a, f2), g2 = this.ep.get(a), g2 !== null && g2.stop(), this.ep.add(a, f2), f2.vu = this, f2.ox = a, f2.add(this, b, d, e), f2.start()) : (hh2(f2.animationManager, "Trigger"), f2.animationManager.defaultAnimation.add(this, b, d, e)))), this instanceof X2 && c === h && (h.G & 16777216) !== 0 && h.data !== null))
      for (c = this.T.m, d = c.length, e = 0; e < d; e++)
        h = c[e], h instanceof X2 && vj2(h, function(a2) {
          a2.data !== null && (a2.G & 16777216) !== 0 && a2.Fa(b);
        });
  };
  function $k(a, b, c) {
    var d = a.Ch();
    if (d !== null)
      for (var e = a.fb.iterator; e.next(); ) {
        var f2 = e.value, g2 = null;
        if (f2.sourceName !== null) {
          g2 = al(f2, d, a);
          if (g2 === null)
            continue;
          f2.Aq(a, g2, c, null);
        } else if (f2.isToModel) {
          var h = b.diagram;
          h === null || h.skipsModelSourceBindings || f2.Aq(a, h.model.modelData, c, d);
        } else {
          h = d.data;
          if (h === null)
            continue;
          var k = b.diagram;
          k === null || k.skipsModelSourceBindings || f2.Aq(a, h, c, d);
        }
        g2 === a && (h = d.ps(f2.Xi), h !== null && f2.cw(h, g2, c));
      }
  }
  t2.ps = function(a) {
    return this.Dk === a ? this : null;
  };
  t2.g = function(a, b, c) {
    this.Wa(ge2, a, this, b, c);
  };
  t2.xe = function(a, b, c, d) {
    var e = this.mc;
    e.h(a, b, c, d);
    if (this.sa !== 1 || this.zb !== 0) {
      this.Cb === null && (this.Cb = new od2());
      var f2 = this.Cb;
      f2.reset();
      this.np(f2, a, b, c, d);
      f2.xq(e);
    }
  };
  function bl(a, b, c, d) {
    if (a.pickable === false)
      return false;
    d.multiply(a.transform);
    return c ? a.Lc(b, d) : a.Ah(b, d);
  }
  t2.Sx = function(a, b, c) {
    if (this.pickable === false)
      return false;
    var d = this.naturalBounds;
    b = a.xf(b);
    return c ? vb2(a.x, a.y, 0, 0, 0, d.height) <= b || vb2(a.x, a.y, 0, d.height, d.width, d.height) <= b || vb2(a.x, a.y, d.width, d.height, d.width, 0) <= b || vb2(a.x, a.y, d.width, 0, 0, 0) <= b : a.pd(0, 0) <= b && a.pd(0, d.height) <= b && a.pd(d.width, 0) <= b && a.pd(d.width, d.height) <= b;
  };
  t2.je = function() {
    return true;
  };
  t2.$ = function(a) {
    var b = K2.alloc();
    b.assign(a);
    this.transform.Aa(b);
    var c = this.actualBounds;
    if (!c.u())
      return K2.free(b), false;
    var d = this.diagram;
    if (d !== null && d.Vt) {
      var e = d.cm("extraTouchThreshold"), f2 = d.cm("extraTouchArea"), g2 = f2 / 2, h = this.naturalBounds;
      d = this.Af() * d.scale;
      var k = 1 / d;
      if (h.width * d < e && h.height * d < e)
        return a = bc2(c.x - g2 * k, c.y - g2 * k, c.width + f2 * k, c.height + f2 * k, b.x, b.y), K2.free(b), a;
    }
    e = false;
    if (this instanceof ze || this instanceof xf2 ? bc2(c.x - 5, c.y - 5, c.width + 10, c.height + 10, b.x, b.y) : c.$(b))
      this.$a && !this.$a.$(b) ? e = false : this.hd !== null && c.$(b) ? e = true : this.Vb !== null && this.wc.$(a) ? e = true : e = this.Bh(a);
    K2.free(b);
    return e;
  };
  t2.Bh = function(a) {
    var b = this.naturalBounds;
    return bc2(0, 0, b.width, b.height, a.x, a.y);
  };
  t2.Ge = function(a) {
    if (this.angle === 0)
      return this.actualBounds.Ge(a);
    var b = this.naturalBounds;
    b = N2.allocAt(0, 0, b.width, b.height);
    var c = this.transform, d = false, e = K2.allocAt(a.x, a.y);
    b.$(c.Hd(e)) && (e.h(a.x, a.bottom), b.$(c.Hd(e)) && (e.h(a.right, a.bottom), b.$(c.Hd(e)) && (e.h(a.right, a.y), b.$(c.Hd(e)) && (d = true))));
    K2.free(e);
    N2.free(b);
    return d;
  };
  t2.Ah = function(a, b) {
    if (b === void 0)
      return a.Ge(this.actualBounds);
    var c = this.naturalBounds, d = false, e = K2.allocAt(0, 0);
    a.$(b.Aa(e)) && (e.h(0, c.height), a.$(b.Aa(e)) && (e.h(c.width, c.height), a.$(b.Aa(e)) && (e.h(c.width, 0), a.$(b.Aa(e)) && (d = true))));
    K2.free(e);
    return d;
  };
  t2.Lc = function(a, b) {
    if (b === void 0 && (b = this.transform, this.angle === 0))
      return a.Lc(this.actualBounds);
    var c = this.naturalBounds, d = K2.allocAt(0, 0), e = K2.allocAt(0, c.height), f2 = K2.allocAt(c.width, c.height), g2 = K2.allocAt(c.width, 0), h = false;
    if (a.$(b.Aa(d)) || a.$(b.Aa(e)) || a.$(b.Aa(f2)) || a.$(b.Aa(g2)))
      h = true;
    else {
      c = N2.allocAt(0, 0, c.width, c.height);
      var k = K2.allocAt(a.x, a.y);
      c.$(b.Hd(k)) ? h = true : (k.h(a.x, a.bottom), c.$(b.Hd(k)) ? h = true : (k.h(a.right, a.bottom), c.$(b.Hd(k)) ? h = true : (k.h(a.right, a.y), c.$(b.Hd(k)) && (h = true))));
      K2.free(k);
      N2.free(c);
      !h && (M2.zs(a, d, e) || M2.zs(a, e, f2) || M2.zs(a, f2, g2) || M2.zs(a, g2, d)) && (h = true);
    }
    K2.free(d);
    K2.free(e);
    K2.free(f2);
    K2.free(g2);
    return h;
  };
  t2.da = function(a, b) {
    b === void 0 && (b = new K2());
    if (a instanceof O2) {
      var c = this.naturalBounds;
      b.h(a.x * c.width + a.offsetX, a.y * c.height + a.offsetY);
    } else
      b.set(a);
    this.fe.Aa(b);
    return b;
  };
  t2.Li = function(a) {
    a === void 0 && (a = new N2());
    var b = this.naturalBounds, c = this.fe, d = K2.allocAt(0, 0).transform(c);
    a.h(d.x, d.y, 0, 0);
    d.h(b.width, 0).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    d.h(b.width, b.height).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    d.h(0, b.height).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    K2.free(d);
    return a;
  };
  t2.Ki = function() {
    var a = this.fe;
    a.m11 === 1 && a.m12 === 0 ? a = 0 : (a = 180 * Math.atan2(a.m12, a.m11) / Math.PI, 0 > a && (a += 360));
    return a;
  };
  t2.Af = function() {
    if ((this.G & 4096) !== 0 === false)
      return this.Sk;
    var a = this.sa;
    return this.panel !== null ? a * this.panel.Af() : a;
  };
  t2.vs = function(a, b) {
    b === void 0 && (b = new K2());
    b.assign(a);
    this.fe.Hd(b);
    return b;
  };
  t2.ws = function(a, b, c) {
    return this.ak(a.x, a.y, b.x, b.y, c);
  };
  t2.ak = function(a, b, c, d, e) {
    var f2 = this.transform, g2 = 1 / (f2.m11 * f2.m22 - f2.m12 * f2.m21), h = f2.m22 * g2, k = -f2.m12 * g2, l2 = -f2.m21 * g2, m2 = f2.m11 * g2, n2 = g2 * (f2.m21 * f2.dy - f2.m22 * f2.dx), p2 = g2 * (f2.m12 * f2.dx - f2.m11 * f2.dy);
    if (this.areaBackground !== null)
      return f2 = this.actualBounds, M2.Cf(f2.left, f2.top, f2.right, f2.bottom, a, b, c, d, e);
    g2 = a * h + b * l2 + n2;
    a = a * k + b * m2 + p2;
    b = c * h + d * l2 + n2;
    c = c * k + d * m2 + p2;
    e.h(0, 0);
    d = this.naturalBounds;
    c = M2.Cf(0, 0, d.width, d.height, g2, a, b, c, e);
    e.transform(f2);
    return c;
  };
  Y2.prototype.measure = function(a, b, c, d) {
    if (ij2(this) !== false) {
      var e = this.Vg, f2 = e.right + e.left;
      e = e.top + e.bottom;
      a = Math.max(a - f2, 0);
      b = Math.max(b - e, 0);
      c = Math.max((c || 0) - f2, 0);
      d = Math.max((d || 0) - e, 0);
      f2 = this.angle;
      e = this.desiredSize;
      var g2 = 0;
      this instanceof xf2 && (g2 = this.strokeWidth);
      f2 === 90 || f2 === 270 ? (a = isFinite(e.height) ? e.height + g2 : a, b = isFinite(e.width) ? e.width + g2 : b) : (a = isFinite(e.width) ? e.width + g2 : a, b = isFinite(e.height) ? e.height + g2 : b);
      e = c || 0;
      g2 = d || 0;
      var h = this instanceof X2;
      switch (cl(this, true)) {
        case pg2:
          g2 = e = 0;
          h && (b = a = Infinity);
          break;
        case qd2:
          isFinite(a) && a > c && (e = a);
          isFinite(b) && b > d && (g2 = b);
          break;
        case Qk:
          isFinite(a) && a > c && (e = a);
          g2 = 0;
          h && (b = Infinity);
          break;
        case Rk:
          isFinite(b) && b > d && (g2 = b), e = 0, h && (a = Infinity);
      }
      h = this.maxSize;
      var k = this.minSize;
      e > h.width && k.width < h.width && (e = h.width);
      g2 > h.height && k.height < h.height && (g2 = h.height);
      c = Math.max(e / this.scale, k.width);
      d = Math.max(g2 / this.scale, k.height);
      h.width < c && (c = Math.min(k.width, c));
      h.height < d && (d = Math.min(k.height, d));
      a = Math.min(h.width, a);
      b = Math.min(h.height, b);
      a = Math.max(c, a);
      b = Math.max(d, b);
      if (f2 === 90 || f2 === 270)
        f2 = a, a = b, b = f2, f2 = c, c = d, d = f2;
      this.mc.ea();
      this.im(a, b, c, d);
      this.mc.freeze();
      this.mc.u() || C2("Non-real measuredBounds has been set. Object " + this + ", measuredBounds: " + this.mc.toString());
      dj2(this, false);
    }
  };
  Y2.prototype.im = function() {
  };
  Y2.prototype.Qi = function() {
    return false;
  };
  Y2.prototype.arrange = function(a, b, c, d, e) {
    this.dl();
    var f2 = N2.alloc();
    f2.assign(this.xb);
    this.xb.ea();
    jj2(this) === false ? this.xb.h(a, b, c, d) : this.zh(a, b, c, d);
    this.xb.freeze();
    e === void 0 ? this.$a = null : this.$a = e;
    c = false;
    if (e !== void 0)
      c = true;
    else if (e = this.panel, e === null || e.type !== X2.TableRow && e.type !== X2.TableColumn || (e = e.panel), e !== null && (e = e.wc, d = this.measuredBounds, this.areaBackground !== null && (d = this.xb), c = b + d.height, d = a + d.width, c = !(0 <= a + 0.05 && d <= e.width + 0.05 && 0 <= b + 0.05 && c <= e.height + 0.05), this instanceof Mg2 && (a = this.naturalBounds, this.vr > a.height || this.sb > a.width)))
      c = true;
    this.G = c ? this.G | 256 : this.G & -257;
    this.xb.u() || C2("Non-real actualBounds has been set. Object " + this + ", actualBounds: " + this.xb.toString());
    this.jm(f2, this.xb);
    dl(this, false);
    N2.free(f2);
  };
  t2 = Y2.prototype;
  t2.zh = function() {
  };
  function el(a, b, c, d, e) {
    a.xb.h(b, c, d, e);
    if (!a.desiredSize.u()) {
      var f2 = a.mc;
      c = a.Vg;
      b = c.right + c.left;
      var g2 = c.top + c.bottom;
      c = f2.width + b;
      f2 = f2.height + g2;
      d += b;
      e += g2;
      b = cl(a, true);
      c === d && f2 === e && (b = pg2);
      switch (b) {
        case pg2:
          if (c > d || f2 > e)
            dj2(a, true), a.measure(c > d ? d : c, f2 > e ? e : f2, 0, 0);
          break;
        case qd2:
          dj2(a, true);
          a.measure(d, e, 0, 0);
          break;
        case Qk:
          dj2(a, true);
          a.measure(d, f2, 0, 0);
          break;
        case Rk:
          dj2(a, true), a.measure(c, e, 0, 0);
      }
    }
  }
  t2.jm = function(a, b) {
    var c = this.part;
    c !== null && c.diagram !== null && (c.selectionObject !== this && c.resizeObject !== this && c.rotateObject !== this || fl(c, true), this.N(), Ub2(a, b) || (c.Gh(), this.Eo(c)));
  };
  t2.Eo = function(a) {
    this.portId !== null && (fl(a, true), a instanceof W2 && gl(a, this));
  };
  t2.pc = function(a, b) {
    if (this.visible) {
      var c = this.opacity;
      if (c !== 0) {
        var d = this instanceof X2 && (this.type === X2.TableRow || this.type === X2.TableColumn), e = this.xb;
        if (d || e.width !== 0 && e.height !== 0 && !isNaN(e.x) && !isNaN(e.y)) {
          var f2 = 1;
          c !== 1 && (f2 = a.globalAlpha, a.globalAlpha = f2 * c);
          if (d) {
            e = this.xb;
            d = this.wc;
            var g2 = this.hd, h = this.Vb;
            g2 === null && h === null || a.Ed();
            g2 !== null && (di2(this, a, g2, true, true, d, e), g2 instanceof hl && g2.type === il ? (a.beginPath(), a.rect(e.x, e.y, e.width, e.height), a.yf(g2)) : a.fillRect(e.x, e.y, e.width, e.height));
            h !== null && (di2(this, a, h, true, false, d, e), h instanceof hl && h.type === il ? (a.beginPath(), a.rect(e.x, e.y, e.width, e.height), a.yf(h)) : a.fillRect(e.x, e.y, e.width, e.height));
            this.Ei(a, b);
          } else if (!this.Nx(a, b)) {
            this instanceof T2 && this.hk(false);
            d = this.transform;
            g2 = this.panel;
            (this.G & 4096) !== 0 === true && jl(this);
            var k = this.part;
            h = false;
            var l2 = 0;
            if (k && b.Ie("drawShadows") && (h = k.isShadowed)) {
              var m2 = k.shadowOffset;
              l2 = Math.max(m2.y, m2.x) * b.scale * b.ec;
            }
            m2 = this.Qi();
            var n2;
            if (!(n2 = b.pj || !m2)) {
              var p2 = this.naturalBounds;
              n2 = this.Nh;
              var r2 = n2.m11, q2 = n2.m21, u2 = n2.dx, w = n2.m12, v2 = n2.m22, z2 = n2.dy, y2, B2 = y2 = 0;
              n2 = y2 * r2 + B2 * q2 + u2;
              var A2 = y2 * w + B2 * v2 + z2;
              y2 = p2.width + l2;
              B2 = 0;
              var E = y2 * r2 + B2 * q2 + u2;
              y2 = y2 * w + B2 * v2 + z2;
              B2 = Math.min(n2, E);
              var Q2 = Math.min(A2, y2);
              var J2 = Math.max(n2 + 0, E) - B2;
              var S2 = Math.max(A2 + 0, y2) - Q2;
              n2 = B2;
              A2 = Q2;
              y2 = p2.width + l2;
              B2 = p2.height + l2;
              E = y2 * r2 + B2 * q2 + u2;
              y2 = y2 * w + B2 * v2 + z2;
              B2 = Math.min(n2, E);
              Q2 = Math.min(A2, y2);
              J2 = Math.max(n2 + J2, E) - B2;
              S2 = Math.max(A2 + S2, y2) - Q2;
              n2 = B2;
              A2 = Q2;
              y2 = 0;
              B2 = p2.height + l2;
              E = y2 * r2 + B2 * q2 + u2;
              y2 = y2 * w + B2 * v2 + z2;
              B2 = Math.min(n2, E);
              Q2 = Math.min(A2, y2);
              J2 = Math.max(n2 + J2, E) - B2;
              S2 = Math.max(A2 + S2, y2) - Q2;
              n2 = B2;
              A2 = Q2;
              l2 = b.viewportBounds;
              p2 = l2.x;
              r2 = l2.y;
              n2 = !(n2 > l2.width + p2 || p2 > J2 + n2 || A2 > l2.height + r2 || r2 > S2 + A2);
            }
            if (n2) {
              n2 = (this.G & 256) !== 0;
              a.clipInsteadOfFill && (n2 = false);
              this instanceof Mg2 && (a.font = this.font);
              if (n2) {
                A2 = g2.je() ? g2.naturalBounds : g2.actualBounds;
                this.$a !== null ? (p2 = this.$a, J2 = p2.x, S2 = p2.y, l2 = p2.width, p2 = p2.height) : (J2 = Math.max(e.x, A2.x), S2 = Math.max(e.y, A2.y), l2 = Math.min(e.right, A2.right) - J2, p2 = Math.min(e.bottom, A2.bottom) - S2);
                if (J2 > e.width + e.x || e.x > A2.width + A2.x) {
                  c !== 1 && (a.globalAlpha = f2);
                  return;
                }
                a.save();
                a.beginPath();
                a.rect(J2, S2, l2, p2);
                a.clip();
              }
              if (m2) {
                if (!k.isVisible()) {
                  c !== 1 && (a.globalAlpha = f2);
                  return;
                }
                h && (A2 = k.shadowOffset, a.Uv(A2.x * b.scale * b.ec, A2.y * b.scale * b.ec, k.shadowBlur), kl(a), a.shadowColor = k.shadowColor);
              }
              h && this.shadowVisible === true ? kl(a) : h && this.shadowVisible === false && ll(a);
              k = this.naturalBounds;
              this.hd !== null && (a.Ed(), di2(this, a, this.hd, true, true, k, e), this.hd instanceof hl && this.hd.type === il ? (a.beginPath(), a.rect(e.x, e.y, e.width, e.height), a.yf(this.hd)) : a.fillRect(e.x, e.y, e.width, e.height));
              a.transform(d.m11, d.m12, d.m21, d.m22, d.dx, d.dy);
              h && (g2 !== null && (g2.G & 512) !== 0 || g2 !== null && (g2.type === X2.Auto || g2.type === X2.Spot) && g2.pb() !== this) && this.shadowVisible === null && ll(a);
              this.Vb !== null && (a.Ed(), ml(this, a, k, e));
              h && (this.Vb !== null || this.hd !== null || g2 !== null && (g2.G & 512) !== 0 || g2 !== null && (g2.type === X2.Auto || g2.type === X2.Spot) && g2.pb() !== this) ? (nl(this, true), this.shadowVisible === null && ll(a)) : nl(this, false);
              this.Ei(a, b);
              h && (this.G & 512) !== 0 === true && kl(a);
              m2 && h && ll(a);
              n2 && (a.restore(), a.Hc(this instanceof X2));
              d.Cs() || (b = 1 / (d.m11 * d.m22 - d.m12 * d.m21), a.transform(d.m22 * b, -d.m12 * b, -d.m21 * b, d.m11 * b, b * (d.m21 * d.dy - d.m22 * d.dx), b * (d.m12 * d.dx - d.m11 * d.dy)));
            }
          }
          c !== 1 && (a.globalAlpha = f2);
        }
      }
    }
  };
  function ml(a, b, c, d) {
    var e = a.naturalBounds, f2 = 0, g2 = 0, h = e.width;
    e = e.height;
    var k = a.Qw();
    a instanceof xf2 && (e = a.ma.bounds, f2 = e.x, g2 = e.y, h = e.width, e = e.height);
    di2(a, b, a.Vb, true, false, c, d);
    a.Vb instanceof hl && a.Vb.type === il ? (b.beginPath(), b.rect(f2 - k / 2, g2 - k / 2, h + k, e + k), b.yf(a.Vb)) : b.fillRect(f2 - k / 2, g2 - k / 2, h + k, e + k);
  }
  t2.Nx = function() {
    return false;
  };
  t2.Ei = function() {
  };
  function di2(a, b, c, d, e, f2, g2) {
    if (c !== null) {
      var h = 1, k = 1;
      if (typeof c === "string")
        d ? b.fillStyle = c : b.strokeStyle = c;
      else if (c.type === ol)
        d ? b.fillStyle = c.color : b.strokeStyle = c.color;
      else {
        var l2 = 0;
        a instanceof xf2 && (l2 = a.strokeWidth);
        h = f2.width;
        k = f2.height;
        e ? (h = g2.width, k = g2.height) : d || (h += l2, k += l2);
        if ((f2 = b instanceof pl) && c.ne && (c.type === ql || c.Gk === h && c.yt === k))
          var m2 = c.ne;
        else {
          var n2 = 0, p2 = 0, r2 = 0, q2 = 0, u2 = 0, w = 0;
          w = u2 = 0;
          e ? (u2 = g2.x, w = g2.y) : d || (u2 -= l2 / 2, w -= l2 / 2);
          n2 = c.start.x * h + c.start.offsetX;
          p2 = c.start.y * k + c.start.offsetY;
          r2 = c.end.x * h + c.end.offsetX;
          q2 = c.end.y * k + c.end.offsetY;
          n2 += u2;
          r2 += u2;
          p2 += w;
          q2 += w;
          if (c.type === rl)
            m2 = b.createLinearGradient(n2, p2, r2, q2);
          else if (c.type === il)
            w = isNaN(c.endRadius) ? Math.max(h, k) / 2 : c.endRadius, isNaN(c.startRadius) ? (u2 = 0, w = Math.max(h, k) / 2) : u2 = c.startRadius, m2 = b.createRadialGradient(n2, p2, u2, r2, q2, w);
          else if (c.type === ql)
            try {
              m2 = b.createPattern(c.pattern, "repeat");
            } catch (z2) {
              m2 = null;
            }
          if (c.type !== ql && (e = c.colorStops, e !== null))
            for (e = e.iterator; e.next(); )
              m2.addColorStop(e.key, e.value);
          if (f2 && (c.ne = m2, m2 !== null && (c.Gk = h, c.yt = k), m2 === null && c.type === ql && c.Gk !== -1)) {
            c.Gk = -1;
            var v2 = a.diagram;
            v2 !== null && c.Gk === -1 && ua2(function() {
              v2.redraw();
            }, 600);
          }
        }
        d ? b.fillStyle = m2 : b.strokeStyle = m2;
      }
    }
  }
  t2.sg = function(a) {
    if (a instanceof X2)
      a: {
        if (this !== a && a !== null)
          for (var b = this.panel; b !== null; ) {
            if (b === a) {
              a = true;
              break a;
            }
            b = b.panel;
          }
        a = false;
      }
    else
      a = false;
    return a;
  };
  t2.Ff = function() {
    if (!this.visible)
      return false;
    var a = this.panel;
    return a !== null ? a.Ff() : true;
  };
  t2.Ef = function() {
    for (var a = this instanceof X2 ? this : this.panel; a !== null && a.isEnabled; )
      a = a.panel;
    return a === null;
  };
  function jl(a) {
    if ((a.G & 2048) !== 0 === true) {
      var b = a.vb;
      b.reset();
      if (!a.xb.u() || !a.mc.u()) {
        sl(a, false);
        return;
      }
      b.translate(a.xb.x - a.mc.x, a.xb.y - a.mc.y);
      if (a.scale !== 1 || a.angle !== 0) {
        var c = a.naturalBounds;
        a.np(b, c.x, c.y, c.width, c.height);
      }
      sl(a, false);
      tl(a, true);
    }
    (a.G & 4096) !== 0 === true && (b = a.panel, b === null ? (a.Nh.set(a.vb), a.Sk = a.scale, tl(a, false)) : b.fe !== null && (c = a.Nh, c.reset(), b.je() ? c.multiply(b.Nh) : b.panel !== null && c.multiply(b.panel.Nh), c.multiply(a.vb), a.Sk = a.scale * b.Sk, tl(a, false)));
  }
  t2.np = function(a, b, c, d, e) {
    this.sa !== 1 && a.scale(this.sa);
    if (this.zb !== 0) {
      var f2 = K2.alloc();
      f2.Ui(b, c, d, e, yc2);
      a.rotate(this.zb, f2.x, f2.y);
      K2.free(f2);
    }
  };
  t2.s = function(a) {
    if (!ij2(this)) {
      a === void 0 && (a = false);
      dj2(this, true);
      dl(this, true);
      var b = this.panel;
      b === null || a || b.s();
    }
  };
  t2.ck = function() {
    ij2(this) || (dj2(this, true), dl(this, true));
  };
  function ul(a) {
    if (!jj2(a)) {
      var b = a.panel;
      b !== null ? b.s() : a.Qi() && (b = a.diagram, b !== null && (b.te.add(a), a instanceof W2 && a.rd(), b.Gb()));
      dl(a, true);
    }
  }
  t2.dl = function() {
    (this.G & 2048) !== 0 === false && (sl(this, true), tl(this, true));
  };
  t2.jv = function() {
    tl(this, true);
  };
  t2.N = function() {
    var a = this.part;
    a !== null && a.N();
  };
  function cl(a, b) {
    var c = a.stretch, d = a.panel;
    if (d !== null && d.type === X2.Table)
      return vl(a, d.getRowDefinition(a.row), d.getColumnDefinition(a.column), b);
    if (d !== null && d.type === X2.Auto && d.pb() === a)
      return wl(a, qd2, b);
    if (c === Pk) {
      if (d !== null) {
        if (d.type === X2.Spot && d.pb() === a)
          return wl(a, qd2, b);
        c = d.defaultStretch;
        return c === Pk ? wl(a, pg2, b) : wl(a, c, b);
      }
      return wl(a, pg2, b);
    }
    return wl(a, c, b);
  }
  function vl(a, b, c, d) {
    var e = a.stretch;
    if (e !== Pk)
      return wl(a, e, d);
    var f2 = e = null;
    switch (b.stretch) {
      case Rk:
        f2 = true;
        break;
      case qd2:
        f2 = true;
    }
    switch (c.stretch) {
      case Qk:
        e = true;
        break;
      case qd2:
        e = true;
    }
    b = a.panel.defaultStretch;
    e === null && (e = b === Qk || b === qd2);
    f2 === null && (f2 = b === Rk || b === qd2);
    return e === true && f2 === true ? wl(a, qd2, d) : e === true ? wl(a, Qk, d) : f2 === true ? wl(a, Rk, d) : wl(a, pg2, d);
  }
  function wl(a, b, c) {
    if (c)
      return b;
    if (b === pg2)
      return pg2;
    c = a.desiredSize;
    if (c.u())
      return pg2;
    a = a.angle;
    if (!isNaN(c.width))
      if (a !== 90 && a !== 270) {
        if (b === Qk)
          return pg2;
        if (b === qd2)
          return Rk;
      } else {
        if (b === Rk)
          return pg2;
        if (b === qd2)
          return Qk;
      }
    if (!isNaN(c.height))
      if (a !== 90 && a !== 270) {
        if (b === Rk)
          return pg2;
        if (b === qd2)
          return Qk;
      } else {
        if (b === Qk)
          return pg2;
        if (b === qd2)
          return Rk;
      }
    return b;
  }
  function nl(a, b) {
    a.G = b ? a.G | 512 : a.G & -513;
  }
  function Zk(a) {
    return (a.G & 1024) !== 0;
  }
  function xl(a, b) {
    a.G = b ? a.G | 1024 : a.G & -1025;
  }
  function sl(a, b) {
    a.G = b ? a.G | 2048 : a.G & -2049;
  }
  function tl(a, b) {
    a.G = b ? a.G | 4096 : a.G & -4097;
  }
  function ij2(a) {
    return (a.G & 8192) !== 0;
  }
  function dj2(a, b) {
    a.G = b ? a.G | 8192 : a.G & -8193;
  }
  function jj2(a) {
    return (a.G & 16384) !== 0;
  }
  function dl(a, b) {
    a.G = b ? a.G | 16384 : a.G & -16385;
  }
  t2.Si = function(a) {
    this.bg = a;
  };
  t2.Vs = function() {
  };
  t2.Rv = function(a) {
    this.ja = a;
    ul(this);
    return true;
  };
  t2.ym = function(a, b) {
    if (this.ja.x !== a || this.ja.y !== b)
      this.ja.h(a, b), this.dl();
  };
  t2.Qw = function() {
    return 0;
  };
  function yl(a) {
    var b = a.part;
    if (b instanceof W2 && (a.portId !== null || a === b.port)) {
      var c = b.diagram;
      c === null || c.undoManager.isUndoingRedoing || gl(b, a);
    }
  }
  function zl(a) {
    var b = a.diagram;
    b === null || b.undoManager.isUndoingRedoing || (a instanceof X2 ? a instanceof W2 ? a.rd() : a.Em(a, function(a2) {
      yl(a2);
    }) : yl(a));
  }
  t2.bind = function(a, b, c, d) {
    var e = null;
    typeof a === "string" ? e = new si2(a, b, c, d) : e = a;
    e.od = this;
    a = this.Ch();
    a !== null && Al(a) && C2("Cannot add a Binding to a template that has already been copied: " + e);
    this.fb === null && (this.fb = new F2());
    this.fb.add(e);
    return this;
  };
  t2.set = function(a) {
    Object.assign(this, a);
    return this;
  };
  t2.Eu = function(a) {
    Bl(this, a);
    return this;
  };
  t2.apply = function(a) {
    a(this);
    return this;
  };
  t2.zm = function(a) {
    pj2(this, a);
    return this;
  };
  t2.Oz = function() {
    return this.Ch();
  };
  t2.Ch = function() {
    for (var a = this instanceof X2 ? this : this.panel; a !== null; ) {
      if (a.Qh !== null)
        return a;
      a = a.panel;
    }
    return null;
  };
  t2.Zv = function(a) {
    a.od = this;
    this.xg === null && (this.xg = new H2());
    this.xg.add(a.propertyName, a);
    return this;
  };
  function Cl(a, b) {
    for (var c = 1; c < arguments.length; ++c)
      ;
    c = arguments;
    var d = null, e = null;
    if (typeof a === "function")
      e = a;
    else if (typeof a === "string") {
      var f2 = Dl.H(a);
      typeof f2 === "function" ? (c = Ba2(arguments), d = f2(c), za2(d) || C2('GraphObject.make invoked object builder "' + a + '", but it did not return an Object')) : e = x2.go[a];
    }
    d === null && (e !== void 0 && e !== null && e.constructor || C2("GraphObject.make requires a class function or GoJS class name or name of an object builder, not: " + a), d = new e());
    e = 1;
    if (d instanceof R2 && 1 < c.length) {
      f2 = d;
      var g2 = c[1];
      if (typeof g2 === "string" || g2 instanceof HTMLDivElement)
        pi2(f2, g2), e++;
    }
    for (; e < c.length; e++)
      f2 = c[e], f2 === void 0 ? C2("Undefined value at argument " + e + " for object being constructed by GraphObject.make: " + d) : Bl(d, f2);
    return d;
  }
  function Bl(a, b) {
    if (typeof b === "string")
      if (a instanceof Mg2)
        a.text = b;
      else if (a instanceof xf2)
        a.figure = b;
      else if (a instanceof Rj2)
        a.source = b;
      else if (a instanceof X2)
        b = El.H(b), b !== null && (a.type = b);
      else if (a instanceof hl) {
        var c = Wa2(hl, b);
        c !== null ? a.type = c : C2("Unknown Brush type as an argument to GraphObject.make: " + b);
      } else
        a instanceof P2 ? (b = Wa2(P2, b), b !== null && (a.type = b)) : a instanceof ae2 && (b = Wa2(ae2, b), b !== null && (a.type = b));
    else if (b instanceof Y2)
      a instanceof X2 || C2("A GraphObject can only be added to a Panel, not to: " + a), a.add(b);
    else if (b instanceof Jj2) {
      var d;
      b.isRow && typeof a.getRowDefinition === "function" ? d = a.getRowDefinition(b.index) : b.isRow || typeof a.getColumnDefinition !== "function" || (d = a.getColumnDefinition(b.index));
      d instanceof Jj2 ? (a = d, b.isRow ? a.height = b.height : a.width = b.width, a.minimum = b.minimum, a.maximum = b.maximum, a.alignment = b.alignment, a.stretch = b.stretch, a.sizing = b.sizing, a.fg = b.separatorPadding === null ? null : b.separatorPadding.I(), a.separatorStroke = b.separatorStroke, a.separatorStrokeWidth = b.separatorStrokeWidth, a.Jj = null, b.separatorDashArray && (a.Jj = Ba2(b.separatorDashArray)), a.background = b.background, a.coversSeparators = b.coversSeparators, a.fb = b.fb) : C2("A RowColumnDefinition can only be added to an object that implements getRowDefinition/getColumnDefinition, not to: " + a);
    } else if (b instanceof D2)
      typeof a.gb === "function" && a.gb(b);
    else if (b instanceof Fl)
      a.type = b;
    else if (b instanceof si2)
      a instanceof Y2 ? a.bind(b) : a instanceof Jj2 ? a.bind(b) : C2("A Binding can only be applied to a GraphObject or RowColumnDefinition, not to: " + a);
    else if (b instanceof Wh2)
      a instanceof Y2 ? a.Zv(b) : C2("An AnimationTrigger can only be applied to a GraphObject, not to: " + a);
    else if (b instanceof $d2)
      a instanceof P2 ? a.figures.add(b) : C2("A PathFigure can only be added to a Geometry, not to: " + a);
    else if (b instanceof ae2)
      a instanceof $d2 ? a.segments.add(b) : C2("A PathSegment can only be added to a PathFigure, not to: " + a);
    else if (b instanceof ni2)
      a instanceof R2 ? a.layout = b : a instanceof U2 ? a.layout = b : C2("A Layout can only be assigned to a Diagram or a Group, not to: " + a);
    else if (Array.isArray(b))
      for (c = 0; c < b.length; c++)
        Bl(a, b[c]);
    else if (typeof b === "object" && b !== null)
      if (a instanceof hl) {
        c = new Ya2();
        for (var e in b)
          d = parseFloat(e), isNaN(d) ? c[e] = b[e] : a.addColorStop(d, b[e]);
        pj2(a, c);
      } else if (a instanceof Jj2) {
        b.row !== void 0 ? (e = b.row, (e === void 0 || e === null || e === Infinity || isNaN(e) || 0 > e) && C2("Must specify non-negative integer row for RowColumnDefinition " + b + ", not: " + e), a.isRow = true, a.index = e) : b.column !== void 0 && (e = b.column, (e === void 0 || e === null || e === Infinity || isNaN(e) || 0 > e) && C2("Must specify non-negative integer column for RowColumnDefinition " + b + ", not: " + e), a.isRow = false, a.index = e);
        e = new Ya2();
        for (c in b)
          c !== "row" && c !== "column" && (e[c] = b[c]);
        pj2(a, e);
      } else
        pj2(a, b);
    else
      C2('Unknown initializer "' + b + '" for object being constructed by GraphObject.make: ' + a);
  }
  function Gl(a, b) {
    Dl.add(a, b);
  }
  function Hl(a, b, c) {
    c === void 0 && (c = null);
    var d = a[1];
    if (typeof c === "function" ? c(d) : typeof d === "string")
      return a.splice(1, 1), d;
    if (b === void 0)
      throw Error("no " + (typeof c === "function" ? "satisfactory" : "string") + " argument for GraphObject builder " + a[0]);
    return b;
  }
  na2.Object.defineProperties(Y2.prototype, { shadowVisible: { get: function() {
    return this.Fl;
  }, set: function(a) {
    var b = this.Fl;
    b !== a && (this.Fl = a, this.N(), this.g("shadowVisible", b, a));
  } }, enabledChanged: { get: function() {
    return this.O !== null ? this.O.vn : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.vn;
    b !== a && (this.O.vn = a, this.g("enabledChanged", b, a));
  } }, segmentOrientation: { get: function() {
    return this.Dl;
  }, set: function(a) {
    var b = this.Dl;
    b !== a && (this.Dl = a, this.s(), this.g("segmentOrientation", b, a), a === Rf2 && (this.angle = 0));
  } }, segmentIndex: { get: function() {
    return this.hp;
  }, set: function(a) {
    a = Math.round(a);
    var b = this.hp;
    b !== a && (this.hp = a, this.s(), this.g("segmentIndex", b, a));
  } }, segmentFraction: { get: function() {
    return this.Bl;
  }, set: function(a) {
    isNaN(a) ? a = 0 : 0 > a ? a = 0 : 1 < a && (a = 1);
    var b = this.Bl;
    b !== a && (this.Bl = a, this.s(), this.g("segmentFraction", b, a));
  } }, segmentOffset: {
    get: function() {
      return this.Cl;
    },
    set: function(a) {
      var b = this.Cl;
      b.A(a) || (this.Cl = a = a.I(), this.s(), this.g("segmentOffset", b, a));
    }
  }, stretch: { get: function() {
    return this.Ee;
  }, set: function(a) {
    var b = this.Ee;
    b !== a && (this.Ee = a, this.s(), this.g("stretch", b, a));
  } }, name: { get: function() {
    return this.na;
  }, set: function(a) {
    var b = this.na;
    b !== a && (this.na = a, this.part !== null && (this.part.li = null), this.g("name", b, a));
  } }, opacity: {
    get: function() {
      return this.mb;
    },
    set: function(a) {
      var b = this.mb;
      b !== a && ((0 > a || 1 < a) && xa2(a, "0 <= value <= 1", Y2, "opacity"), this.mb = a, this.g("opacity", b, a), a = this.diagram, b = this.part, a !== null && b !== null && a.N(tj2(b, b.actualBounds)));
    }
  }, visible: { get: function() {
    return (this.G & 1) !== 0;
  }, set: function(a) {
    var b = (this.G & 1) !== 0;
    b !== a && (this.G ^= 1, this.g("visible", b, a), b = this.panel, b !== null ? b.s() : this.Qi() && this.Pb(a), this.N(), zl(this));
  } }, pickable: { get: function() {
    return (this.G & 2) !== 0;
  }, set: function(a) {
    var b = (this.G & 2) !== 0;
    b !== a && (this.G ^= 2, this.g("pickable", b, a));
  } }, fromLinkableDuplicates: { get: function() {
    return (this.G & 4) !== 0;
  }, set: function(a) {
    var b = (this.G & 4) !== 0;
    b !== a && (this.G ^= 4, this.g("fromLinkableDuplicates", b, a));
  } }, fromLinkableSelfNode: { get: function() {
    return (this.G & 8) !== 0;
  }, set: function(a) {
    var b = (this.G & 8) !== 0;
    b !== a && (this.G ^= 8, this.g("fromLinkableSelfNode", b, a));
  } }, toLinkableDuplicates: { get: function() {
    return (this.G & 16) !== 0;
  }, set: function(a) {
    var b = (this.G & 16) !== 0;
    b !== a && (this.G ^= 16, this.g("toLinkableDuplicates", b, a));
  } }, toLinkableSelfNode: { get: function() {
    return (this.G & 32) !== 0;
  }, set: function(a) {
    var b = (this.G & 32) !== 0;
    b !== a && (this.G ^= 32, this.g("toLinkableSelfNode", b, a));
  } }, isPanelMain: { get: function() {
    return (this.G & 64) !== 0;
  }, set: function(a) {
    var b = (this.G & 64) !== 0;
    b !== a && (this.G ^= 64, this.s(), this.g("isPanelMain", b, a));
  } }, isActionable: {
    get: function() {
      return (this.G & 128) !== 0;
    },
    set: function(a) {
      var b = (this.G & 128) !== 0;
      b !== a && (this.G ^= 128, this.g("isActionable", b, a));
    }
  }, areaBackground: { get: function() {
    return this.hd;
  }, set: function(a) {
    var b = this.hd;
    b !== a && (a !== null && Il(a, "GraphObject.areaBackground"), a instanceof hl && a.freeze(), this.hd = a, this.N(), this.g("areaBackground", b, a));
  } }, background: { get: function() {
    return this.Vb;
  }, set: function(a) {
    var b = this.Vb;
    b !== a && (a !== null && Il(a, "GraphObject.background"), a instanceof hl && a.freeze(), this.Vb = a, this.N(), this.g("background", b, a));
  } }, part: { get: function() {
    if (this.Qi())
      return this;
    if (this.Dj !== null)
      return this.Dj;
    var a;
    for (a = this.panel; a; ) {
      if (a instanceof V2)
        return this.Dj = a;
      a = a.panel;
    }
    return null;
  } }, svg: { get: function() {
    return this.$r;
  }, set: function(a) {
    this.$r = a;
  } }, panel: { get: function() {
    return this.bg;
  } }, layer: { get: function() {
    var a = this.part;
    return a !== null ? a.layer : null;
  } }, diagram: { get: function() {
    var a = this.part;
    return a !== null ? a.diagram : null;
  } }, position: { get: function() {
    return this.ja;
  }, set: function(a) {
    var b = a.x, c = a.y, d = this.ja, e = d.x;
    d = d.y;
    (e === b || isNaN(e) && isNaN(b)) && (d === c || isNaN(d) && isNaN(c)) ? this.Vs() : (a = a.copy(), this.Rv(a, e, d) && this.g("position", new K2(e, d), a));
  } }, actualBounds: { get: function() {
    return this.xb;
  } }, scale: {
    get: function() {
      return this.sa;
    },
    set: function(a) {
      var b = this.sa;
      b !== a && (0 >= a && C2("GraphObject.scale for " + this + " must be greater than zero, not: " + a), this.sa = a, this.s(), this.g("scale", b, a));
    }
  }, angle: { get: function() {
    return this.zb;
  }, set: function(a) {
    var b = this.zb;
    b !== a && (a %= 360, 0 > a && (a += 360), b !== a && (this.zb = a, zl(this), this.s(), this.g("angle", b, a)));
  } }, desiredSize: { get: function() {
    return this.Tc;
  }, set: function(a) {
    var b = a.width, c = a.height, d = this.Tc, e = d.width, f2 = d.height;
    (e === b || isNaN(e) && isNaN(b)) && (f2 === c || isNaN(f2) && isNaN(c)) || (this.Tc = a = a.I(), this.s(), this instanceof xf2 && this.gc(), this.g("desiredSize", d, a), Zk(this) && (a = this.part, a !== null && ($k(this, a, "width"), $k(this, a, "height"))));
  } }, width: { get: function() {
    return this.Tc.width;
  }, set: function(a) {
    var b = this.Tc.width;
    b === a || isNaN(b) && isNaN(a) || (b = this.Tc, this.Tc = a = new Gb2(a, this.Tc.height).freeze(), this.s(), this instanceof xf2 && this.gc(), this.g("desiredSize", b, a), Zk(this) && (a = this.part, a !== null && $k(this, a, "width")));
  } }, height: { get: function() {
    return this.Tc.height;
  }, set: function(a) {
    var b = this.Tc.height;
    b === a || isNaN(b) && isNaN(a) || (b = this.Tc, this.Tc = a = new Gb2(this.Tc.width, a).freeze(), this.s(), this instanceof xf2 && this.gc(), this.g("desiredSize", b, a), Zk(this) && (a = this.part, a !== null && $k(this, a, "height")));
  } }, minSize: { get: function() {
    return this.Zf;
  }, set: function(a) {
    var b = this.Zf;
    b.A(a) || (a = a.copy(), isNaN(a.width) && (a.width = 0), isNaN(a.height) && (a.height = 0), a.freeze(), this.Zf = a, this.s(), this.g("minSize", b, a));
  } }, maxSize: { get: function() {
    return this.Yf;
  }, set: function(a) {
    var b = this.Yf;
    b.A(a) || (a = a.copy(), isNaN(a.width) && (a.width = Infinity), isNaN(a.height) && (a.height = Infinity), a.freeze(), this.Yf = a, this.s(), this.g("maxSize", b, a));
  } }, measuredBounds: { get: function() {
    return this.mc;
  } }, naturalBounds: { get: function() {
    return this.wc;
  } }, margin: {
    get: function() {
      return this.Vg;
    },
    set: function(a) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.Vg;
      b.A(a) || (this.Vg = a = a.I(), this.s(), this.g("margin", b, a));
    }
  }, transform: { get: function() {
    (this.G & 2048) !== 0 === true && jl(this);
    return this.vb;
  } }, fe: { get: function() {
    (this.G & 4096) !== 0 === true && jl(this);
    return this.Nh;
  } }, alignment: { get: function() {
    return this.yb;
  }, set: function(a) {
    var b = this.yb;
    b.A(a) || (a.Bc() && !a.Nb() && C2("GraphObject.alignment for " + this + " must be a real Spot or Spot.Default, not: " + a), this.yb = a = a.I(), ul(this), this.g("alignment", b, a));
  } }, column: { get: function() {
    return this.Cg;
  }, set: function(a) {
    a = Math.round(a);
    var b = this.Cg;
    b !== a && (0 > a && xa2(a, ">= 0", Y2, "column"), this.Cg = a, this.s(), this.g("column", b, a));
  } }, columnSpan: { get: function() {
    return this.Zm;
  }, set: function(a) {
    a = Math.round(a);
    var b = this.Zm;
    b !== a && (1 > a && xa2(a, ">= 1", Y2, "columnSpan"), this.Zm = a, this.s(), this.g("columnSpan", b, a));
  } }, row: { get: function() {
    return this.ap;
  }, set: function(a) {
    a = Math.round(a);
    var b = this.ap;
    b !== a && (0 > a && xa2(a, ">= 0", Y2, "row"), this.ap = a, this.s(), this.g("row", b, a));
  } }, rowSpan: { get: function() {
    return this.bp;
  }, set: function(a) {
    a = Math.round(a);
    var b = this.bp;
    b !== a && (1 > a && xa2(a, ">= 1", Y2, "rowSpan"), this.bp = a, this.s(), this.g("rowSpan", b, a));
  } }, spanAllocation: { get: function() {
    return this.tp;
  }, set: function(a) {
    var b = this.tp;
    b !== a && (this.tp = a, this.s(), this.g("spanAllocation", b, a));
  } }, alignmentFocus: { get: function() {
    return this.xk;
  }, set: function(a) {
    var b = this.xk;
    b.A(a) || (this.xk = a = a.I(), this.s(), this.g("alignmentFocus", b, a));
  } }, portId: { get: function() {
    return this.Po;
  }, set: function(a) {
    var b = this.Po;
    if (b !== a) {
      var c = this.part;
      c === null || c instanceof W2 || C2("Cannot set portID on a Link: " + a);
      b !== null && c !== null && Jl(c, this);
      this.Po = a;
      a !== null && c !== null && (c.Je = true, Kl(c, this));
      this.g("portId", b, a);
    }
  } }, toSpot: { get: function() {
    return this.P !== null ? this.P.th : rc2;
  }, set: function(a) {
    this.Kc();
    var b = this.P.th;
    b.A(a) || (a = a.I(), this.P.th = a, this.g("toSpot", b, a), yl(this));
  } }, toEndSegmentLength: { get: function() {
    return this.P !== null ? this.P.rh : 10;
  }, set: function(a) {
    this.Kc();
    var b = this.P.rh;
    b !== a && (0 > a && xa2(a, ">= 0", Y2, "toEndSegmentLength"), this.P.rh = a, this.g("toEndSegmentLength", b, a), yl(this));
  } }, toShortLength: {
    get: function() {
      return this.P !== null ? this.P.sh : 0;
    },
    set: function(a) {
      this.Kc();
      var b = this.P.sh;
      b !== a && (this.P.sh = a, this.g("toShortLength", b, a), yl(this));
    }
  }, toLinkable: { get: function() {
    return this.P !== null ? this.P.Bp : null;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Bp;
    b !== a && (this.P.Bp = a, this.g("toLinkable", b, a));
  } }, toMaxLinks: { get: function() {
    return this.P !== null ? this.P.Cp : Infinity;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Cp;
    b !== a && (0 > a && xa2(a, ">= 0", Y2, "toMaxLinks"), this.P.Cp = a, this.g("toMaxLinks", b, a));
  } }, fromSpot: { get: function() {
    return this.P !== null ? this.P.Pg : rc2;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Pg;
    b.A(a) || (a = a.I(), this.P.Pg = a, this.g("fromSpot", b, a), yl(this));
  } }, fromEndSegmentLength: { get: function() {
    return this.P !== null ? this.P.Ng : 10;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Ng;
    b !== a && (0 > a && xa2(a, ">= 0", Y2, "fromEndSegmentLength"), this.P.Ng = a, this.g("fromEndSegmentLength", b, a), yl(this));
  } }, fromShortLength: { get: function() {
    return this.P !== null ? this.P.Og : 0;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Og;
    b !== a && (this.P.Og = a, this.g("fromShortLength", b, a), yl(this));
  } }, fromLinkable: { get: function() {
    return this.P !== null ? this.P.Bn : null;
  }, set: function(a) {
    this.Kc();
    var b = this.P.Bn;
    b !== a && (this.P.Bn = a, this.g("fromLinkable", b, a));
  } }, fromMaxLinks: {
    get: function() {
      return this.P !== null ? this.P.Cn : Infinity;
    },
    set: function(a) {
      this.Kc();
      var b = this.P.Cn;
      b !== a && (0 > a && xa2(a, ">= 0", Y2, "fromMaxLinks"), this.P.Cn = a, this.g("fromMaxLinks", b, a));
    }
  }, cursor: { get: function() {
    return this.Th;
  }, set: function(a) {
    var b = this.Th;
    b !== a && (this.Th = a, this.g("cursor", b, a));
  } }, click: { get: function() {
    return this.O !== null ? this.O.Bg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Bg;
    b !== a && (this.O.Bg = a, this.g("click", b, a));
  } }, doubleClick: { get: function() {
    return this.O !== null ? this.O.Jg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Jg;
    b !== a && (this.O.Jg = a, this.g("doubleClick", b, a));
  } }, contextClick: { get: function() {
    return this.O !== null ? this.O.Dg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Dg;
    b !== a && (this.O.Dg = a, this.g("contextClick", b, a));
  } }, mouseEnter: { get: function() {
    return this.O !== null ? this.O.Yg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Yg;
    b !== a && (this.O.Yg = a, this.g("mouseEnter", b, a));
  } }, mouseLeave: {
    get: function() {
      return this.O !== null ? this.O.ah : null;
    },
    set: function(a) {
      Wk(this);
      var b = this.O.ah;
      b !== a && (this.O.ah = a, this.g("mouseLeave", b, a));
    }
  }, mouseOver: { get: function() {
    return this.O !== null ? this.O.bh : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.bh;
    b !== a && (this.O.bh = a, this.g("mouseOver", b, a));
  } }, mouseHover: { get: function() {
    return this.O !== null ? this.O.$g : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.$g;
    b !== a && (this.O.$g = a, this.g("mouseHover", b, a));
  } }, mouseHold: { get: function() {
    return this.O !== null ? this.O.Zg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Zg;
    b !== a && (this.O.Zg = a, this.g("mouseHold", b, a));
  } }, mouseDragEnter: { get: function() {
    return this.O !== null ? this.O.vo : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.vo;
    b !== a && (this.O.vo = a, this.g("mouseDragEnter", b, a));
  } }, mouseDragLeave: { get: function() {
    return this.O !== null ? this.O.wo : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.wo;
    b !== a && (this.O.wo = a, this.g("mouseDragLeave", b, a));
  } }, mouseDrop: { get: function() {
    return this.O !== null ? this.O.Xg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Xg;
    b !== a && (this.O.Xg = a, this.g("mouseDrop", b, a));
  } }, actionDown: { get: function() {
    return this.O !== null ? this.O.Lm : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Lm;
    b !== a && (this.O.Lm = a, this.g("actionDown", b, a));
  } }, actionMove: { get: function() {
    return this.O !== null ? this.O.Mm : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Mm;
    b !== a && (this.O.Mm = a, this.g("actionMove", b, a));
  } }, actionUp: { get: function() {
    return this.O !== null ? this.O.Nm : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Nm;
    b !== a && (this.O.Nm = a, this.g("actionUp", b, a));
  } }, actionCancel: { get: function() {
    return this.O !== null ? this.O.Km : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Km;
    b !== a && (this.O.Km = a, this.g("actionCancel", b, a));
  } }, toolTip: {
    get: function() {
      return this.O !== null ? this.O.uh : null;
    },
    set: function(a) {
      Wk(this);
      var b = this.O.uh;
      b !== a && (this.O.uh = a, this.g("toolTip", b, a));
    }
  }, contextMenu: { get: function() {
    return this.O !== null ? this.O.Eg : null;
  }, set: function(a) {
    Wk(this);
    var b = this.O.Eg;
    b !== a && (this.O.Eg = a, this.g("contextMenu", b, a));
  } } });
  Y2.prototype.trigger = Y2.prototype.Zv;
  Y2.prototype.findBindingPanel = Y2.prototype.Ch;
  Y2.prototype.findTemplateBinder = Y2.prototype.Oz;
  Y2.prototype.setProperties = Y2.prototype.zm;
  Y2.prototype.apply = Y2.prototype.apply;
  Y2.prototype.attach = Y2.prototype.Eu;
  Y2.prototype.set = Y2.prototype.set;
  Y2.prototype.isEnabledObject = Y2.prototype.Ef;
  Y2.prototype.isVisibleObject = Y2.prototype.Ff;
  Y2.prototype.isContainedBy = Y2.prototype.sg;
  Y2.prototype.getNearestIntersectionPoint = Y2.prototype.ws;
  Y2.prototype.getLocalPoint = Y2.prototype.vs;
  Y2.prototype.getDocumentScale = Y2.prototype.Af;
  Y2.prototype.getDocumentAngle = Y2.prototype.Ki;
  Y2.prototype.getDocumentBounds = Y2.prototype.Li;
  Y2.prototype.getDocumentPoint = Y2.prototype.da;
  Y2.prototype.intersectsRect = Y2.prototype.Lc;
  Y2.prototype.containedInRect = Y2.prototype.Ah;
  Y2.prototype.containsRect = Y2.prototype.Ge;
  Y2.prototype.containsPoint = Y2.prototype.$;
  Y2.prototype.raiseChanged = Y2.prototype.g;
  Y2.prototype.raiseChangedEvent = Y2.prototype.Wa;
  Y2.prototype.addCopyProperty = Y2.prototype.wx;
  var Dl = null;
  Y2.className = "GraphObject";
  Dl = new H2();
  Gl("Button", function() {
    function a(a2, b2) {
      return a2.diagram.Zb(a2.documentPoint, function(a3) {
        for (; a3.panel !== null && !a3.isActionable; )
          a3 = a3.panel;
        return a3;
      }, function(a3) {
        return a3 === b2;
      }) !== null;
    }
    var b = Cl(X2, X2.Auto, {
      isActionable: true,
      enabledChanged: function(a2, b2) {
        if (a2 instanceof X2) {
          var c = a2.Ya("ButtonBorder");
          c !== null && (c.fill = b2 ? a2._buttonFillNormal : a2._buttonFillDisabled);
        }
      },
      cursor: "pointer",
      _buttonFillNormal: "#F5F5F5",
      _buttonStrokeNormal: "#BDBDBD",
      _buttonFillOver: "#E0E0E0",
      _buttonStrokeOver: "#9E9E9E",
      _buttonFillPressed: "#BDBDBD",
      _buttonStrokePressed: "#9E9E9E",
      _buttonFillDisabled: "#E5E5E5"
    }, Cl(xf2, { name: "ButtonBorder", figure: "RoundedRectangle", spot1: new O2(0, 0, 2.76142374915397, 2.761423749153969), spot2: new O2(1, 1, -2.76142374915397, -2.761423749153969), parameter1: 2, parameter2: 2, fill: "#F5F5F5", stroke: "#BDBDBD" }));
    b.mouseEnter = function(a2, b2) {
      if (b2.Ef() && b2 instanceof X2 && (a2 = b2.Ya("ButtonBorder"), a2 instanceof xf2)) {
        var c = b2._buttonFillOver;
        b2._buttonFillNormal = a2.fill;
        a2.fill = c;
        c = b2._buttonStrokeOver;
        b2._buttonStrokeNormal = a2.stroke;
        a2.stroke = c;
      }
    };
    b.mouseLeave = function(a2, b2) {
      b2.Ef() && b2 instanceof X2 && (a2 = b2.Ya("ButtonBorder"), a2 instanceof xf2 && (a2.fill = b2._buttonFillNormal, a2.stroke = b2._buttonStrokeNormal));
    };
    b.actionDown = function(a2, b2) {
      if (b2.Ef() && b2 instanceof X2 && b2._buttonFillPressed !== null && a2.button === 0) {
        var c = b2.Ya("ButtonBorder");
        if (c instanceof xf2) {
          a2 = a2.diagram;
          var d = a2.skipsUndoManager;
          a2.skipsUndoManager = true;
          var g2 = b2._buttonFillPressed;
          b2._buttonFillOver = c.fill;
          c.fill = g2;
          g2 = b2._buttonStrokePressed;
          b2._buttonStrokeOver = c.stroke;
          c.stroke = g2;
          a2.skipsUndoManager = d;
        }
      }
    };
    b.actionUp = function(b2, d) {
      if (d.Ef() && d instanceof X2 && d._buttonFillPressed !== null && b2.button === 0) {
        var c = d.Ya("ButtonBorder");
        if (c instanceof xf2) {
          var f2 = b2.diagram, g2 = f2.skipsUndoManager;
          f2.skipsUndoManager = true;
          a(b2, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
          f2.skipsUndoManager = g2;
        }
      }
    };
    b.actionCancel = function(b2, d) {
      if (d.Ef() && d instanceof X2 && d._buttonFillPressed !== null) {
        var c = d.Ya("ButtonBorder");
        if (c instanceof xf2) {
          var f2 = b2.diagram, g2 = f2.skipsUndoManager;
          f2.skipsUndoManager = true;
          a(b2, d) ? (c.fill = d._buttonFillOver, c.stroke = d._buttonStrokeOver) : (c.fill = d._buttonFillNormal, c.stroke = d._buttonStrokeNormal);
          f2.skipsUndoManager = g2;
        }
      }
    };
    b.actionMove = function(b2, d) {
      if (d.Ef() && d instanceof X2 && d._buttonFillPressed !== null) {
        var c = b2.diagram;
        if (c.firstInput.button === 0 && (c.currentTool.standardMouseOver(), a(b2, d) && (b2 = d.Ya("ButtonBorder"), b2 instanceof xf2))) {
          var f2 = c.skipsUndoManager;
          c.skipsUndoManager = true;
          var g2 = d._buttonFillPressed;
          b2.fill !== g2 && (b2.fill = g2);
          g2 = d._buttonStrokePressed;
          b2.stroke !== g2 && (b2.stroke = g2);
          c.skipsUndoManager = f2;
        }
      }
    };
    return b;
  });
  Gl("TreeExpanderButton", function() {
    var a = Cl("Button", { _treeExpandedFigure: "MinusLine", _treeCollapsedFigure: "PlusLine" }, Cl(xf2, { name: "ButtonIcon", figure: "MinusLine", stroke: "#424242", strokeWidth: 2, desiredSize: Kb2 }, new si2("figure", "isTreeExpanded", function(a2, c) {
      c = c.panel;
      return a2 ? c._treeExpandedFigure : c._treeCollapsedFigure;
    }).kq()), { visible: false }, new si2("visible", "isTreeLeaf", function(a2) {
      return !a2;
    }).kq());
    a.click = function(a2, c) {
      c = c.part;
      c instanceof ze && (c = c.adornedPart);
      if (c instanceof W2) {
        var b = c.diagram;
        if (b !== null) {
          b = b.commandHandler;
          if (c.isTreeExpanded) {
            if (!b.canCollapseTree(c))
              return;
          } else if (!b.canExpandTree(c))
            return;
          a2.handled = true;
          c.isTreeExpanded ? b.collapseTree(c) : b.expandTree(c);
        }
      }
    };
    return a;
  });
  Gl("SubGraphExpanderButton", function() {
    var a = Cl("Button", { _subGraphExpandedFigure: "MinusLine", _subGraphCollapsedFigure: "PlusLine" }, Cl(xf2, { name: "ButtonIcon", figure: "MinusLine", stroke: "#424242", strokeWidth: 2, desiredSize: Kb2 }, new si2("figure", "isSubGraphExpanded", function(a2, c) {
      c = c.panel;
      return a2 ? c._subGraphExpandedFigure : c._subGraphCollapsedFigure;
    }).kq()));
    a.click = function(a2, c) {
      c = c.part;
      c instanceof ze && (c = c.adornedPart);
      if (c instanceof U2) {
        var b = c.diagram;
        if (b !== null) {
          b = b.commandHandler;
          if (c.isSubGraphExpanded) {
            if (!b.canCollapseSubGraph(c))
              return;
          } else if (!b.canExpandSubGraph(c))
            return;
          a2.handled = true;
          c.isSubGraphExpanded ? b.collapseSubGraph(c) : b.expandSubGraph(c);
        }
      }
    };
    return a;
  });
  Gl("ToolTip", function() {
    return Cl(ze, X2.Auto, { isShadowed: true, shadowColor: "rgba(0, 0, 0, .4)", shadowOffset: new K2(0, 3), shadowBlur: 5 }, Cl(xf2, { name: "Border", figure: "RoundedRectangle", parameter1: 1, parameter2: 1, fill: "#F5F5F5", stroke: "#F0F0F0", spot1: new O2(0, 0, 4, 6), spot2: new O2(1, 1, -4, -4) }));
  });
  Gl("ContextMenu", function() {
    return Cl(ze, X2.Vertical, { background: "#F5F5F5", isShadowed: true, shadowColor: "rgba(0, 0, 0, .4)", shadowOffset: new K2(0, 3), shadowBlur: 5 }, new si2("background", "", function(a) {
      return a.adornedPart !== null && a.placeholder !== null ? null : "#F5F5F5";
    }));
  });
  Gl("ContextMenuButton", function() {
    var a = Cl("Button");
    a.stretch = Qk;
    var b = a.Ya("ButtonBorder");
    b instanceof xf2 && (b.figure = "Rectangle", b.strokeWidth = 0, b.spot1 = new O2(0, 0, 2, 3), b.spot2 = new O2(1, 1, -2, -2));
    return a;
  });
  Gl("PanelExpanderButton", function(a) {
    var b = Hl(a, "COLLAPSIBLE"), c = Cl("Button", { _buttonExpandedFigure: "M0 0 M0 6 L4 2 8 6 M8 8", _buttonCollapsedFigure: "M0 0 M0 2 L4 6 8 2 M8 8", _buttonFillNormal: "rgba(0, 0, 0, 0)", _buttonStrokeNormal: null, _buttonFillOver: "rgba(0, 0, 0, .2)", _buttonStrokeOver: null, _buttonFillPressed: "rgba(0, 0, 0, .4)", _buttonStrokePressed: null }, Cl(xf2, { name: "ButtonIcon", strokeWidth: 2 }, new si2("geometryString", "visible", function(a2) {
      return a2 ? c._buttonExpandedFigure : c._buttonCollapsedFigure;
    }).kq(b)));
    a = c.Ya("ButtonBorder");
    a instanceof xf2 && (a.stroke = null, a.fill = "rgba(0, 0, 0, 0)");
    c.click = function(a2, c2) {
      var d = c2.diagram;
      if (d !== null && !d.isReadOnly) {
        var e = c2.Ch();
        e === null && (e = c2.part);
        e !== null && (c2 = e.Ya(b), c2 !== null && (a2.handled = true, d.xa("Collapse/Expand Panel"), c2.visible = !c2.visible, d.Xa("Collapse/Expand Panel")));
      }
    };
    return c;
  });
  Gl("CheckBoxButton", function(a) {
    var b = Hl(a);
    a = Cl("Button", { desiredSize: new Gb2(14, 14) }, Cl(xf2, { name: "ButtonIcon", geometryString: "M0 0 M0 8.85 L4.9 13.75 16.2 2.45 M16.2 16.2", strokeWidth: 2, stretch: qd2, geometryStretch: rg2, visible: false }, b !== "" ? new si2("visible", b).ly() : []));
    a.click = function(a2, d) {
      if (d instanceof X2) {
        var c = a2.diagram;
        if (!(c === null || c.isReadOnly || b !== "" && c.model.isReadOnly)) {
          a2.handled = true;
          var f2 = d.Ya("ButtonIcon");
          c.xa("checkbox");
          f2.visible = !f2.visible;
          typeof d._doClick === "function" && d._doClick(a2, d);
          c.Xa("checkbox");
        }
      }
    };
    return a;
  });
  Gl("CheckBox", function(a) {
    a = Hl(a);
    a = Cl("CheckBoxButton", a, { name: "Button", isActionable: false, margin: new lc2(0, 1, 0, 0) });
    var b = Cl(X2, "Horizontal", a, {
      isActionable: true,
      cursor: a.cursor,
      margin: 1,
      _buttonFillNormal: a._buttonFillNormal,
      _buttonStrokeNormal: a._buttonStrokeNormal,
      _buttonFillOver: a._buttonFillOver,
      _buttonStrokeOver: a._buttonStrokeOver,
      _buttonFillPressed: a._buttonFillPressed,
      _buttonStrokePressed: a._buttonStrokePressed,
      _buttonFillDisabled: a._buttonFillDisabled,
      mouseEnter: a.mouseEnter,
      mouseLeave: a.mouseLeave,
      actionDown: a.actionDown,
      actionUp: a.actionUp,
      actionCancel: a.actionCancel,
      actionMove: a.actionMove,
      click: a.click,
      _buttonClick: a.click
    });
    a.mouseEnter = null;
    a.mouseLeave = null;
    a.actionDown = null;
    a.actionUp = null;
    a.actionCancel = null;
    a.actionMove = null;
    a.click = null;
    return b;
  });
  Y2.None = pg2 = new D2(Y2, "None", 0);
  Y2.Default = Pk = new D2(Y2, "Default", 0);
  Y2.Vertical = Rk = new D2(Y2, "Vertical", 4);
  Y2.Horizontal = Qk = new D2(Y2, "Horizontal", 5);
  Y2.Fill = qd2 = new D2(Y2, "Fill", 3);
  Y2.Uniform = rg2 = new D2(Y2, "Uniform", 1);
  Y2.UniformToFill = Sk = new D2(Y2, "UniformToFill", 2);
  Y2.FlipVertical = Tk = new D2(Y2, "FlipVertical", 1);
  Y2.FlipHorizontal = Uk = new D2(Y2, "FlipHorizontal", 2);
  Y2.FlipBoth = Vk = new D2(Y2, "FlipBoth", 3);
  Y2.make = Cl;
  Y2.getBuilders = function() {
    var a = new H2(), b;
    for (b in Dl)
      if (b !== b.toLowerCase()) {
        var c = Dl.H(b);
        typeof c === "function" && a.add(b, c);
      }
    a.freeze();
    return a;
  };
  Y2.defineBuilder = Gl;
  Y2.takeBuilderArgument = Hl;
  function Xk() {
    this.vn = this.Eg = this.uh = this.Km = this.Nm = this.Mm = this.Lm = this.Xg = this.wo = this.vo = this.Zg = this.$g = this.bh = this.ah = this.Yg = this.Dg = this.Jg = this.Bg = null;
  }
  Xk.prototype.copy = function() {
    var a = new Xk();
    a.Bg = this.Bg;
    a.Jg = this.Jg;
    a.Dg = this.Dg;
    a.Yg = this.Yg;
    a.ah = this.ah;
    a.bh = this.bh;
    a.$g = this.$g;
    a.Zg = this.Zg;
    a.vo = this.vo;
    a.wo = this.wo;
    a.Xg = this.Xg;
    a.Lm = this.Lm;
    a.Mm = this.Mm;
    a.Nm = this.Nm;
    a.Km = this.Km;
    a.uh = this.uh;
    a.Eg = this.Eg;
    a.vn = this.vn;
    return a;
  };
  Xk.className = "GraphObjectEventHandlers";
  function Ll() {
    this.Na = [1, 0, 0, 1, 0, 0];
  }
  Ll.prototype.copy = function() {
    var a = new Ll();
    a.Na[0] = this.Na[0];
    a.Na[1] = this.Na[1];
    a.Na[2] = this.Na[2];
    a.Na[3] = this.Na[3];
    a.Na[4] = this.Na[4];
    a.Na[5] = this.Na[5];
    return a;
  };
  Ll.prototype.translate = function(a, b) {
    this.Na[4] += this.Na[0] * a + this.Na[2] * b;
    this.Na[5] += this.Na[1] * a + this.Na[3] * b;
  };
  Ll.prototype.scale = function(a, b) {
    this.Na[0] *= a;
    this.Na[1] *= a;
    this.Na[2] *= b;
    this.Na[3] *= b;
  };
  Ll.className = "STransform";
  function Ml(a) {
    this.type = a;
    this.r2 = this.y2 = this.x2 = this.r1 = this.y1 = this.x1 = 0;
    this.Gx = [];
    this.pattern = null;
  }
  Ml.prototype.addColorStop = function(a, b) {
    this.Gx.push({ offset: a, color: b });
  };
  Ml.className = "SGradient";
  function sj2(a, b) {
    this.ownerDocument = a = b === void 0 ? x2.document : b;
    this.yA = "http://www.w3.org/2000/svg";
    a !== void 0 && (this.La = this.Qb("svg", { width: "1px", height: "1px", viewBox: "0 0 1 1" }), this.La.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns", "http://www.w3.org/2000/svg"), this.La.setAttributeNS("http://www.w3.org/2000/xmlns/", "xmlns:xlink", "http://www.w3.org/1999/xlink"));
    this.Up = null;
    this.context = new Nl(this);
  }
  sj2.prototype.resize = function(a, b, c, d) {
    return this.width !== a || this.height !== b ? (this.style.width = c + "px", this.style.height = d + "px", this.La.setAttributeNS(null, "width", c + "px"), this.La.setAttributeNS(null, "height", d + "px"), this.La.setAttributeNS(null, "viewBox", "0 0 " + c + " " + d), this.context.Xw.firstElementChild.setAttributeNS(null, "width", c + "px"), this.context.Xw.firstElementChild.setAttributeNS(null, "height", d + "px"), true) : false;
  };
  sj2.prototype.Qb = function(a, b, c) {
    a = this.ownerDocument.createElementNS(this.yA, a);
    if (za2(b))
      for (var d in b)
        a.setAttributeNS(d === "href" ? "http://www.w3.org/1999/xlink" : "", d, b[d]);
    c !== void 0 && (a.textContent = c);
    return a;
  };
  sj2.prototype.getBoundingClientRect = function() {
    return this.La.getBoundingClientRect();
  };
  sj2.prototype.focus = function() {
    this.La.focus();
  };
  sj2.prototype.Mx = function() {
    this.ownerDocument = null;
  };
  na2.Object.defineProperties(sj2.prototype, { width: { get: function() {
    return this.La.width.baseVal.value;
  }, set: function(a) {
    this.La.width = a;
  } }, height: { get: function() {
    return this.La.height.baseVal.value;
  }, set: function(a) {
    this.La.height = a;
  } }, style: { get: function() {
    return this.La.style;
  } } });
  sj2.className = "SVGSurface";
  function Nl(a) {
    this.Xs = a;
    this.svg = a.La;
    this.stack = [];
    this.fd = [];
    this.fillStyle = "#000000";
    this.font = "10px sans-serif";
    this.globalAlpha = 1;
    this.lineCap = "butt";
    this.lineDashOffset = 0;
    this.lineJoin = "miter";
    this.lineWidth = 1;
    this.miterLimit = 10;
    this.shadowBlur = 0;
    this.shadowColor = "rgba(0, 0, 0, 0)";
    this.shadowOffsetY = this.shadowOffsetX = 0;
    this.strokeStyle = "#000000";
    this.textAlign = "start";
    this.clipInsteadOfFill = false;
    this.hg = this.Tr = this.Sr = 0;
    this.Fs = null;
    this.path = [];
    this.Qt = false;
    this.mh = null;
    this.nh = 0;
    this.He = new Ll();
    Ol(this, 1, 0, 0, 1, 0, 0);
    var b = mb2++, c = this.Qb("clipPath", { id: "mainClip" + b });
    c.appendChild(this.Qb("rect", { x: 0, y: 0, width: a.width, height: a.height }));
    this.Xw = c;
    this.Xs.La.appendChild(c);
    this.fd[0].setAttributeNS(null, "clip-path", "url(#mainClip" + b + ")");
    this.AA = {};
  }
  t2 = Nl.prototype;
  t2.arc = function(a, b, c, d, e, f2, g2, h) {
    var k = 2 * Math.PI, l2 = k - 1e-6, m2 = c * Math.cos(d), n2 = c * Math.sin(d), p2 = a + m2, r2 = b + n2, q2 = f2 ? 0 : 1;
    d = f2 ? d - e : e - d;
    (1e-6 < Math.abs(g2 - p2) || 1e-6 < Math.abs(h - r2)) && this.path.push(["L", p2, +r2]);
    0 > d && (d = d % k + k);
    d > l2 ? (this.path.push(["A", c, c, 0, 1, q2, a - m2, b - n2]), this.path.push(["A", c, c, 0, 1, q2, p2, r2])) : 1e-6 < d && this.path.push(["A", c, c, 0, +(d >= Math.PI), q2, a + c * Math.cos(e), b + c * Math.sin(e)]);
  };
  t2.beginPath = function() {
    this.path = [];
  };
  t2.bezierCurveTo = function(a, b, c, d, e, f2) {
    this.path.push(["C", a, b, c, d, e, f2]);
  };
  t2.clearRect = function() {
  };
  t2.clip = function() {
    this.addPath("clipPath", this.path, this.He);
  };
  t2.closePath = function() {
    this.path.push(["z"]);
  };
  t2.createLinearGradient = function(a, b, c, d) {
    var e = new Ml("linear");
    e.x1 = a;
    e.y1 = b;
    e.x2 = c;
    e.y2 = d;
    return e;
  };
  t2.createPattern = function(a) {
    var b = "";
    a instanceof HTMLCanvasElement && (b = a.toDataURL());
    a instanceof HTMLImageElement && (b = a.getAttribute("src"));
    var c = this.AA;
    if (c[b])
      return "url(#" + c[b] + ")";
    var d = "PATTERN" + mb2++, e = { x: 0, y: 0, width: a.width, height: a.height, href: b };
    a = this.Qb("pattern", { width: a.width, height: a.height, id: d, patternUnits: "userSpaceOnUse" });
    a.appendChild(this.Qb(uk2, e));
    this.svg.appendChild(a);
    c[b] = d;
    return "url(#" + d + ")";
  };
  t2.createRadialGradient = function(a, b, c, d, e, f2) {
    var g2 = new Ml("radial");
    g2.x1 = a;
    g2.y1 = b;
    g2.r1 = c;
    g2.x2 = d;
    g2.y2 = e;
    g2.r2 = f2;
    return g2;
  };
  t2.drawImage = function(a, b, c, d, e, f2, g2, h, k) {
    var l2 = "";
    a instanceof HTMLCanvasElement && (l2 = a.toDataURL());
    a instanceof HTMLImageElement && (l2 = a.getAttribute("src"));
    var m2 = a instanceof HTMLImageElement ? a.naturalWidth : a.width, n2 = a instanceof HTMLImageElement ? a.naturalHeight : a.height;
    d === void 0 && (f2 = b, g2 = c, h = d = m2, k = e = n2);
    d = d || 0;
    e = e || 0;
    f2 = f2 || 0;
    g2 = g2 || 0;
    h = h || 0;
    k = k || 0;
    a = { x: 0, y: 0, width: m2 || d, height: n2 || e, href: l2 };
    M2.aa(d, h) && M2.aa(e, k) ? l2.toLowerCase().indexOf(".svg") === -1 && l2.toLowerCase().indexOf("data:image/svg") === -1 && (a.preserveAspectRatio = "xMidYMid slice") : a.preserveAspectRatio = "none";
    l2 = "";
    h /= d;
    k /= e;
    if (f2 !== 0 || g2 !== 0)
      l2 += " translate(" + f2 + ", " + g2 + ")";
    if (h !== 1 || k !== 1)
      l2 += " scale(" + h + ", " + k + ")";
    if (b !== 0 || c !== 0)
      l2 += " translate(" + -b + ", " + -c + ")";
    if (b !== 0 || c !== 0 || d !== m2 || e !== n2)
      f2 = "CLIP" + mb2++, g2 = this.Qb("clipPath", { id: f2 }), g2.appendChild(this.Qb("rect", { x: b, y: c, width: d, height: e })), this.svg.appendChild(g2), a["clip-path"] = "url(#" + f2 + ")";
    Pl(this, uk2, a, this.He, l2);
    this.addElement(uk2, a);
  };
  t2.fill = function() {
    this.addPath("fill", this.path, this.He);
  };
  t2.yf = function() {
    this.clipInsteadOfFill ? this.clip() : this.fill();
  };
  t2.fillRect = function(a, b, c, d) {
    a = [a, b, c, d];
    a = { x: a[0], y: a[1], width: a[2], height: a[3] };
    Pl(this, "fill", a, this.He);
    this.addElement("rect", a);
  };
  t2.fillText = function(a, b, c) {
    a = [a, b, c];
    b = this.textAlign;
    b === "left" ? b = "start" : b === "right" ? b = "end" : b === "center" && (b = "middle");
    b = { x: a[1], y: a[2], style: "font: " + this.font, "text-anchor": b };
    Pl(this, "fill", b, this.He);
    this.addElement("text", b, a[0]);
  };
  t2.lineTo = function(a, b) {
    this.path.push(["L", a, b]);
  };
  t2.moveTo = function(a, b) {
    this.path.push(["M", a, b]);
  };
  t2.quadraticCurveTo = function(a, b, c, d) {
    this.path.push(["Q", a, b, c, d]);
  };
  t2.rect = function(a, b, c, d) {
    this.path.push(["M", a, b], ["L", a + c, b], ["L", a + c, b + d], ["L", a, b + d], ["z"]);
  };
  t2.restore = function() {
    this.He = this.stack.pop();
    this.path = this.stack.pop();
    var a = this.stack.pop();
    this.fillStyle = a.fillStyle;
    this.font = a.font;
    this.globalAlpha = a.globalAlpha;
    this.lineCap = a.lineCap;
    this.lineDashOffset = a.lineDashOffset;
    this.lineJoin = a.lineJoin;
    this.lineWidth = a.lineWidth;
    this.miterLimit = a.miterLimit;
    this.shadowBlur = a.shadowBlur;
    this.shadowColor = a.shadowColor;
    this.shadowOffsetX = a.shadowOffsetX;
    this.shadowOffsetY = a.shadowOffsetY;
    this.strokeStyle = a.strokeStyle;
    this.textAlign = a.textAlign;
  };
  t2.save = function() {
    this.stack.push({ fillStyle: this.fillStyle, font: this.font, globalAlpha: this.globalAlpha, lineCap: this.lineCap, lineDashOffset: this.lineDashOffset, lineJoin: this.lineJoin, lineWidth: this.lineWidth, miterLimit: this.miterLimit, shadowBlur: this.shadowBlur, shadowColor: this.shadowColor, shadowOffsetX: this.shadowOffsetX, shadowOffsetY: this.shadowOffsetY, strokeStyle: this.strokeStyle, textAlign: this.textAlign });
    for (var a = [], b = 0; b < this.path.length; b++)
      a.push(this.path[b]);
    this.stack.push(a);
    this.stack.push(this.He.copy());
  };
  t2.setTransform = function(a, b, c, d, e, f2) {
    a === 1 && b === 0 && c === 0 && d === 1 && e === 0 && f2 === 0 || Ol(this, a, b, c, d, e, f2);
  };
  t2.scale = function(a, b) {
    this.He.scale(a, b);
  };
  t2.translate = function(a, b) {
    this.He.translate(a, b);
  };
  t2.transform = function() {
  };
  t2.Ed = function() {
  };
  t2.stroke = function() {
    this.addPath("stroke", this.path, this.He);
  };
  t2.Wi = function() {
    this.clipInsteadOfFill || this.stroke();
  };
  t2.Qb = function(a, b, c) {
    return this.Xs.Qb(a, b, c);
  };
  t2.addElement = function(a, b, c) {
    a = this.Qb(a, b, c);
    0 < this.fd.length ? this.fd[this.fd.length - 1].appendChild(a) : this.svg.appendChild(a);
    return this.Fs = a;
  };
  function Pl(a, b, c, d, e) {
    a.globalAlpha !== 1 && (c.opacity = a.globalAlpha);
    b === "fill" ? (a.fillStyle instanceof Ml ? c.fill = Ql(a, a.fillStyle) : /^rgba\(/.test(a.fillStyle) ? (a = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.fillStyle), c.fill = "rgb(" + a[1] + "," + a[2] + "," + a[3] + ")", c["fill-opacity"] = a[4]) : c.fill = a.fillStyle, c.stroke = "none") : b === "stroke" && (c.fill = "none", a.strokeStyle instanceof Ml ? c.stroke = Ql(a, a.strokeStyle) : /^rgba\(/.test(a.strokeStyle) ? (b = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(a.strokeStyle), c.stroke = "rgb(" + b[1] + "," + b[2] + "," + b[3] + ")", c["stroke-opacity"] = b[4]) : c.stroke = a.strokeStyle, c["stroke-width"] = a.lineWidth, c["stroke-linecap"] = a.lineCap, c["stroke-linejoin"] = a.lineJoin, c["stroke-miterlimit"] = a.miterLimit);
    d = d.Na;
    d = "matrix(" + d[0] + ", " + d[1] + ", " + d[2] + ", " + d[3] + ", " + d[4] + ", " + d[5] + ")";
    e !== void 0 && (d += e);
    c.transform = d;
  }
  function Ql(a, b) {
    var c = "GRAD" + mb2++;
    if (b.type === "linear")
      var d = a.Qb("linearGradient", { x1: b.x1, x2: b.x2, y1: b.y1, y2: b.y2, id: c, gradientUnits: "userSpaceOnUse" });
    else if (b.type === "radial")
      d = a.Qb("radialGradient", { x1: b.x1, x2: b.x2, y1: b.y1, y2: b.y2, r1: b.r1, r2: b.r2, id: c });
    else
      throw Error("invalid gradient");
    var e = b.Gx;
    b = e.length;
    for (var f2 = [], g2 = 0; g2 < b; g2++) {
      var h = e[g2], k = h.color;
      h = { offset: h.offset, "stop-color": k };
      /^rgba\(/.test(k) && (k = /^\s*rgba\s*\(([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\s*,\s*([^,\s]+)\)\s*$/i.exec(k), h["stop-color"] = "rgb(" + k[1] + "," + k[2] + "," + k[3] + ")", h["stop-opacity"] = k[4]);
      f2.push(h);
    }
    f2.sort(function(a2, b2) {
      return a2.offset > b2.offset ? 1 : -1;
    });
    for (e = 0; e < b; e++)
      d.appendChild(a.Qb("stop", f2[e]));
    a.svg.appendChild(d);
    return "url(#" + c + ")";
  }
  t2.addPath = function(a, b, c) {
    for (var d = [], e = 0; e < b.length; e++) {
      var f2 = Ba2(b[e]), g2 = [f2.shift()];
      if (g2[0] === "A")
        g2.push(f2.shift() + "," + f2.shift(), f2.shift(), f2.shift() + "," + f2.shift(), f2.shift() + "," + f2.shift());
      else
        for (; f2.length; )
          g2.push(f2.shift() + "," + f2.shift());
      d.push(g2.join(" "));
    }
    b = { d: d.join(" ") };
    a === "stroke" && this.Qt && (b["stroke-dasharray"] = this.mh.toString(), b["stroke-dashoffset"] = this.nh);
    Pl(this, a, b, c);
    a === "clipPath" ? (a = "CLIP" + mb2++, c = this.Qb("clipPath", { id: a }), c.appendChild(this.Qb("path", b)), this.svg.appendChild(c), 0 < this.fd.length && this.fd[this.fd.length - 1].setAttributeNS(null, "clip-path", "url(#" + a + ")")) : this.addElement("path", b);
  };
  function Ol(a, b, c, d, e, f2, g2) {
    var h = new Ll();
    h.Na = [b, c, d, e, f2, g2];
    b = {};
    Pl(a, "g", b, h);
    h = a.addElement("g", b);
    a.fd.push(h);
  }
  t2.Bm = function(a) {
    if (this.shadowOffsetX !== 0 || this.shadowOffsetY !== 0 || this.shadowBlur !== 0) {
      var b = "SHADOW" + mb2++, c = this.addElement("filter", { id: b, x: "-100%", y: "-100%", width: "300%", height: "300%" }, null), d = a.computePixelRatio();
      a = this.Qb("feGaussianBlur", { "in": "SourceAlpha", result: "blur", stdDeviation: this.shadowBlur / 2 / d });
      var e = this.Qb("feFlood", { "in": "blur", result: "flood", "flood-color": this.shadowColor }), f2 = this.Qb("feComposite", { "in": "flood", in2: "blur", operator: "in", result: "comp" });
      d = this.Qb("feOffset", { "in": "comp", result: "offsetBlur", dx: this.shadowOffsetX / d, dy: this.shadowOffsetY / d });
      var g2 = this.Qb("feMerge", {});
      g2.appendChild(this.Qb("feMergeNode", { "in": "offsetBlur" }));
      g2.appendChild(this.Qb("feMergeNode", { "in": "SourceGraphic" }));
      c.appendChild(a);
      c.appendChild(e);
      c.appendChild(f2);
      c.appendChild(d);
      c.appendChild(g2);
      0 < this.fd.length && this.fd[this.fd.length - 1].setAttributeNS(null, "filter", "url(#" + b + ")");
    }
  };
  t2.Uv = function(a, b, c) {
    this.Sr = a;
    this.Tr = b;
    this.hg = c;
  };
  function ll(a) {
    a.shadowOffsetX = 0;
    a.shadowOffsetY = 0;
    a.shadowBlur = 0;
  }
  function kl(a) {
    a.shadowOffsetX = a.Sr;
    a.shadowOffsetY = a.Tr;
    a.shadowBlur = a.hg;
  }
  t2.os = function(a, b) {
    this.Qt = true;
    this.mh = a;
    this.nh = b;
  };
  t2.ms = function() {
    this.Qt = false;
  };
  t2.Hc = function() {
  };
  t2.zy = function() {
  };
  Nl.prototype.rotate = function() {
  };
  Nl.prototype.getImageData = function() {
    return null;
  };
  Nl.prototype.measureText = function() {
    return null;
  };
  Nl.className = "SVGContext";
  R2.prototype.Js = function(a) {
    var b = new sj2(this, x2.document);
    a === void 0 && (a = new Ya2());
    var c = this;
    return sk2(this, function(a2, e) {
      a2 = tk2(c, a2, "SVG", b);
      a2 = a2 !== null ? a2.svg : null;
      return typeof e === "function" ? (e(a2), null) : a2;
    }, a);
  };
  R2.prototype.makeSvg = R2.prototype.Js;
  R2.prototype.sv = function(a) {
    return this.Js(a);
  };
  R2.prototype.makeSVG = R2.prototype.sv;
  Y2.prototype.Nx = function(a, b) {
    if (!(a instanceof Nl))
      return false;
    var c = null, d = a.Fs, e = this.transform, f2 = this.panel;
    (this.G & 4096) !== 0 === true && jl(this);
    var g2 = this.xb, h = (this.G & 256) !== 0;
    a.clipInsteadOfFill && (h = false);
    var k = false;
    this instanceof Mg2 && (a.font = this.font);
    if (h) {
      k = f2.je() ? f2.naturalBounds : f2.actualBounds;
      if (this.$a !== null) {
        var l2 = this.$a;
        var m2 = l2.x;
        var n2 = l2.y;
        var p2 = l2.width;
        l2 = l2.height;
      } else
        m2 = Math.max(g2.x, k.x), n2 = Math.max(g2.y, k.y), p2 = Math.min(g2.right, k.right) - m2, l2 = Math.min(g2.bottom, k.bottom) - n2;
      if (m2 > g2.width + g2.x || g2.x > k.width + k.x || n2 > g2.height + g2.y || g2.y > k.height + k.y)
        return true;
      k = true;
      Ol(a, 1, 0, 0, 1, 0, 0);
      a.save();
      a.beginPath();
      a.rect(m2, n2, p2, l2);
      a.clip();
    }
    if (this.Qi() && !this.isVisible())
      return true;
    a.He.Na = [1, 0, 0, 1, 0, 0];
    (this instanceof Mg2 && 1 < this.lineCount || this instanceof xf2 && 1 < this.geometry.figures.length) && Ol(a, 1, 0, 0, 1, 0, 0);
    m2 = false;
    this.Qi() && this.isShadowed && b.Ie("drawShadows") && (n2 = this.shadowOffset, a.Uv(n2.x * b.scale * b.ec, n2.y * b.scale * b.ec, this.shadowBlur), kl(a), a.shadowColor = this.shadowColor);
    n2 = false;
    this.part && b.Ie("drawShadows") && (n2 = this.part.isShadowed);
    a.clipInsteadOfFill && (n2 = false);
    this.shadowVisible === true ? (kl(a), m2 === false && n2 && (Ol(a, 1, 0, 0, 1, 0, 0), a.Bm(b), m2 = true)) : this.shadowVisible === false && ll(a);
    p2 = this.naturalBounds;
    this.areaBackground !== null && (di2(this, a, this.areaBackground, true, true, p2, g2), m2 === false && n2 && (Ol(a, 1, 0, 0, 1, 0, 0), a.Bm(b), m2 = true), this.areaBackground instanceof hl && this.areaBackground.type === il ? (a.beginPath(), a.rect(g2.x, g2.y, g2.width, g2.height), a.yf(this.areaBackground)) : a.fillRect(g2.x, g2.y, g2.width, g2.height));
    l2 = false;
    this instanceof X2 ? Ol(a, e.m11, e.m12, e.m21, e.m22, e.dx, e.dy) : (a.He.Na = [e.m11, e.m12, e.m21, e.m22, e.dx, e.dy], m2 === false && n2 && (l2 = true));
    this.background !== null && (m2 === false && n2 && (Ol(a, 1, 0, 0, 1, 0, 0), a.Bm(b), m2 = true), ml(this, a, p2, g2));
    n2 && (this.background !== null || this.areaBackground !== null || f2 !== null && (f2.G & 512) !== 0 || f2 !== null && (f2.type === X2.Auto || f2.type === X2.Spot) && f2.pb() !== this) ? (nl(this, true), this.shadowVisible === null && ll(a), l2 = false) : nl(this, false);
    l2 && m2 === false && (Ol(a, 1, 0, 0, 1, 0, 0), a.Bm(b), m2 = true);
    this.Ei(a, b);
    n2 && (this.G & 512) !== 0 === true && kl(a);
    this.Qi() && n2 && ll(a);
    h && (a.restore(), k && a.fd.pop());
    this instanceof X2 && (c = a.fd.pop());
    m2 === true && a.fd.pop();
    if (this instanceof Mg2 && 1 < this.lineCount || this instanceof xf2 && 1 < this.geometry.figures.length)
      c = a.fd.pop();
    a.Xs.Up !== null && (c === null && (d === a.Fs ? (Ol(a, 1, 0, 0, 1, 0, 0), c = a.fd.pop()) : c = a.Fs), a.Xs.Up(this, c));
    this.svg = c;
    return true;
  };
  function vk2(a, b) {
    this.ownerDocument = b = b === void 0 ? x2.document : b;
    this.Up = null;
    b = b.createElement("canvas");
    b.tabIndex = 0;
    this.La = b;
    this.La.innerHTML = "This text is displayed if your browser does not support the Canvas HTML element.";
    this.context = new pl(b);
    b.D = a;
  }
  vk2.prototype.resize = function(a, b, c, d) {
    return this.width !== a || this.height !== b ? (this.width = a, this.height = b, this.style.width = c + "px", this.style.height = d + "px", true) : false;
  };
  vk2.prototype.toDataURL = function(a, b) {
    return this.La.toDataURL(a, b);
  };
  vk2.prototype.getBoundingClientRect = function() {
    return this.La.getBoundingClientRect();
  };
  vk2.prototype.focus = function() {
    this.La.focus();
  };
  vk2.prototype.Mx = function() {
    this.ownerDocument = this.La.D = null;
  };
  na2.Object.defineProperties(vk2.prototype, { width: { get: function() {
    return this.La.width;
  }, set: function(a) {
    this.La.width = a;
  } }, height: { get: function() {
    return this.La.height;
  }, set: function(a) {
    this.La.height = a;
  } }, style: { get: function() {
    return this.La.style;
  } } });
  vk2.className = "CanvasSurface";
  function pl(a) {
    a.getContext && a.getContext("2d") || C2("Browser does not support HTML Canvas Element");
    this.Y = a.getContext("2d");
    this.vt = this.xt = this.wt = "";
    this.Ym = false;
    this.hg = this.Tr = this.Sr = 0;
    this.Wl = new od2();
  }
  t2 = pl.prototype;
  t2.zy = function(a) {
    this.Y.imageSmoothingEnabled = a;
  };
  t2.arc = function(a, b, c, d, e, f2) {
    this.Y.arc(a, b, c, d, e, f2);
  };
  t2.beginPath = function() {
    this.Y.beginPath();
  };
  t2.bezierCurveTo = function(a, b, c, d, e, f2) {
    this.Y.bezierCurveTo(a, b, c, d, e, f2);
  };
  t2.clearRect = function(a, b, c, d) {
    this.Ed();
    this.Y.clearRect(a, b, c, d);
  };
  t2.clip = function() {
    this.Y.clip();
  };
  t2.closePath = function() {
    this.Y.closePath();
  };
  t2.createLinearGradient = function(a, b, c, d) {
    return this.Y.createLinearGradient(a, b, c, d);
  };
  t2.createPattern = function(a, b) {
    return this.Y.createPattern(a, b);
  };
  t2.createRadialGradient = function(a, b, c, d, e, f2) {
    return this.Y.createRadialGradient(a, b, c, d, e, f2);
  };
  t2.drawImage = function(a, b, c, d, e, f2, g2, h, k) {
    d === void 0 ? this.Y.drawImage(a, b, c) : this.Y.drawImage(a, b, c, d, e, f2, g2, h, k);
  };
  t2.fill = function() {
    this.Y.fill();
  };
  t2.fillRect = function(a, b, c, d) {
    this.Y.fillRect(a, b, c, d);
  };
  t2.fillText = function(a, b, c) {
    this.Y.fillText(a, b, c);
  };
  t2.getImageData = function(a, b, c, d) {
    return this.Y.getImageData(a, b, c, d);
  };
  t2.lineTo = function(a, b) {
    this.Y.lineTo(a, b);
  };
  t2.measureText = function(a) {
    return this.Y.measureText(a);
  };
  t2.moveTo = function(a, b) {
    this.Y.moveTo(a, b);
  };
  t2.quadraticCurveTo = function(a, b, c, d) {
    this.Y.quadraticCurveTo(a, b, c, d);
  };
  t2.rect = function(a, b, c, d) {
    this.Y.rect(a, b, c, d);
  };
  t2.restore = function() {
    this.Y.restore();
  };
  t2.save = function() {
    this.Ed();
    this.Y.save();
  };
  pl.prototype.rotate = function(a) {
    this.Wl.rotate(57.2958 * a, 0, 0);
  };
  t2 = pl.prototype;
  t2.setTransform = function(a, b, c, d, e, f2) {
    this.Wl.setTransform(a, b, c, d, e, f2);
  };
  t2.scale = function(a, b) {
    this.Wl.scale(a, b);
  };
  t2.translate = function(a, b) {
    this.Wl.translate(a, b);
  };
  t2.stroke = function() {
    this.Y.stroke();
  };
  t2.transform = function(a, b, c, d, e, f2) {
    if (a !== 1 || b !== 0 || c !== 0 || d !== 1 || e !== 0 || f2 !== 0) {
      var g2 = this.Wl, h = g2.m11 * a + g2.m21 * b;
      a = g2.m12 * a + g2.m22 * b;
      b = g2.m11 * c + g2.m21 * d;
      c = g2.m12 * c + g2.m22 * d;
      g2.dx = g2.m11 * e + g2.m21 * f2 + g2.dx;
      g2.dy = g2.m12 * e + g2.m22 * f2 + g2.dy;
      g2.m11 = h;
      g2.m12 = a;
      g2.m21 = b;
      g2.m22 = c;
    }
  };
  t2.Ed = function() {
    var a = this.Wl;
    this.Y.setTransform(a.m11, a.m12, a.m21, a.m22, a.dx, a.dy);
  };
  t2.yf = function(a) {
    if (a instanceof hl && a.type === il) {
      var b = a.Gk;
      a = a.yt;
      a > b ? (this.scale(b / a, 1), this.translate((a - b) / 2, 0)) : b > a && (this.scale(1, a / b), this.translate(0, (b - a) / 2));
      this.Ym ? this.clip() : this.fill();
      a > b ? (this.translate(-(a - b) / 2, 0), this.scale(1 / (b / a), 1)) : b > a && (this.translate(0, -(b - a) / 2), this.scale(1, 1 / (a / b)));
    } else
      this.Ym ? this.clip() : this.fill();
  };
  t2.Wi = function() {
    this.Ym || this.stroke();
  };
  t2.Uv = function(a, b, c) {
    this.Sr = a;
    this.Tr = b;
    this.hg = c;
  };
  t2.os = function(a, b) {
    var c = this.Y;
    c.setLineDash !== void 0 && (c.setLineDash(a), c.lineDashOffset = b);
  };
  t2.ms = function() {
    var a = this.Y;
    a.setLineDash !== void 0 && (a.setLineDash(Rl), a.lineDashOffset = 0);
  };
  t2.Hc = function(a) {
    a && (this.wt = "");
    this.vt = this.xt = "";
  };
  na2.Object.defineProperties(pl.prototype, { fillStyle: { get: function() {
    return this.Y.fillStyle;
  }, set: function(a) {
    this.vt !== a && (this.vt = this.Y.fillStyle = a);
  } }, font: { get: function() {
    return this.Y.font;
  }, set: function(a) {
    this.wt !== a && (this.wt = this.Y.font = a);
  } }, globalAlpha: { get: function() {
    return this.Y.globalAlpha;
  }, set: function(a) {
    this.Y.globalAlpha = a;
  } }, lineCap: {
    get: function() {
      return this.Y.lineCap;
    },
    set: function(a) {
      this.Y.lineCap = a;
    }
  }, lineDashOffset: { get: function() {
    return this.Y.lineDashOffset;
  }, set: function(a) {
    this.Y.lineDashOffset = a;
  } }, lineJoin: { get: function() {
    return this.Y.lineJoin;
  }, set: function(a) {
    this.Y.lineJoin = a;
  } }, lineWidth: { get: function() {
    return this.Y.lineWidth;
  }, set: function(a) {
    this.Y.lineWidth = a;
  } }, miterLimit: { get: function() {
    return this.Y.miterLimit;
  }, set: function(a) {
    this.Y.miterLimit = a;
  } }, shadowBlur: { get: function() {
    return this.Y.shadowBlur;
  }, set: function(a) {
    this.Y.shadowBlur = a;
  } }, shadowColor: { get: function() {
    return this.Y.shadowColor;
  }, set: function(a) {
    this.Y.shadowColor = a;
  } }, shadowOffsetX: { get: function() {
    return this.Y.shadowOffsetX;
  }, set: function(a) {
    this.Y.shadowOffsetX = a;
  } }, shadowOffsetY: { get: function() {
    return this.Y.shadowOffsetY;
  }, set: function(a) {
    this.Y.shadowOffsetY = a;
  } }, strokeStyle: { get: function() {
    return this.Y.strokeStyle;
  }, set: function(a) {
    this.xt !== a && (this.xt = this.Y.strokeStyle = a);
  } }, textAlign: { get: function() {
    return this.Y.textAlign;
  }, set: function(a) {
    this.Y.textAlign = a;
  } }, imageSmoothingEnabled: { get: function() {
    return this.Y.imageSmoothingEnabled;
  }, set: function(a) {
    this.Y.imageSmoothingEnabled = a;
  } }, clipInsteadOfFill: {
    get: function() {
      return this.Ym;
    },
    set: function(a) {
      this.Ym = a;
    }
  } });
  var Rl = Object.freeze([]);
  pl.className = "CanvasSurfaceContext";
  function Sl() {
    this.L = this.o = this.C = this.j = 0;
  }
  Sl.className = "ColorNumbers";
  function hl(a, b) {
    Tl || (Ul(), Tl = true);
    Va2(this);
    this.v = false;
    a === void 0 ? (this.ha = ol, this.Fk = "black") : typeof a === "string" ? (this.ha = ol, this.Fk = a) : (this.ha = a, this.Fk = "black");
    a = this.ha;
    a === rl ? (this.Cd = vc2, this.Tk = Bc2) : this.Tk = a === il ? this.Cd = yc2 : this.Cd = rc2;
    this.Wr = 0;
    this.Yq = NaN;
    this.ne = this.Hr = this.me = null;
    this.yt = this.Gk = 0;
    b && Object.assign(this, b);
  }
  hl.prototype.copy = function() {
    var a = new hl();
    a.ha = this.ha;
    a.Fk = this.Fk;
    a.Cd = this.Cd.I();
    a.Tk = this.Tk.I();
    a.Wr = this.Wr;
    a.Yq = this.Yq;
    this.me !== null && (a.me = this.me.copy());
    a.Hr = this.Hr;
    return a;
  };
  t2 = hl.prototype;
  t2.freeze = function() {
    this.v = true;
    this.me !== null && this.me.freeze();
    return this;
  };
  t2.ea = function() {
    Object.isFrozen(this) && C2("cannot thaw constant: " + this);
    this.v = false;
    this.me !== null && this.me.ea();
    return this;
  };
  t2.gb = function(a) {
    a.classType === hl && (this.type = a);
  };
  t2.toString = function() {
    var a = "Brush(";
    if (this.type === ol)
      a += this.color;
    else if (a = this.type === rl ? a + "Linear " : this.type === il ? a + "Radial " : this.type === ql ? a + "Pattern " : a + "(unknown) ", a += this.start + " " + this.end, this.colorStops !== null)
      for (var b = this.colorStops.iterator; b.next(); )
        a += " " + b.key + ":" + b.value;
    return a + ")";
  };
  t2.addColorStop = function(a, b) {
    this.v && wa2(this);
    (typeof a !== "number" || !isFinite(a) || 1 < a || 0 > a) && xa2(a, "0 <= loc <= 1", hl, "addColorStop:loc");
    this.me === null && (this.me = new H2());
    this.me.add(a, b);
    this.ha === ol && (this.type = rl);
    this.ne = null;
    return this;
  };
  t2.rA = function(a, b) {
    this.v && wa2(this);
    a = a === void 0 || typeof a !== "number" ? 0.2 : a;
    b = b === void 0 ? Vl : b;
    if (this.type === ol)
      Rh2(this.color), this.color = Wl(a, b);
    else if ((this.type === rl || this.type === il) && this.colorStops !== null)
      for (var c = this.colorStops.iterator; c.next(); )
        Rh2(c.value), this.addColorStop(c.key, Wl(a, b));
    return this;
  };
  function Xl(a, b, c) {
    b = b === void 0 || typeof b !== "number" ? 0.2 : b;
    c = c === void 0 ? Vl : c;
    Rh2(a);
    return Wl(b, c);
  }
  t2.sz = function(a, b) {
    this.v && wa2(this);
    a = a === void 0 || typeof a !== "number" ? 0.2 : a;
    b = b === void 0 ? Vl : b;
    if (this.type === ol)
      Rh2(this.color), this.color = Wl(-a, b);
    else if ((this.type === rl || this.type === il) && this.colorStops !== null)
      for (var c = this.colorStops.iterator; c.next(); )
        Rh2(c.value), this.addColorStop(c.key, Wl(-a, b));
    return this;
  };
  function Yl(a, b, c) {
    b = b === void 0 || typeof b !== "number" ? 0.2 : b;
    c = c === void 0 ? Vl : c;
    Rh2(a);
    return Wl(-b, c);
  }
  function Zl(a, b, c) {
    Rh2(a);
    a = $l.j;
    var d = $l.C, e = $l.o, f2 = $l.L;
    Rh2(b);
    c === void 0 && (c = 0.5);
    return "rgba(" + Math.round(($l.j - a) * c + a) + ", " + Math.round(($l.C - d) * c + d) + ", " + Math.round(($l.o - e) * c + e) + ", " + Math.round(($l.L - f2) * c + f2) + ")";
  }
  t2.hy = function() {
    if (this.type === ol)
      return am(this.color);
    if ((this.type === rl || this.type === il) && this.colorStops !== null) {
      var a = this.colorStops;
      if (this.type === il)
        return am(a.first().value);
      if (a.get(0.5) !== null)
        return am(a.get(0.5));
      if (a.count === 2)
        return a = a.ya(), am(Zl(a[0].value, a[1].value));
      for (var b = a.iterator, c = -1, d = -1, e = 1, f2 = 1; b.next(); ) {
        var g2 = b.key, h = Math.abs(0.5 - b.key);
        e > f2 && h < e ? (c = g2, e = h) : f2 >= e && h < f2 && (d = g2, f2 = h);
      }
      c > d && (f2 = c, c = d, d = f2, f2 = e);
      e = d - c;
      return am(Zl(a.get(c), a.get(d), 1 - f2 / e));
    }
    return false;
  };
  function am(a) {
    if (!a)
      return false;
    if (a instanceof hl)
      return a.hy();
    Rh2(a);
    return 128 > (299 * $l.j + 587 * $l.C + 114 * $l.o) / 1e3;
  }
  function Wl(a, b) {
    switch (b) {
      case Vl:
        b = 100 * bm($l.j);
        var c = 100 * bm($l.C), d = 100 * bm($l.o);
        cm.j = 0.4124564 * b + 0.3575761 * c + 0.1804375 * d;
        cm.C = 0.2126729 * b + 0.7151522 * c + 0.072175 * d;
        cm.o = 0.0193339 * b + 0.119192 * c + 0.9503041 * d;
        cm.L = $l.L;
        b = dm(cm.j / em[0]);
        c = dm(cm.C / em[1]);
        d = dm(cm.o / em[2]);
        fm.j = 116 * c - 16;
        fm.C = 500 * (b - c);
        fm.o = 200 * (c - d);
        fm.L = cm.L;
        fm.j = Math.min(100, Math.max(0, fm.j + 100 * a));
        a = (fm.j + 16) / 116;
        b = a - fm.o / 200;
        cm.j = em[0] * gm(fm.C / 500 + a);
        cm.C = em[1] * (fm.j > hm * im ? Math.pow(a, 3) : fm.j / hm);
        cm.o = em[2] * gm(b);
        cm.L = fm.L;
        a = -0.969266 * cm.j + 1.8760108 * cm.C + 0.041556 * cm.o;
        b = 0.0556434 * cm.j + -0.2040259 * cm.C + 1.0572252 * cm.o;
        $l.j = 255 * jm((3.2404542 * cm.j + -1.5371385 * cm.C + -0.4985314 * cm.o) / 100);
        $l.C = 255 * jm(a / 100);
        $l.o = 255 * jm(b / 100);
        $l.L = cm.L;
        $l.j = Math.round($l.j);
        255 < $l.j ? $l.j = 255 : 0 > $l.j && ($l.j = 0);
        $l.C = Math.round($l.C);
        255 < $l.C ? $l.C = 255 : 0 > $l.C && ($l.C = 0);
        $l.o = Math.round($l.o);
        255 < $l.o ? $l.o = 255 : 0 > $l.o && ($l.o = 0);
        return "rgba(" + $l.j + ", " + $l.C + ", " + $l.o + ", " + $l.L + ")";
      case km:
        return Sh2(), Th2.o = Math.min(100, Math.max(0, Th2.o + 100 * a)), "hsla(" + Th2.j + ", " + Th2.C + "%, " + Th2.o + "%, " + Th2.L + ")";
      default:
        C2("Unknown color space: " + b);
    }
  }
  function Rh2(a) {
    Tl || (Ul(), Tl = true);
    var b = lm;
    if (b !== null) {
      b.clearRect(0, 0, 1, 1);
      b.fillStyle = "#000000";
      var c = b.fillStyle;
      b.fillStyle = a;
      b.fillStyle !== c ? (b.fillRect(0, 0, 1, 1), a = b.getImageData(0, 0, 1, 1).data, $l.j = a[0], $l.C = a[1], $l.o = a[2], $l.L = a[3] / 255) : (b.fillStyle = "#FFFFFF", b.fillStyle = a, $l.j = 0, $l.C = 0, $l.o = 0, $l.L = 1);
    }
  }
  function Sh2() {
    var a = $l.j / 255, b = $l.C / 255, c = $l.o / 255, d = Math.max(a, b, c), e = Math.min(a, b, c), f2 = d - e;
    e = (d + e) / 2;
    if (f2 === 0)
      var g2 = a = 0;
    else {
      switch (d) {
        case a:
          g2 = (b - c) / f2 % 6;
          break;
        case b:
          g2 = (c - a) / f2 + 2;
          break;
        case c:
          g2 = (a - b) / f2 + 4;
      }
      g2 *= 60;
      0 > g2 && (g2 += 360);
      a = f2 / (1 - Math.abs(2 * e - 1));
    }
    Th2.j = Math.round(g2);
    Th2.C = Math.round(100 * a);
    Th2.o = Math.round(100 * e);
    Th2.L = $l.L;
  }
  function bm(a) {
    a /= 255;
    return 0.04045 >= a ? a / 12.92 : Math.pow((a + 0.055) / 1.055, 2.4);
  }
  function jm(a) {
    return 31308e-7 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - 0.055;
  }
  function dm(a) {
    return a > im ? Math.pow(a, 1 / 3) : (hm * a + 16) / 116;
  }
  function gm(a) {
    var b = a * a * a;
    return b > im ? b : (116 * a - 16) / hm;
  }
  function Il(a, b) {
    typeof a !== "string" && (a instanceof hl || C2("Value for " + b + " must be a color string or a Brush, not " + a));
  }
  function Ul() {
    lm = Kg2 ? new vk2(null).context : null;
  }
  na2.Object.defineProperties(hl.prototype, { type: { get: function() {
    return this.ha;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.ha = a;
    this.start.Bc() && (a === rl ? this.start = vc2 : a === il && (this.start = yc2));
    this.end.Bc() && (a === rl ? this.end = Bc2 : a === il && (this.end = yc2));
    this.ne = null;
  } }, color: { get: function() {
    return this.Fk;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Fk = a;
    this.ne = null;
  } }, start: { get: function() {
    return this.Cd;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Cd = a.I();
    this.ne = null;
  } }, end: { get: function() {
    return this.Tk;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Tk = a.I();
    this.ne = null;
  } }, startRadius: { get: function() {
    return this.Wr;
  }, set: function(a) {
    this.v && wa2(this, a);
    0 > a && xa2(a, ">= zero", hl, "startRadius");
    this.Wr = a;
    this.ne = null;
  } }, endRadius: { get: function() {
    return this.Yq;
  }, set: function(a) {
    this.v && wa2(this, a);
    0 > a && xa2(a, ">= zero", hl, "endRadius");
    this.Yq = a;
    this.ne = null;
  } }, colorStops: { get: function() {
    return this.me;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.me = a;
    this.ne = null;
  } }, pattern: { get: function() {
    return this.Hr;
  }, set: function(a) {
    this.v && wa2(this, a);
    this.Hr = a;
    this.ne = null;
  } } });
  hl.prototype.isDark = hl.prototype.hy;
  hl.prototype.darkenBy = hl.prototype.sz;
  hl.prototype.lightenBy = hl.prototype.rA;
  hl.prototype.addColorStop = hl.prototype.addColorStop;
  var im = 216 / 24389, hm = 24389 / 27, em = [95.047, 100, 108.883], lm = null, $l = new Sl(), Th2 = new Sl(), cm = new Sl(), fm = new Sl(), Tl = false;
  hl.className = "Brush";
  var ol;
  hl.Solid = ol = new D2(hl, "Solid", 0);
  var rl;
  hl.Linear = rl = new D2(hl, "Linear", 1);
  var il;
  hl.Radial = il = new D2(hl, "Radial", 2);
  var ql;
  hl.Pattern = ql = new D2(hl, "Pattern", 4);
  var Vl;
  hl.Lab = Vl = new D2(hl, "Lab", 5);
  var km;
  hl.HSL = km = new D2(hl, "HSL", 6);
  hl.randomColor = function(a, b) {
    a === void 0 && (a = 128);
    b === void 0 && (b = Math.max(a, 255));
    var c = Math.abs(b - a);
    b = Math.floor(a + Math.random() * c).toString(16);
    var d = Math.floor(a + Math.random() * c).toString(16);
    a = Math.floor(a + Math.random() * c).toString(16);
    2 > b.length && (b = "0" + b);
    2 > d.length && (d = "0" + d);
    2 > a.length && (a = "0" + a);
    return "#" + b + d + a;
  };
  hl.isValidColor = function(a) {
    if (a === "black")
      return true;
    if (a === "")
      return false;
    Tl || (Ul(), Tl = true);
    var b = lm;
    if (b === null)
      return true;
    b.fillStyle = "#000000";
    var c = b.fillStyle;
    b.fillStyle = a;
    if (b.fillStyle !== c)
      return true;
    b.fillStyle = "#FFFFFF";
    c = b.fillStyle;
    b.fillStyle = a;
    return b.fillStyle !== c;
  };
  hl.lighten = function(a) {
    return Xl(a);
  };
  hl.lightenBy = Xl;
  hl.darken = function(a) {
    return Yl(a);
  };
  hl.darkenBy = Yl;
  hl.mix = Zl;
  hl.isDark = am;
  function Fl() {
    this.na = "Base";
  }
  Fl.prototype.measure = function() {
  };
  Fl.prototype.uA = function(a, b, c, d, e) {
    a.measure(b, c, d, e);
  };
  Fl.prototype.arrange = function() {
  };
  Fl.prototype.gz = function(a, b, c, d, e, f2) {
    a.arrange(b, c, d, e, f2);
  };
  Fl.prototype.EA = function(a) {
    a.ck();
  };
  Fl.prototype.pc = function() {
  };
  na2.Object.defineProperties(Fl.prototype, { name: { get: function() {
    return this.na;
  }, set: function(a) {
    this.na = a;
  } }, classType: { get: function() {
    return X2;
  } } });
  Fl.prototype.remeasureObject = Fl.prototype.EA;
  Fl.prototype.arrangeElement = Fl.prototype.gz;
  Fl.prototype.measureElement = Fl.prototype.uA;
  Fl.className = "PanelLayout";
  function mm() {
    this.na = "Base";
  }
  ma2(mm, Fl);
  mm.prototype.measure = function(a, b, c, d, e, f2, g2) {
    var h = d.length;
    a = nm(a);
    for (var k = 0; k < h; k++) {
      var l2 = d[k];
      if (l2.visible || l2 === a) {
        var m2 = l2.margin, n2 = m2.right + m2.left;
        m2 = m2.top + m2.bottom;
        l2.measure(b, c, f2, g2);
        var p2 = l2.measuredBounds;
        n2 = Math.max(p2.width + n2, 0);
        m2 = Math.max(p2.height + m2, 0);
        p2 = l2.position.x;
        var r2 = l2.position.y;
        isFinite(p2) || (p2 = 0);
        isFinite(r2) || (r2 = 0);
        l2 instanceof xf2 && l2.isGeometryPositioned && (l2 = l2.strokeWidth / 2, p2 -= l2, r2 -= l2);
        ac2(e, p2, r2, n2, m2);
      }
    }
  };
  mm.prototype.arrange = function(a, b, c) {
    var d = b.length, e = a.padding;
    a = c.x - e.left;
    c = c.y - e.top;
    for (e = 0; e < d; e++) {
      var f2 = b[e], g2 = f2.measuredBounds, h = f2.margin, k = f2.position.x, l2 = f2.position.y;
      k = isNaN(k) ? -a : k - a;
      l2 = isNaN(l2) ? -c : l2 - c;
      if (f2 instanceof xf2 && f2.isGeometryPositioned) {
        var m2 = f2.strokeWidth / 2;
        k -= m2;
        l2 -= m2;
      }
      f2.visible && f2.arrange(k + h.left, l2 + h.top, g2.width, g2.height);
    }
  };
  function om() {
    this.na = "Base";
  }
  ma2(om, Fl);
  om.prototype.measure = function(a, b, c, d, e, f2, g2) {
    var h = d.length;
    b = Ea2();
    f2 = nm(a);
    for (var k = 0; k < h; k++) {
      var l2 = d[k];
      if (l2.visible || l2 === f2) {
        var m2 = cl(l2, false);
        if (m2 !== pg2 && m2 !== Qk)
          b.push(l2);
        else {
          l2.measure(Infinity, c, 0, g2);
          m2 = l2.margin;
          l2 = l2.measuredBounds;
          var n2 = Math.max(l2.height + m2.top + m2.bottom, 0);
          e.width += Math.max(l2.width + m2.right + m2.left, 0);
          e.height = Math.max(e.height, n2);
        }
      }
    }
    d = b.length;
    a.desiredSize.height ? c = Math.min(a.desiredSize.height, a.maxSize.height) : e.height !== 0 && (c = Math.min(e.height, a.maxSize.height));
    for (a = 0; a < d; a++)
      if (k = b[a], k.visible || k === f2)
        m2 = k.margin, h = m2.right + m2.left, m2 = m2.top + m2.bottom, k.measure(Infinity, c, 0, g2), k = k.measuredBounds, m2 = Math.max(k.height + m2, 0), e.width += Math.max(k.width + h, 0), e.height = Math.max(e.height, m2);
    Ia2(b);
  };
  om.prototype.arrange = function(a, b, c) {
    for (var d = b.length, e = a.padding, f2 = e.top, g2 = a.isOpposite, h = g2 ? c.width : e.left, k = 0; k < d; k++) {
      var l2 = f2, m2 = b[k];
      if (m2.visible) {
        var n2 = m2.measuredBounds, p2 = m2.margin, r2 = p2.top + p2.bottom, q2 = f2 + e.bottom, u2 = n2.height, w = cl(m2, false);
        if (isNaN(m2.desiredSize.height) && w === qd2 || w === Rk)
          u2 = Math.max(c.height - r2 - q2, 0);
        r2 = u2 + r2 + q2;
        q2 = m2.alignment;
        q2.Nb() && (q2 = a.defaultAlignment);
        q2.hb() || (q2 = yc2);
        g2 && (h -= n2.width + p2.left + p2.right);
        m2.arrange(h + q2.offsetX + p2.left, l2 + q2.offsetY + p2.top + (c.height * q2.y - r2 * q2.y), n2.width, u2);
        g2 || (h += n2.width + p2.left + p2.right);
      }
    }
  };
  function pm() {
    this.na = "Base";
  }
  ma2(pm, Fl);
  pm.prototype.measure = function(a, b, c, d, e, f2) {
    var g2 = d.length;
    c = Ea2();
    for (var h = nm(a), k = 0; k < g2; k++) {
      var l2 = d[k];
      if (l2.visible || l2 === h) {
        var m2 = cl(l2, false);
        if (m2 !== pg2 && m2 !== Rk)
          c.push(l2);
        else {
          var n2 = l2.margin;
          m2 = n2.right + n2.left;
          n2 = n2.top + n2.bottom;
          l2.measure(b, Infinity, f2, 0);
          l2 = l2.measuredBounds;
          Rb2(e, Math.max(e.width, Math.max(l2.width + m2, 0)), e.height + Math.max(l2.height + n2, 0));
        }
      }
    }
    d = c.length;
    if (d !== 0) {
      a.desiredSize.width ? b = Math.min(a.desiredSize.width, a.maxSize.width) : e.width !== 0 && (b = Math.min(e.width, a.maxSize.width));
      for (a = 0; a < d; a++)
        if (k = c[a], k.visible || k === h)
          l2 = k.margin, g2 = l2.right + l2.left, l2 = l2.top + l2.bottom, k.measure(b, Infinity, f2, 0), k = k.measuredBounds, l2 = Math.max(k.height + l2, 0), e.width = Math.max(e.width, Math.max(k.width + g2, 0)), e.height += l2;
      Ia2(c);
    }
  };
  pm.prototype.arrange = function(a, b, c) {
    for (var d = b.length, e = a.padding, f2 = e.left, g2 = a.isOpposite, h = g2 ? c.height : e.top, k = 0; k < d; k++) {
      var l2 = f2, m2 = b[k];
      if (m2.visible) {
        var n2 = m2.measuredBounds, p2 = m2.margin, r2 = p2.left + p2.right, q2 = f2 + e.right, u2 = n2.width, w = cl(m2, false);
        if (isNaN(m2.desiredSize.width) && w === qd2 || w === Qk)
          u2 = Math.max(c.width - r2 - q2, 0);
        r2 = u2 + r2 + q2;
        q2 = m2.alignment;
        q2.Nb() && (q2 = a.defaultAlignment);
        q2.hb() || (q2 = yc2);
        g2 && (h -= n2.height + p2.bottom + p2.top);
        m2.arrange(l2 + q2.offsetX + p2.left + (c.width * q2.x - r2 * q2.x), h + q2.offsetY + p2.top, u2, n2.height);
        g2 || (h += n2.height + p2.bottom + p2.top);
      }
    }
  };
  function qm() {
    this.na = "Base";
  }
  ma2(qm, Fl);
  qm.prototype.measure = function(a, b, c, d, e, f2, g2) {
    var h = d.length, k = a.pb(), l2 = k.margin, m2 = l2.right + l2.left, n2 = l2.top + l2.bottom;
    k.measure(b, c, f2, g2);
    var p2 = k.measuredBounds;
    f2 = p2.width;
    g2 = p2.height;
    var r2 = Math.max(f2 + m2, 0);
    var q2 = Math.max(g2 + n2, 0);
    var u2 = a.isClipping, w = N2.allocAt(-l2.left, -l2.top, r2, q2), v2 = N2.allocAt(0, 0, f2, g2);
    rm(k, v2, true);
    f2 = v2.width;
    g2 = v2.height;
    for (var z2 = true, y2 = nm(a), B2 = 0; B2 < h; B2++) {
      var A2 = d[B2], E = b, Q2 = c;
      if (A2 !== k && (A2.visible || A2 === y2)) {
        l2 = A2.margin;
        r2 = l2.right + l2.left;
        q2 = l2.top + l2.bottom;
        p2 = cl(A2, false);
        switch (p2) {
          case qd2:
            E = f2;
            Q2 = g2;
            break;
          case Qk:
            E = f2;
            break;
          case Rk:
            Q2 = g2;
        }
        A2.measure(E, Q2, 0, 0);
        p2 = A2.measuredBounds;
        r2 = Math.max(p2.width + r2, 0);
        q2 = Math.max(p2.height + q2, 0);
        E = A2.alignment;
        E.Nb() && (E = a.defaultAlignment);
        E.hb() || (E = yc2);
        var J2 = A2.alignmentFocus;
        J2.Nb() && (J2 = yc2);
        Q2 = null;
        A2 instanceof X2 && A2.Re !== "" && (Q2 = A2.Ya(A2.Re), Q2 === A2 && (Q2 = null));
        var S2 = v2.x, L2 = v2.y;
        if (Q2 !== null) {
          A2.arrange(0, 0, p2.width, p2.height);
          l2 = Q2.actualBounds;
          l2 = K2.allocAt(l2.x + (J2.x * l2.width - J2.offsetX), l2.y + (J2.y * l2.height - J2.offsetY));
          for (Q2 = Q2.panel; Q2 !== A2; )
            Q2.transform.Aa(l2), Q2 = Q2.panel;
          S2 += E.x * f2 + E.offsetX - l2.x;
          L2 += E.y * g2 + E.offsetY - l2.y;
          K2.free(l2);
        } else
          S2 += E.x * f2 + E.offsetX - (J2.x * p2.width + J2.offsetX) - l2.left, L2 += E.y * g2 + E.offsetY - (J2.y * p2.height + J2.offsetY) - l2.top;
        z2 ? (z2 = false, e.h(S2, L2, r2, q2)) : ac2(e, S2, L2, r2, q2);
      }
    }
    z2 ? e.assign(w) : u2 ? e.hv(v2.x, v2.y, v2.width, v2.height) : ac2(e, w.x, w.y, w.width, w.height);
    N2.free(w);
    N2.free(v2);
    p2 = k.stretch;
    p2 === Pk && (p2 = cl(k, false));
    switch (p2) {
      case pg2:
        return;
      case qd2:
        if (!isFinite(b) && !isFinite(c))
          return;
        break;
      case Qk:
        if (!isFinite(b))
          return;
        break;
      case Rk:
        if (!isFinite(c))
          return;
    }
    p2 = k.measuredBounds;
    f2 = p2.width;
    g2 = p2.height;
    r2 = Math.max(f2 + m2, 0);
    q2 = Math.max(g2 + n2, 0);
    l2 = k.margin;
    v2 = N2.allocAt(-l2.left, -l2.top, r2, q2);
    rm(k, v2, true);
    f2 = v2.width;
    g2 = v2.height;
    for (b = 0; b < h; b++)
      c = d[b], c === k || !c.visible && c !== y2 || (l2 = c.margin, r2 = l2.right + l2.left, q2 = l2.top + l2.bottom, p2 = c.measuredBounds, r2 = Math.max(p2.width + r2, 0), q2 = Math.max(p2.height + q2, 0), m2 = c.alignment, m2.Nb() && (m2 = a.defaultAlignment), m2.hb() || (m2 = yc2), c = c.alignmentFocus, c.Nb() && (c = yc2), z2 ? (z2 = false, e.h(m2.x * f2 + m2.offsetX - (c.x * p2.width + c.offsetX) - l2.left, m2.y * g2 + m2.offsetY - (c.y * p2.height + c.offsetY) - l2.top, r2, q2)) : ac2(e, m2.x * f2 + m2.offsetX - (c.x * p2.width + c.offsetX) - l2.left, m2.y * g2 + m2.offsetY - (c.y * p2.height + c.offsetY) - l2.top, r2, q2));
    z2 ? e.assign(w) : u2 ? e.hv(v2.x, v2.y, v2.width, v2.height) : ac2(e, w.x, w.y, w.width, w.height);
    N2.free(v2);
  };
  qm.prototype.arrange = function(a, b, c) {
    var d = b.length, e = a.pb(), f2 = e.measuredBounds, g2 = f2.width, h = f2.height, k = a.padding;
    f2 = k.left;
    k = k.top;
    var l2 = f2 - c.x, m2 = k - c.y;
    e.arrange(l2, m2, g2, h);
    g2 = N2.allocAt(0, 0, g2, h);
    rm(e, g2, false);
    for (h = 0; h < d; h++) {
      var n2 = b[h];
      if (n2 !== e) {
        l2 = n2.measuredBounds;
        var p2 = l2.width, r2 = l2.height;
        m2 = n2.alignment;
        m2.Nb() && (m2 = a.defaultAlignment);
        m2.hb() || (m2 = yc2);
        var q2 = n2.alignmentFocus;
        q2.Nb() && (q2 = yc2);
        l2 = null;
        n2 instanceof X2 && n2.Re !== "" && (l2 = n2.Ya(n2.Re), l2 === n2 && (l2 = null));
        if (l2 !== null) {
          var u2 = l2.actualBounds;
          q2 = K2.allocAt(u2.x + (q2.x * u2.width - q2.offsetX), u2.y + (q2.y * u2.height - q2.offsetY));
          for (l2 = l2.panel; l2 !== n2; )
            l2.transform.Aa(q2), l2 = l2.panel;
          l2 = m2.x * g2.width + m2.offsetX - q2.x;
          m2 = m2.y * g2.height + m2.offsetY - q2.y;
          K2.free(q2);
        } else
          l2 = m2.x * g2.width + m2.offsetX - (q2.x * p2 + q2.offsetX), m2 = m2.y * g2.height + m2.offsetY - (q2.y * r2 + q2.offsetY);
        l2 += g2.x - c.x;
        m2 += g2.y - c.y;
        n2.visible && n2.arrange(f2 + l2, k + m2, p2, r2);
      }
    }
    N2.free(g2);
  };
  function rm(a, b, c) {
    var d = null;
    a instanceof X2 && a.Re !== "" && (d = a.Ya(a.Re), d === a && (d = null));
    if (d !== null)
      for (c && a.arrange(0, 0, b.width, b.height), b.assign(d.actualBounds), d = d.panel; d !== a; )
        d.transform.xq(b), d = d.panel;
  }
  function sm() {
    this.na = "Base";
  }
  ma2(sm, Fl);
  sm.prototype.measure = function(a, b, c, d, e, f2, g2) {
    var h = d.length, k = a.pb(), l2 = k.margin, m2 = b, n2 = c, p2 = l2.right + l2.left, r2 = l2.top + l2.bottom;
    k.measure(b, c, f2, g2);
    l2 = k.measuredBounds;
    var q2 = 0, u2 = null;
    k instanceof xf2 && (u2 = k, q2 = u2.strokeWidth * u2.scale);
    var w = Math.max(l2.width + p2, 0);
    l2 = Math.max(l2.height + r2, 0);
    var v2 = tm(k), z2 = v2.x * w + v2.offsetX;
    v2 = v2.y * l2 + v2.offsetY;
    var y2 = um(k), B2 = y2.x * w + y2.offsetX;
    y2 = y2.y * l2 + y2.offsetY;
    isFinite(b) && (m2 = Math.max(Math.abs(z2 - B2) - q2, 0));
    isFinite(c) && (n2 = Math.max(Math.abs(v2 - y2) - q2, 0));
    q2 = Gb2.alloc();
    q2.h(0, 0);
    a = nm(a);
    for (y2 = 0; y2 < h; y2++)
      v2 = d[y2], v2 === k || !v2.visible && v2 !== a || (l2 = v2.margin, w = l2.right + l2.left, z2 = l2.top + l2.bottom, v2.measure(m2, n2, 0, 0), l2 = v2.measuredBounds, w = Math.max(l2.width + w, 0), l2 = Math.max(l2.height + z2, 0), q2.h(Math.max(w, q2.width), Math.max(l2, q2.height)));
    if (h === 1)
      e.width = w, e.height = l2, Gb2.free(q2);
    else {
      v2 = tm(k);
      y2 = um(k);
      h = d = 0;
      y2.x !== v2.x && y2.y !== v2.y && (d = q2.width / Math.abs(y2.x - v2.x), h = q2.height / Math.abs(y2.y - v2.y));
      Gb2.free(q2);
      q2 = 0;
      u2 !== null && (q2 = u2.strokeWidth * u2.scale, qg2(u2) === rg2 && (d = h = Math.max(d, h)));
      d += Math.abs(v2.offsetX) + Math.abs(y2.offsetX) + q2;
      h += Math.abs(v2.offsetY) + Math.abs(y2.offsetY) + q2;
      u2 = k.stretch;
      u2 === Pk && (u2 = cl(k, false));
      switch (u2) {
        case pg2:
          g2 = f2 = 0;
          break;
        case qd2:
          isFinite(b) && (d = b);
          isFinite(c) && (h = c);
          break;
        case Qk:
          isFinite(b) && (d = b);
          g2 = 0;
          break;
        case Rk:
          f2 = 0, isFinite(c) && (h = c);
      }
      k.ck();
      k.measure(d, h, f2, g2);
      e.width = k.measuredBounds.width + p2;
      e.height = k.measuredBounds.height + r2;
    }
  };
  sm.prototype.arrange = function(a, b) {
    var c = b.length, d = a.pb(), e = d.measuredBounds, f2 = N2.alloc();
    f2.h(0, 0, 1, 1);
    var g2 = d.margin, h = g2.left;
    g2 = g2.top;
    var k = a.padding, l2 = k.left;
    k = k.top;
    d.arrange(l2 + h, k + g2, e.width, e.height);
    var m2 = tm(d), n2 = um(d), p2 = m2.y * e.height + m2.offsetY, r2 = n2.x * e.width + n2.offsetX;
    n2 = n2.y * e.height + n2.offsetY;
    f2.x = m2.x * e.width + m2.offsetX;
    f2.y = p2;
    ac2(f2, r2, n2, 0, 0);
    f2.x += h + l2;
    f2.y += g2 + k;
    for (e = 0; e < c; e++)
      h = b[e], h !== d && (l2 = h.measuredBounds, g2 = h.margin, k = Math.max(l2.width + g2.right + g2.left, 0), m2 = Math.max(l2.height + g2.top + g2.bottom, 0), p2 = h.alignment, p2.Nb() && (p2 = a.defaultAlignment), p2.hb() || (p2 = yc2), k = f2.width * p2.x + p2.offsetX - k * p2.x + g2.left + f2.x, g2 = f2.height * p2.y + p2.offsetY - m2 * p2.y + g2.top + f2.y, h.visible && (bc2(f2.x, f2.y, f2.width, f2.height, k, g2, l2.width, l2.height) ? h.arrange(k, g2, l2.width, l2.height) : h.arrange(k, g2, l2.width, l2.height, new N2(f2.x, f2.y, f2.width, f2.height))));
    N2.free(f2);
  };
  function vm() {
    this.na = "Base";
    this.name = "Table";
  }
  ma2(vm, Fl);
  vm.prototype.measure = function(a, b, c, d, e) {
    for (var f2 = d.length, g2 = Ea2(), h = Ea2(), k = 0; k < f2; k++) {
      var l2 = d[k], m2 = l2 instanceof X2 ? l2 : null;
      if (m2 === null || m2.type !== X2.TableRow && m2.type !== X2.TableColumn || !l2.visible)
        g2.push(l2);
      else {
        h.push(m2);
        for (var n2 = m2.T.m, p2 = n2.length, r2 = 0; r2 < p2; r2++) {
          var q2 = n2[r2];
          m2.type === X2.TableRow ? q2.row = l2.row : m2.type === X2.TableColumn && (q2.column = l2.column);
          g2.push(q2);
        }
      }
    }
    f2 = g2.length;
    f2 === 0 && (a.getRowDefinition(0), a.getColumnDefinition(0));
    for (var u2 = [], w = 0; w < f2; w++) {
      var v2 = g2[w];
      dj2(v2, true);
      dl(v2, true);
      u2[v2.row] || (u2[v2.row] = []);
      u2[v2.row][v2.column] || (u2[v2.row][v2.column] = []);
      u2[v2.row][v2.column].push(v2);
    }
    Ia2(g2);
    var z2 = Ea2(), y2 = Ea2(), B2 = Ea2(), A2 = { count: 0 }, E = { count: 0 }, Q2 = b, J2 = c, S2 = a.ob;
    f2 = S2.length;
    for (var L2 = 0; L2 < f2; L2++) {
      var I2 = S2[L2];
      I2 !== void 0 && (I2.actual = 0);
    }
    S2 = a.ib;
    f2 = S2.length;
    for (var ja2 = 0; ja2 < f2; ja2++)
      I2 = S2[ja2], I2 !== void 0 && (I2.actual = 0);
    for (var ca2 = u2.length, pa2 = 0, Na2 = 0; Na2 < ca2; Na2++)
      u2[Na2] && (pa2 = Math.max(pa2, u2[Na2].length));
    var fb2 = Math.min(a.topIndex, ca2 - 1), Ga2 = Math.min(a.leftIndex, pa2 - 1), Ha2 = 0;
    ca2 = u2.length;
    for (var ud2 = nm(a), Wb2 = 0; Wb2 < ca2; Wb2++)
      if (u2[Wb2]) {
        pa2 = u2[Wb2].length;
        var Xb2 = a.getRowDefinition(Wb2);
        Xb2.actual = 0;
        for (var gb2 = Xb2.cc = 0; gb2 < pa2; gb2++)
          if (u2[Wb2][gb2]) {
            var vd2 = a.getColumnDefinition(gb2);
            z2[gb2] === void 0 && (vd2.actual = 0, vd2.cc = 0, z2[gb2] = true);
            for (var Zf2 = u2[Wb2][gb2], $f2 = Zf2.length, Fe2 = 0; Fe2 < $f2; Fe2++) {
              var Bb2 = Zf2[Fe2];
              if (Bb2.visible || Bb2 === ud2) {
                var oh2 = 1 < Bb2.rowSpan || 1 < Bb2.columnSpan;
                oh2 && (Wb2 < fb2 || gb2 < Ga2 || y2.push(Bb2));
                var ag2 = Bb2.margin, ph2 = ag2.right + ag2.left, qh2 = ag2.top + ag2.bottom;
                var cb2 = vl(Bb2, Xb2, vd2, false);
                var vi2 = Bb2.desiredSize, Xj2 = !isNaN(vi2.height), bg2 = !isNaN(vi2.width) && Xj2;
                oh2 || cb2 === pg2 || bg2 || Wb2 < fb2 || gb2 < Ga2 || (A2[gb2] !== void 0 || cb2 !== qd2 && cb2 !== Qk || (A2[gb2] = -1, A2.count++), E[Wb2] !== void 0 || cb2 !== qd2 && cb2 !== Rk || (E[Wb2] = -1, E.count++), B2.push(Bb2));
                Bb2.measure(Infinity, Infinity, 0, 0);
                if (!(Wb2 < fb2 || gb2 < Ga2)) {
                  var hd2 = Bb2.measuredBounds, ic2 = Math.max(hd2.width + ph2, 0), zf2 = Math.max(hd2.height + qh2, 0);
                  if (Bb2.rowSpan === 1 && (cb2 === pg2 || cb2 === Qk)) {
                    I2 = a.getRowDefinition(Wb2);
                    var sc2 = I2.Ic();
                    Ha2 = Math.max(zf2 - I2.actual, 0);
                    Ha2 + sc2 > J2 && (Ha2 = Math.max(J2 - sc2, 0));
                    var cg2 = I2.la === 0;
                    I2.cc = I2.cc + Ha2;
                    I2.actual = I2.la + Ha2;
                    J2 = Math.max(J2 - (Ha2 + (cg2 ? sc2 : 0)), 0);
                  }
                  if (Bb2.columnSpan === 1 && (cb2 === pg2 || cb2 === Rk)) {
                    I2 = a.getColumnDefinition(gb2);
                    var rh2 = I2.Ic();
                    Ha2 = Math.max(ic2 - I2.actual, 0);
                    Ha2 + rh2 > Q2 && (Ha2 = Math.max(Q2 - rh2, 0));
                    var qn = I2.la === 0;
                    I2.cc = I2.cc + Ha2;
                    I2.actual = I2.la + Ha2;
                    Q2 = Math.max(Q2 - (Ha2 + (qn ? rh2 : 0)), 0);
                  }
                  oh2 && Bb2.ck();
                }
              }
            }
          }
      }
    Ia2(z2);
    var Dd2 = 0, he2 = 0;
    f2 = a.columnCount;
    for (var dg2 = 0; dg2 < f2; dg2++) {
      var eg2 = a.ib[dg2];
      eg2 !== void 0 && (Dd2 += eg2.cc, eg2.cc !== 0 && (Dd2 += eg2.Ic()));
    }
    f2 = a.rowCount;
    for (var Vc2 = 0; Vc2 < f2; Vc2++) {
      var ie2 = a.ob[Vc2];
      ie2 !== void 0 && (he2 += ie2.cc, ie2.cc !== 0 && (he2 += ie2.Ic()));
    }
    Q2 = Math.max(b - Dd2, 0);
    var cc2 = J2 = Math.max(c - he2, 0), sh2 = Q2;
    f2 = B2.length;
    for (var th2 = 0; th2 < f2; th2++) {
      var Wc2 = B2[th2], wi2 = a.getRowDefinition(Wc2.row), je2 = a.getColumnDefinition(Wc2.column), Ye2 = Wc2.measuredBounds, wd2 = Wc2.margin, Yj2 = wd2.right + wd2.left, rn = wd2.top + wd2.bottom;
      A2[Wc2.column] = je2.cc === 0 && A2[Wc2.column] !== void 0 ? Math.max(Ye2.width + Yj2, A2[Wc2.column]) : null;
      E[Wc2.row] = wi2.cc === 0 && E[Wc2.row] !== void 0 ? Math.max(Ye2.height + rn, E[Wc2.row]) : null;
    }
    var Af2 = 0, Cb2 = 0, Ed2;
    for (Ed2 in E)
      Ed2 !== "count" && (Af2 += E[Ed2]);
    for (Ed2 in A2)
      Ed2 !== "count" && (Cb2 += A2[Ed2]);
    for (var hb2 = Gb2.alloc(), xi2 = 0; xi2 < f2; xi2++) {
      var Yb2 = B2[xi2];
      if (Yb2.visible || Yb2 === ud2) {
        var tc2 = a.getRowDefinition(Yb2.row), jc2 = a.getColumnDefinition(Yb2.column), Fd2 = 0;
        isFinite(jc2.width) ? Fd2 = jc2.width : (isFinite(Q2) && A2[Yb2.column] !== null ? Cb2 === 0 ? Fd2 = jc2.actual + Q2 : Fd2 = A2[Yb2.column] / Cb2 * sh2 : A2[Yb2.column] !== null ? Fd2 = Q2 : Fd2 = jc2.actual || Q2, Fd2 = Math.max(0, Fd2 - jc2.Ic()));
        var Gd2 = 0;
        isFinite(tc2.height) ? Gd2 = tc2.height : (isFinite(J2) && E[Yb2.row] !== null ? Af2 === 0 ? Gd2 = tc2.actual + J2 : Gd2 = E[Yb2.row] / Af2 * cc2 : E[Yb2.row] !== null ? Gd2 = J2 : Gd2 = tc2.actual || J2, Gd2 = Math.max(0, Gd2 - tc2.Ic()));
        hb2.h(Math.max(jc2.minimum, Math.min(Fd2, jc2.maximum)), Math.max(tc2.minimum, Math.min(Gd2, tc2.maximum)));
        cb2 = vl(Yb2, tc2, jc2, false);
        switch (cb2) {
          case Qk:
            hb2.height = Math.max(hb2.height, tc2.actual + J2);
            break;
          case Rk:
            hb2.width = Math.max(hb2.width, jc2.actual + Q2);
        }
        var fg2 = Yb2.margin, Dc2 = fg2.right + fg2.left, uh2 = fg2.top + fg2.bottom;
        Yb2.ck();
        Yb2.measure(hb2.width, hb2.height, jc2.minimum, tc2.minimum);
        var gg2 = Yb2.measuredBounds, Hd2 = Math.max(gg2.width + Dc2, 0), vh2 = Math.max(gg2.height + uh2, 0);
        isFinite(Q2) && (Hd2 = Math.min(Hd2, hb2.width));
        isFinite(J2) && (vh2 = Math.min(vh2, hb2.height));
        var Ze2 = 0;
        Ze2 = tc2.actual;
        tc2.actual = Math.max(tc2.actual, vh2);
        tc2.cc = Math.max(tc2.cc, vh2);
        Ha2 = tc2.actual - Ze2;
        J2 = Math.max(J2 - Ha2, 0);
        E[Yb2.row] === null && (cc2 = Math.max(cc2 - Ha2, 0));
        Ze2 = jc2.actual;
        jc2.actual = Math.max(jc2.actual, Hd2);
        jc2.cc = Math.max(jc2.cc, Hd2);
        Ha2 = jc2.actual - Ze2;
        Q2 = Math.max(Q2 - Ha2, 0);
        A2[Yb2.column] === null && (sh2 = Math.max(sh2 - Ha2, 0));
      }
    }
    Ia2(B2);
    var Id2 = Gb2.alloc(), Jd2 = Ea2(), Kd2 = Ea2();
    f2 = y2.length;
    if (f2 !== 0) {
      for (var Ge2 = 0; Ge2 < ca2; Ge2++)
        if (u2[Ge2]) {
          pa2 = u2[Ge2].length;
          var wh2 = a.getRowDefinition(Ge2);
          Jd2[Ge2] = wh2.actual;
          for (var ke2 = 0; ke2 < pa2; ke2++)
            if (u2[Ge2][ke2]) {
              var sn = a.getColumnDefinition(ke2);
              Kd2[ke2] = sn.actual;
            }
        }
    }
    for (var dc2 = 0; dc2 < f2; dc2++) {
      var Oa2 = y2[dc2];
      if (Oa2.visible || Oa2 === ud2) {
        var ec2 = a.getRowDefinition(Oa2.row), Ld2 = a.getColumnDefinition(Oa2.column);
        hb2.h(Math.max(Ld2.minimum, Math.min(b, Ld2.maximum)), Math.max(ec2.minimum, Math.min(c, ec2.maximum)));
        cb2 = vl(Oa2, ec2, Ld2, false);
        switch (cb2) {
          case qd2:
            Kd2[Ld2.index] !== 0 && (hb2.width = Math.min(hb2.width, Kd2[Ld2.index]));
            Jd2[ec2.index] !== 0 && (hb2.height = Math.min(hb2.height, Jd2[ec2.index]));
            break;
          case Qk:
            Kd2[Ld2.index] !== 0 && (hb2.width = Math.min(hb2.width, Kd2[Ld2.index]));
            break;
          case Rk:
            Jd2[ec2.index] !== 0 && (hb2.height = Math.min(hb2.height, Jd2[ec2.index]));
        }
        isFinite(Ld2.width) && (hb2.width = Ld2.width);
        isFinite(ec2.height) && (hb2.height = ec2.height);
        Id2.h(0, 0);
        for (var He2 = Ld2.minimum, xh2 = ec2.minimum, Ie2 = 1; Ie2 < Oa2.rowSpan && !(Oa2.row + Ie2 >= a.rowCount); Ie2++)
          I2 = a.getRowDefinition(Oa2.row + Ie2), Ha2 = 0, Ha2 = cb2 === qd2 || cb2 === Rk ? Math.max(I2.minimum, Jd2[Oa2.row + Ie2] === 0 ? I2.maximum : Math.min(Jd2[Oa2.row + Ie2], I2.maximum)) : Math.max(I2.minimum, isNaN(I2.Bd) ? I2.maximum : Math.min(I2.Bd, I2.maximum)), Id2.height += Ha2, xh2 += I2.minimum;
        for (var Nc2 = 1; Nc2 < Oa2.columnSpan && !(Oa2.column + Nc2 >= a.columnCount); Nc2++)
          I2 = a.getColumnDefinition(Oa2.column + Nc2), Ha2 = 0, Ha2 = cb2 === qd2 || cb2 === Qk ? Math.max(I2.minimum, Kd2[Oa2.column + Nc2] === 0 ? I2.maximum : Math.min(Kd2[Oa2.column + Nc2], I2.maximum)) : Math.max(I2.minimum, isNaN(I2.Bd) ? I2.maximum : Math.min(I2.Bd, I2.maximum)), Id2.width += Ha2, He2 += I2.minimum;
        hb2.width += Id2.width;
        hb2.height += Id2.height;
        var $e2 = Oa2.margin, yh2 = $e2.right + $e2.left, tn = $e2.top + $e2.bottom;
        Oa2.measure(hb2.width, hb2.height, He2, xh2);
        for (var hg2 = Oa2.measuredBounds, id2 = Math.max(hg2.width + yh2, 0), Md2 = Math.max(hg2.height + tn, 0), le2 = 0, me2 = 0; me2 < Oa2.rowSpan && !(Oa2.row + me2 >= a.rowCount); me2++)
          I2 = a.getRowDefinition(Oa2.row + me2), le2 += I2.total || 0;
        if (le2 < Md2) {
          var Nd2 = Md2 - le2, ne2 = Md2 - le2;
          if (Oa2.spanAllocation !== null)
            for (var Zj2 = Oa2.spanAllocation, Je2 = 0; Je2 < Oa2.rowSpan && !(0 >= Nd2) && !(Oa2.row + Je2 >= a.rowCount); Je2++) {
              I2 = a.getRowDefinition(Oa2.row + Je2);
              var yi2 = I2.la || 0, un = Zj2(Oa2, I2, ne2);
              I2.actual = Math.min(I2.maximum, yi2 + un);
              I2.la !== yi2 && (Nd2 -= I2.la - yi2);
            }
          for (; 0 < Nd2; ) {
            var jd2 = I2.la || 0;
            isNaN(I2.height) && I2.maximum > jd2 && (I2.actual = Math.min(I2.maximum, jd2 + Nd2), I2.la !== jd2 && (Nd2 -= I2.la - jd2));
            if (I2.index === 0)
              break;
            I2 = a.getRowDefinition(I2.index - 1);
          }
        }
        for (var Bf2 = 0, zh2 = 0; zh2 < Oa2.columnSpan && !(Oa2.column + zh2 >= a.columnCount); zh2++)
          I2 = a.getColumnDefinition(Oa2.column + zh2), Bf2 += I2.total || 0;
        if (Bf2 < id2) {
          var ig2 = id2 - Bf2, St = id2 - Bf2;
          if (Oa2.spanAllocation !== null)
            for (var Tt = Oa2.spanAllocation, ak2 = 0; ak2 < Oa2.columnSpan && !(0 >= ig2) && !(Oa2.column + ak2 >= a.columnCount); ak2++) {
              I2 = a.getColumnDefinition(Oa2.column + ak2);
              var vn = I2.la || 0, Ut = Tt(Oa2, I2, St);
              I2.actual = Math.min(I2.maximum, vn + Ut);
              I2.la !== vn && (ig2 -= I2.la - vn);
            }
          for (; 0 < ig2; ) {
            var bk2 = I2.la || 0;
            isNaN(I2.width) && I2.maximum > bk2 && (I2.actual = Math.min(I2.maximum, bk2 + ig2), I2.la !== bk2 && (ig2 -= I2.la - bk2));
            if (I2.index === 0)
              break;
            I2 = a.getColumnDefinition(I2.index - 1);
          }
        }
      }
    }
    Ia2(y2);
    Gb2.free(Id2);
    Gb2.free(hb2);
    Jd2 !== void 0 && Ia2(Jd2);
    Kd2 !== void 0 && Ia2(Kd2);
    var jg2 = 0, kg2 = 0, ck2 = a.desiredSize, dr = a.maxSize;
    cb2 = cl(a, true);
    var zi2 = he2 = Dd2 = 0, Ai2 = 0;
    f2 = a.columnCount;
    for (var dk2 = 0; dk2 < f2; dk2++)
      a.ib[dk2] !== void 0 && (I2 = a.getColumnDefinition(dk2), isFinite(I2.width) ? (zi2 += I2.width, zi2 += I2.Ic()) : wm(I2) === xm ? (zi2 += I2.la, zi2 += I2.Ic()) : I2.la !== 0 && (Dd2 += I2.la, Dd2 += I2.Ic()));
    isFinite(ck2.width) ? jg2 = Math.min(ck2.width, dr.width) : jg2 = cb2 !== pg2 && isFinite(b) ? b : Dd2;
    jg2 = Math.max(jg2, a.minSize.width);
    jg2 = Math.max(jg2 - zi2, 0);
    for (var Vt = Dd2 === 0 ? 1 : Math.max(jg2 / Dd2, 1), fk2 = 0; fk2 < f2; fk2++)
      a.ib[fk2] !== void 0 && (I2 = a.getColumnDefinition(fk2), isFinite(I2.width) || wm(I2) === xm || (I2.actual = I2.la * Vt), I2.position = e.width, I2.la !== 0 && (e.width += I2.la, e.width += I2.Ic()));
    f2 = a.rowCount;
    for (var gk2 = 0; gk2 < f2; gk2++)
      a.ob[gk2] !== void 0 && (I2 = a.getRowDefinition(gk2), isFinite(I2.height) ? (Ai2 += I2.height, Ai2 += I2.Ic()) : wm(I2) === xm ? (Ai2 += I2.la, Ai2 += I2.Ic()) : I2.la !== 0 && (he2 += I2.la, I2.la !== 0 && (he2 += I2.Ic())));
    isFinite(ck2.height) ? kg2 = Math.min(ck2.height, dr.height) : kg2 = cb2 !== pg2 && isFinite(c) ? c : he2;
    kg2 = Math.max(kg2, a.minSize.height);
    kg2 = Math.max(kg2 - Ai2, 0);
    for (var Wt = he2 === 0 ? 1 : Math.max(kg2 / he2, 1), hk2 = 0; hk2 < f2; hk2++)
      a.ob[hk2] !== void 0 && (I2 = a.getRowDefinition(hk2), isFinite(I2.height) || wm(I2) === xm || (I2.actual = I2.la * Wt), I2.position = e.height, I2.la !== 0 && (e.height += I2.la, I2.la !== 0 && (e.height += I2.Ic())));
    f2 = h.length;
    for (var wn = 0; wn < f2; wn++) {
      var kd2 = h[wn], xn = 0, yn = 0;
      kd2.type === X2.TableRow ? (xn = e.width, I2 = a.getRowDefinition(kd2.row), yn = I2.actual) : (I2 = a.getColumnDefinition(kd2.column), xn = I2.actual, yn = e.height);
      kd2.measuredBounds.h(0, 0, xn, yn);
      dj2(kd2, false);
      u2[kd2.row] || (u2[kd2.row] = []);
      u2[kd2.row][kd2.column] || (u2[kd2.row][kd2.column] = []);
      u2[kd2.row][kd2.column].push(kd2);
    }
    Ia2(h);
    a.cp = u2;
  };
  vm.prototype.arrange = function(a, b, c) {
    var d = b.length, e = a.padding, f2 = e.left;
    e = e.top;
    for (var g2 = a.cp, h, k, l2 = g2.length, m2 = 0, n2 = 0; n2 < l2; n2++)
      g2[n2] && (m2 = Math.max(m2, g2[n2].length));
    for (n2 = Math.min(a.topIndex, l2 - 1); n2 !== l2 && (a.ob[n2] === void 0 || a.ob[n2].la === 0); )
      n2++;
    n2 = Math.min(n2, l2 - 1);
    n2 = -a.ob[n2].position;
    for (h = Math.min(a.leftIndex, m2 - 1); h !== m2 && (a.ib[h] === void 0 || a.ib[h].la === 0); )
      h++;
    h = Math.min(h, m2 - 1);
    for (var p2 = -a.ib[h].position, r2 = Gb2.alloc(), q2 = 0; q2 < l2; q2++)
      if (g2[q2]) {
        m2 = g2[q2].length;
        var u2 = a.getRowDefinition(q2);
        k = u2.position + n2 + e;
        u2.la !== 0 && (k += u2.Ku());
        for (var w = 0; w < m2; w++)
          if (g2[q2][w]) {
            var v2 = a.getColumnDefinition(w);
            h = v2.position + p2 + f2;
            v2.la !== 0 && (h += v2.Ku());
            for (var z2 = g2[q2][w], y2 = z2.length, B2 = 0; B2 < y2; B2++) {
              var A2 = z2[B2], E = A2.measuredBounds, Q2 = A2 instanceof X2 ? A2 : null;
              if (Q2 === null || Q2.type !== X2.TableRow && Q2.type !== X2.TableColumn) {
                r2.h(0, 0);
                for (var J2 = 1; J2 < A2.rowSpan && !(q2 + J2 >= a.rowCount); J2++)
                  Q2 = a.getRowDefinition(q2 + J2), r2.height += Q2.total;
                for (J2 = 1; J2 < A2.columnSpan && !(w + J2 >= a.columnCount); J2++)
                  Q2 = a.getColumnDefinition(w + J2), r2.width += Q2.total;
                var S2 = v2.la + r2.width, L2 = u2.la + r2.height;
                J2 = h;
                Q2 = k;
                var I2 = S2, ja2 = L2, ca2 = h, pa2 = k, Na2 = S2, fb2 = L2;
                h + S2 > c.width && (Na2 = Math.max(c.width - h, 0));
                k + L2 > c.height && (fb2 = Math.max(c.height - k, 0));
                var Ga2 = A2.alignment;
                if (Ga2.Nb()) {
                  Ga2 = a.defaultAlignment;
                  Ga2.hb() || (Ga2 = yc2);
                  var Ha2 = Ga2.x;
                  var ud2 = Ga2.y;
                  var Wb2 = Ga2.offsetX;
                  Ga2 = Ga2.offsetY;
                  var Xb2 = v2.alignment, gb2 = u2.alignment;
                  Xb2.hb() && (Ha2 = Xb2.x, Wb2 = Xb2.offsetX);
                  gb2.hb() && (ud2 = gb2.y, Ga2 = gb2.offsetY);
                } else
                  Ha2 = Ga2.x, ud2 = Ga2.y, Wb2 = Ga2.offsetX, Ga2 = Ga2.offsetY;
                if (isNaN(Ha2) || isNaN(ud2))
                  ud2 = Ha2 = 0.5, Ga2 = Wb2 = 0;
                Xb2 = E.width;
                gb2 = E.height;
                var vd2 = A2.margin, Zf2 = vd2.left + vd2.right, $f2 = vd2.top + vd2.bottom, Fe2 = vl(A2, u2, v2, false);
                !isNaN(A2.desiredSize.width) || Fe2 !== qd2 && Fe2 !== Qk || (Xb2 = Math.max(S2 - Zf2, 0));
                !isNaN(A2.desiredSize.height) || Fe2 !== qd2 && Fe2 !== Rk || (gb2 = Math.max(L2 - $f2, 0));
                S2 = A2.maxSize;
                L2 = A2.minSize;
                Xb2 = Math.min(S2.width, Xb2);
                gb2 = Math.min(S2.height, gb2);
                Xb2 = Math.max(L2.width, Xb2);
                gb2 = Math.max(L2.height, gb2);
                S2 = gb2 + $f2;
                J2 += I2 * Ha2 - (Xb2 + Zf2) * Ha2 + Wb2 + vd2.left;
                Q2 += ja2 * ud2 - S2 * ud2 + Ga2 + vd2.top;
                A2.visible && (bc2(ca2, pa2, Na2, fb2, J2, Q2, E.width, E.height) ? A2.arrange(J2, Q2, Xb2, gb2) : A2.arrange(J2, Q2, Xb2, gb2, new N2(ca2, pa2, Na2, fb2)));
              } else
                A2.dl(), A2.actualBounds.ea(), I2 = A2.actualBounds, J2 = N2.allocAt(I2.x, I2.y, I2.width, I2.height), I2.x = Q2.type === X2.TableRow ? f2 : h, I2.y = Q2.type === X2.TableColumn ? e : k, I2.width = E.width, I2.height = E.height, A2.actualBounds.freeze(), dl(A2, false), Ub2(J2, I2) || (E = A2.part, E !== null && (E.Gh(), A2.Eo(E))), N2.free(J2);
            }
          }
      }
    Gb2.free(r2);
    for (a = 0; a < d; a++)
      c = b[a], f2 = c instanceof X2 ? c : null, f2 === null || f2.type !== X2.TableRow && f2.type !== X2.TableColumn || (f2 = c.actualBounds, c.naturalBounds.ea(), c.naturalBounds.h(0, 0, f2.width, f2.height), c.naturalBounds.freeze());
  };
  function ym() {
    this.na = "Base";
  }
  ma2(ym, Fl);
  ym.prototype.measure = function() {
  };
  ym.prototype.arrange = function() {
  };
  function zm() {
    this.na = "Base";
  }
  ma2(zm, Fl);
  zm.prototype.measure = function() {
  };
  zm.prototype.arrange = function() {
  };
  function Am() {
    this.na = "Base";
  }
  ma2(Am, Fl);
  Am.prototype.measure = function(a, b, c, d, e, f2, g2) {
    1 < d.length && C2("Viewbox Panel cannot contain more than one GraphObject.");
    d = d[0];
    d.sa = 1;
    d.ck();
    d.measure(Infinity, Infinity, f2, g2);
    var h = d.measuredBounds, k = d.margin, l2 = k.right + k.left;
    k = k.top + k.bottom;
    if (isFinite(b) || isFinite(c)) {
      var m2 = d.scale, n2 = h.width;
      h = h.height;
      var p2 = Math.max(b - l2, 0), r2 = Math.max(c - k, 0), q2 = 1;
      a.viewboxStretch === rg2 ? n2 !== 0 && h !== 0 && (q2 = Math.min(p2 / n2, r2 / h)) : n2 !== 0 && h !== 0 && (q2 = Math.max(p2 / n2, r2 / h));
      q2 === 0 && (q2 = 1e-4);
      d.sa *= q2;
      m2 !== d.scale && (dj2(d, true), d.measure(Infinity, Infinity, f2, g2));
    }
    h = d.measuredBounds;
    e.width = isFinite(b) ? b : Math.max(h.width + l2, 0);
    e.height = isFinite(c) ? c : Math.max(h.height + k, 0);
  };
  Am.prototype.arrange = function(a, b, c) {
    b = b[0];
    var d = b.measuredBounds, e = b.margin, f2 = Math.max(d.width + (e.right + e.left), 0);
    e = Math.max(d.height + (e.top + e.bottom), 0);
    var g2 = b.alignment;
    g2.Nb() && (g2 = a.defaultAlignment);
    g2.hb() || (g2 = yc2);
    b.arrange(c.width * g2.x - f2 * g2.x + g2.offsetX, c.height * g2.y - e * g2.y + g2.offsetY, d.width, d.height);
  };
  function Bm() {
    this.na = "Base";
  }
  ma2(Bm, Fl);
  Bm.prototype.measure = function() {
  };
  Bm.prototype.arrange = function() {
  };
  Bm.prototype.pc = function(a, b, c) {
    c = a.Af() * c.scale;
    0 >= c && (c = 1);
    var d = a.gridCellSize, e = d.width;
    d = d.height;
    var f2 = a.naturalBounds, g2 = a.actualBounds, h = f2.width, k = f2.height, l2 = Math.ceil(h / e), m2 = Math.ceil(k / d), n2 = a.gridOrigin, p2 = n2.x;
    n2 = n2.y;
    b.save();
    b.beginPath();
    b.rect(0, 0, h, k);
    b.clip();
    for (var r2 = [], q2 = a.T.m, u2 = q2.length, w = 0; w < u2; w++) {
      var v2 = q2[w], z2 = [];
      r2.push(z2);
      if (v2.visible) {
        var y2 = v2.interval;
        if (!(0 > y2)) {
          v2 = Nj2(v2.figure);
          for (var B2 = 0; B2 < u2; B2++)
            if (B2 !== w) {
              var A2 = q2[B2];
              A2.visible && Nj2(A2.figure) === v2 && (A2 = A2.interval, A2 > y2 && z2.push(A2));
            }
        }
      }
    }
    q2 = a.T.m;
    u2 = q2.length;
    for (w = 0; w < u2; w++) {
      var E = q2[w];
      if (E.visible && (z2 = E.interval || 1, v2 = Math.abs(z2), !(2 > e * v2 * c))) {
        y2 = E.segmentIndex;
        if (!isFinite(y2) || isNaN(y2))
          y2 = 0;
        0 > y2 && (y2 = v2 - Math.min(-y2, v2));
        y2 = Math.round(y2 % v2);
        v2 = E.opacity;
        B2 = 1;
        if (v2 !== 1) {
          if (v2 === 0)
            continue;
          B2 = b.globalAlpha;
          b.globalAlpha = B2 * v2;
        }
        A2 = r2[w];
        var Q2 = false, J2 = E.strokeDashArray;
        J2 !== null && (Q2 = true, b.os(J2, E.strokeDashOffset));
        if (E.figure === "LineV" && E.stroke !== null && 0 < E.strokeWidth) {
          b.lineWidth = E.strokeWidth;
          di2(a, b, E.stroke, false, false, f2, g2);
          b.beginPath();
          for (J2 = E = Math.floor((p2 - e) / e); J2 <= E + l2; J2++) {
            var S2 = J2 * e + p2;
            0 <= S2 && S2 <= h && Cm(J2, z2, y2, A2) && (b.moveTo(S2, 0), b.lineTo(S2, k));
          }
          b.stroke();
        } else if (E.figure === "LineH" && E.stroke !== null && 0 < E.strokeWidth) {
          b.lineWidth = E.strokeWidth;
          di2(a, b, E.stroke, false, false, f2, g2);
          b.beginPath();
          for (J2 = E = Math.floor((n2 - d) / d); J2 <= E + m2; J2++)
            S2 = J2 * d + n2, 0 <= S2 && S2 <= k && Cm(J2, z2, y2, A2) && (b.moveTo(0, S2), b.lineTo(h, S2));
          b.stroke();
        } else if (E.figure === "BarV" && E.fill !== null)
          for (di2(a, b, E.fill, true, false, f2, g2), E = E.width, isNaN(E) && (E = e), S2 = J2 = Math.floor((p2 - e) / e); S2 <= J2 + l2; S2++) {
            var L2 = S2 * e + p2;
            0 <= L2 + E && L2 <= h && Cm(S2, z2, y2, A2) && b.fillRect(L2, 0, E, k);
          }
        else if (E.figure === "BarH" && E.fill !== null)
          for (di2(a, b, E.fill, true, false, f2, g2), E = E.height, isNaN(E) && (E = d), S2 = J2 = Math.floor((n2 - d) / d); S2 <= J2 + m2; S2++)
            L2 = S2 * d + n2, 0 <= L2 + E && L2 <= k && Cm(S2, z2, y2, A2) && b.fillRect(0, L2, h, E);
        Q2 && b.ms();
        v2 !== 1 && (b.globalAlpha = B2);
      }
    }
    b.restore();
    b.Hc(false);
  };
  function Cm(a, b, c, d) {
    if (0 > b)
      return a % b === c;
    if (a % b !== c)
      return false;
    b = d.length;
    for (var e = 0; e < b; e++)
      if (a % d[e] === c)
        return false;
    return true;
  }
  function Dm() {
    this.na = "Base";
  }
  ma2(Dm, Fl);
  Dm.prototype.measure = function(a, b, c, d, e) {
    c = d.length;
    if (a instanceof ze || a instanceof T2) {
      var f2 = null, g2 = null, h = null;
      a instanceof T2 && (g2 = f2 = a);
      a instanceof ze && (h = a, f2 = h.adornedPart);
      if (f2 instanceof T2) {
        var k = f2;
        if (c === 0)
          Rb2(a.naturalBounds, 0, 0), a.measuredBounds.h(0, 0, 0, 0);
        else {
          var l2 = a instanceof ze ? null : f2.path, m2 = f2.routeBounds;
          b = a.jg;
          b.h(0, 0, m2.width, m2.height);
          var n2 = k.points;
          f2 = f2.pointsCount;
          h !== null ? h.hk(false) : g2 !== null && g2.hk(false);
          var p2 = m2.width, r2 = m2.height;
          a.location.h(m2.x, m2.y);
          a.j.length = 0;
          l2 !== null && (Em(a, p2, r2, l2), h = l2.measuredBounds, b.Qc(h), a.j.push(h));
          h = od2.alloc();
          for (var q2 = K2.alloc(), u2 = K2.alloc(), w = 0; w < c; w++) {
            var v2 = d[w];
            if (v2 !== l2)
              if (v2.isPanelMain && v2 instanceof xf2) {
                Em(a, p2, r2, v2);
                var z2 = v2.measuredBounds;
                b.Qc(z2);
                a.j.push(z2);
              } else if (2 > f2)
                v2.measure(Infinity, Infinity, 0, 0), z2 = v2.measuredBounds, b.Qc(z2), a.j.push(z2);
              else {
                var y2 = v2.segmentIndex, B2 = v2.segmentFraction, A2 = v2.alignmentFocus;
                A2.Bc() && (A2 = yc2);
                var E = v2.segmentOrientation, Q2 = v2.segmentOffset;
                if (isNaN(y2)) {
                  var J2 = k.ma;
                  z2 = Ea2();
                  J2.bv(B2, z2);
                  var S2 = K2.allocAt(z2[0], z2[1]);
                  S2.add(k.i(0));
                  J2.type === P2.j ? S2.offset(-J2.startX, -J2.startY) : (J2 = J2.figures.first(), S2.offset(-J2.startX, -J2.startY));
                  J2 = z2[2];
                  if (E !== Rf2) {
                    var L2 = k.computeAngle(v2, E, J2);
                    v2.zb = L2;
                  }
                  L2 = S2.x - m2.x;
                  var I2 = S2.y - m2.y;
                  K2.free(S2);
                  Ia2(z2);
                } else if (y2 < -f2 || y2 >= f2)
                  z2 = K2.alloc(), k.vg(), k.computeMidPoint(z2), J2 = k.midAngle, E !== Rf2 && (L2 = k.computeAngle(v2, E, J2), v2.zb = L2), L2 = z2.x - m2.x, I2 = z2.y - m2.y, K2.free(z2);
                else {
                  L2 = 0;
                  0 <= y2 ? (I2 = n2.J(y2), z2 = y2 < f2 - 1 ? n2.J(y2 + 1) : I2) : (L2 = f2 + y2, I2 = n2.J(L2), z2 = 0 < L2 ? n2.J(L2 - 1) : I2);
                  if (I2.Ua(z2)) {
                    0 <= y2 ? (J2 = 0 < y2 ? n2.J(y2 - 1) : I2, L2 = y2 < f2 - 2 ? n2.J(y2 + 2) : z2) : (J2 = L2 < f2 - 1 ? n2.J(L2 + 1) : I2, L2 = 1 < L2 ? n2.J(L2 - 2) : z2);
                    S2 = J2.xf(I2);
                    var ja2 = z2.xf(L2);
                    J2 = S2 > ja2 + 10 ? 0 <= y2 ? J2.Pa(I2) : I2.Pa(J2) : ja2 > S2 + 10 ? 0 <= y2 ? z2.Pa(L2) : L2.Pa(z2) : 0 <= y2 ? J2.Pa(L2) : L2.Pa(J2);
                  } else
                    J2 = 0 <= y2 ? I2.Pa(z2) : z2.Pa(I2);
                  E !== Rf2 && (L2 = k.computeAngle(v2, E, J2), v2.zb = L2);
                  L2 = I2.x + (z2.x - I2.x) * B2 - m2.x;
                  I2 = I2.y + (z2.y - I2.y) * B2 - m2.y;
                }
                v2.measure(Infinity, Infinity, 0, 0);
                z2 = v2.measuredBounds;
                S2 = v2.naturalBounds;
                var ca2 = 0;
                v2 instanceof xf2 && (ca2 = v2.strokeWidth);
                ja2 = S2.width + ca2;
                var pa2 = S2.height + ca2;
                h.reset();
                h.translate(-z2.x, -z2.y);
                h.scale(v2.scale, v2.scale);
                h.rotate(E === Rf2 ? v2.angle : J2, ja2 / 2, pa2 / 2);
                E !== Fm && E !== Gm || h.rotate(90, ja2 / 2, pa2 / 2);
                E !== Hm && E !== Im || h.rotate(-90, ja2 / 2, pa2 / 2);
                E === Jm && (45 < J2 && 135 > J2 || 225 < J2 && 315 > J2) && h.rotate(-J2, ja2 / 2, pa2 / 2);
                S2 = new N2(0, 0, ja2, pa2);
                q2.Ti(S2, A2);
                h.Aa(q2);
                A2 = -q2.x + ca2 / 2 * v2.scale;
                v2 = -q2.y + ca2 / 2 * v2.scale;
                u2.assign(Q2);
                ca2 = isNaN(Q2.x);
                var Na2 = isNaN(Q2.y);
                if (ca2 || Na2) {
                  ja2 = ja2 / 2 + 3;
                  pa2 = pa2 / 2 + 3;
                  var fb2 = 45 <= J2 && 135 >= J2, Ga2 = 225 <= J2 && 315 >= J2;
                  E === Rf2 && (fb2 || Ga2) ? (u2.x = Na2 ? ja2 : Q2.y, u2.y = ca2 ? pa2 : Q2.x, fb2 ? 0 <= y2 || isNaN(y2) && 0.5 > B2 || !ca2 || (u2.y = -pa2) : Ga2 && ((0 <= y2 || isNaN(y2) && 0.5 > B2) && ca2 && (u2.y = -pa2), Na2 && (u2.x = -ja2))) : (ca2 && (u2.x = 0 <= y2 || isNaN(y2) && 0.5 > B2 ? ja2 : -ja2), Na2 && (u2.y = -pa2), u2.rotate(J2));
                } else
                  u2.rotate(J2);
                L2 += u2.x;
                I2 += u2.y;
                S2.set(z2);
                S2.h(L2 + A2, I2 + v2, z2.width, z2.height);
                a.j.push(S2);
                b.Qc(S2);
              }
          }
          if (g2 !== null)
            for (d = g2.labelNodes; d.next(); )
              d.value.measure(Infinity, Infinity);
          a.jg = b;
          a = a.location;
          a.h(a.x + b.x, a.y + b.y);
          Rb2(e, b.width || 0, b.height || 0);
          od2.free(h);
          K2.free(q2);
          K2.free(u2);
        }
      }
    }
  };
  Dm.prototype.arrange = function(a, b) {
    var c = b.length;
    if (a instanceof ze || a instanceof T2) {
      var d = null, e = null, f2 = null;
      a instanceof T2 && (e = d = a);
      a instanceof ze && (f2 = a, d = f2.adornedPart);
      var g2 = a instanceof ze ? null : d.path;
      if (a.j.length !== 0) {
        var h = a.j, k = 0;
        if (g2 !== null && k < a.j.length) {
          var l2 = h[k];
          k++;
          g2.arrange(l2.x - a.jg.x, l2.y - a.jg.y, l2.width, l2.height);
        }
        for (l2 = 0; l2 < c; l2++) {
          var m2 = b[l2];
          if (m2 !== g2 && k < a.j.length) {
            var n2 = h[k];
            k++;
            m2.arrange(n2.x - a.jg.x, n2.y - a.jg.y, n2.width, n2.height);
          }
        }
      }
      b = d.points;
      c = b.count;
      if (2 <= c && a instanceof T2)
        for (d = a.labelNodes; d.next(); ) {
          var p2 = a;
          g2 = d.value;
          h = g2.segmentIndex;
          k = g2.segmentFraction;
          var r2 = g2.alignmentFocus;
          l2 = g2.segmentOrientation;
          m2 = g2.segmentOffset;
          if (isNaN(h)) {
            n2 = p2.ma;
            var q2 = Ea2();
            n2.bv(k, q2);
            var u2 = K2.allocAt(q2[0], q2[1]);
            u2.add(p2.i(0));
            n2.type === P2.j ? u2.offset(-n2.startX, -n2.startY) : (n2 = n2.figures.first(), u2.offset(-n2.startX, -n2.startY));
            n2 = q2[2];
            l2 !== Rf2 && (p2 = p2.computeAngle(g2, l2, n2), g2.angle = p2);
            p2 = u2.x;
            var w = u2.y;
            K2.free(u2);
            Ia2(q2);
          } else if (h < -c || h >= c)
            q2 = K2.alloc(), n2 = p2, w = q2, n2.vg(), n2.computeMidPoint(w), n2 = p2.midAngle, l2 !== Rf2 && (p2 = p2.computeAngle(g2, l2, n2), g2.angle = p2), p2 = q2.x, w = q2.y, K2.free(q2);
          else {
            u2 = 0;
            0 <= h ? (q2 = b.m[h], w = h < c - 1 ? b.m[h + 1] : q2) : (u2 = c + h, q2 = b.m[u2], w = 0 < u2 ? b.m[u2 - 1] : q2);
            if (q2.Ua(w)) {
              0 <= h ? (n2 = 0 < h ? b.m[h - 1] : q2, u2 = h < c - 2 ? b.m[h + 2] : w) : (n2 = u2 < c - 1 ? b.m[u2 + 1] : q2, u2 = 1 < u2 ? b.m[u2 - 2] : w);
              var v2 = n2.xf(q2), z2 = w.xf(u2);
              n2 = v2 > z2 + 10 ? 0 <= h ? n2.Pa(q2) : q2.Pa(n2) : z2 > v2 + 10 ? 0 <= h ? w.Pa(u2) : u2.Pa(w) : 0 <= h ? n2.Pa(u2) : u2.Pa(n2);
            } else
              n2 = 0 <= h ? q2.Pa(w) : w.Pa(q2);
            l2 !== Rf2 && (p2 = p2.computeAngle(g2, l2, n2), g2.angle = p2);
            p2 = q2.x + (w.x - q2.x) * k;
            w = q2.y + (w.y - q2.y) * k;
          }
          if (r2.Es())
            g2.location = new K2(p2, w);
          else {
            r2.Bc() && (r2 = yc2);
            q2 = od2.alloc();
            q2.reset();
            q2.scale(g2.scale, g2.scale);
            q2.rotate(g2.angle, 0, 0);
            var y2 = g2.naturalBounds;
            u2 = N2.allocAt(0, 0, y2.width, y2.height);
            v2 = K2.alloc();
            v2.Ti(u2, r2);
            q2.Aa(v2);
            r2 = -v2.x;
            z2 = -v2.y;
            var B2 = y2.width, A2 = y2.height;
            y2 = K2.alloc();
            y2.assign(m2);
            var E = isNaN(m2.x), Q2 = isNaN(m2.y);
            if (E || Q2) {
              B2 = B2 / 2 + 3;
              A2 = A2 / 2 + 3;
              var J2 = 45 <= n2 && 135 >= n2, S2 = 225 <= n2 && 315 >= n2;
              l2 === Rf2 && (J2 || S2) ? (y2.x = Q2 ? B2 : m2.y, y2.y = E ? A2 : m2.x, J2 ? 0 <= h || isNaN(h) && 0.5 > k || !E || (y2.y = -A2) : S2 && ((0 <= h || isNaN(h) && 0.5 > k) && E && (y2.y = -A2), Q2 && (y2.x = -B2))) : (E && (y2.x = 0 <= h || isNaN(h) && 0.5 > k ? B2 : -B2), Q2 && (y2.y = -A2), y2.rotate(n2));
            } else
              y2.rotate(n2);
            p2 += y2.x;
            w += y2.y;
            q2.xq(u2);
            r2 += u2.x;
            z2 += u2.y;
            h = K2.allocAt(p2 + r2, w + z2);
            g2.move(h);
            K2.free(h);
            K2.free(y2);
            K2.free(v2);
            N2.free(u2);
            od2.free(q2);
          }
        }
      f2 !== null ? f2.hk(false) : e !== null && e.hk(false);
    }
  };
  function Em(a, b, c, d) {
    if (ij2(d) !== false) {
      var e = d.strokeWidth;
      e === 0 && a instanceof ze && a.type === X2.Link && a.adornedObject instanceof xf2 && (e = a.adornedObject.strokeWidth);
      e *= d.sa;
      a instanceof T2 && a.ma !== null ? (a = a.ma.bounds, d.xe(a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : a instanceof ze && a.adornedPart.ma !== null ? (a = a.adornedPart.ma.bounds, d.xe(a.x - e / 2, a.y - e / 2, a.width + e, a.height + e)) : d.xe(-(e / 2), -(e / 2), b + e, c + e);
      dj2(d, false);
    }
  }
  function Km() {
    this.na = "Base";
  }
  ma2(Km, Fl);
  Km.prototype.measure = function(a, b, c, d, e, f2, g2) {
    var h = a.pb();
    a.Qg = [];
    var k = h.margin, l2 = k.right + k.left, m2 = k.top + k.bottom;
    h.measure(b, c, f2, g2);
    var n2 = h.measuredBounds, p2 = new N2(-k.left, -k.top, Math.max(n2.width + l2, 0), Math.max(n2.height + m2, 0));
    a.Qg.push(p2);
    e.assign(p2);
    for (var r2 = h.geometry, q2 = h.strokeWidth, u2 = r2.flattenedSegments, w = r2.flattenedLengths, v2 = r2.flattenedTotalLength, z2 = u2.length, y2 = 0, B2 = 0, A2 = Ea2(), E = 0; E < z2; E++) {
      var Q2 = u2[E], J2 = [];
      B2 = y2 = 0;
      for (var S2 = Q2.length, L2 = 0; L2 < S2; L2 += 2) {
        var I2 = Q2[L2], ja2 = Q2[L2 + 1];
        if (L2 !== 0) {
          var ca2 = 180 * Math.atan2(ja2 - B2, I2 - y2) / Math.PI;
          0 > ca2 && (ca2 += 360);
          J2.push(ca2);
        }
        y2 = I2;
        B2 = ja2;
      }
      A2.push(J2);
    }
    if (a.Rf === null) {
      for (var pa2 = [], Na2 = a.T.m, fb2 = Na2.length, Ga2 = 0; Ga2 < fb2; Ga2++) {
        var Ha2 = Na2[Ga2], ud2 = [];
        pa2.push(ud2);
        if (Ha2.visible) {
          var Wb2 = Ha2.interval;
          if (!(0 > Wb2)) {
            for (var Xb2 = 0; Xb2 < fb2; Xb2++)
              if (Xb2 !== Ga2) {
                var gb2 = Na2[Xb2];
                if (gb2.visible && Ha2.constructor === gb2.constructor) {
                  var vd2 = gb2.interval;
                  vd2 > Wb2 && ud2.push(vd2);
                }
              }
          }
        }
      }
      a.Rf = pa2;
    }
    var Zf2 = a.Rf;
    var $f2 = a.T.m, Fe2 = $f2.length, Bb2 = 0, oh2 = 0, ag2 = v2;
    a.kj = [];
    for (var ph2, qh2 = 0; qh2 < Fe2; qh2++) {
      var cb2 = $f2[qh2];
      ph2 = [];
      if (cb2.visible && cb2 !== h) {
        var vi2 = Math.abs(cb2.interval), Xj2 = a.graduatedTickUnit;
        if (!(2 > Xj2 * vi2 * v2 / a.graduatedRange)) {
          var bg2 = w[0][0], hd2 = 0, ic2 = 0;
          oh2 = v2 * cb2.graduatedStart - 1e-4;
          ag2 = v2 * cb2.graduatedEnd + 1e-4;
          var zf2 = Xj2 * vi2, sc2 = a.graduatedTickBase;
          if (sc2 < a.graduatedMin) {
            var cg2 = (a.graduatedMin - sc2) / zf2;
            cg2 = cg2 % 1 === 0 ? cg2 : Math.floor(cg2 + 1);
            sc2 += cg2 * zf2;
          } else
            sc2 > a.graduatedMin + zf2 && (sc2 -= Math.floor((sc2 - a.graduatedMin) / zf2) * zf2);
          for (var rh2 = Zf2[qh2], qn = sc2, Dd2 = 1; sc2 < a.graduatedMax + 5e-8; Dd2++) {
            a: {
              for (var he2 = rh2.length, dg2 = 0; dg2 < he2; dg2++)
                if (M2.aa((sc2 - a.graduatedTickBase) % (rh2[dg2] * a.graduatedTickUnit), 0)) {
                  var eg2 = false;
                  break a;
                }
              eg2 = true;
            }
            if (eg2 && (cb2.graduatedSkip === null || !cb2.graduatedSkip(sc2)) && (Bb2 = (sc2 - a.graduatedMin) * v2 / a.graduatedRange, Bb2 > v2 && (Bb2 = v2), oh2 <= Bb2 && Bb2 <= ag2)) {
              for (var Vc2 = A2[hd2][ic2], ie2 = w[hd2][ic2]; hd2 < w.length; ) {
                for (; Bb2 > bg2 && ic2 < w[hd2].length - 1; )
                  ic2++, Vc2 = A2[hd2][ic2], ie2 = w[hd2][ic2], bg2 += ie2;
                if (Bb2 <= bg2)
                  break;
                hd2++;
                ic2 = 0;
                Vc2 = A2[hd2][ic2];
                ie2 = w[hd2][ic2];
                bg2 += ie2;
              }
              var cc2 = u2[hd2], sh2 = cc2[2 * ic2], th2 = cc2[2 * ic2 + 1], Wc2 = (Bb2 - (bg2 - ie2)) / ie2, wi2 = new K2(sh2 + (cc2[2 * ic2 + 2] - sh2) * Wc2 + q2 / 2 - r2.bounds.x, th2 + (cc2[2 * ic2 + 3] - th2) * Wc2 + q2 / 2 - r2.bounds.y);
              wi2.scale(h.scale, h.scale);
              var je2 = Vc2, Ye2 = A2[hd2];
              1e-4 > Wc2 ? 0 < ic2 ? je2 = Ye2[ic2 - 1] : M2.aa(cc2[0], cc2[cc2.length - 2]) && M2.aa(cc2[1], cc2[cc2.length - 1]) && (je2 = Ye2[Ye2.length - 1]) : 0.9999 < Wc2 && (ic2 + 1 < Ye2.length ? je2 = Ye2[ic2 + 1] : M2.aa(cc2[0], cc2[cc2.length - 2]) && M2.aa(cc2[1], cc2[cc2.length - 1]) && (je2 = Ye2[0]));
              Vc2 !== je2 && (180 < Math.abs(Vc2 - je2) && (Vc2 < je2 ? Vc2 += 360 : je2 += 360), Vc2 = (Vc2 + je2) / 2 % 360);
              if (cb2 instanceof Mg2) {
                var wd2 = "";
                cb2.graduatedFunction !== null ? (wd2 = cb2.graduatedFunction(sc2), wd2 = wd2 !== null && wd2 !== void 0 ? wd2.toString() : "") : wd2 = (+sc2.toFixed(2)).toString();
                wd2 !== "" && ph2.push({ lm: wi2, angle: Vc2, text: wd2 });
              } else
                ph2.push({
                  lm: wi2,
                  angle: Vc2
                });
            }
            sc2 = qn + Dd2 * zf2;
          }
        }
      }
      a.kj.push(ph2);
    }
    Ia2(A2);
    var Yj2 = a.kj;
    if (Yj2 !== null)
      for (var rn = d.length, Af2 = 0; Af2 < rn; Af2++) {
        var Cb2 = d[Af2], Ed2 = Yj2[Af2];
        if (Cb2.visible && Cb2 !== h && Ed2.length !== 0) {
          if (Cb2 instanceof xf2) {
            var hb2 = a, xi2 = e, Yb2 = Cb2.alignmentFocus;
            Yb2.Bc() && (Yb2 = vc2);
            var tc2 = Cb2.angle;
            Cb2.zb = 0;
            Cb2.measure(Infinity, Infinity, 0, 0);
            Cb2.zb = tc2;
            var jc2 = Cb2.measuredBounds, Fd2 = jc2.width, Gd2 = jc2.height, fg2 = N2.allocAt(0, 0, Fd2, Gd2), Dc2 = K2.alloc();
            Dc2.Ti(fg2, Yb2);
            N2.free(fg2);
            for (var uh2 = -Dc2.x, gg2 = -Dc2.y, Hd2 = new N2(), vh2 = Ed2.length, Ze2 = 0; Ze2 < vh2; Ze2++)
              for (var Id2 = Ed2[Ze2], Jd2 = Id2.lm.x, Kd2 = Id2.lm.y, Ge2 = Id2.angle, wh2 = 0; 4 > wh2; wh2++) {
                switch (wh2) {
                  case 0:
                    Dc2.h(uh2, gg2);
                    break;
                  case 1:
                    Dc2.h(uh2 + Fd2, gg2);
                    break;
                  case 2:
                    Dc2.h(uh2, gg2 + Gd2);
                    break;
                  case 3:
                    Dc2.h(uh2 + Fd2, gg2 + Gd2);
                }
                Dc2.rotate(Ge2 + Cb2.angle);
                Dc2.offset(Jd2, Kd2);
                Ze2 === 0 && wh2 === 0 ? Hd2.h(Dc2.x, Dc2.y, 0, 0) : Hd2.Oe(Dc2);
                Dc2.offset(-Jd2, -Kd2);
                Dc2.rotate(-Ge2 - Cb2.angle);
              }
            K2.free(Dc2);
            hb2.Qg !== null && hb2.Qg.push(Hd2);
            ac2(xi2, Hd2.x, Hd2.y, Hd2.width, Hd2.height);
          } else if (Cb2 instanceof Mg2) {
            var ke2 = a, sn = e;
            ke2.qh === null && (ke2.qh = new Mg2());
            var dc2 = ke2.qh;
            Lm(dc2, Cb2);
            var Oa2 = Cb2.alignmentFocus;
            Oa2.Bc() && (Oa2 = vc2);
            for (var ec2 = Cb2.segmentOrientation, Ld2 = Cb2.segmentOffset, He2 = new N2(), xh2 = 0, Ie2 = 0, Nc2 = 0, $e2 = 0, yh2 = 0, tn = Ed2.length, hg2 = 0; hg2 < tn; hg2++) {
              var id2 = Ed2[hg2];
              xh2 = id2.lm.x;
              Ie2 = id2.lm.y;
              Nc2 = id2.angle;
              yh2 = $e2 = Cb2.angle;
              ec2 !== Rf2 && (yh2 = ec2 === Mm || ec2 === Nm ? Nc2 + Cb2.angle : Nc2, $e2 = T2.computeAngle(ec2, yh2));
              dc2.zb = $e2;
              dc2.text = id2.text || "";
              dc2.measure(Infinity, Infinity, 0, 0);
              var Md2 = dc2.measuredBounds, le2 = dc2.naturalBounds, me2 = le2.width, Nd2 = le2.height, ne2 = od2.alloc();
              ne2.reset();
              ne2.translate(-Md2.x, -Md2.y);
              ne2.scale(dc2.scale, dc2.scale);
              ne2.rotate(yh2, me2 / 2, Nd2 / 2);
              ec2 !== Fm && ec2 !== Gm || ne2.rotate(90, me2 / 2, Nd2 / 2);
              ec2 !== Hm && ec2 !== Im || ne2.rotate(-90, me2 / 2, Nd2 / 2);
              ec2 === Jm && (45 < Nc2 && 135 > Nc2 || 225 < Nc2 && 315 > Nc2) && ne2.rotate(-Nc2, me2 / 2, Nd2 / 2);
              var Zj2 = N2.allocAt(0, 0, me2, Nd2), Je2 = K2.alloc();
              Je2.Ti(Zj2, Oa2);
              ne2.Aa(Je2);
              var yi2 = -Je2.x, un = -Je2.y, jd2 = K2.alloc();
              jd2.assign(Ld2);
              isNaN(jd2.x) && (jd2.x = me2 / 2 + 3);
              isNaN(jd2.y) && (jd2.y = -(Nd2 / 2 + 3));
              jd2.rotate(Nc2);
              xh2 += jd2.x + yi2;
              Ie2 += jd2.y + un;
              var Bf2 = new N2(xh2, Ie2, Md2.width, Md2.height), zh2 = new N2(Md2.x, Md2.y, Md2.width, Md2.height), ig2 = new N2(le2.x, le2.y, le2.width, le2.height);
              id2.pA = $e2;
              id2.lineCount = dc2.lineCount;
              id2.lines = [dc2.sb, dc2.ei, dc2.re, dc2.Ce, dc2.Dc, dc2.Tb, dc2.pe];
              id2.actualBounds = Bf2;
              id2.measuredBounds = zh2;
              id2.naturalBounds = ig2;
              hg2 === 0 ? He2.assign(Bf2) : He2.Qc(Bf2);
              K2.free(jd2);
              K2.free(Je2);
              N2.free(Zj2);
              od2.free(ne2);
            }
            ke2.Qg !== null && ke2.Qg.push(He2);
            ac2(sn, He2.x, He2.y, He2.width, He2.height);
          }
          dj2(Cb2, false);
        }
      }
  };
  Km.prototype.arrange = function(a, b, c) {
    if (a.Qg !== null) {
      var d = a.pb(), e = a.kj;
      if (e !== null) {
        var f2 = a.Qg, g2 = 0, h = f2[g2];
        g2++;
        d !== null && d.arrange(h.x - c.x, h.y - c.y, h.width, h.height);
        for (var k = b.length, l2 = 0; l2 < k; l2++) {
          var m2 = b[l2];
          h = e[l2];
          m2.visible && m2 !== d && h.length !== 0 && (h = f2[g2], g2++, m2.arrange(h.x - c.x, h.y - c.y, h.width, h.height));
        }
        a.Qg = null;
      }
    }
  };
  Km.prototype.pc = function(a, b, c) {
    var d = c.pj;
    c.pj = true;
    var e = a.naturalBounds, f2 = e.width;
    e = e.height;
    b.save();
    b.beginPath();
    b.rect(-1, -1, f2 + 1, e + 1);
    b.clip();
    f2 = a.pb();
    f2.pc(b, c);
    e = a.Af() * c.scale;
    0 >= e && (e = 1);
    for (var g2 = f2.actualBounds, h = a.T.m, k = a.kj, l2 = h.length, m2 = 0; m2 < l2; m2++) {
      var n2 = h[m2], p2 = k[m2], r2 = p2.length;
      if (n2.visible && n2 !== f2 && p2.length !== 0) {
        if (n2 instanceof xf2) {
          if (!(2 > a.graduatedTickUnit * n2.interval * f2.geometry.flattenedTotalLength / a.graduatedRange * e)) {
            var q2 = n2.measuredBounds, u2 = n2.strokeWidth * n2.scale, w = n2.alignmentFocus;
            w.Bc() && (w = vc2);
            for (var v2 = 0; v2 < r2; v2++) {
              var z2 = p2[v2].lm, y2 = p2[v2].angle, B2 = w, A2 = n2.vb;
              A2.reset();
              A2.translate(z2.x + g2.x, z2.y + g2.y);
              A2.rotate(y2 + n2.angle, 0, 0);
              A2.translate(-q2.width * B2.x + B2.offsetX + u2 / 2, -q2.height * B2.y + B2.offsetY + u2 / 2);
              A2.scale(n2.scale, n2.scale);
              sl(n2, false);
              n2.Nh.set(n2.vb);
              n2.Sk = n2.scale;
              tl(n2, false);
              n2.pc(b, c);
              n2.vb.reset();
            }
          }
        } else if (n2 instanceof Mg2)
          for (a.qh === null && (a.qh = new Mg2()), q2 = a.qh, Lm(q2, n2), n2 = 0; n2 < r2; n2++)
            u2 = p2[n2], u2.actualBounds && u2.measuredBounds && u2.naturalBounds && (q2.Xb = u2.text || "", q2.zb = u2.pA || 0, q2.Xc = u2.lineCount || 0, w = u2.lines, w !== void 0 && (q2.sb = w[0], q2.ei = w[1], q2.re = w[2], q2.Ce = w[3], q2.Dc = w[4], q2.Tb = w[5], q2.pe = w[6]), u2.naturalBounds && (q2.wc = u2.naturalBounds), u2.actualBounds && (w = u2.actualBounds, q2.arrange(w.x, w.y, w.width, w.height)), w = u2.actualBounds, q2.arrange(w.x, w.y, w.width, w.height), v2 = u2.measuredBounds, u2 = u2.naturalBounds, z2 = q2.vb, z2.reset(), z2.translate(w.x + g2.x, w.y + g2.y), z2.translate(-v2.x, -v2.y), q2.np(z2, u2.x, u2.y, u2.width, u2.height), sl(q2, false), q2.Nh.set(q2.vb), q2.Sk = q2.scale, tl(q2, false), q2.pc(b, c));
      }
    }
    c.pj = d;
    b.restore();
    b.Hc(true);
  };
  function X2(a, b) {
    Y2.call(this);
    this.ha = null;
    if (a === void 0)
      this.ha = X2.Position;
    else if (typeof a === "string") {
      var c = El.H(a);
      c !== null && (this.ha = c);
    } else
      a instanceof Fl ? this.ha = a : a && (this.ha = X2.Position, b = a);
    this.ha === null && C2("Panel type not specified or PanelLayout not loaded: " + a);
    this.T = new F2();
    this.nb = pc2;
    this.ha === X2.Grid && (this.G |= 1048576);
    this.mn = Uc2;
    this.Of = Pk;
    this.ha === X2.Table && Om(this);
    this.Hp = rg2;
    this.Kn = Lb2;
    this.Ln = zb2;
    this.Hn = 0;
    this.Gn = 100;
    this.Jn = 10;
    this.In = 0;
    this.Qh = this.jb = this.Rf = this.Qg = this.kj = null;
    this.ao = NaN;
    this.ve = this.ci = null;
    this.hl = "category";
    this.$d = null;
    this.jg = new N2(NaN, NaN, NaN, NaN);
    this.qh = this.cp = this.ph = null;
    this.Re = "";
    b && Object.assign(this, b);
  }
  ma2(X2, Y2);
  function Om(a) {
    a.fj = pc2;
    a.Hg = 1;
    a.Wh = null;
    a.Vh = null;
    a.Gg = 1;
    a.Fg = null;
    a.Uh = null;
    a.ob = [];
    a.ib = [];
    a.Fj = Pm;
    a.ej = Pm;
    a.vi = 0;
    a.gi = 0;
  }
  X2.prototype.cloneProtected = function(a) {
    Y2.prototype.cloneProtected.call(this, a);
    a.ha = this.ha;
    a.nb = this.nb.I();
    a.mn = this.mn.I();
    a.Of = this.Of;
    if (a.ha === X2.Table) {
      a.fj = this.fj.I();
      a.Hg = this.Hg;
      a.Wh = this.Wh;
      a.Vh = this.Vh;
      a.Gg = this.Gg;
      a.Fg = this.Fg;
      a.Uh = this.Uh;
      var b = [];
      if (0 < this.ob.length) {
        for (var c = this.ob, d = c.length, e = 0; e < d; e++)
          if (c[e] !== void 0) {
            var f2 = c[e].copy();
            f2.Si(a);
            b[e] = f2;
          }
      }
      a.ob = b;
      b = [];
      if (0 < this.ib.length)
        for (c = this.ib, d = c.length, e = 0; e < d; e++)
          c[e] !== void 0 && (f2 = c[e].copy(), f2.Si(a), b[e] = f2);
      a.ib = b;
      a.Fj = this.Fj;
      a.ej = this.ej;
      a.vi = this.vi;
      a.gi = this.gi;
    }
    a.Hp = this.Hp;
    a.Kn = this.Kn.I();
    a.Ln = this.Ln.I();
    a.Hn = this.Hn;
    a.Gn = this.Gn;
    a.Jn = this.Jn;
    a.In = this.In;
    a.kj = this.kj;
    a.Rf = this.Rf;
    a.jb = this.jb;
    a.Qh = this.Qh;
    a.ao = this.ao;
    a.ci = this.ci;
    a.ve = this.ve;
    a.hl = this.hl;
    a.jg.assign(this.jg);
    a.Re = this.Re;
    this.cp !== null && (a.cp = this.cp);
  };
  X2.prototype.wf = function(a) {
    Y2.prototype.wf.call(this, a);
    a.T = this.T;
    for (var b = a.T.m, c = b.length, d = 0; d < c; d++)
      b[d].bg = a;
    a.ph = null;
  };
  X2.prototype.copy = function() {
    var a = Y2.prototype.copy.call(this);
    if (a !== null) {
      for (var b = this.T.m, c = b.length, d = 0; d < c; d++) {
        var e = b[d].copy();
        e.Si(a);
        e.Dj = null;
        var f2 = a.T, g2 = f2.count;
        f2.wb(g2, e);
        f2 = a.part;
        if (f2 !== null) {
          f2.li = null;
          e.portId !== null && f2 instanceof W2 && (f2.Je = true);
          var h = a.diagram;
          h !== null && h.undoManager.isUndoingRedoing || f2.Wa(pe2, "elements", a, null, e, null, g2);
        }
      }
      return a;
    }
    return null;
  };
  t2 = X2.prototype;
  t2.toString = function() {
    return "Panel(" + this.type.name + ")#" + ib2(this);
  };
  t2.Eo = function(a) {
    Y2.prototype.Eo.call(this, a);
    for (var b = this.T.m, c = b.length, d = 0; d < c; d++)
      b[d].Eo(a);
  };
  t2.Ei = function(a, b) {
    if (this.ha === X2.Grid)
      a.Ed(), this.ha.pc(this, a, b);
    else if (this.ha === X2.Graduated)
      a.Ed(), this.ha.pc(this, a, b);
    else {
      this.ha === X2.Table && (a.Ed(), a.lineCap = "butt", Qm(this, a, true, this.ob, true), Qm(this, a, false, this.ib, true), Rm(this, a, true, this.ob), Rm(this, a, false, this.ib), Qm(this, a, true, this.ob, false), Qm(this, a, false, this.ib, false));
      var c = this.isClipping && this.ha === X2.Spot;
      c && a.save();
      for (var d = this.pb(), e = this.T.m, f2 = e.length, g2 = 0; g2 < f2; g2++) {
        var h = e[g2];
        c && h === d && (a.clipInsteadOfFill = true);
        h.pc(a, b);
        c && h === d && (a.clipInsteadOfFill = false);
      }
      c && (a.restore(), a.Hc(true));
    }
  };
  function Rm(a, b, c, d) {
    for (var e = d.length, f2 = a.actualBounds, g2 = a.naturalBounds, h = true, k = 0; k < e; k++) {
      var l2 = d[k];
      if (l2 !== void 0) {
        if (h)
          h = false;
        else if (l2.actual !== 0) {
          if (c) {
            if (l2.position > f2.height)
              continue;
          } else if (l2.position > f2.width)
            continue;
          var m2 = l2.separatorStrokeWidth;
          isNaN(m2) && (m2 = c ? a.Hg : a.Gg);
          var n2 = l2.separatorStroke;
          n2 === null && (n2 = c ? a.Wh : a.Fg);
          if (m2 !== 0 && n2 !== null) {
            di2(a, b, n2, false, false, g2, f2);
            n2 = false;
            var p2 = l2.separatorDashArray;
            p2 === null && (p2 = c ? a.Vh : a.Uh);
            p2 !== null && (n2 = true, b.os(p2, 0));
            b.beginPath();
            p2 = l2.position + m2;
            c ? p2 > f2.height && (m2 -= p2 - f2.height) : p2 > f2.width && (m2 -= p2 - f2.width);
            l2 = l2.position + m2 / 2;
            b.lineWidth = m2;
            m2 = a.nb;
            c ? (l2 += m2.top, p2 = f2.width - m2.right, b.moveTo(m2.left, l2), b.lineTo(p2, l2)) : (l2 += m2.left, p2 = f2.height - m2.bottom, b.moveTo(l2, m2.top), b.lineTo(l2, p2));
            b.stroke();
            n2 && b.ms();
          }
        }
      }
    }
  }
  function Qm(a, b, c, d, e) {
    for (var f2 = d.length, g2 = a.actualBounds, h = a.naturalBounds, k = 0; k < f2; k++) {
      var l2 = d[k];
      if (l2 !== void 0 && l2.background !== null && l2.coversSeparators !== e && l2.actual !== 0) {
        var m2 = c ? g2.height : g2.width;
        if (!(l2.position > m2)) {
          var n2 = l2.Ic(), p2 = l2.separatorStrokeWidth;
          isNaN(p2) && (p2 = c ? a.Hg : a.Gg);
          var r2 = l2.separatorStroke;
          r2 === null && (r2 = c ? a.Wh : a.Fg);
          r2 === null && (p2 = 0);
          n2 -= p2;
          p2 = l2.position + p2;
          n2 += l2.actual;
          p2 + n2 > m2 && (n2 = m2 - p2);
          0 >= n2 || (m2 = a.nb, di2(a, b, l2.background, true, false, h, g2), c ? b.fillRect(m2.left, p2 + m2.top, g2.width - (m2.left + m2.right), n2) : b.fillRect(p2 + m2.left, m2.top, n2, g2.height - (m2.top + m2.bottom)));
        }
      }
    }
  }
  function Nj2(a) {
    return a === "LineV" || a === "BarV";
  }
  t2.ak = function(a, b, c, d, e) {
    var f2 = this.je(), g2 = this.transform, h = 1 / (g2.m11 * g2.m22 - g2.m12 * g2.m21), k = g2.m22 * h, l2 = -g2.m12 * h, m2 = -g2.m21 * h, n2 = g2.m11 * h, p2 = h * (g2.m21 * g2.dy - g2.m22 * g2.dx), r2 = h * (g2.m12 * g2.dx - g2.m11 * g2.dy);
    if (this.areaBackground !== null)
      return g2 = this.actualBounds, M2.Cf(g2.left, g2.top, g2.right, g2.bottom, a, b, c, d, e);
    if (this.background !== null)
      return f2 = a * k + b * m2 + p2, h = a * l2 + b * n2 + r2, a = c * k + d * m2 + p2, k = c * l2 + d * n2 + r2, e.h(0, 0), c = this.naturalBounds, f2 = M2.Cf(0, 0, c.width, c.height, f2, h, a, k, e), e.transform(g2), f2;
    f2 || (k = 1, m2 = l2 = 0, n2 = 1, r2 = p2 = 0);
    h = a * k + b * m2 + p2;
    a = a * l2 + b * n2 + r2;
    k = c * k + d * m2 + p2;
    c = c * l2 + d * n2 + r2;
    e.h(k, c);
    d = (k - h) * (k - h) + (c - a) * (c - a);
    l2 = false;
    n2 = this.T.m;
    r2 = n2.length;
    m2 = K2.alloc();
    p2 = null;
    b = Infinity;
    var q2 = null, u2 = this.isClipping && this.ha === X2.Spot;
    u2 && (q2 = K2.alloc(), p2 = this.pb(), (l2 = p2.ak(h, a, k, c, q2)) && (b = (h - q2.x) * (h - q2.x) + (a - q2.y) * (a - q2.y)));
    for (var w = 0; w < r2; w++) {
      var v2 = n2[w];
      v2.visible && v2 !== p2 && v2.ak(h, a, k, c, m2) && (l2 = true, v2 = (h - m2.x) * (h - m2.x) + (a - m2.y) * (a - m2.y), v2 < d && (d = v2, e.set(m2)));
    }
    u2 && (b > d && e.set(q2), K2.free(q2));
    K2.free(m2);
    f2 && e.transform(g2);
    return l2;
  };
  t2.s = function(a) {
    if (!ij2(this)) {
      Y2.prototype.s.call(this, a);
      a = null;
      if (this.ha === X2.Auto || this.ha === X2.Link)
        a = this.pb();
      for (var b = this.T.m, c = b.length, d = 0; d < c; d++) {
        var e = b[d];
        (e === a || e.isPanelMain) && e.s(true);
        if (!e.desiredSize.u()) {
          var f2 = cl(e, false);
          (e instanceof ng2 || e instanceof X2 || e instanceof Mg2 || f2 !== pg2) && e.s(true);
        }
      }
    }
  };
  t2.ck = function() {
    if (!ij2(this)) {
      dj2(this, true);
      dl(this, true);
      for (var a = this.T.m, b = a.length, c = 0; c < b; c++)
        a[c].ck();
    }
  };
  t2.dl = function() {
    if ((this.G & 2048) !== 0 === false) {
      sl(this, true);
      tl(this, true);
      for (var a = this.T.m, b = a.length, c = 0; c < b; c++)
        a[c].jv();
    }
  };
  t2.jv = function() {
    tl(this, true);
    for (var a = this.T.m, b = a.length, c = 0; c < b; c++)
      a[c].jv();
  };
  t2.im = function(a, b, c, d) {
    var e = this.jg;
    e.h(0, 0, 0, 0);
    var f2 = this.desiredSize, g2 = this.minSize;
    c === void 0 && (c = g2.width, d = g2.height);
    c = Math.max(c, g2.width);
    d = Math.max(d, g2.height);
    var h = this.maxSize;
    isNaN(f2.width) || (a = Math.min(f2.width, h.width));
    isNaN(f2.height) || (b = Math.min(f2.height, h.height));
    a = Math.max(c, a);
    b = Math.max(d, b);
    var k = this.nb;
    a = Math.max(a - k.left - k.right, 0);
    b = Math.max(b - k.top - k.bottom, 0);
    var l2 = this.T.m;
    l2.length !== 0 && this.ha.measure(this, a, b, l2, e, c, d);
    a = e.width + k.left + k.right;
    k = e.height + k.top + k.bottom;
    isFinite(f2.width) && (a = f2.width);
    isFinite(f2.height) && (k = f2.height);
    a = Math.min(h.width, a);
    k = Math.min(h.height, k);
    a = Math.max(g2.width, a);
    k = Math.max(g2.height, k);
    a = Math.max(c, a);
    k = Math.max(d, k);
    Rb2(e, a, k);
    Rb2(this.naturalBounds, a, k);
    this.xe(0, 0, a, k);
  };
  t2.pb = function() {
    if (this.ph === null) {
      var a = this.T.m, b = a.length;
      if (b === 0)
        return null;
      for (var c = 0; c < b; c++) {
        var d = a[c];
        if (d.isPanelMain === true)
          return this.ph = d;
      }
      this.ph = a[0];
    }
    return this.ph;
  };
  function nm(a) {
    return a.part !== null ? a.part.locationObject : null;
  }
  t2.zh = function(a, b, c, d) {
    var e = this.T.m;
    this.actualBounds.h(a, b, c, d);
    if (e.length !== 0) {
      if (!this.desiredSize.u()) {
        a = cl(this, true);
        var f2 = this.measuredBounds;
        b = f2.width;
        f2 = f2.height;
        var g2 = this.Vg, h = g2.left + g2.right;
        g2 = g2.top + g2.bottom;
        b === c && f2 === d && (a = pg2);
        switch (a) {
          case pg2:
            if (b > c || f2 > d)
              this.s(), this.measure(b > c ? c : b, f2 > d ? d : f2, 0, 0);
            break;
          case qd2:
            this.s(true);
            this.measure(c + h, d + g2, 0, 0);
            break;
          case Qk:
            this.s(true);
            this.measure(c + h, f2 + g2, 0, 0);
            break;
          case Rk:
            this.s(true), this.measure(b + h, d + g2, 0, 0);
        }
      }
      this.ha.arrange(this, e, this.jg);
    }
  };
  t2.Bh = function(a) {
    var b = this.naturalBounds, c = nm(this);
    if (bc2(0, 0, b.width, b.height, a.x, a.y)) {
      b = this.T.m;
      for (var d = b.length, e = K2.allocAt(0, 0); d--; ) {
        var f2 = b[d];
        if (f2.visible || f2 === c) {
          if (ub2(e.set(a), f2.transform), f2.$(e))
            return K2.free(e), true;
        }
      }
      K2.free(e);
      return this.Vb === null && this.hd === null ? false : true;
    }
    return false;
  };
  t2.ps = function(a) {
    if (this.Dk === a)
      return this;
    for (var b = this.T.m, c = b.length, d = 0; d < c; d++) {
      var e = b[d].ps(a);
      if (e !== null)
        return e;
    }
    return null;
  };
  t2.Em = function(a, b) {
    b(this, a);
    if (a instanceof X2) {
      a = a.T.m;
      for (var c = a.length, d = 0; d < c; d++)
        this.Em(a[d], b);
    }
  };
  function vj2(a, b) {
    Sm(a, a, b);
  }
  function Sm(a, b, c) {
    c(b);
    b = b.T.m;
    for (var d = b.length, e = 0; e < d; e++) {
      var f2 = b[e];
      f2 instanceof X2 && Sm(a, f2, c);
    }
  }
  function Tm(a, b) {
    Um(a, a, b);
  }
  function Um(a, b, c) {
    c(b);
    if (b instanceof X2) {
      b = b.T.m;
      for (var d = b.length, e = 0; e < d; e++)
        Um(a, b[e], c);
    }
  }
  t2.$l = function(a) {
    return Vm(this, this, a);
  };
  function Vm(a, b, c) {
    if (c(b))
      return b;
    if (b instanceof X2) {
      b = b.T.m;
      for (var d = b.length, e = 0; e < d; e++) {
        var f2 = Vm(a, b[e], c);
        if (f2 !== null)
          return f2;
      }
    }
    return null;
  }
  t2.Ya = function(a) {
    if (this.name === a)
      return this;
    var b = this.T.m, c = b.length;
    this.ci === null && this.ve === null || (c = Wm(this));
    for (var d = 0; d < c; d++) {
      var e = b[d];
      if (e instanceof X2) {
        var f2 = e.Ya(a);
        if (f2 !== null)
          return f2;
      }
      if (e.name === a)
        return e;
    }
    return null;
  };
  function Xm(a) {
    a = a.T.m;
    for (var b = a.length, c = 0, d = 0; d < b; d++) {
      var e = a[d];
      e instanceof X2 ? c = Math.max(c, Xm(e)) : e instanceof xf2 && (c = Math.max(c, e.ig / 2 * e.Kj * e.Af()));
    }
    return c;
  }
  t2.je = function() {
    return !(this.type === X2.TableRow || this.type === X2.TableColumn);
  };
  t2.Zb = function(a, b, c) {
    if (this.pickable === false)
      return null;
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    if (jj2(this))
      return null;
    var d = this.naturalBounds, e = 1 / this.Af(), f2 = this.je(), g2 = f2 ? a : ub2(K2.allocAt(a.x, a.y), this.transform), h = this.diagram, k = 10, l2 = 5;
    h !== null && (k = h.cm("extraTouchArea"), l2 = k / 2);
    if (bc2(-(l2 * e), -(l2 * e), d.width + k * e, d.height + k * e, g2.x, g2.y)) {
      if (!this.isAtomic) {
        e = this.T.m;
        var m2 = e.length;
        h = K2.alloc();
        l2 = (k = this.isClipping && this.ha === X2.Spot) ? this.pb() : null;
        if (k && (l2.je() ? ub2(h.set(a), l2.transform) : h.set(a), !l2.$(h)))
          return K2.free(h), f2 || K2.free(g2), null;
        for (var n2 = nm(this); m2--; ) {
          var p2 = e[m2];
          if (p2.visible || p2 === n2) {
            if (p2.je() ? ub2(h.set(a), p2.transform) : h.set(a), !k || p2 !== l2) {
              var r2 = null;
              p2 instanceof X2 ? r2 = p2.Zb(h, b, c) : p2.pickable === true && p2.$(h) && (r2 = p2);
              if (r2 !== null && (b !== null && (r2 = b(r2)), r2 !== null && (c === null || c(r2))))
                return K2.free(h), f2 || K2.free(g2), r2;
            }
          }
        }
        K2.free(h);
      }
      if (this.background === null && this.areaBackground === null)
        return f2 || K2.free(g2), null;
      a = bc2(0, 0, d.width, d.height, g2.x, g2.y) ? this : null;
      f2 || K2.free(g2);
      return a;
    }
    f2 || K2.free(g2);
    return null;
  };
  t2.Hi = function(a, b, c, d) {
    if (this.pickable === false)
      return false;
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    var e = this.naturalBounds, f2 = this.je(), g2 = f2 ? a : ub2(K2.allocAt(a.x, a.y), this.transform);
    e = bc2(0, 0, e.width, e.height, g2.x, g2.y);
    if (this.type === X2.TableRow || this.type === X2.TableColumn || e) {
      if (!this.isAtomic) {
        for (var h = this.T.m, k = h.length, l2 = K2.alloc(), m2 = nm(this); k--; ) {
          var n2 = h[k];
          if (n2.visible || n2 === m2) {
            n2.je() ? ub2(l2.set(a), n2.transform) : l2.set(a);
            var p2 = n2;
            n2 = n2 instanceof X2 ? n2 : null;
            (n2 !== null ? n2.Hi(l2, b, c, d) : p2.$(l2)) && p2.pickable !== false && (b !== null && (p2 = b(p2)), p2 === null || c !== null && !c(p2) || d.add(p2));
          }
        }
        K2.free(l2);
      }
      f2 || K2.free(g2);
      return e && (this.background !== null || this.areaBackground !== null);
    }
    f2 || K2.free(g2);
    return false;
  };
  t2.zf = function(a, b, c, d, e, f2) {
    if (this.pickable === false)
      return false;
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    var g2 = f2;
    f2 === void 0 && (g2 = od2.alloc(), g2.reset());
    g2.multiply(this.transform);
    if (this.Ah(a, g2))
      return Ym(this, b, c, e), f2 === void 0 && od2.free(g2), true;
    if (this.Lc(a, g2)) {
      if (!this.isAtomic)
        for (var h = nm(this), k = this.T.m, l2 = k.length; l2--; ) {
          var m2 = k[l2];
          if (m2.visible || m2 === h) {
            var n2 = m2.actualBounds, p2 = this.naturalBounds;
            if (!(n2.x > p2.width || n2.y > p2.height || 0 > n2.x + n2.width || 0 > n2.y + n2.height)) {
              n2 = m2;
              m2 = m2 instanceof X2 ? m2 : null;
              p2 = od2.alloc();
              p2.set(g2);
              if (m2 !== null ? m2.zf(a, b, c, d, e, p2) : bl(n2, a, d, p2))
                b !== null && (n2 = b(n2)), n2 === null || c !== null && !c(n2) || e.add(n2);
              od2.free(p2);
            }
          }
        }
      f2 === void 0 && od2.free(g2);
      return d;
    }
    f2 === void 0 && od2.free(g2);
    return false;
  };
  function Ym(a, b, c, d) {
    for (var e = a.T.m, f2 = e.length; f2--; ) {
      var g2 = e[f2];
      if (g2.visible) {
        var h = g2.actualBounds, k = a.naturalBounds;
        h.x > k.width || h.y > k.height || 0 > h.x + h.width || 0 > h.y + h.height || (g2 instanceof X2 && Ym(g2, b, c, d), b !== null && (g2 = b(g2)), g2 === null || c !== null && !c(g2) || d.add(g2));
      }
    }
  }
  t2.qg = function(a, b, c, d, e, f2) {
    if (this.pickable === false)
      return false;
    c === void 0 && (c = null);
    d === void 0 && (d = null);
    var g2 = this.naturalBounds, h = this.je(), k = h ? a : ub2(K2.allocAt(a.x, a.y), this.transform), l2 = h ? b : ub2(K2.allocAt(b.x, b.y), this.transform), m2 = k.xf(l2), n2 = 0 < k.x && k.x < g2.width && 0 < k.y && k.y < g2.height || vb2(k.x, k.y, 0, 0, 0, g2.height) <= m2 || vb2(k.x, k.y, 0, g2.height, g2.width, g2.height) <= m2 || vb2(k.x, k.y, g2.width, g2.height, g2.width, 0) <= m2 || vb2(k.x, k.y, g2.width, 0, 0, 0) <= m2;
    g2 = k.pd(0, 0) <= m2 && k.pd(0, g2.height) <= m2 && k.pd(g2.width, 0) <= m2 && k.pd(g2.width, g2.height) <= m2;
    h || (K2.free(k), K2.free(l2));
    if (n2) {
      if (!this.isAtomic) {
        k = K2.alloc();
        l2 = K2.alloc();
        m2 = nm(this);
        for (var p2 = this.T.m, r2 = p2.length; r2--; ) {
          var q2 = p2[r2];
          if (q2.visible || q2 === m2) {
            var u2 = q2.actualBounds, w = this.naturalBounds;
            if (!h || !(u2.x > w.width || u2.y > w.height || 0 > u2.x + u2.width || 0 > u2.y + u2.height)) {
              if (q2.je() ? (u2 = q2.transform, ub2(k.set(a), u2), ub2(l2.set(b), u2)) : (k.set(a), l2.set(b)), u2 = q2, q2 = q2 instanceof X2 ? q2 : null, q2 !== null ? q2.qg(k, l2, c, d, e, f2) : u2.Sx(k, l2, e))
                c !== null && (u2 = c(u2)), u2 === null || d !== null && !d(u2) || f2.add(u2);
            }
          }
        }
        K2.free(k);
        K2.free(l2);
      }
      return e ? n2 : g2;
    }
    return false;
  };
  function tm(a) {
    var b = null;
    a instanceof xf2 && (b = a.spot1, b === Uc2 && (b = null), a = a.geometry, a !== null && b === null && (b = a.spot1));
    b === null && (b = uc2);
    return b;
  }
  function um(a) {
    var b = null;
    a instanceof xf2 && (b = a.spot2, b === Uc2 && (b = null), a = a.geometry, a !== null && b === null && (b = a.spot2));
    b === null && (b = Cc2);
    return b;
  }
  t2.add = function(a) {
    for (var b = [], c = 0; c < arguments.length; ++c)
      b[c] = arguments[c];
    for (c = 0; c < b.length; c++)
      this.wb(this.T.count, b[c]);
    return this;
  };
  t2.J = function(a) {
    return this.T.J(a);
  };
  t2.wb = function(a, b) {
    b instanceof V2 && C2("Cannot add a Part to a Panel: " + b + "; use a Panel instead");
    if (this === b || this.sg(b))
      this === b && C2("Cannot make a Panel contain itself: " + this.toString()), C2("Cannot make a Panel indirectly contain itself: " + this.toString() + " already contains " + b.toString());
    var c = b.panel;
    c !== null && c !== this && C2("Cannot add a GraphObject that already belongs to another Panel to this Panel: " + b.toString() + ", already contained by " + c.toString() + ", cannot be shared by this Panel: " + this.toString());
    this.ha !== X2.Grid || b instanceof xf2 || C2("Can only add Shapes to a Grid Panel, not: " + b);
    this.ha !== X2.Graduated || b instanceof xf2 || b instanceof Mg2 || C2("Can only add Shapes or TextBlocks to a Graduated Panel, not: " + b);
    b.Si(this);
    b.Dj = null;
    if (this.itemArray !== null) {
      var d = b.data;
      d !== null && typeof d === "object" && (this.$d === null && (this.$d = new H2()), this.$d.add(d, b));
    }
    var e = this.T;
    d = -1;
    if (c === this) {
      for (var f2 = -1, g2 = this.T.m, h = g2.length, k = 0; k < h; k++)
        if (g2[k] === b) {
          f2 = k;
          break;
        }
      if (f2 !== -1) {
        if (f2 === a || f2 + 1 >= e.count && a >= e.count)
          return;
        e.eb(f2);
        d = f2;
      } else
        C2("element " + b.toString() + " has panel " + c.toString() + " but is not contained by it.");
    }
    if (0 > a || a > e.count)
      a = e.count;
    e.wb(a, b);
    if (a === 0 || b.isPanelMain)
      this.ph = null;
    ij2(this) || this.s();
    b.s(false);
    b.portId !== null ? this.Je = true : b instanceof X2 && b.Je === true && (this.Je = true);
    this.Rf = null;
    this.Ef() || Zm(this, b, false);
    c = this.part;
    c !== null && (c.li = null, c.Xf = NaN, this.Je && c instanceof W2 && (c.Je = true), c.Je && c instanceof W2 && (c.oc = null), e = this.diagram, e !== null && e.undoManager.isUndoingRedoing || (d !== -1 && c.Wa(qe2, "elements", this, b, null, d, null), c.Wa(pe2, "elements", this, null, b, null, a)));
  };
  function $m(a, b) {
    a.G = b ? a.G | 16777216 : a.G & -16777217;
  }
  t2.remove = function(a) {
    for (var b = this.T.m, c = b.length, d = -1, e = 0; e < c; e++)
      if (b[e] === a) {
        d = e;
        break;
      }
    d !== -1 && this.fc(d, true);
  };
  t2.eb = function(a) {
    0 <= a && this.fc(a, true);
  };
  t2.fc = function(a, b) {
    var c = this.T, d = c.J(a);
    d.Dj = null;
    d.Si(null);
    if (this.$d !== null) {
      var e = d.data;
      typeof e === "object" && this.$d.remove(e);
    }
    c.eb(a);
    dj2(this, false);
    this.s();
    this.ph === d && (this.ph = null);
    this.Rf = null;
    var f2 = this.part;
    f2 !== null && (f2.li = null, f2.Xf = NaN, f2.Mb(), f2 instanceof W2 && (d instanceof X2 ? d.Em(d, function(a2, c2) {
      Jl(f2, c2, b);
    }) : Jl(f2, d, b)), c = this.diagram, c !== null && c.undoManager.isUndoingRedoing || f2.Wa(qe2, "elements", this, d, null, a, null));
  };
  X2.prototype.getRowDefinition = function(a) {
    0 > a && xa2(a, ">= 0", X2, "getRowDefinition:idx");
    a = Math.round(a);
    var b = this.ob;
    if (b === void 0)
      return null;
    if (b[a] === void 0) {
      var c = new Jj2();
      c.Si(this);
      c.isRow = true;
      c.index = a;
      b[a] = c;
      this.Wa(pe2, "rowdefs", this, null, c, null, a);
    }
    return b[a];
  };
  X2.prototype.KA = function(a) {
    0 > a && xa2(a, ">= 0", X2, "removeRowDefinition:idx");
    a = Math.round(a);
    var b = this.ob;
    if (b !== void 0) {
      var c = b[a];
      if (c) {
        b[a] = void 0;
        for (var d = b.length - 1; 0 <= d && b[d--] === void 0; )
          b.length--;
        this.Wa(qe2, "rowdefs", this, c, null, a, null);
        this.s();
      }
    }
  };
  function Kj2(a, b, c) {
    var d = a.ob;
    if (d && !(0 > b)) {
      d[b] = c instanceof Jj2 ? c : void 0;
      if (!c)
        for (b = d.length - 1; 0 <= b && d[b--] === void 0; )
          d.length--;
      a.s();
    }
  }
  X2.prototype.getColumnDefinition = function(a) {
    0 > a && xa2(a, ">= 0", X2, "getColumnDefinition:idx");
    a = Math.round(a);
    var b = this.ib;
    if (b === void 0)
      return null;
    if (b[a] === void 0) {
      var c = new Jj2();
      c.Si(this);
      c.isRow = false;
      c.index = a;
      b[a] = c;
      this.Wa(pe2, "coldefs", this, null, c, null, a);
    }
    return b[a];
  };
  t2 = X2.prototype;
  t2.FA = function(a) {
    0 > a && xa2(a, ">= 0", X2, "removeColumnDefinition:idx");
    a = Math.round(a);
    var b = this.ib;
    if (b !== void 0) {
      var c = b[a];
      if (c) {
        b[a] = void 0;
        for (var d = b.length - 1; 0 <= d && b[d--] === void 0; )
          b.length--;
        this.Wa(qe2, "coldefs", this, c, null, a, null);
        this.s();
      }
    }
  };
  function Lj2(a, b, c) {
    var d = a.ib;
    if (d && !(0 > b)) {
      d[b] = c instanceof Jj2 ? c : void 0;
      if (!c)
        for (b = d.length - 1; 0 <= b && d[b--] === void 0; )
          d.length--;
      a.s();
    }
  }
  t2.Mz = function(a) {
    if (0 > a || this.type !== X2.Table)
      return -1;
    for (var b = 0, c = this.ob, d = c.length, e = this.vi; e < d; e++) {
      var f2 = c[e];
      if (f2 !== void 0 && (b += f2.total, a < b))
        break;
    }
    return e;
  };
  t2.Ez = function(a) {
    if (0 > a || this.type !== X2.Table)
      return -1;
    for (var b = 0, c = this.ib, d = c.length, e = this.gi; e < d; e++) {
      var f2 = c[e];
      if (f2 !== void 0 && (b += f2.total, a < b))
        break;
    }
    return e;
  };
  t2.cA = function(a, b) {
    b === void 0 && (b = new K2(NaN, NaN));
    if (this.type !== X2.Graduated)
      return b.h(NaN, NaN), b;
    a = Math.min(Math.max(a, this.graduatedMin), this.graduatedMax);
    var c = this.pb();
    c.geometry.av((a - this.graduatedMin) / this.graduatedRange, b);
    return c.transform.Aa(b);
  };
  t2.dA = function(a) {
    if (this.type !== X2.Graduated)
      return NaN;
    var b = this.pb();
    b.transform.Hd(a);
    return b.geometry.Wx(a) * this.graduatedRange + this.graduatedMin;
  };
  function Al(a) {
    a = a.Qh;
    return a !== null && a.v;
  }
  function og2(a) {
    var b = a.Qh;
    if (b === null)
      a.data !== null && C2("Template cannot have .data be non-null: " + a), a.Qh = b = new F2();
    else if (b.v)
      return;
    var c = new F2();
    $m(a, false);
    a.Em(a, function(a2, d2) {
      var e2 = d2.fb;
      if (e2 !== null)
        for (xl(d2, false), e2 = e2.iterator; e2.next(); ) {
          var f3 = e2.value;
          f3.mode === an && xl(d2, true);
          var g3 = f3.sourceName;
          g3 !== null && (g3 === "/" && $m(a2, true), g3 = al(f3, a2, d2), g3 !== null && (c.add(g3), g3.Jl === null && (g3.Jl = new F2()), g3.Jl.add(f3)));
          b.add(f3);
        }
      if (d2 instanceof X2 && d2.type === X2.Table) {
        if (0 < d2.ob.length) {
          for (a2 = d2.ob, e2 = a2.length, f3 = 0; f3 < e2; f3++)
            if (g3 = a2[f3], g3 !== void 0 && g3.fb !== null)
              for (var h2 = g3.fb.iterator; h2.next(); ) {
                var k2 = h2.value;
                k2.od = g3;
                k2.yp = 2;
                k2.Pl = g3.index;
                b.add(k2);
              }
        }
        if (0 < d2.ib.length) {
          for (d2 = d2.ib, a2 = d2.length, e2 = 0; e2 < a2; e2++)
            if (f3 = d2[e2], f3 !== void 0 && f3.fb !== null)
              for (g3 = f3.fb.iterator; g3.next(); )
                h2 = g3.value, h2.od = f3, h2.yp = 1, h2.Pl = f3.index, b.add(h2);
        }
      }
    });
    for (var d = c.iterator; d.next(); ) {
      var e = d.value;
      if (e.Jl !== null) {
        xl(e, true);
        for (var f2 = e.Jl.iterator; f2.next(); ) {
          var g2 = f2.value;
          e.fb === null && (e.fb = new F2());
          e.fb.add(g2);
        }
      }
      e.Jl = null;
    }
    for (d = b.iterator; d.next(); )
      if (e = d.value, f2 = e.od, f2 !== null) {
        e.od = null;
        var h = e.targetProperty, k = h.indexOf(".");
        0 < k && f2 instanceof X2 && (g2 = h.substring(0, k), h = h.substr(k + 1), k = f2.Ya(g2), k !== null ? (f2 = k, e.targetProperty = h) : ya2('Warning: unable to find GraphObject named "' + g2 + '" for Binding: ' + e.toString()));
        f2 instanceof Jj2 ? (g2 = ib2(f2.panel), e.Xi = g2 === void 0 ? -1 : g2, f2.panel.Dk = e.Xi) : f2 instanceof Y2 ? (g2 = ib2(f2), e.Xi = g2 === void 0 ? -1 : g2, f2.Dk = e.Xi) : C2("Unknown type of binding target: " + f2);
      }
    b.freeze();
    a instanceof V2 && a.Mc() && a.Ta();
  }
  t2.qz = function(a) {
    a === void 0 && (a = false);
    var b = this.copy();
    Tm(b, function(a2) {
      a2 instanceof X2 && (a2.Qh = null, a2.jb = null);
      var b2 = a2.fb;
      b2 !== null && (a2.fb = null, b2.each(function(b3) {
        a2.bind(b3.copy());
      }));
      b2 = a2.xg;
      b2 !== null && (a2.xg = null, b2.each(function(b3) {
        a2.Zv(b3.value.copy());
      }));
    });
    a && og2(b);
    return b;
  };
  t2.Fa = function(a) {
    var b = this.Qh;
    if (b !== null)
      for (a === void 0 && (a = ""), b = b.iterator; b.next(); ) {
        var c = b.value, d = c.sourceProperty;
        if (a === "" || d === "" || d === a) {
          if (d = c.targetProperty, c.converter !== null || d !== "") {
            d = this.data;
            var e = c.sourceName;
            if (e !== null)
              if (e === "")
                d = this;
              else if (e === "/")
                d = this;
              else if (e === ".")
                d = this;
              else if (e === "..")
                d = this;
              else {
                if (d = this.Ya(e), d === null)
                  continue;
              }
            else if (c.isToModel)
              if (d = this.diagram, d !== null)
                d = d.model.modelData;
              else
                continue;
            var f2 = this, g2 = c.Xi;
            if (g2 !== -1) {
              if (f2 = this.ps(g2), f2 === null)
                continue;
            } else
              c.od !== null && (f2 = c.od);
            e === "/" ? d = f2.part : e === "." ? d = f2 : e === ".." && (d = f2.panel);
            e = c.yp;
            if (e !== 0) {
              if (!(f2 instanceof X2))
                continue;
              e === 1 ? f2 = f2.getColumnDefinition(c.Pl) : e === 2 && (f2 = f2.getRowDefinition(c.Pl));
            }
            f2 !== void 0 && c.cw(f2, d);
          }
        }
      }
  };
  t2.Rx = function(a) {
    return a === void 0 || a === null || this.$d === null ? null : this.$d.H(a);
  };
  function bn(a, b) {
    a = a.T.m;
    for (var c = a.length, d = b.length, e = 0, f2 = null; e < c && !(f2 = a[e], f2 instanceof X2 && f2.data !== null); )
      e++, f2 = a[e];
    if (c - e !== d)
      return true;
    if (f2 === null)
      return 0 < d;
    for (var g2 = 0; e < c && g2 < d; ) {
      f2 = a[e];
      if (!(f2 instanceof X2) || f2.data !== b[g2])
        return true;
      e++;
      g2++;
    }
    return false;
  }
  function Wm(a) {
    if (a.type === X2.Spot || a.type === X2.Auto)
      return Math.min(a.T.length, 1);
    if (a.type === X2.Link) {
      a = a.T;
      for (var b = a.length, c = 0; c < b; c++) {
        var d = a.J(c);
        if (!(d instanceof xf2 && d.isPanelMain))
          break;
      }
      return c;
    }
    return a.type === X2.Table && 0 < a.T.length && (a = a.T.J(0), a.isPanelMain && a instanceof X2 && (a.type === X2.TableRow || a.type === X2.TableColumn)) ? 1 : 0;
  }
  t2.Fv = function() {
    for (var a = Wm(this); this.T.length > a; )
      this.fc(this.T.length - 1, false);
    cn(this, this.itemArray);
  };
  function cn(a, b) {
    var c = Wm(a);
    if (b === null || b.length === 0)
      for (; a.T.length > c; )
        a.fc(a.T.length - 1, false);
    else if (a.T.length <= c) {
      c = b.length;
      for (var d = 0; d < c; d++)
        dn(a, b[d], d, true);
    } else {
      d = c;
      for (var e = 0; e < b.length; e++, d++) {
        var f2 = b[e], g2 = d < a.T.length ? a.T.J(d) : null;
        if (g2 instanceof X2) {
          if (g2.data !== f2) {
            var h = en(a, g2.data), k = en(a, f2), l2 = k !== h;
            l2 || (h = fn(a, h), l2 = fn(a, k) !== h);
            l2 ? (a.fc(d, false), dn(a, f2, e, false)) : g2.data = f2;
          }
        } else
          dn(a, f2, e, false);
      }
      for (; d < a.T.length; )
        a.fc(d, false);
      a.ph = null;
      gn(a, c, 0);
      ij2(a) || a.s();
      a.Rf = null;
      a.Ef() || Zm(a, a, false);
      b = a.part;
      b !== null && (b.li = null, b.Xf = NaN, a.Je && b instanceof W2 && (b.Je = true), b.Je && b instanceof W2 && (b.oc = null));
    }
  }
  function dn(a, b, c, d) {
    if (!(b === void 0 || b === null || 0 > c)) {
      var e = en(a, b);
      e = fn(a, e);
      if (e !== null) {
        og2(e);
        e = e.copy();
        if ((e.G & 16777216) !== 0) {
          var f2 = a.Ch();
          f2 !== null && $m(f2, true);
        }
        typeof b === "object" && (a.$d === null && (a.$d = new H2()), a.$d.add(b, e));
        f2 = c + Wm(a);
        a.wb(f2, e);
        d && (e.jb = b, gn(a, f2, c), e.jb = null);
        e.data = b;
      }
    }
  }
  function gn(a, b, c) {
    for (a = a.T; b < a.length; ) {
      var d = a.J(b);
      if (d instanceof X2) {
        var e = b, f2 = c;
        d.type === X2.TableRow ? d.row = e : d.type === X2.TableColumn && (d.column = e);
        d.itemIndex = f2;
      }
      b++;
      c++;
    }
  }
  function en(a, b) {
    if (b === null)
      return "";
    a = a.hl;
    if (typeof a === "function")
      a = a(b);
    else if (typeof a === "string" && typeof b === "object") {
      if (a === "")
        return "";
      a = hn(b, a);
    } else
      return "";
    if (a === void 0)
      return "";
    if (typeof a === "string")
      return a;
    C2("Panel.getCategoryForItemData found a non-string category for " + b + ": " + a);
  }
  function fn(a, b) {
    var c = a.itemTemplateMap, d = null;
    c !== null && (d = c.H(b));
    d === null && (c !== null && (d = c.H("")), d === null && (jn || (jn = true, ya2('No item template Panel found for category "' + b + '" on ' + a), ya2("  Using default item template."), a = new X2(), b = new Mg2(), b.bind(new si2("text", "", Ka2)), a.add(b), kn = a), d = kn));
    return d;
  }
  function Zm(a, b, c) {
    var d = b.enabledChanged;
    d !== null && d(b, c);
    if (b instanceof X2) {
      b = b.T.m;
      d = b.length;
      for (var e = 0; e < d; e++) {
        var f2 = b[e];
        c && f2 instanceof X2 && !f2.isEnabled || Zm(a, f2, c);
      }
    }
  }
  function ln(a, b) {
    b.name = a;
    El.add(a, b);
  }
  na2.Object.defineProperties(X2.prototype, { type: { get: function() {
    return this.ha;
  }, set: function(a) {
    var b = this.ha;
    b !== a && (this.ha = a, this.ha === X2.Grid ? this.isAtomic = true : this.ha === X2.Table && Om(this), this.s(), this.g("type", b, a));
  } }, elements: { get: function() {
    return this.T.iterator;
  } }, naturalBounds: { get: function() {
    return this.wc;
  } }, padding: { get: function() {
    return this.nb;
  }, set: function(a) {
    typeof a === "number" ? (0 > a && xa2(a, ">= 0", X2, "padding"), a = new lc2(a)) : (0 > a.left && xa2(a.left, ">= 0", X2, "padding:value.left"), 0 > a.right && xa2(a.right, ">= 0", X2, "padding:value.right"), 0 > a.top && xa2(a.top, ">= 0", X2, "padding:value.top"), 0 > a.bottom && xa2(a.bottom, ">= 0", X2, "padding:value.bottom"));
    var b = this.nb;
    b.A(a) || (this.nb = a = a.I(), this.s(), this.g("padding", b, a));
  } }, defaultAlignment: { get: function() {
    return this.mn;
  }, set: function(a) {
    var b = this.mn;
    b.A(a) || (this.mn = a = a.I(), this.s(), this.g("defaultAlignment", b, a));
  } }, defaultStretch: { get: function() {
    return this.Of;
  }, set: function(a) {
    var b = this.Of;
    b !== a && (this.Of = a, this.s(), this.g("defaultStretch", b, a));
  } }, defaultSeparatorPadding: { get: function() {
    return this.fj === void 0 ? pc2 : this.fj;
  }, set: function(a) {
    if (this.fj !== void 0) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.fj;
      b.A(a) || (this.fj = a = a.I(), this.s(), this.g("defaultSeparatorPadding", b, a));
    }
  } }, defaultRowSeparatorStroke: { get: function() {
    return this.Wh === void 0 ? null : this.Wh;
  }, set: function(a) {
    var b = this.Wh;
    b !== a && (a === null || typeof a === "string" || a instanceof hl) && (a instanceof hl && a.freeze(), this.Wh = a, this.N(), this.g("defaultRowSeparatorStroke", b, a));
  } }, defaultRowSeparatorStrokeWidth: { get: function() {
    return this.Hg === void 0 ? 1 : this.Hg;
  }, set: function(a) {
    if (this.Hg !== void 0) {
      var b = this.Hg;
      b !== a && isFinite(a) && 0 <= a && (this.Hg = a, this.s(), this.g("defaultRowSeparatorStrokeWidth", b, a));
    }
  } }, defaultRowSeparatorDashArray: {
    get: function() {
      return this.Vh === void 0 ? null : this.Vh;
    },
    set: function(a) {
      if (this.Vh !== void 0) {
        var b = this.Vh;
        if (b !== a) {
          if (a !== null) {
            for (var c = a.length, d = 0, e = 0; e < c; e++) {
              var f2 = a[e];
              typeof f2 === "number" && 0 <= f2 && isFinite(f2) || C2("defaultRowSeparatorDashArray value " + f2 + " at index " + e + " must be a positive number or zero.");
              d += f2;
            }
            if (d === 0) {
              if (b === null)
                return;
              a = null;
            }
          }
          this.Vh = a;
          this.N();
          this.g("defaultRowSeparatorDashArray", b, a);
        }
      }
    }
  }, defaultColumnSeparatorStroke: { get: function() {
    return this.Fg === void 0 ? null : this.Fg;
  }, set: function(a) {
    if (this.Fg !== void 0) {
      var b = this.Fg;
      b !== a && (a === null || typeof a === "string" || a instanceof hl) && (a instanceof hl && a.freeze(), this.Fg = a, this.N(), this.g("defaultColumnSeparatorStroke", b, a));
    }
  } }, defaultColumnSeparatorStrokeWidth: { get: function() {
    return this.Gg === void 0 ? 1 : this.Gg;
  }, set: function(a) {
    if (this.Gg !== void 0) {
      var b = this.Gg;
      b !== a && isFinite(a) && 0 <= a && (this.Gg = a, this.s(), this.g("defaultColumnSeparatorStrokeWidth", b, a));
    }
  } }, defaultColumnSeparatorDashArray: {
    get: function() {
      return this.Uh === void 0 ? null : this.Uh;
    },
    set: function(a) {
      if (this.Uh !== void 0) {
        var b = this.Uh;
        if (b !== a) {
          if (a !== null) {
            for (var c = a.length, d = 0, e = 0; e < c; e++) {
              var f2 = a[e];
              typeof f2 === "number" && 0 <= f2 && isFinite(f2) || C2("defaultColumnSeparatorDashArray value " + f2 + " at index " + e + " must be a positive number or zero.");
              d += f2;
            }
            if (d === 0) {
              if (b === null)
                return;
              a = null;
            }
          }
          this.Uh = a;
          this.N();
          this.g("defaultColumnSeparatorDashArray", b, a);
        }
      }
    }
  }, viewboxStretch: {
    get: function() {
      return this.Hp;
    },
    set: function(a) {
      var b = this.Hp;
      b !== a && (this.Hp = a, this.s(), this.g("viewboxStretch", b, a));
    }
  }, gridCellSize: { get: function() {
    return this.Kn;
  }, set: function(a) {
    var b = this.Kn;
    if (!b.A(a)) {
      a.u() && a.width !== 0 && a.height !== 0 || C2("Invalid Panel.gridCellSize: " + a);
      this.Kn = a.I();
      var c = this.diagram;
      c !== null && this === c.grid && ej2(c);
      this.N();
      this.g("gridCellSize", b, a);
    }
  } }, gridOrigin: { get: function() {
    return this.Ln;
  }, set: function(a) {
    var b = this.Ln;
    if (!b.A(a)) {
      a.u() || C2("Invalid Panel.gridOrigin: " + a);
      this.Ln = a.I();
      var c = this.diagram;
      c !== null && this === c.grid && ej2(c);
      this.N();
      this.g("gridOrigin", b, a);
    }
  } }, graduatedMin: { get: function() {
    return this.Hn;
  }, set: function(a) {
    var b = this.Hn;
    b !== a && (this.Hn = a, this.s(), this.g("graduatedMin", b, a), Zk(this) && (a = this.part, a !== null && $k(this, a, "graduatedRange")));
  } }, graduatedMax: { get: function() {
    return this.Gn;
  }, set: function(a) {
    var b = this.Gn;
    b !== a && (this.Gn = a, this.s(), this.g("graduatedMax", b, a), Zk(this) && (a = this.part, a !== null && $k(this, a, "graduatedRange")));
  } }, graduatedRange: { get: function() {
    return this.graduatedMax - this.graduatedMin;
  } }, graduatedTickUnit: { get: function() {
    return this.Jn;
  }, set: function(a) {
    var b = this.Jn;
    b !== a && 0 < a && (this.Jn = a, this.s(), this.g("graduatedTickUnit", b, a));
  } }, graduatedTickBase: { get: function() {
    return this.In;
  }, set: function(a) {
    var b = this.In;
    b !== a && (this.In = a, this.s(), this.g("graduatedTickBase", b, a));
  } }, Je: { get: function() {
    return (this.G & 8388608) !== 0;
  }, set: function(a) {
    (this.G & 8388608) !== 0 !== a && (this.G ^= 8388608);
  } }, rowCount: { get: function() {
    return this.ob === void 0 ? 0 : this.ob.length;
  } }, columnCount: { get: function() {
    return this.ib === void 0 ? 0 : this.ib.length;
  } }, rowSizing: { get: function() {
    return this.Fj === void 0 ? Pm : this.Fj;
  }, set: function(a) {
    if (this.Fj !== void 0) {
      var b = this.Fj;
      b !== a && (this.Fj = a, this.s(), this.g("rowSizing", b, a));
    }
  } }, columnSizing: { get: function() {
    return this.ej === void 0 ? Pm : this.ej;
  }, set: function(a) {
    if (this.ej !== void 0) {
      var b = this.ej;
      b !== a && (this.ej = a, this.s(), this.g("columnSizing", b, a));
    }
  } }, topIndex: { get: function() {
    return this.vi === void 0 ? 0 : this.vi;
  }, set: function(a) {
    if (this.vi !== void 0) {
      var b = this.vi;
      b !== a && ((!isFinite(a) || 0 > a) && C2("Panel.topIndex must be greater than zero and a real number, not: " + a), this.vi = a, this.s(), this.g("topIndex", b, a));
    }
  } }, leftIndex: { get: function() {
    return this.gi === void 0 ? 0 : this.gi;
  }, set: function(a) {
    if (this.gi !== void 0) {
      var b = this.gi;
      b !== a && ((!isFinite(a) || 0 > a) && C2("Panel.leftIndex must be greater than zero and a real number, not: " + a), this.gi = a, this.s(), this.g("leftIndex", b, a));
    }
  } }, data: { get: function() {
    return this.jb;
  }, set: function(a) {
    var b = this.jb;
    if (b !== a) {
      var c = this instanceof V2 && !(this instanceof ze);
      og2(this);
      this.jb = a;
      var d = this.diagram;
      d !== null && (c ? (c = d.partManager, this instanceof T2 ? (b !== null && c.Ue.remove(b), a !== null && c.Ue.add(a, this)) : this instanceof V2 && (b !== null && c.Ve.remove(b), a !== null && c.Ve.add(a, this))) : (c = this.panel, c !== null && c.$d !== null && (b !== null && c.$d.remove(b), a !== null && c.$d.add(a, this))));
      this.g("data", b, a);
      d !== null && d.undoManager.isUndoingRedoing || a !== null && this.Fa();
    }
  } }, itemIndex: { get: function() {
    return this.ao;
  }, set: function(a) {
    var b = this.ao;
    b !== a && (this.ao = a, this.g("itemIndex", b, a));
  } }, itemArray: {
    get: function() {
      return this.ci;
    },
    set: function(a) {
      var b = this.ci;
      if (b !== a || a !== null && bn(this, a)) {
        var c = this.diagram;
        b !== a && (c !== null && b !== null && Aj2(c.partManager, this, c), this.ci = a, c !== null && a !== null && xj2(c.partManager, this));
        this.g("itemArray", b, a);
        c !== null && c.undoManager.isUndoingRedoing || cn(this, a);
      }
    }
  }, itemTemplate: { get: function() {
    return this.ve === null ? null : this.ve.H("");
  }, set: function(a) {
    if (this.ve === null) {
      if (a === null)
        return;
      this.ve = new H2();
    }
    var b = this.ve.H("");
    b !== a && ((a instanceof V2 || a.isPanelMain) && C2("Panel.itemTemplate must not be a Part or be Panel.isPanelMain: " + a), this.ve.add("", a), this.g("itemTemplate", b, a), a = this.diagram, a !== null && a.undoManager.isUndoingRedoing || this.Fv());
  } }, itemTemplateMap: { get: function() {
    return this.ve;
  }, set: function(a) {
    var b = this.ve;
    if (b !== a) {
      for (var c = a.iterator; c.next(); )
        ;
      this.ve = a;
      this.g("itemTemplateMap", b, a);
      a = this.diagram;
      a !== null && a.undoManager.isUndoingRedoing || this.Fv();
    }
  } }, itemCategoryProperty: {
    get: function() {
      return this.hl;
    },
    set: function(a) {
      var b = this.hl;
      b !== a && (this.hl = a, this.g("itemCategoryProperty", b, a));
    }
  }, isAtomic: { get: function() {
    return (this.G & 1048576) !== 0;
  }, set: function(a) {
    var b = (this.G & 1048576) !== 0;
    b !== a && (this.G ^= 1048576, this.g("isAtomic", b, a));
  } }, isClipping: { get: function() {
    return (this.G & 2097152) !== 0;
  }, set: function(a) {
    var b = (this.G & 2097152) !== 0;
    b !== a && (this.G ^= 2097152, this instanceof U2 && (this.$a = null), this.s(), this.g("isClipping", b, a));
  } }, isOpposite: { get: function() {
    return (this.G & 33554432) !== 0;
  }, set: function(a) {
    var b = (this.G & 33554432) !== 0;
    b !== a && (this.G ^= 33554432, this.s(), this.g("isOpposite", b, a));
  } }, isEnabled: { get: function() {
    return (this.G & 4194304) !== 0;
  }, set: function(a) {
    var b = (this.G & 4194304) !== 0;
    if (b !== a) {
      var c = this.panel === null || this.panel.Ef();
      this.G ^= 4194304;
      this.g("isEnabled", b, a);
      b = this.diagram;
      b !== null && b.undoManager.isUndoingRedoing || c && Zm(this, this, a);
    }
  } }, alignmentFocusName: { get: function() {
    return this.Re;
  }, set: function(a) {
    var b = this.Re;
    b !== a && (this.Re = a, this.s(), this.g("alignmentFocusName", b, a));
  } } });
  na2.Object.defineProperties(X2, { Position: { get: function() {
    return El.H("Position");
  } }, Horizontal: { get: function() {
    return El.H("Horizontal");
  } }, Vertical: { get: function() {
    return El.H("Vertical");
  } }, Spot: { get: function() {
    return El.H("Spot");
  } }, Auto: { get: function() {
    return El.H("Auto");
  } }, Table: { get: function() {
    return El.H("Table");
  } }, Viewbox: {
    get: function() {
      return El.H("Viewbox");
    }
  }, TableRow: { get: function() {
    return El.H("TableRow");
  } }, TableColumn: { get: function() {
    return El.H("TableColumn");
  } }, Link: { get: function() {
    return El.H("Link");
  } }, Grid: { get: function() {
    return El.H("Grid");
  } }, Graduated: { get: function() {
    return El.H("Graduated");
  } } });
  X2.prototype.rebuildItemElements = X2.prototype.Fv;
  X2.prototype.findItemPanelForData = X2.prototype.Rx;
  X2.prototype.updateTargetBindings = X2.prototype.Fa;
  X2.prototype.copyTemplate = X2.prototype.qz;
  X2.prototype.graduatedValueForPoint = X2.prototype.dA;
  X2.prototype.graduatedPointForValue = X2.prototype.cA;
  X2.prototype.findColumnForLocalX = X2.prototype.Ez;
  X2.prototype.findRowForLocalY = X2.prototype.Mz;
  X2.prototype.removeColumnDefinition = X2.prototype.FA;
  X2.prototype.removeRowDefinition = X2.prototype.KA;
  X2.prototype.removeAt = X2.prototype.eb;
  X2.prototype.remove = X2.prototype.remove;
  X2.prototype.insertAt = X2.prototype.wb;
  X2.prototype.elt = X2.prototype.J;
  X2.prototype.add = X2.prototype.add;
  X2.prototype.findObject = X2.prototype.Ya;
  X2.prototype.findInVisualTree = X2.prototype.$l;
  X2.prototype.walkVisualTreeFrom = X2.prototype.Em;
  X2.prototype.findMainElement = X2.prototype.pb;
  var jn = false, kn = null, El = new H2();
  X2.className = "Panel";
  X2.definePanelLayout = ln;
  ln("Position", new mm());
  ln("Vertical", new pm());
  ln("Auto", new sm());
  ln("Link", new Dm());
  function Jj2() {
    Va2(this);
    this.bg = null;
    this.pr = true;
    this.Ra = 0;
    this.Bd = NaN;
    this.yj = 0;
    this.xj = Infinity;
    this.yb = Uc2;
    this.ja = this.cc = this.la = 0;
    this.fb = null;
    this.qp = mn;
    this.Ee = Pk;
    this.lp = this.fg = null;
    this.mp = NaN;
    this.Vb = this.Jj = null;
    this.hn = false;
  }
  Jj2.prototype.copy = function() {
    var a = new Jj2();
    a.pr = this.pr;
    a.Ra = this.Ra;
    a.Bd = this.Bd;
    a.yj = this.yj;
    a.xj = this.xj;
    a.yb = this.yb;
    a.la = this.la;
    a.cc = this.cc;
    a.ja = this.ja;
    a.Ee = this.Ee;
    a.qp = this.qp;
    this.fg === null ? a.fg = null : a.fg = this.fg.I();
    a.lp = this.lp;
    a.mp = this.mp;
    a.Jj = null;
    this.Jj !== null && (a.separatorDashArray = Ba2(this.separatorDashArray));
    a.Vb = this.Vb;
    a.hn = this.hn;
    a.fb = this.fb;
    return a;
  };
  t2 = Jj2.prototype;
  t2.gb = function(a) {
    a.classType === Jj2 && (this.sizing = a);
  };
  t2.toString = function() {
    return "RowColumnDefinition " + (this.isRow ? "(Row " : "(Column ") + this.index + ") #" + ib2(this);
  };
  t2.Si = function(a) {
    this.bg = a;
  };
  t2.Ku = function() {
    var a = 0, b = 0, c = this.bg, d = this.isRow;
    if (c !== null && c.type === X2.Table)
      for (var e = d ? c.ob.length : c.ib.length, f2 = 0; f2 < e; f2++) {
        var g2 = d ? c.ob[f2] : c.ib[f2];
        if (g2 !== void 0) {
          b = g2.index;
          break;
        }
      }
    this.index !== b && (b = this.separatorStroke, b === null && c !== null && (b = this.isRow ? c.defaultRowSeparatorStroke : c.defaultColumnSeparatorStroke), b !== null && (a = this.separatorStrokeWidth, isNaN(a) && (c !== null ? a = this.isRow ? c.defaultRowSeparatorStrokeWidth : c.defaultColumnSeparatorStrokeWidth : a = 0)));
    b = this.fg;
    if (b === null)
      if (c !== null)
        b = c.defaultSeparatorPadding;
      else
        return a;
    return a + (this.isRow ? b.top : b.left);
  };
  t2.Ic = function() {
    var a = 0, b = this.bg, c = 0, d = this.isRow;
    if (b !== null && b.type === X2.Table)
      for (var e = d ? b.ob.length : b.ib.length, f2 = 0; f2 < e; f2++) {
        var g2 = d ? b.ob[f2] : b.ib[f2];
        if (g2 !== void 0) {
          c = g2.index;
          break;
        }
      }
    this.index !== c && (c = this.separatorStroke, c === null && b !== null && (c = d ? b.defaultRowSeparatorStroke : b.defaultColumnSeparatorStroke), c !== null && (a = this.separatorStrokeWidth, isNaN(a) && (b !== null ? a = d ? b.defaultRowSeparatorStrokeWidth : b.defaultColumnSeparatorStrokeWidth : a = 0)));
    d = this.fg;
    if (d === null)
      if (b !== null)
        d = b.defaultSeparatorPadding;
      else
        return a;
    return a + (this.isRow ? d.top + d.bottom : d.left + d.right);
  };
  t2.Eb = function(a, b, c) {
    var d = this.bg;
    if (d !== null && (d.Wa(ge2, a, this, b, c, void 0, void 0), this.fb !== null && (b = d.diagram, b !== null && !b.skipsModelSourceBindings && (d = d.Ch(), d !== null && (b = d.data, b !== null)))))
      for (c = this.fb.iterator; c.next(); )
        c.value.Aq(this, b, a, d);
  };
  function wm(a) {
    if (a.sizing === mn) {
      var b = a.bg;
      return a.isRow ? b.rowSizing : b.columnSizing;
    }
    return a.sizing;
  }
  t2.bind = function(a, b, c, d) {
    var e = null;
    typeof a === "string" ? e = new si2(a, b, c, d) : e = a;
    e.od = this;
    a = this.panel;
    a !== null && (b = a.Ch(), b !== null && Al(b) && C2("Cannot add a Binding to a RowColumnDefinition that is already frozen: " + e + " on " + a));
    this.fb === null && (this.fb = new F2());
    this.fb.add(e);
    return this;
  };
  na2.Object.defineProperties(Jj2.prototype, { panel: { get: function() {
    return this.bg;
  } }, isRow: { get: function() {
    return this.pr;
  }, set: function(a) {
    this.pr = a;
  } }, index: { get: function() {
    return this.Ra;
  }, set: function(a) {
    this.Ra = a;
  } }, height: { get: function() {
    return this.Bd;
  }, set: function(a) {
    var b = this.Bd;
    b !== a && (0 > a && xa2(a, ">= 0", Jj2, "height"), this.Bd = a, this.actual = this.la, this.panel !== null && this.panel.s(), this.Eb("height", b, a));
  } }, width: { get: function() {
    return this.Bd;
  }, set: function(a) {
    var b = this.Bd;
    b !== a && (0 > a && xa2(a, ">= 0", Jj2, "width"), this.Bd = a, this.actual = this.la, this.panel !== null && this.panel.s(), this.Eb("width", b, a));
  } }, minimum: { get: function() {
    return this.yj;
  }, set: function(a) {
    var b = this.yj;
    b !== a && ((0 > a || !isFinite(a)) && xa2(a, ">= 0", Jj2, "minimum"), this.yj = a, this.actual = this.la, this.panel !== null && this.panel.s(), this.Eb("minimum", b, a));
  } }, maximum: {
    get: function() {
      return this.xj;
    },
    set: function(a) {
      var b = this.xj;
      b !== a && (0 > a && xa2(a, ">= 0", Jj2, "maximum"), this.xj = a, this.actual = this.la, this.panel !== null && this.panel.s(), this.Eb("maximum", b, a));
    }
  }, alignment: { get: function() {
    return this.yb;
  }, set: function(a) {
    var b = this.yb;
    b.A(a) || (this.yb = a.I(), this.panel !== null && this.panel.s(), this.Eb("alignment", b, a));
  } }, stretch: { get: function() {
    return this.Ee;
  }, set: function(a) {
    var b = this.Ee;
    b !== a && (this.Ee = a, this.panel !== null && this.panel.s(), this.Eb("stretch", b, a));
  } }, separatorPadding: { get: function() {
    return this.fg;
  }, set: function(a) {
    typeof a === "number" && (a = new lc2(a));
    var b = this.fg;
    a !== null && b !== null && b.A(a) || (a !== null && (a = a.I()), this.fg = a, this.panel !== null && this.panel.s(), this.Eb("separatorPadding", b, a));
  } }, separatorStroke: { get: function() {
    return this.lp;
  }, set: function(a) {
    var b = this.lp;
    b !== a && (a !== null && Il(a, "RowColumnDefinition.separatorStroke"), a instanceof hl && a.freeze(), this.lp = a, this.panel !== null && this.panel.s(), this.Eb("separatorStroke", b, a));
  } }, separatorStrokeWidth: { get: function() {
    return this.mp;
  }, set: function(a) {
    var b = this.mp;
    b !== a && (this.mp = a, this.panel !== null && this.panel.s(), this.Eb("separatorStrokeWidth", b, a));
  } }, separatorDashArray: { get: function() {
    return this.Jj;
  }, set: function(a) {
    var b = this.Jj;
    if (b !== a) {
      if (a !== null) {
        for (var c = a.length, d = 0, e = 0; e < c; e++) {
          var f2 = a[e];
          typeof f2 === "number" && 0 <= f2 && isFinite(f2) || C2("separatorDashArray value " + f2 + " at index " + e + " must be a positive number or zero.");
          d += f2;
        }
        if (d === 0) {
          if (b === null)
            return;
          a = null;
        }
      }
      this.Jj = a;
      this.panel !== null && this.panel.N();
      this.Eb("separatorDashArray", b, a);
    }
  } }, background: { get: function() {
    return this.Vb;
  }, set: function(a) {
    var b = this.Vb;
    b !== a && (a !== null && Il(a, "RowColumnDefinition.background"), a instanceof hl && a.freeze(), this.Vb = a, this.panel !== null && this.panel.N(), this.Eb("background", b, a));
  } }, coversSeparators: {
    get: function() {
      return this.hn;
    },
    set: function(a) {
      var b = this.hn;
      b !== a && (this.hn = a, this.panel !== null && this.panel.N(), this.Eb("coversSeparators", b, a));
    }
  }, sizing: { get: function() {
    return this.qp;
  }, set: function(a) {
    var b = this.qp;
    b !== a && (this.qp = a, this.panel !== null && this.panel.s(), this.Eb("sizing", b, a));
  } }, actual: { get: function() {
    return this.la;
  }, set: function(a) {
    this.la = isNaN(this.Bd) ? Math.max(Math.min(this.xj, a), this.yj) : Math.max(Math.min(this.xj, this.Bd), this.yj);
  } }, measured: { get: function() {
    return this.cc;
  }, set: function(a) {
    this.cc = a;
  } }, total: { get: function() {
    return this.la + this.Ic();
  } }, position: { get: function() {
    return this.ja;
  }, set: function(a) {
    this.ja = a;
  } } });
  Jj2.prototype.computeEffectiveSpacing = Jj2.prototype.Ic;
  Jj2.prototype.computeEffectiveSpacingTop = Jj2.prototype.Ku;
  var mn = new D2(Jj2, "Default", 0), xm = new D2(Jj2, "None", 1), Pm = new D2(Jj2, "ProportionalExtra", 2);
  Jj2.className = "RowColumnDefinition";
  Jj2.Default = mn;
  Jj2.None = xm;
  Jj2.ProportionalExtra = Pm;
  function xf2(a, b) {
    Y2.call(this);
    this.Dd = this.ma = null;
    this.xn = "None";
    this.En = Pk;
    this.Gc = this.Uk = "black";
    this.ig = 1;
    this.Ll = "butt";
    this.Ml = "miter";
    this.Kj = 10;
    this.mh = null;
    this.nh = 0;
    this.nf = this.mf = Uc2;
    this.Lo = this.Ko = NaN;
    this.Sn = false;
    this.No = null;
    this.Vk = this.Sl = "None";
    this.Zd = 1;
    this.Yd = 0;
    this.Wd = 1;
    this.Xd = null;
    typeof a === "string" ? this.figure = a : a && Object.assign(this, a);
    b && Object.assign(this, b);
  }
  ma2(xf2, Y2);
  xf2.prototype.cloneProtected = function(a) {
    Y2.prototype.cloneProtected.call(this, a);
    a.ma = this.ma;
    a.xn = this.xn;
    a.En = this.En;
    a.Dd = this.Dd;
    a.Uk = this.Uk;
    a.Gc = this.Gc;
    a.ig = this.ig;
    a.Ll = this.Ll;
    a.Ml = this.Ml;
    a.Kj = this.Kj;
    this.mh !== null && (a.mh = Ba2(this.mh));
    a.nh = this.nh;
    a.mf = this.mf.I();
    a.nf = this.nf.I();
    a.Ko = this.Ko;
    a.Lo = this.Lo;
    a.Sn = this.Sn;
    a.No = this.No;
    a.Sl = this.Sl;
    a.Vk = this.Vk;
    a.Zd = this.Zd;
    a.Yd = this.Yd;
    a.Wd = this.Wd;
    a.Xd = this.Xd;
  };
  t2 = xf2.prototype;
  t2.gb = function(a) {
    a === pg2 || a === rg2 || a === Sk || a === Pk ? this.geometryStretch = a : Y2.prototype.gb.call(this, a);
  };
  t2.toString = function() {
    return "Shape(" + (this.figure !== "None" ? this.figure : this.toArrow !== "None" ? this.toArrow : this.fromArrow) + ")#" + ib2(this);
  };
  function nn(a, b, c, d) {
    var e = c.length;
    if (!(4 > e)) {
      var f2 = d.measuredBounds, g2 = Math.max(1, f2.width);
      f2 = f2.height;
      for (var h = c[0], k = c[1], l2, m2, n2, p2, r2, q2, u2 = 0, w = Ea2(), v2 = 2; v2 < e; v2 += 2)
        l2 = c[v2], m2 = c[v2 + 1], n2 = l2 - h, h = m2 - k, n2 === 0 && (n2 = 1e-3), p2 = h / n2, r2 = Math.atan2(h, n2), q2 = Math.sqrt(n2 * n2 + h * h), w.push([n2, r2, p2, q2]), u2 += q2, h = l2, k = m2;
      h = c[0];
      k = c[1];
      n2 = d.measuredBounds.width;
      d instanceof xf2 && (n2 -= d.strokeWidth);
      1 > n2 && (n2 = 1);
      e = c = n2;
      l2 = g2 / 2;
      m2 = l2 === 0 ? false : true;
      v2 = 0;
      q2 = w[v2];
      n2 = q2[0];
      r2 = q2[1];
      p2 = q2[2];
      q2 = q2[3];
      for (var z2 = 0; 0.1 <= u2; ) {
        z2 === 0 && (m2 ? (e = c, e -= l2, u2 -= l2, m2 = false) : e = c, e === 0 && (e = 1));
        if (e > u2) {
          Ia2(w);
          return;
        }
        e > q2 ? (z2 = e - q2, e = q2) : z2 = 0;
        var y2 = Math.sqrt(e * e / (1 + p2 * p2));
        0 > n2 && (y2 = -y2);
        h += y2;
        k += p2 * y2;
        a.translate(h, k);
        a.rotate(r2);
        a.translate(-(g2 / 2), -(f2 / 2));
        z2 === 0 && d.Ei(a, b);
        a.translate(g2 / 2, f2 / 2);
        a.rotate(-r2);
        a.translate(-h, -k);
        u2 -= e;
        q2 -= e;
        if (z2 !== 0) {
          v2++;
          if (v2 === w.length) {
            Ia2(w);
            return;
          }
          q2 = w[v2];
          n2 = q2[0];
          r2 = q2[1];
          p2 = q2[2];
          q2 = q2[3];
          e = z2;
        }
      }
      Ia2(w);
    }
  }
  t2.Ei = function(a, b) {
    var c = this.Gc, d = this.Uk;
    if (c !== null || d !== null) {
      var e = this.ma;
      if (e !== null) {
        a.Ed();
        var f2 = this.actualBounds, g2 = this.naturalBounds;
        d !== null && di2(this, a, d, true, false, g2, f2);
        var h = this.part, k = this.ig;
        c === null || k !== 0 || h === null || !this.isPanelMain && h.pb() !== this || (k = h.type === X2.Link && h instanceof ze && h.category === "Selection" && h.adornedObject instanceof xf2 && h.adornedPart.pb() === h.adornedObject ? h.adornedObject.strokeWidth : 0);
        k === 0 && (c = null);
        c !== null && k !== 0 && (di2(this, a, c, false, false, g2, f2), a.lineWidth = k, a.lineJoin = this.Ml, a.lineCap = this.Ll, a.miterLimit = this.Kj);
        f2 = false;
        h && b.Ie("drawShadows") && (f2 = h.isShadowed);
        h = true;
        c === null || d !== null && d !== "transparent" || (h = false);
        g2 = false;
        k = this.strokeDashArray;
        k !== null && (g2 = true, a.os(k, this.nh));
        if (e.type === P2.j)
          a.beginPath(), a.moveTo(e.startX, e.startY), a.lineTo(e.endX, e.endY), c !== null && a.Wi();
        else if (e.type === P2.C) {
          var l2 = e.startX;
          k = e.startY;
          var m2 = e.endX, n2 = e.endY;
          e = Math.min(l2, m2);
          var p2 = Math.min(k, n2);
          l2 = Math.abs(m2 - l2);
          k = Math.abs(n2 - k);
          a.beginPath();
          a.rect(e, p2, l2, k);
          d !== null && a.yf(d);
          if (c !== null) {
            h && f2 && ll(a);
            if (l2 === 0 || k === 0)
              a.beginPath(), a.rect(e, p2, Math.max(l2, 0.1), Math.max(k, 0.1));
            a.Wi();
            h && f2 && kl(a);
          }
        } else if (e.type === P2.L)
          l2 = e.startX, k = e.startY, m2 = e.endX, n2 = e.endY, e = Math.abs(m2 - l2) / 2, p2 = Math.abs(n2 - k) / 2, l2 = Math.min(l2, m2) + e, k = Math.min(k, n2) + p2, a.beginPath(), a.moveTo(l2, k - p2), a.bezierCurveTo(l2 + M2.wg * e, k - p2, l2 + e, k - M2.wg * p2, l2 + e, k), a.bezierCurveTo(l2 + e, k + M2.wg * p2, l2 + M2.wg * e, k + p2, l2, k + p2), a.bezierCurveTo(l2 - M2.wg * e, k + p2, l2 - e, k + M2.wg * p2, l2 - e, k), a.bezierCurveTo(l2 - e, k - M2.wg * p2, l2 - M2.wg * e, k - p2, l2, k - p2), a.closePath(), d !== null && a.yf(d), c !== null && (h && f2 ? (ll(a), a.Wi(), kl(a)) : a.Wi());
        else if (e.type === P2.o)
          for (e = e.figures, k = e.length, p2 = 0; p2 < k; p2++) {
            l2 = e.m[p2];
            a.beginPath();
            a.moveTo(l2.startX, l2.startY);
            m2 = l2.segments.m;
            n2 = m2.length;
            for (var r2 = null, q2 = 0; q2 < n2; q2++) {
              var u2 = m2[q2];
              switch (u2.type) {
                case Pd2:
                  a.moveTo(u2.endX, u2.endY);
                  break;
                case sd2:
                  a.lineTo(u2.endX, u2.endY);
                  break;
                case Qd2:
                  a.bezierCurveTo(u2.point1X, u2.point1Y, u2.point2X, u2.point2Y, u2.endX, u2.endY);
                  break;
                case Rd2:
                  a.quadraticCurveTo(u2.point1X, u2.point1Y, u2.endX, u2.endY);
                  break;
                case Sd2:
                  if (u2.radiusX === u2.radiusY) {
                    var w = Math.PI / 180;
                    a.arc(u2.point1X, u2.point1Y, u2.radiusX, u2.startAngle * w, (u2.startAngle + u2.sweepAngle) * w, 0 > u2.sweepAngle, r2 !== null ? r2.endX : l2.startX, r2 !== null ? r2.endY : l2.startY);
                  } else if (r2 = Ud2(u2, l2), w = r2.length, w === 0)
                    a.lineTo(u2.centerX, u2.centerY);
                  else
                    for (var v2 = 0; v2 < w; v2++) {
                      var z2 = r2[v2];
                      v2 === 0 && a.lineTo(z2[0], z2[1]);
                      a.bezierCurveTo(z2[2], z2[3], z2[4], z2[5], z2[6], z2[7]);
                    }
                  break;
                case Td2:
                  v2 = w = 0;
                  if (r2 !== null && r2.type === Sd2) {
                    r2 = Ud2(r2, l2);
                    z2 = r2.length;
                    if (z2 === 0) {
                      a.lineTo(u2.endX, u2.endY);
                      break;
                    }
                    r2 = r2[z2 - 1] || null;
                    r2 !== null && (w = r2[6], v2 = r2[7]);
                  } else
                    w = r2 !== null ? r2.endX : l2.startX, v2 = r2 !== null ? r2.endY : l2.startY;
                  r2 = Vd2(u2, l2, w, v2);
                  w = r2.length;
                  if (w === 0) {
                    a.lineTo(u2.endX, u2.endY);
                    break;
                  }
                  for (v2 = 0; v2 < w; v2++)
                    z2 = r2[v2], a.bezierCurveTo(z2[2], z2[3], z2[4], z2[5], z2[6], z2[7]);
                  break;
                default:
                  C2("Segment not of valid type: " + u2.type);
              }
              u2.isClosed && a.closePath();
              r2 = u2;
            }
            m2 = l2.isFilled;
            f2 ? l2.isShadowed ? (m2 === true && d !== "transparent" && d !== null && a.yf(d), c !== null && (m2 && h && ll(a), a.Wi(), m2 && h && kl(a))) : (ll(a), m2 && d !== "transparent" && d !== null && a.yf(d), c !== null && a.Wi(), kl(a)) : (m2 && d !== null && a.yf(d), c !== null && a.Wi());
          }
        g2 && a.ms();
        if (this.pathPattern !== null) {
          c = this.pathPattern;
          c.measure(Infinity, Infinity);
          d = c.measuredBounds;
          c.arrange(0, 0, d.width, d.height);
          f2 = this.geometry;
          a.save();
          a.beginPath();
          d = Ea2();
          if (f2.type === P2.j)
            d.push(f2.startX), d.push(f2.startY), d.push(f2.endX), d.push(f2.endY), nn(a, b, d, c);
          else if (f2.type === P2.o)
            for (f2 = f2.figures.iterator; f2.next(); ) {
              h = f2.value;
              d.length = 0;
              d.push(h.startX);
              d.push(h.startY);
              g2 = h.startX;
              e = h.startY;
              k = g2;
              p2 = e;
              l2 = h.segments.m;
              m2 = l2.length;
              for (n2 = 0; n2 < m2; n2++) {
                q2 = l2[n2];
                switch (q2.type) {
                  case Pd2:
                    nn(a, b, d, c);
                    d.length = 0;
                    d.push(q2.endX);
                    d.push(q2.endY);
                    g2 = q2.endX;
                    e = q2.endY;
                    k = g2;
                    p2 = e;
                    break;
                  case sd2:
                    d.push(q2.endX);
                    d.push(q2.endY);
                    g2 = q2.endX;
                    e = q2.endY;
                    break;
                  case Qd2:
                    M2.Fe(g2, e, q2.point1X, q2.point1Y, q2.point2X, q2.point2Y, q2.endX, q2.endY, 0.5, d);
                    g2 = q2.endX;
                    e = q2.endY;
                    break;
                  case Rd2:
                    M2.lq(g2, e, q2.point1X, q2.point1Y, q2.endX, q2.endY, 0.5, d);
                    g2 = q2.endX;
                    e = q2.endY;
                    break;
                  case Sd2:
                    u2 = Ud2(q2, h);
                    r2 = u2.length;
                    if (r2 === 0) {
                      d.push(q2.centerX);
                      d.push(q2.centerY);
                      g2 = q2.centerX;
                      e = q2.centerY;
                      break;
                    }
                    for (w = 0; w < r2; w++)
                      v2 = u2[w], M2.Fe(g2, e, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], 0.5, d), g2 = v2[6], e = v2[7];
                    break;
                  case Td2:
                    u2 = Vd2(q2, h, g2, e);
                    r2 = u2.length;
                    if (r2 === 0) {
                      d.push(q2.endX);
                      d.push(q2.endY);
                      g2 = q2.endX;
                      e = q2.endY;
                      break;
                    }
                    for (w = 0; w < r2; w++)
                      v2 = u2[w], M2.Fe(g2, e, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], 0.5, d), g2 = v2[6], e = v2[7];
                    break;
                  default:
                    C2("Segment not of valid type: " + q2.type);
                }
                q2.isClosed && (d.push(k), d.push(p2), nn(a, b, d, c));
              }
              nn(a, b, d, c);
            }
          else if (f2.type === P2.C)
            d.push(f2.startX), d.push(f2.startY), d.push(f2.endX), d.push(f2.startY), d.push(f2.endX), d.push(f2.endY), d.push(f2.startX), d.push(f2.endY), d.push(f2.startX), d.push(f2.startY), nn(a, b, d, c);
          else if (f2.type === P2.L) {
            e = new $d2();
            e.startX = f2.endX;
            e.startY = (f2.startY + f2.endY) / 2;
            g2 = new ae2(Sd2);
            g2.startAngle = 0;
            g2.sweepAngle = 360;
            g2.centerX = (f2.startX + f2.endX) / 2;
            g2.centerY = (f2.startY + f2.endY) / 2;
            g2.radiusX = Math.abs(f2.startX - f2.endX) / 2;
            g2.radiusY = Math.abs(f2.startY - f2.endY) / 2;
            e.add(g2);
            f2 = Ud2(g2, e);
            h = f2.length;
            if (h === 0)
              d.push(g2.centerX), d.push(g2.centerY);
            else
              for (g2 = e.startX, e = e.startY, k = 0; k < h; k++)
                p2 = f2[k], M2.Fe(g2, e, p2[2], p2[3], p2[4], p2[5], p2[6], p2[7], 0.5, d), g2 = p2[6], e = p2[7];
            nn(a, b, d, c);
          }
          Ia2(d);
          a.restore();
          a.Hc(false);
        }
      }
    }
  };
  t2.da = function(a, b) {
    b === void 0 && (b = new K2());
    if (a instanceof O2) {
      a.Bc() && C2("getDocumentPoint Spot must be a real, specific Spot, not: " + a.toString());
      var c = this.naturalBounds, d = this.strokeWidth;
      b.h(a.x * (c.width + d) - d / 2 + c.x + a.offsetX, a.y * (c.height + d) - d / 2 + c.y + a.offsetY);
    } else
      b.set(a);
    this.fe.Aa(b);
    return b;
  };
  t2.Li = function(a) {
    a === void 0 && (a = new N2());
    var b = this.naturalBounds, c = this.fe;
    b = N2.allocAt(b.x, b.y, b.width, b.height);
    var d = this.strokeWidth;
    b.Jc(d / 2, d / 2);
    d = K2.allocAt(b.x, b.y).transform(c);
    a.h(d.x, d.y, 0, 0);
    d.h(b.right, b.y).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    d.h(b.right, b.bottom).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    d.h(b.x, b.bottom).transform(c);
    ac2(a, d.x, d.y, 0, 0);
    N2.free(b);
    K2.free(d);
    return a;
  };
  t2.Bh = function(a, b) {
    var c = this.geometry;
    if (c === null || this.fill === null && this.stroke === null)
      return false;
    var d = c.bounds, e = this.strokeWidth / 2;
    c.type !== P2.j || b || (e += 2);
    var f2 = N2.alloc();
    f2.assign(d);
    f2.Jc(e + 2, e + 2);
    if (!f2.$(a))
      return N2.free(f2), false;
    d = e + 1e-4;
    if (c.type === P2.j) {
      if (this.stroke === null)
        return false;
      d = (c.endX - c.startX) * (a.x - c.startX) + (c.endY - c.startY) * (a.y - c.startY);
      if (0 > (c.startX - c.endX) * (a.x - c.endX) + (c.startY - c.endY) * (a.y - c.endY) || 0 > d)
        return false;
      N2.free(f2);
      return M2.Ob(c.startX, c.startY, c.endX, c.endY, e, a.x, a.y);
    }
    if (c.type === P2.C) {
      b = c.startX;
      var g2 = c.startY, h = c.endX;
      c = c.endY;
      f2.x = Math.min(b, h);
      f2.y = Math.min(g2, c);
      f2.width = Math.abs(h - b);
      f2.height = Math.abs(c - g2);
      if (this.fill === null) {
        f2.Jc(-d, -d);
        if (f2.$(a))
          return N2.free(f2), false;
        f2.Jc(d, d);
      }
      this.stroke !== null && f2.Jc(e, e);
      a = f2.$(a);
      N2.free(f2);
      return a;
    }
    if (c.type === P2.L) {
      g2 = c.startX;
      e = c.startY;
      h = c.endX;
      var k = c.endY;
      c = Math.min(g2, h);
      b = Math.min(e, k);
      g2 = Math.abs(h - g2) / 2;
      e = Math.abs(k - e) / 2;
      c = a.x - (c + g2);
      b = a.y - (b + e);
      if (this.fill === null) {
        g2 -= d;
        e -= d;
        if (0 >= g2 || 0 >= e || 1 >= c * c / (g2 * g2) + b * b / (e * e))
          return N2.free(f2), false;
        g2 += d;
        e += d;
      }
      this.stroke !== null && (g2 += d, e += d);
      N2.free(f2);
      return 0 >= g2 || 0 >= e ? false : 1 >= c * c / (g2 * g2) + b * b / (e * e);
    }
    if (c.type === P2.o)
      return N2.free(f2), this.fill === null ? Yd2(c, a.x, a.y, e) : Wd2(c, a, e, 1 < this.strokeWidth, b);
    C2("Unknown Geometry type: " + c.type);
  };
  t2.im = function(a, b, c, d) {
    var e = this.desiredSize, f2 = this.ig;
    a = Math.max(a, 0);
    b = Math.max(b, 0);
    if (this.Dd !== null)
      var g2 = this.geometry.bounds;
    else {
      var h = this.figure, k = on[h];
      if (k === void 0) {
        var l2 = M2.Qe[h];
        typeof l2 === "string" && (l2 = M2.Qe[l2]);
        typeof l2 === "function" ? (k = l2(null, 100, 100), on[h] = k) : C2("Unsupported Figure: " + h);
      }
      g2 = k.bounds;
    }
    h = g2.width;
    k = g2.height;
    l2 = g2.width;
    var m2 = g2.height;
    switch (cl(this, true)) {
      case pg2:
        d = c = 0;
        break;
      case qd2:
        l2 = Math.max(a - f2, 0);
        m2 = Math.max(b - f2, 0);
        break;
      case Qk:
        l2 = Math.max(a - f2, 0);
        d = 0;
        break;
      case Rk:
        c = 0, m2 = Math.max(b - f2, 0);
    }
    isFinite(e.width) && (l2 = e.width);
    isFinite(e.height) && (m2 = e.height);
    e = this.maxSize;
    g2 = this.minSize;
    c = Math.max(c - f2, g2.width);
    d = Math.max(d - f2, g2.height);
    l2 = Math.min(e.width, l2);
    m2 = Math.min(e.height, m2);
    l2 = isFinite(l2) ? Math.max(c, l2) : Math.max(h, c);
    m2 = isFinite(m2) ? Math.max(d, m2) : Math.max(k, d);
    c = qg2(this);
    switch (c) {
      case pg2:
        break;
      case qd2:
        h = l2;
        k = m2;
        break;
      case rg2:
        c = Math.min(l2 / h, m2 / k);
        isFinite(c) || (c = 1);
        h *= c;
        k *= c;
        break;
      default:
        C2(c + " is not a valid geometryStretch.");
    }
    this.Dd !== null ? (h === 0 && (h = 1e-3), k === 0 && (k = 1e-3), c = this.Dd !== null ? this.Dd : this.ma, e = c.bounds, d = h / e.width, e = k / e.height, isFinite(d) || (d = 1), isFinite(e) || (e = 1), this.ma = d === 1 && e === 1 ? c : c.copy().scale(d, e)) : this.ma !== null && M2.aa(this.ma.cl, a - f2) && M2.aa(this.ma.al, b - f2) || (this.ma = xf2.makeGeometry(this, h, k));
    g2 = this.ma.bounds;
    a === Infinity || b === Infinity ? this.xe(g2.x - f2 / 2, g2.y - f2 / 2, a === 0 && h === 0 ? 0 : g2.width + f2, b === 0 && k === 0 ? 0 : g2.height + f2) : this.xe(-(f2 / 2), -(f2 / 2), l2 + f2, m2 + f2);
  };
  function qg2(a) {
    var b = a.geometryStretch;
    return a.Dd !== null ? b === Pk ? qd2 : b : b === Pk ? on[a.figure].defaultStretch : b;
  }
  t2.zh = function(a, b, c, d) {
    el(this, a, b, c, d);
  };
  t2.ws = function(a, b, c) {
    return this.ak(a.x, a.y, b.x, b.y, c);
  };
  t2.ak = function(a, b, c, d, e) {
    var f2 = this.transform, g2 = 1 / (f2.m11 * f2.m22 - f2.m12 * f2.m21), h = f2.m22 * g2, k = -f2.m12 * g2, l2 = -f2.m21 * g2, m2 = f2.m11 * g2, n2 = g2 * (f2.m21 * f2.dy - f2.m22 * f2.dx), p2 = g2 * (f2.m12 * f2.dx - f2.m11 * f2.dy);
    f2 = a * h + b * l2 + n2;
    g2 = a * k + b * m2 + p2;
    h = c * h + d * l2 + n2;
    k = c * k + d * m2 + p2;
    n2 = this.ig / 2;
    l2 = this.ma;
    l2 === null && (this.measure(Infinity, Infinity), l2 = this.ma);
    var r2 = l2.bounds;
    m2 = false;
    if (l2.type === P2.j)
      if (1.5 >= this.strokeWidth)
        m2 = M2.Le(l2.startX, l2.startY, l2.endX, l2.endY, f2, g2, h, k, e);
      else {
        l2.startX === l2.endX ? (d = n2, m2 = 0) : (b = (l2.endY - l2.startY) / (l2.endX - l2.startX), m2 = n2 / Math.sqrt(1 + b * b), d = m2 * b);
        b = Ea2();
        a = new K2();
        M2.Le(l2.startX + d, l2.startY + m2, l2.endX + d, l2.endY + m2, f2, g2, h, k, a) && b.push(a);
        a = new K2();
        M2.Le(l2.startX - d, l2.startY - m2, l2.endX - d, l2.endY - m2, f2, g2, h, k, a) && b.push(a);
        a = new K2();
        M2.Le(l2.startX + d, l2.startY + m2, l2.startX - d, l2.startY - m2, f2, g2, h, k, a) && b.push(a);
        a = new K2();
        M2.Le(l2.endX + d, l2.endY + m2, l2.endX - d, l2.endY - m2, f2, g2, h, k, a) && b.push(a);
        h = b.length;
        if (h === 0)
          return Ia2(b), false;
        m2 = true;
        k = Infinity;
        for (d = 0; d < h; d++)
          a = b[d], c = (a.x - f2) * (a.x - f2) + (a.y - g2) * (a.y - g2), c < k && (k = c, e.x = a.x, e.y = a.y);
        Ia2(b);
      }
    else if (l2.type === P2.C)
      m2 = M2.Cf(r2.x - n2, r2.y - n2, r2.x + r2.width + n2, r2.y + r2.height + n2, f2, g2, h, k, e);
    else if (l2.type === P2.L) {
      b = N2.allocAt(r2.x, r2.y, r2.width, r2.height).Jc(n2, n2);
      a:
        if (b.width === 0)
          m2 = M2.Le(b.x, b.y, b.x, b.y + b.height, f2, g2, h, k, e);
        else if (b.height === 0)
          m2 = M2.Le(b.x, b.y, b.x + b.width, b.y, f2, g2, h, k, e);
        else {
          a = b.width / 2;
          l2 = b.height / 2;
          d = b.x + a;
          m2 = b.y + l2;
          c = 9999;
          f2 !== h && (c = (g2 - k) / (f2 - h));
          if (9999 > Math.abs(c)) {
            k = g2 - m2 - c * (f2 - d);
            if (0 > a * a * c * c + l2 * l2 - k * k) {
              e.x = NaN;
              e.y = NaN;
              m2 = false;
              break a;
            }
            n2 = Math.sqrt(a * a * c * c + l2 * l2 - k * k);
            h = (-(a * a * c * k) + a * l2 * n2) / (l2 * l2 + a * a * c * c) + d;
            a = (-(a * a * c * k) - a * l2 * n2) / (l2 * l2 + a * a * c * c) + d;
            l2 = c * (h - d) + k + m2;
            k = c * (a - d) + k + m2;
            Math.abs((f2 - h) * (f2 - h)) + Math.abs((g2 - l2) * (g2 - l2)) < Math.abs((f2 - a) * (f2 - a)) + Math.abs((g2 - k) * (g2 - k)) ? (e.x = h, e.y = l2) : (e.x = a, e.y = k);
          } else {
            h = l2 * l2;
            k = f2 - d;
            h -= h / (a * a) * k * k;
            if (0 > h) {
              e.x = NaN;
              e.y = NaN;
              m2 = false;
              break a;
            }
            k = Math.sqrt(h);
            h = m2 + k;
            k = m2 - k;
            Math.abs(h - g2) < Math.abs(k - g2) ? (e.x = f2, e.y = h) : (e.x = f2, e.y = k);
          }
          m2 = true;
        }
      N2.free(b);
    } else if (l2.type === P2.o) {
      p2 = K2.alloc();
      var q2 = h - f2;
      var u2 = k - g2, w = q2 * q2 + u2 * u2, v2 = f2, z2 = g2;
      if (0 < w && r2.contains(v2, z2) && (p2.x = v2, p2.y = z2, this.$(p2)))
        for (q2 !== 0 && 0.5 > Math.abs(q2) ? (u2 *= 0.5 / q2, q2 = 0.5) : u2 !== 0 && 0.5 > Math.abs(u2) && (q2 *= 0.5 / u2, u2 = 0.5), v2 -= q2, z2 -= u2; r2.contains(v2, z2); )
          v2 -= q2, z2 -= u2;
      e.x = h;
      e.y = k;
      for (u2 = 0; u2 < l2.figures.count; u2++) {
        var y2 = l2.figures.m[u2], B2 = y2.isFilled ? v2 : f2, A2 = y2.isFilled ? z2 : g2, E = y2.segments;
        r2 = y2.startX;
        q2 = y2.startY;
        for (var Q2 = r2, J2 = q2, S2 = 0; S2 < E.count; S2++) {
          var L2 = E.m[S2], I2 = L2.type;
          var ja2 = L2.endX;
          var ca2 = L2.endY;
          var pa2 = false;
          switch (I2) {
            case Pd2:
              Q2 = ja2;
              J2 = ca2;
              break;
            case sd2:
              pa2 = pn(r2, q2, ja2, ca2, B2, A2, h, k, p2);
              break;
            case Qd2:
              pa2 = M2.Op(r2, q2, L2.point1X, L2.point1Y, L2.point2X, L2.point2Y, ja2, ca2, B2, A2, h, k, 0.6, p2);
              break;
            case Rd2:
              pa2 = M2.Op(r2, q2, r2 + 2 / 3 * (L2.point1X - r2), q2 + 2 / 3 * (L2.point1Y - q2), ja2 + 2 / 3 * (L2.point1X - ja2), ca2 + 2 / 3 * (L2.point1Y - ca2), ja2, ca2, B2, A2, h, k, 0.6, p2);
              break;
            case Sd2:
            case Td2:
              I2 = L2.type === Sd2 ? Ud2(L2, y2) : Vd2(L2, y2, r2, q2);
              var Na2 = I2.length;
              if (Na2 === 0) {
                pa2 = pn(r2, q2, L2.type === Sd2 ? L2.centerX : L2.endX, L2.type === Sd2 ? L2.centerY : L2.endY, B2, A2, h, k, p2);
                break;
              }
              ca2 = null;
              for (ja2 = 0; ja2 < Na2; ja2++) {
                ca2 = I2[ja2];
                if (ja2 === 0 && pn(r2, q2, ca2[0], ca2[1], B2, A2, h, k, p2)) {
                  var fb2 = zn(B2, A2, p2, w, e);
                  fb2 < w && (w = fb2, m2 = true);
                }
                M2.Op(ca2[0], ca2[1], ca2[2], ca2[3], ca2[4], ca2[5], ca2[6], ca2[7], B2, A2, h, k, 0.6, p2) && (fb2 = zn(B2, A2, p2, w, e), fb2 < w && (w = fb2, m2 = true));
              }
              ja2 = ca2[6];
              ca2 = ca2[7];
              break;
            default:
              C2("Unknown Segment type: " + I2);
          }
          r2 = ja2;
          q2 = ca2;
          pa2 && (pa2 = zn(B2, A2, p2, w, e), pa2 < w && (w = pa2, m2 = true));
          L2.isClosed && (ja2 = Q2, ca2 = J2, pn(r2, q2, ja2, ca2, B2, A2, h, k, p2) && (L2 = zn(B2, A2, p2, w, e), L2 < w && (w = L2, m2 = true)));
        }
      }
      f2 = c - a;
      g2 = d - b;
      h = Math.sqrt(f2 * f2 + g2 * g2);
      h !== 0 && (f2 /= h, g2 /= h);
      e.x -= f2 * n2;
      e.y -= g2 * n2;
      K2.free(p2);
    } else
      C2("Unknown Geometry type: " + l2.type);
    if (!m2)
      return false;
    this.transform.Aa(e);
    return true;
  };
  function zn(a, b, c, d, e) {
    a = c.x - a;
    b = c.y - b;
    b = a * a + b * b;
    return b < d ? (e.x = c.x, e.y = c.y, b) : d;
  }
  function pn(a, b, c, d, e, f2, g2, h, k) {
    var l2 = false, m2 = (e - g2) * (b - d) - (f2 - h) * (a - c);
    if (m2 === 0)
      return false;
    k.x = ((e * h - f2 * g2) * (a - c) - (e - g2) * (a * d - b * c)) / m2;
    k.y = ((e * h - f2 * g2) * (b - d) - (f2 - h) * (a * d - b * c)) / m2;
    (a > c ? a - c : c - a) < (b > d ? b - d : d - b) ? (a = b < d ? b : d, b = b < d ? d : b, (k.y > a || M2.aa(k.y, a)) && (k.y < b || M2.aa(k.y, b)) && (l2 = true)) : (b = a < c ? a : c, a = a < c ? c : a, (k.x > b || M2.aa(k.x, b)) && (k.x < a || M2.aa(k.x, a)) && (l2 = true));
    return l2;
  }
  t2.Ah = function(a, b) {
    if (b === void 0)
      return a.Ge(this.actualBounds);
    var c = this.ma;
    c === null && (this.measure(Infinity, Infinity), c = this.ma);
    c = c.bounds;
    var d = this.strokeWidth / 2, e = false, f2 = K2.alloc();
    f2.h(c.x - d, c.y - d);
    a.$(b.Aa(f2)) && (f2.h(c.x - d, c.bottom + d), a.$(b.Aa(f2)) && (f2.h(c.right + d, c.bottom + d), a.$(b.Aa(f2)) && (f2.h(c.right + d, c.y - d), a.$(b.Aa(f2)) && (e = true))));
    K2.free(f2);
    return e;
  };
  t2.Lc = function(a, b) {
    if (this.Ah(a, b) || b === void 0 && (b = this.transform, a.Ge(this.actualBounds)))
      return true;
    var c = od2.alloc();
    c.set(b);
    c.Bs();
    var d = a.left, e = a.right, f2 = a.top;
    a = a.bottom;
    var g2 = K2.alloc();
    g2.h(d, f2);
    c.Aa(g2);
    if (this.Bh(g2, true))
      return K2.free(g2), true;
    g2.h(e, f2);
    c.Aa(g2);
    if (this.Bh(g2, true))
      return K2.free(g2), true;
    g2.h(d, a);
    c.Aa(g2);
    if (this.Bh(g2, true))
      return K2.free(g2), true;
    g2.h(e, a);
    c.Aa(g2);
    if (this.Bh(g2, true))
      return K2.free(g2), true;
    var h = K2.alloc(), k = K2.alloc();
    c.set(b);
    c.tv(this.transform);
    c.Bs();
    h.x = e;
    h.y = f2;
    h.transform(c);
    g2.x = d;
    g2.y = f2;
    g2.transform(c);
    b = false;
    An(this, g2, h, k) ? b = true : (g2.x = e, g2.y = a, g2.transform(c), An(this, g2, h, k) ? b = true : (h.x = d, h.y = a, h.transform(c), An(this, g2, h, k) ? b = true : (g2.x = d, g2.y = f2, g2.transform(c), An(this, g2, h, k) && (b = true))));
    K2.free(g2);
    od2.free(c);
    K2.free(h);
    K2.free(k);
    return b;
  };
  function An(a, b, c, d) {
    if (!a.ws(b, c, d))
      return false;
    a = b.x;
    b = b.y;
    var e = c.x, f2 = c.y;
    c = d.x;
    d = d.y;
    if (a === e)
      return b < f2 ? (a = b, b = f2) : a = f2, d >= a && d <= b;
    a < e ? (d = a, a = e) : d = e;
    return c >= d && c <= a;
  }
  t2.Sx = function(a, b, c) {
    function d(a2, b2) {
      for (var c2 = a2.length, d2 = 0; d2 < c2; d2 += 2)
        if (b2.pd(a2[d2], a2[d2 + 1]) > e)
          return true;
      return false;
    }
    if (c && this.fill !== null && this.Bh(a, true))
      return true;
    var e = a.xf(b), f2 = e;
    1.5 < this.strokeWidth && (e = this.strokeWidth / 2 + Math.sqrt(e), e *= e);
    b = this.ma;
    if (b === null && (this.measure(Infinity, Infinity), b = this.ma, b === null))
      return false;
    if (!c) {
      var g2 = b.bounds, h = g2.x, k = g2.y, l2 = g2.x + g2.width;
      g2 = g2.y + g2.height;
      if (wb2(a.x, a.y, h, k) <= e && wb2(a.x, a.y, l2, k) <= e && wb2(a.x, a.y, h, g2) <= e && wb2(a.x, a.y, l2, g2) <= e)
        return true;
    }
    h = b.startX;
    k = b.startY;
    l2 = b.endX;
    g2 = b.endY;
    if (b.type === P2.j) {
      if (c = (h - l2) * (a.x - l2) + (k - g2) * (a.y - g2), vb2(a.x, a.y, h, k, l2, g2) <= (0 <= (l2 - h) * (a.x - h) + (g2 - k) * (a.y - k) && 0 <= c ? e : f2))
        return true;
    } else {
      if (b.type === P2.C)
        return b = false, c && (b = vb2(a.x, a.y, h, k, h, g2) <= e || vb2(a.x, a.y, h, k, l2, k) <= e || vb2(a.x, a.y, l2, k, l2, g2) <= e || vb2(a.x, a.y, h, g2, l2, g2) <= e), b;
      if (b.type === P2.L) {
        b = a.x - (h + l2) / 2;
        f2 = a.y - (k + g2) / 2;
        var m2 = Math.abs(l2 - h) / 2, n2 = Math.abs(g2 - k) / 2;
        if (m2 === 0 || n2 === 0)
          return vb2(a.x, a.y, h, k, l2, g2) <= e ? true : false;
        if (c) {
          if (a = M2.xz(m2, n2, b, f2), a * a <= e)
            return true;
        } else
          return wb2(b, f2, -m2, 0) >= e || wb2(b, f2, 0, -n2) >= e || wb2(b, f2, 0, n2) >= e || wb2(b, f2, m2, 0) >= e ? false : true;
      } else if (b.type === P2.o) {
        l2 = b.bounds;
        f2 = l2.x;
        h = l2.y;
        k = l2.x + l2.width;
        l2 = l2.y + l2.height;
        if (a.x > k && a.x < f2 && a.y > l2 && a.y < h && vb2(a.x, a.y, f2, h, f2, l2) > e && vb2(a.x, a.y, f2, h, k, h) > e && vb2(a.x, a.y, k, l2, f2, l2) > e && vb2(a.x, a.y, k, l2, k, h) > e)
          return false;
        f2 = Math.sqrt(e);
        if (c) {
          if (this.fill === null ? Yd2(b, a.x, a.y, f2) : Wd2(b, a, f2, true, false))
            return true;
        } else {
          c = b.figures;
          for (b = 0; b < c.count; b++) {
            f2 = c.m[b];
            g2 = f2.startX;
            m2 = f2.startY;
            if (a.pd(g2, m2) > e)
              return false;
            h = f2.segments.m;
            k = h.length;
            for (l2 = 0; l2 < k; l2++)
              switch (n2 = h[l2], n2.type) {
                case Pd2:
                case sd2:
                  g2 = n2.endX;
                  m2 = n2.endY;
                  if (a.pd(g2, m2) > e)
                    return false;
                  break;
                case Qd2:
                  var p2 = Ea2();
                  M2.Fe(g2, m2, n2.point1X, n2.point1Y, n2.point2X, n2.point2Y, n2.endX, n2.endY, 0.8, p2);
                  g2 = d(p2, a);
                  Ia2(p2);
                  if (g2)
                    return false;
                  g2 = n2.endX;
                  m2 = n2.endY;
                  if (a.pd(g2, m2) > e)
                    return false;
                  break;
                case Rd2:
                  p2 = Ea2();
                  M2.lq(g2, m2, n2.point1X, n2.point1Y, n2.endX, n2.endY, 0.8, p2);
                  g2 = d(p2, a);
                  Ia2(p2);
                  if (g2)
                    return false;
                  g2 = n2.endX;
                  m2 = n2.endY;
                  if (a.pd(g2, m2) > e)
                    return false;
                  break;
                case Sd2:
                case Td2:
                  p2 = n2.type === Sd2 ? Ud2(n2, f2) : Vd2(n2, f2, g2, m2);
                  var r2 = p2.length;
                  if (r2 === 0) {
                    g2 = n2.type === Sd2 ? n2.centerX : n2.endX;
                    m2 = n2.type === Sd2 ? n2.centerY : n2.endY;
                    if (a.pd(g2, m2) > e)
                      return false;
                    break;
                  }
                  n2 = null;
                  for (var q2 = Ea2(), u2 = 0; u2 < r2; u2++)
                    if (n2 = p2[u2], q2.length = 0, M2.Fe(n2[0], n2[1], n2[2], n2[3], n2[4], n2[5], n2[6], n2[7], 0.8, q2), d(q2, a))
                      return Ia2(q2), false;
                  Ia2(q2);
                  n2 !== null && (g2 = n2[6], m2 = n2[7]);
                  break;
                default:
                  C2("Unknown Segment type: " + n2.type);
              }
          }
          return true;
        }
      }
    }
    return false;
  };
  t2.gc = function() {
    this.ma = null;
  };
  t2.Qw = function() {
    return this.ig;
  };
  function Bn(a) {
    var b = a.diagram;
    b !== null && b.undoManager.isUndoingRedoing || (a.segmentOrientation = Mm, a.Sl !== "None" ? (a.segmentIndex = -1, a.alignmentFocus = cd2) : a.Vk !== "None" && (a.segmentIndex = 0, a.alignmentFocus = new O2(1 - cd2.x, cd2.y)));
  }
  xf2.makeGeometry = function(a, b, c) {
    if (a.toArrow !== "None")
      var d = Cn[a.toArrow];
    else
      a.fromArrow !== "None" ? d = Cn[a.fromArrow] : (d = M2.Qe[a.figure], typeof d === "string" && (d = M2.Qe[d]), d === void 0 && C2("Unknown Shape.figure: " + a.figure), d = d(a, b, c), d.cl = b, d.al = c);
    if (d === null) {
      var e = M2.Qe.Rectangle;
      typeof e === "function" && (d = e(a, b, c));
    }
    return d;
  };
  function Dn(a) {
    var b = Cn[a];
    if (b === void 0) {
      var c = a.toLowerCase();
      if (c === "none")
        return "None";
      b = Cn[c];
      if (b === void 0) {
        var d = null, e;
        for (e in M2.Im)
          if (e.toLowerCase() === c) {
            d = e;
            break;
          }
        if (d !== null)
          return a = P2.parse(M2.Im[d], false), Cn[d] = a, c !== d && (Cn[c] = d), d;
      }
    }
    return typeof b === "string" ? b : b instanceof P2 ? a : null;
  }
  na2.Object.defineProperties(xf2.prototype, { geometry: { get: function() {
    return this.ma !== null ? this.ma : this.Dd;
  }, set: function(a) {
    var b = this.ma, c = this.Dd;
    if (b !== a) {
      a !== null ? this.Dd = this.ma = a.freeze() : this.Dd = this.ma = null;
      var d = this.part;
      d !== null && (d.Xf = NaN);
      this.s();
      this.g("geometry", b || c, a);
      Zk(this) && (a = this.part, a !== null && $k(this, a, "geometryString"));
    }
  } }, geometryString: { get: function() {
    return this.geometry === null ? "" : this.geometry.toString();
  }, set: function(a) {
    a = P2.parse(a);
    var b = a.normalize();
    this.geometry = a;
    this.position = a = K2.allocAt(-b.x, -b.y);
    K2.free(a);
  } }, isGeometryPositioned: { get: function() {
    return this.Sn;
  }, set: function(a) {
    var b = this.Sn;
    b !== a && (this.Sn = a, this.s(), this.g("isGeometryPositioned", b, a));
  } }, fill: { get: function() {
    return this.Uk;
  }, set: function(a) {
    var b = this.Uk;
    b !== a && (a !== null && Il(a, "Shape.fill"), a instanceof hl && a.freeze(), this.Uk = a, this.N(), this.g("fill", b, a));
  } }, stroke: {
    get: function() {
      return this.Gc;
    },
    set: function(a) {
      var b = this.Gc;
      b !== a && (a !== null && Il(a, "Shape.stroke"), a instanceof hl && a.freeze(), this.Gc = a, this.N(), this.g("stroke", b, a));
    }
  }, strokeWidth: { get: function() {
    return this.ig;
  }, set: function(a) {
    var b = this.ig;
    if (b !== a)
      if (0 <= a) {
        this.ig = a;
        this.s();
        var c = this.part;
        c !== null && (c.Xf = NaN);
        this.g("strokeWidth", b, a);
      } else
        xa2(a, "value >= 0", xf2, "strokeWidth:value");
  } }, strokeCap: {
    get: function() {
      return this.Ll;
    },
    set: function(a) {
      var b = this.Ll;
      b !== a && (typeof a !== "string" || a !== "butt" && a !== "round" && a !== "square" ? xa2(a, '"butt", "round", or "square"', xf2, "strokeCap") : (this.Ll = a, this.N(), this.g("strokeCap", b, a)));
    }
  }, strokeJoin: { get: function() {
    return this.Ml;
  }, set: function(a) {
    var b = this.Ml;
    b !== a && (typeof a !== "string" || a !== "miter" && a !== "bevel" && a !== "round" ? xa2(a, '"miter", "bevel", or "round"', xf2, "strokeJoin") : (this.Ml = a, this.N(), this.g("strokeJoin", b, a)));
  } }, strokeMiterLimit: {
    get: function() {
      return this.Kj;
    },
    set: function(a) {
      var b = this.Kj;
      if (b !== a && 1 <= a) {
        this.Kj = a;
        this.N();
        var c = this.part;
        c !== null && (c.Xf = NaN);
        this.g("strokeMiterLimit", b, a);
      }
    }
  }, strokeDashArray: { get: function() {
    return this.mh;
  }, set: function(a) {
    var b = this.mh;
    if (b !== a) {
      if (a !== null) {
        for (var c = a.length, d = 0, e = 0; e < c; e++) {
          var f2 = a[e];
          0 <= f2 && isFinite(f2) || C2("strokeDashArray:value " + f2 + " at index " + e + " must be a positive number or zero.");
          d += f2;
        }
        if (d === 0) {
          if (b === null)
            return;
          a = null;
        }
      }
      this.mh = a;
      this.N();
      this.g("strokeDashArray", b, a);
    }
  } }, strokeDashOffset: { get: function() {
    return this.nh;
  }, set: function(a) {
    var b = this.nh;
    b !== a && 0 <= a && (this.nh = a, this.N(), this.g("strokeDashOffset", b, a));
  } }, figure: { get: function() {
    return this.xn;
  }, set: function(a) {
    var b = this.xn;
    if (b !== a) {
      var c = M2.Qe[a];
      typeof c === "function" ? c = a : (c = M2.Qe[a.toLowerCase()]) || C2("Unknown Shape.figure: " + a);
      b !== c && (a = this.part, a !== null && (a.Xf = NaN), this.xn = c, this.Dd = null, this.gc(), this.s(), this.g("figure", b, c));
    }
  } }, toArrow: { get: function() {
    return this.Sl;
  }, set: function(a) {
    var b = this.Sl;
    a === true ? a = "Standard" : a === false && (a = "");
    if (b !== a) {
      var c = Dn(a);
      c === null ? C2("Unknown Shape.toArrow: " + a) : b !== c && (this.Sl = c, this.Dd = null, this.gc(), this.s(), Bn(this), this.g("toArrow", b, c));
    }
  } }, fromArrow: { get: function() {
    return this.Vk;
  }, set: function(a) {
    var b = this.Vk;
    a === true ? a = "Standard" : a === false && (a = "");
    if (b !== a) {
      var c = Dn(a);
      c === null ? C2("Unknown Shape.fromArrow: " + a) : b !== c && (this.Vk = c, this.Dd = null, this.gc(), this.s(), Bn(this), this.g("fromArrow", b, c));
    }
  } }, spot1: { get: function() {
    return this.mf;
  }, set: function(a) {
    var b = this.mf;
    b.A(a) || (this.mf = a = a.I(), this.s(), this.g("spot1", b, a));
  } }, spot2: { get: function() {
    return this.nf;
  }, set: function(a) {
    var b = this.nf;
    b.A(a) || (this.nf = a = a.I(), this.s(), this.g("spot2", b, a));
  } }, parameter1: { get: function() {
    return this.Ko;
  }, set: function(a) {
    var b = this.Ko;
    b !== a && (this.Ko = a, this.gc(), this.s(), this.g("parameter1", b, a));
  } }, parameter2: { get: function() {
    return this.Lo;
  }, set: function(a) {
    var b = this.Lo;
    b !== a && (this.Lo = a, this.gc(), this.s(), this.g("parameter2", b, a));
  } }, naturalBounds: { get: function() {
    var a = this.desiredSize;
    return a.u() || this.ma === null ? new N2(0, 0, a.width, a.height) : (this.wc.assign(this.ma.bounds), this.wc);
  } }, pathPattern: { get: function() {
    return this.No;
  }, set: function(a) {
    var b = this.No;
    b !== a && (this.No = a, this.N(), this.g("pathPattern", b, a));
  } }, geometryStretch: { get: function() {
    return this.En;
  }, set: function(a) {
    var b = this.En;
    b !== a && (this.En = a, this.s(), this.g("geometryStretch", b, a));
  } }, interval: { get: function() {
    return this.Zd;
  }, set: function(a) {
    var b = this.Zd;
    a = Math.round(a);
    if (b !== a && a !== 0 && isFinite(a)) {
      this.Zd = a;
      var c = this.diagram;
      c !== null && this.panel === c.grid && ej2(c);
      this.s();
      c = this.panel;
      c !== null && (c.Rf = null);
      this.g("interval", b, a);
    }
  } }, graduatedStart: { get: function() {
    return this.Yd;
  }, set: function(a) {
    var b = this.Yd;
    b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Yd = a, this.s(), this.g("graduatedStart", b, a));
  } }, graduatedEnd: { get: function() {
    return this.Wd;
  }, set: function(a) {
    var b = this.Wd;
    b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Wd = a, this.s(), this.g("graduatedEnd", b, a));
  } }, graduatedSkip: { get: function() {
    return this.Xd;
  }, set: function(a) {
    var b = this.Xd;
    b !== a && (this.Xd = a, this.s(), this.g("graduatedSkip", b, a));
  } } });
  xf2.prototype.intersectsRect = xf2.prototype.Lc;
  xf2.prototype.containedInRect = xf2.prototype.Ah;
  xf2.prototype.getNearestIntersectionPoint = xf2.prototype.ws;
  xf2.prototype.getDocumentBounds = xf2.prototype.Li;
  xf2.prototype.getDocumentPoint = xf2.prototype.da;
  var Cn = new Ya2(), on = new Ya2();
  xf2.className = "Shape";
  xf2.getFigureGenerators = function() {
    var a = new H2(), b;
    for (b in M2.Qe)
      b !== b.toLowerCase() && a.add(b, M2.Qe[b]);
    a.freeze();
    return a;
  };
  xf2.defineFigureGenerator = function(a, b) {
    var c = a.toLowerCase(), d = M2.Qe;
    d[a] = b;
    d[c] = a;
  };
  xf2.getArrowheadGeometries = function() {
    var a = new H2();
    for (d in M2.Im)
      if (Cn[d] === void 0) {
        var b = P2.parse(M2.Im[d], false);
        Cn[d] = b;
        b = d.toLowerCase();
        b !== d && (Cn[b] = d);
      }
    for (var c in Cn)
      if (c !== c.toLowerCase()) {
        var d = Cn[c];
        d instanceof P2 && a.add(c, d);
      }
    a.freeze();
    return a;
  };
  xf2.defineArrowheadGeometry = function(a, b) {
    var c = null;
    typeof b === "string" ? c = P2.parse(b, false) : c = b;
    b = a.toLowerCase();
    b !== "none" && a !== b || C2("Shape.defineArrowheadGeometry name must not be empty or None or all-lower-case: " + a);
    var d = Cn;
    d[a] = c;
    d[b] = a;
  };
  function Mg2(a, b) {
    Y2.call(this);
    En || (Fn = Kg2 ? new vk2(null).context : null, En = true);
    this.Xb = "";
    this.Gc = "black";
    this.qe = "13px sans-serif";
    this.ti = "start";
    this.Vd = pg2;
    this.Ai = Zc2;
    this.qj = true;
    this.ai = this.bi = false;
    this.$f = Gn;
    this.mg = Hn;
    this.vr = this.sb = this.Xc = 0;
    this.Zt = this.$t = null;
    this.un = false;
    this.md = this.Xm = this.zp = this.ui = this.Ap = null;
    this.lf = this.kf = 0;
    this.Yh = In;
    this.we = Infinity;
    this.ei = 0;
    this.re = null;
    this.Ce = 0;
    this.pe = this.Tb = this.Dc = null;
    this.Zd = 1;
    this.Yd = 0;
    this.Wd = 1;
    this.Xd = this.jj = null;
    typeof a === "string" ? this.text = a : a && Object.assign(this, a);
    b && Object.assign(this, b);
    return this;
  }
  ma2(Mg2, Y2);
  Mg2.prototype.cloneProtected = function(a) {
    Y2.prototype.cloneProtected.call(this, a);
    a.Xb = this.Xb;
    a.Gc = this.Gc;
    a.qe = this.qe;
    a.ti = this.ti;
    a.Vd = this.Vd;
    a.Ai = this.Ai;
    a.qj = this.qj;
    a.bi = this.bi;
    a.ai = this.ai;
    a.$f = this.$f;
    a.mg = this.mg;
    a.Xc = this.Xc;
    a.vr = this.vr;
    a.sb = this.sb;
    a.$t = this.$t;
    a.Zt = this.Zt;
    a.un = this.un;
    a.Ap = this.Ap;
    a.ui = this.ui;
    a.zp = this.zp;
    a.Xm = this.Xm;
    a.md = this.md;
    a.kf = this.kf;
    a.lf = this.lf;
    a.Yh = this.Yh;
    a.we = this.we;
    a.re = this.re;
    a.Ce = this.Ce;
    a.Dc = this.Dc;
    a.Tb = this.Tb;
    a.pe = this.pe;
    a.ei = this.ei;
    a.Zd = this.Zd;
    a.Yd = this.Yd;
    a.Wd = this.Wd;
    a.jj = this.jj;
    a.Xd = this.Xd;
  };
  function Lm(a, b) {
    a.G = b.G | 6144;
    a.mb = b.opacity;
    a.Vb = b.background;
    a.hd = b.areaBackground;
    a.Tc = b.desiredSize.I();
    a.Zf = b.minSize.I();
    a.Yf = b.maxSize.I();
    b.Cb !== null ? a.Cb = b.Cb.copy() : a.Cb = null;
    a.sa = b.scale;
    a.zb = b.angle;
    a.Ee = b.stretch;
    a.Vg = b.margin.I();
    a.yb = b.alignment.I();
    a.xk = b.alignmentFocus.I();
    a.Bl = b.segmentFraction;
    a.Cl = b.segmentOffset.I();
    a.Dl = b.segmentOrientation;
    b.$a !== null && (a.$a = b.$a.copy());
    a.Fl = b.shadowVisible;
    b instanceof Mg2 && (a.Xb = b.Xb, a.Gc = b.Gc, a.qe = b.qe, a.ti = b.ti, a.Vd = b.Vd, a.Ai = b.Ai, a.qj = b.qj, a.bi = b.bi, a.ai = b.ai, a.$f = b.$f, a.mg = b.mg, a.re = null, a.kf = b.kf, a.lf = b.lf, a.we = b.we, a.ei = b.ei, a.Zd = b.Zd, a.Yd = b.Yd, a.Wd = b.Wd, a.jj = b.jj, a.Xd = b.Xd);
  }
  t2 = Mg2.prototype;
  t2.gb = function(a) {
    a.classType === Mg2 ? this.wrap = a : Y2.prototype.gb.call(this, a);
  };
  t2.toString = function() {
    return 22 < this.Xb.length ? 'TextBlock("' + this.Xb.substring(0, 20) + '"...)' : 'TextBlock("' + this.Xb + '")';
  };
  t2.s = function() {
    Y2.prototype.s.call(this);
    this.Zt = this.$t = null;
  };
  t2.Ei = function(a, b) {
    if (this.Gc !== null && this.Xb.length !== 0 && this.qe !== null) {
      var c = this.naturalBounds, d = this.actualBounds, e = c.width, f2 = c.height, g2 = Jn(this), h = a.textAlign = this.ti, k = b.Vn;
      h === "start" ? h = k ? "right" : "left" : h === "end" && (h = k ? "left" : "right");
      k = this.bi;
      var l2 = this.ai;
      di2(this, a, this.Gc, true, false, c, d);
      (k || l2) && di2(this, a, this.Gc, false, false, c, d);
      d = 0;
      c = false;
      var m2 = this.fe, n2 = m2.dx - (g2 * m2.m21 + m2.dx);
      m2 = m2.dy - (g2 * m2.m22 + m2.dy);
      var p2 = b.scale;
      8 > (n2 * n2 + m2 * m2) * p2 * p2 && (c = true);
      b.Ab !== a && (c = false);
      b.Ie("textGreeking") === false && (c = false);
      b = this.kf;
      n2 = this.lf;
      switch (this.flip) {
        case Uk:
          a.translate(e, 0);
          a.scale(-1, 1);
          break;
        case Tk:
          a.translate(0, f2);
          a.scale(1, -1);
          break;
        case Vk:
          a.translate(e, f2), a.scale(-1, -1);
      }
      a.Ed();
      m2 = this.Xc;
      p2 = (b + g2 + n2) * m2;
      f2 > p2 && (d = this.Ai, d = d.y * f2 - d.y * p2 + d.offsetY);
      if (m2 === 1 && this.pe !== null)
        n2 = this.sb, n2 > e && (n2 = e), this.Di(this.pe, a, 0, d + b, e, g2, n2, c, h, k, l2);
      else if (this.Dc !== null && this.Tb !== null)
        for (p2 = 0; p2 < m2; p2++) {
          var r2 = this.Dc[p2];
          r2 > e && (r2 = e);
          d += b;
          this.Di(this.Tb[p2], a, 0, d, e, g2, r2, c, h, k, l2);
          d += g2 + n2;
        }
      switch (this.flip) {
        case Uk:
          a.scale(-1, 1);
          a.translate(-e, 0);
          break;
        case Tk:
          a.scale(1, -1);
          a.translate(0, -f2);
          break;
        case Vk:
          a.scale(-1, -1), a.translate(-e, -f2);
      }
    }
  };
  t2.Di = function(a, b, c, d, e, f2, g2, h, k, l2, m2) {
    var n2 = 0;
    h ? (k === "left" ? n2 = 0 : k === "right" ? n2 = e - g2 : k === "center" && (n2 = (e - g2) / 2), b.fillRect(c + n2, d + 0.25 * f2, g2, 1)) : (k === "left" ? n2 = 0 : k === "right" ? n2 = e : k === "center" && (n2 = e / 2), e = Kn !== null ? Kn(this, f2) : 0.75 * f2, b.fillText(a, c + n2, d + e), a = f2 / 20 | 0, a === 0 && (a = 1), k === "right" ? n2 -= g2 : k === "center" && (n2 -= g2 / 2), l2 && (k = Ln !== null ? Ln(this, f2) : 0.8 * f2, b.beginPath(), b.lineWidth = a, b.moveTo(c + n2, d + k), b.lineTo(c + n2 + g2, d + k), b.stroke()), m2 && (b.beginPath(), b.lineWidth = a, d = d + f2 - f2 / 2.2 | 0, a % 2 !== 0 && (d += 0.5), b.moveTo(c + n2, d), b.lineTo(c + n2 + g2, d), b.stroke()));
  };
  t2.im = function(a, b, c, d) {
    this.ei = a;
    var e = this.qe;
    Fn !== null && Mn !== e && (Mn = Fn.font = e);
    this.sb = this.Ce = 0;
    this.pe = this.Tb = this.Dc = this.re = null;
    var f2;
    if (isNaN(this.desiredSize.width)) {
      e = this.Xb.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
      if (e.length === 0)
        e = 0;
      else if (this.isMultiline) {
        for (var g2 = f2 = 0, h = false; !h; ) {
          var k = e.indexOf("\n", g2);
          k === -1 && (k = e.length, h = true);
          g2 = e.substr(g2, k - g2);
          this.Yh === In && (g2 = g2.trim());
          f2 = Math.max(f2, Nn(g2));
          g2 = k + 1;
        }
        e = f2;
      } else
        f2 = e.indexOf("\n", 0), 0 <= f2 && (e = e.substr(0, f2)), e = Nn(e);
      e = Math.min(e, a / this.scale);
      e = Math.max(8, e);
    } else
      e = this.desiredSize.width;
    this.panel !== null && (e = Math.min(e, this.panel.maxSize.width));
    f2 = On(this, e);
    isNaN(this.desiredSize.height) ? f2 = Math.min(f2, b / this.scale) : f2 = this.desiredSize.height;
    h = f2;
    if (this.sb !== 0 && this.Dc !== null && this.Tb !== null && this.$f === Pn && (b = this.qe, b = this.$f === Pn ? Qn(b) : 0, k = this.kf + this.lf, k = Math.max(0, Jn(this) + k), h = Math.min(this.maxLines - 1, Math.max(Math.floor(h / k + 0.01) - 1, 0)), !(h + 1 >= this.Tb.length))) {
      k = this.Tb[h];
      for (b = Math.max(1, a - b); Nn(k) > b && 1 < k.length; )
        k = k.substr(0, k.length - 1);
      k += Rn;
      b = Nn(k);
      this.Tb[h] = k;
      this.Tb = this.Tb.slice(0, h + 1);
      this.Dc[h] = b;
      this.Dc = this.Dc.slice(0, h + 1);
      this.Ce = this.Tb.length;
      this.sb = Math.max(this.sb, b);
      this.Xc = this.Ce;
      this.Xc === 1 && (this.pe = this.Tb[0]);
    }
    if (this.wrap === Sn || isNaN(this.desiredSize.width))
      e = isNaN(a) ? this.sb : Math.min(a, this.sb), isNaN(this.desiredSize.width) && (e = Math.max(8, e));
    e = Math.max(c, e);
    f2 = Math.max(d, f2);
    Rb2(this.wc, e, f2);
    this.xe(0, 0, e, f2);
  };
  t2.zh = function(a, b, c, d) {
    el(this, a, b, c, d);
  };
  function Tn(a, b, c) {
    if (a.pe === null)
      a.pe = b, a.sb = c;
    else {
      if (a.Tb === null || a.Dc === null)
        a.Tb = [], a.Dc = [], a.Tb.push(a.pe), a.Dc.push(a.sb);
      a.Tb.push(b);
      a.Dc.push(c);
    }
  }
  function Un(a, b, c, d) {
    var e = a.Yh === In;
    e && (b = b.trim());
    var f2 = 0, g2 = a.qe, h = a.kf + a.lf;
    h = Math.max(0, Jn(a) + h);
    var k = a.$f === Pn ? Qn(g2) : 0;
    if (a.Xc >= a.we)
      d !== null && d.h(0, h);
    else if (g2 = b, a.mg === Vn) {
      a.Ce = 1;
      var l2 = Nn(b);
      if (k === 0 || l2 <= c)
        a.sb = Math.max(a.sb, l2), Tn(a, b, a.sb), d !== null && d.h(l2, h);
      else {
        f2 = Wn(a, g2);
        g2 = g2.substr(f2.length);
        b = Wn(a, g2);
        for (l2 = Nn(f2 + b); 0 < b.length && l2 <= c; )
          f2 += b, g2 = g2.substr(b.length), b = Wn(a, g2), l2 = f2 + b, e && (l2 = l2.trim()), l2 = Nn(l2);
        e && (b = b.trim());
        f2 += b;
        for (c = Math.max(1, c - k); Nn(f2) > c && 1 < f2.length; )
          f2 = f2.substr(0, f2.length - 1);
        f2 += Rn;
        var m2 = Nn(f2);
        a.sb = m2;
        Tn(a, f2, m2);
        d !== null && d.h(m2, h);
      }
    } else {
      k = 0;
      g2.length === 0 && (k = 1, Tn(a, g2, 0));
      for (; 0 < g2.length; ) {
        b = Wn(a, g2);
        for (g2 = g2.substr(b.length); Nn(b) > c; ) {
          var n2 = 1;
          l2 = Nn(b.substr(0, n2));
          for (m2 = 0; l2 <= c; )
            n2++, m2 = l2, l2 = Nn(b.substr(0, n2));
          if (n2 === 1) {
            var p2 = l2;
            f2 = Math.max(f2, l2);
          } else
            p2 = m2, f2 = Math.max(f2, m2);
          n2--;
          1 > n2 && (n2 = 1);
          Tn(a, b.substr(0, n2), p2);
          k++;
          b = b.substr(n2);
          if (a.Xc + k > a.we)
            break;
        }
        m2 = Wn(a, g2);
        for (l2 = Nn(b + m2); 0 < m2.length && l2 <= c; )
          b += m2, g2 = g2.substr(m2.length), m2 = Wn(a, g2), l2 = b + m2, e && (l2 = l2.trim()), l2 = Nn(l2);
        e && (b = b.trim());
        if (b !== "" && (b[b.length - 1] === "\xAD" && (b = b.substring(0, b.length - 1) + "\u2010"), m2.length === 0 ? (n2 = l2, f2 = Math.max(f2, l2)) : (n2 = m2 = Nn(b), f2 = Math.max(f2, m2)), Tn(a, b, n2), k++, a.Xc + k > a.we))
          break;
      }
      a.Ce = Math.min(a.we, k);
      a.sb = Math.max(a.sb, f2);
      d !== null && d.h(a.sb, h * a.Ce);
    }
  }
  function Wn(a, b) {
    if (a.mg === Xn)
      return b.substr(0, 1);
    for (var c = b.length, d = 0, e = Yn; d < c && !e.test(b.charAt(d)); )
      d++;
    for (a.Yh === Zn && (c = Math.min(c, d + 1)); d < c && e.test(b.charAt(d)); )
      d++;
    return d >= b.length ? b : b.substr(0, d);
  }
  function Nn(a) {
    return Fn === null ? 8 * a.length : Fn.measureText(a).width;
  }
  function Jn(a) {
    if (a.re !== null)
      return a.re;
    var b = a.qe;
    if (Fn === null) {
      var c = 16;
      return a.re = c;
    }
    $n[b] !== void 0 && 5e3 > ao ? c = $n[b] : (c = 1.3 * Fn.measureText("M").width, $n[b] = c, ao++);
    return a.re = c;
  }
  function Qn(a) {
    if (Fn === null)
      return 6;
    if (bo[a] !== void 0 && 5e3 > co)
      var b = bo[a];
    else
      b = Fn.measureText(Rn).width, bo[a] = b, co++;
    return b;
  }
  function On(a, b) {
    var c = a.Xb.replace(/\r\n/g, "\n").replace(/\r/g, "\n"), d = a.kf + a.lf;
    d = Math.max(0, Jn(a) + d);
    if (c.length === 0)
      return a.sb = 0, a.Xc = 1, d;
    if (!a.isMultiline) {
      var e = c.indexOf("\n", 0);
      0 <= e && (c = c.substr(0, e));
    }
    e = 0;
    for (var f2 = a.Xc = 0, g2, h = false; !h; ) {
      g2 = c.indexOf("\n", f2);
      g2 === -1 && (g2 = c.length, h = true);
      if (f2 <= g2) {
        f2 = c.substr(f2, g2 - f2);
        if (a.mg !== Vn) {
          a.Ce = 0;
          var k = Gb2.alloc();
          Un(a, f2, b, k);
          e += k.height;
          Gb2.free(k);
          a.Xc += a.Ce;
        } else
          Un(a, f2, b, null), e += d, a.Xc++;
        a.Xc === a.we && (h = true);
      }
      f2 = g2 + 1;
    }
    return a.vr = e;
  }
  na2.Object.defineProperties(Mg2.prototype, {
    font: { get: function() {
      return this.qe;
    }, set: function(a) {
      var b = this.qe;
      b !== a && (this.qe = a, this.re = null, this.s(), this.g("font", b, a));
    } },
    text: { get: function() {
      return this.Xb;
    }, set: function(a) {
      var b = this.Xb;
      a !== null && a !== void 0 ? a = a.toString() : a = "";
      b !== a && (this.Xb = a, this.s(), this.g("text", b, a));
    } },
    textAlign: { get: function() {
      return this.ti;
    }, set: function(a) {
      var b = this.ti;
      b === a || a !== "start" && a !== "end" && a !== "left" && a !== "right" && a !== "center" || (this.ti = a, this.N(), this.g("textAlign", b, a));
    } },
    flip: { get: function() {
      return this.Vd;
    }, set: function(a) {
      var b = this.Vd;
      b !== a && (this.Vd = a, this.N(), this.g("flip", b, a));
    } },
    verticalAlignment: { get: function() {
      return this.Ai;
    }, set: function(a) {
      var b = this.Ai;
      b.A(a) || (this.Ai = a = a.I(), ul(this), this.g("verticalAlignment", b, a));
    } },
    naturalBounds: { get: function() {
      if (!this.wc.u()) {
        var a = Gb2.alloc();
        Un(this, this.Xb, 999999, a);
        var b = a.width;
        Gb2.free(a);
        a = On(this, b);
        var c = this.desiredSize;
        isNaN(c.width) || (b = c.width);
        isNaN(c.height) || (a = c.height);
        Rb2(this.wc, b, a);
      }
      return this.wc;
    } },
    isMultiline: { get: function() {
      return this.qj;
    }, set: function(a) {
      var b = this.qj;
      b !== a && (this.qj = a, this.s(), this.g("isMultiline", b, a));
    } },
    isUnderline: { get: function() {
      return this.bi;
    }, set: function(a) {
      var b = this.bi;
      b !== a && (this.bi = a, this.N(), this.g("isUnderline", b, a));
    } },
    isStrikethrough: { get: function() {
      return this.ai;
    }, set: function(a) {
      var b = this.ai;
      b !== a && (this.ai = a, this.N(), this.g("isStrikethrough", b, a));
    } },
    wrap: { get: function() {
      return this.mg;
    }, set: function(a) {
      var b = this.mg;
      b !== a && (this.mg = a, this.s(), this.g("wrap", b, a));
    } },
    overflow: { get: function() {
      return this.$f;
    }, set: function(a) {
      var b = this.$f;
      b !== a && (this.$f = a, this.s(), this.g("overflow", b, a));
    } },
    stroke: {
      get: function() {
        return this.Gc;
      },
      set: function(a) {
        var b = this.Gc;
        b !== a && (a !== null && Il(a, "TextBlock.stroke"), a instanceof hl && a.freeze(), this.Gc = a, this.N(), this.g("stroke", b, a));
      }
    },
    lineCount: { get: function() {
      return this.Xc;
    } },
    lineHeight: { get: function() {
      return Jn(this);
    } },
    editable: { get: function() {
      return this.un;
    }, set: function(a) {
      var b = this.un;
      b !== a && (this.un = a, this.g("editable", b, a));
    } },
    textEditor: {
      get: function() {
        return this.Ap;
      },
      set: function(a) {
        var b = this.Ap;
        b !== a && (this.Ap = a, this.g("textEditor", b, a));
      }
    },
    errorFunction: { get: function() {
      return this.md;
    }, set: function(a) {
      var b = this.md;
      b !== a && (this.md = a, this.g("errorFunction", b, a));
    } },
    interval: { get: function() {
      return this.Zd;
    }, set: function(a) {
      var b = this.Zd;
      a = Math.round(a);
      if (b !== a && a !== 0 && isFinite(a)) {
        this.Zd = a;
        this.s();
        var c = this.panel;
        c !== null && (c.Rf = null);
        this.g("interval", b, a);
      }
    } },
    graduatedStart: {
      get: function() {
        return this.Yd;
      },
      set: function(a) {
        var b = this.Yd;
        b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Yd = a, this.s(), this.g("graduatedStart", b, a));
      }
    },
    graduatedEnd: { get: function() {
      return this.Wd;
    }, set: function(a) {
      var b = this.Wd;
      b !== a && (0 > a ? a = 0 : 1 < a && (a = 1), this.Wd = a, this.s(), this.g("graduatedEnd", b, a));
    } },
    graduatedFunction: { get: function() {
      return this.jj;
    }, set: function(a) {
      var b = this.jj;
      b !== a && (this.jj = a, this.s(), this.g("graduatedFunction", b, a));
    } },
    graduatedSkip: { get: function() {
      return this.Xd;
    }, set: function(a) {
      var b = this.Xd;
      b !== a && (this.Xd = a, this.s(), this.g("graduatedSkip", b, a));
    } },
    textValidation: { get: function() {
      return this.ui;
    }, set: function(a) {
      var b = this.ui;
      b !== a && (this.ui = a, this.g("textValidation", b, a));
    } },
    textEdited: { get: function() {
      return this.zp;
    }, set: function(a) {
      var b = this.zp;
      b !== a && (this.zp = a, this.g("textEdited", b, a));
    } },
    spacingAbove: {
      get: function() {
        return this.kf;
      },
      set: function(a) {
        var b = this.kf;
        b !== a && (this.kf = a, this.s(), this.g("spacingAbove", b, a));
      }
    },
    spacingBelow: { get: function() {
      return this.lf;
    }, set: function(a) {
      var b = this.lf;
      b !== a && (this.lf = a, this.s(), this.g("spacingBelow", b, a));
    } },
    formatting: { get: function() {
      return this.Yh;
    }, set: function(a) {
      var b = this.Yh;
      b !== a && (this.Yh = a, this.s(), this.g("formatting", b, a));
    } },
    maxLines: {
      get: function() {
        return this.we;
      },
      set: function(a) {
        var b = this.we;
        b !== a && (a = Math.floor(a), 0 >= a && xa2(a, "> 0", Mg2, "maxLines"), this.we = a, this.s(), this.g("maxLines", b, a));
      }
    },
    metrics: { get: function() {
      return { arrSize: this.Dc !== null ? this.Dc : [this.sb], arrText: this.Tb !== null ? this.Tb : [this.pe], maxLineWidth: this.sb, fontHeight: this.re };
    } },
    choices: { get: function() {
      return this.Xm;
    }, set: function(a) {
      var b = this.Xm;
      b !== a && (this.Xm = a, this.g("choices", b, a));
    } }
  });
  var Kn = null, Ln = null, Vn = new D2(Mg2, "None", 0), Sn = new D2(Mg2, "WrapFit", 1), Hn = new D2(Mg2, "WrapDesiredSize", 2), Xn = new D2(Mg2, "WrapBreakAll", 3), Gn = new D2(Mg2, "OverflowClip", 0), Pn = new D2(Mg2, "OverflowEllipsis", 1), In = new D2(Mg2, "FormatTrim", 0), Zn = new D2(Mg2, "FormatNone", 0), Yn = /[ \u200b\u00ad]/, $n = new Ya2(), ao = 0, bo = new Ya2(), co = 0, Rn = "...", Mn = "", Fn = null, En = false;
  Mg2.className = "TextBlock";
  Mg2.getEllipsis = function() {
    return Rn;
  };
  Mg2.setEllipsis = function(a) {
    Rn = a;
    bo = new Ya2();
    co = 0;
  };
  Mg2.getBaseline = function() {
    return Kn;
  };
  Mg2.setBaseline = function(a) {
    Kn = a;
  };
  Mg2.getUnderline = function() {
    return Ln;
  };
  Mg2.setUnderline = function(a) {
    Ln = a;
  };
  Mg2.isValidFont = function(a) {
    En || (Fn = Kg2 ? new vk2(null).context : null, En = true);
    if (Fn === null)
      return true;
    var b = Fn.font;
    if (a === b || a === "10px sans-serif")
      return true;
    Fn.font = "10px sans-serif";
    Fn.font = a;
    var c = Fn.font;
    if (c !== "10px sans-serif")
      return Fn.font = b, true;
    Fn.font = "19px serif";
    var d = Fn.font;
    Fn.font = a;
    c = Fn.font;
    Fn.font = b;
    return c !== d;
  };
  Mg2.None = Vn;
  Mg2.WrapFit = Sn;
  Mg2.WrapDesiredSize = Hn;
  Mg2.WrapBreakAll = Xn;
  Mg2.OverflowClip = Gn;
  Mg2.OverflowEllipsis = Pn;
  function Rj2(a, b) {
    Y2.call(this);
    this.Mg = null;
    this.sp = "";
    this.lh = kc2;
    this.Xk = qd2;
    this.oh = this.md = null;
    this.Wk = yc2;
    this.Vd = pg2;
    this.Ol = null;
    this.Rn = false;
    this.br = true;
    this.ml = false;
    this.Hl = null;
    typeof a === "string" ? this.source = a : a && Object.assign(this, a);
    b && Object.assign(this, b);
  }
  ma2(Rj2, Y2);
  Rj2.prototype.cloneProtected = function(a) {
    Y2.prototype.cloneProtected.call(this, a);
    a.element = this.Mg;
    a.sp = this.sp;
    a.lh = this.lh.I();
    a.Xk = this.Xk;
    a.Vd = this.Vd;
    a.md = this.md;
    a.oh = this.oh;
    a.Wk = this.Wk.I();
    a.br = this.br;
    a.Hl = this.Hl;
  };
  Rj2.prototype.gb = function(a) {
    a === pg2 || a === rg2 || a === Sk ? this.imageStretch = a : Y2.prototype.gb.call(this, a);
  };
  Rj2.prototype.toString = function() {
    return "Picture(" + this.source + ")#" + ib2(this);
  };
  function Di2(a) {
    a === void 0 && (a = "");
    a !== "" ? eo[a] && (delete eo[a], fo--) : (eo = new Ya2(), fo = 0);
  }
  function go2(a, b) {
    b.Py || (b.Yt = function(c) {
      b.mr = true;
      b.Mn = false;
      var d = b.Ig.copy();
      if (d !== null && d !== void 0) {
        for (d = d.iterator; d.next(); ) {
          var e = d.value;
          var f2 = b.getAttribute("src");
          var g2 = e.fh.H(f2);
          if (g2 !== null)
            for (var h = g2.length, k = 0; k < h; k++)
              f2 = g2[k], e.Oo.add(f2), e.Gb(), b.Fn && (b.lu === void 0 && (b.lu = c), f2.oh !== null && f2.oh(f2, c));
        }
        b.Ig = null;
      }
      a.desiredSize.u() || (dj2(a, false), a.s());
    }, b.Nt = function(a2) {
      b.Mn = a2;
      var c = b.Ig.copy();
      if (c !== null && c !== void 0) {
        for (c = c.iterator; c.next(); ) {
          var e = c.value, f2 = b.getAttribute("src");
          var g2 = e.fh.H(f2);
          if (g2 !== null) {
            e = g2.length;
            f2 = Ea2();
            for (var h = 0; h < e; h++)
              f2.push(g2[h]);
            if (b.Fn)
              for (h = 0; h < e; h++)
                g2 = f2[h], g2.md !== null && g2.md(g2, a2);
            Ia2(f2);
          }
        }
        b.Ig = null;
      }
    }, b.addEventListener("load", b.Yt), b.addEventListener("error", b.Nt), b.Py = true);
  }
  function Tj2(a) {
    a.removeEventListener("load", a.Yt);
    a.removeEventListener("error", a.Nt);
    delete a.Yt;
    delete a.Nt;
  }
  Rj2.prototype.DA = function() {
    if (this.source !== "") {
      Di2(this.source);
      var a = this.source;
      this.source = "";
      this.source = a;
    }
  };
  Rj2.prototype.redraw = function() {
    this.N();
  };
  Rj2.prototype.Ei = function(a, b) {
    var c = this.Mg;
    if (c !== null) {
      var d = c.getAttribute("src");
      if (!(c instanceof HTMLImageElement && (d === null || d === "") || c.Mn instanceof Event && a instanceof pl)) {
        d = this.naturalBounds;
        var e = 0, f2 = 0, g2 = this.Rn, h = g2 ? +c.width : c.naturalWidth;
        g2 = g2 ? +c.height : c.naturalHeight;
        h === void 0 && c.videoWidth && (h = c.videoWidth);
        g2 === void 0 && c.videoHeight && (g2 = c.videoHeight);
        h = h || d.width;
        g2 = g2 || d.height;
        if (h !== 0 && g2 !== 0) {
          var k = h, l2 = g2;
          this.sourceRect.u() && (e = this.lh.x, f2 = this.lh.y, h = this.lh.width, g2 = this.lh.height);
          var m2 = h, n2 = g2, p2 = this.Xk, r2 = this.Wk;
          switch (p2) {
            case pg2:
              if (this.sourceRect.u())
                break;
              m2 >= d.width && (e = e + r2.offsetX + (m2 * r2.x - d.width * r2.x));
              n2 >= d.height && (f2 = f2 + r2.offsetY + (n2 * r2.y - d.height * r2.y));
              h = Math.min(d.width, m2);
              g2 = Math.min(d.height, n2);
              break;
            case qd2:
              m2 = d.width;
              n2 = d.height;
              break;
            case rg2:
            case Sk:
              p2 === rg2 ? (p2 = Math.min(d.height / n2, d.width / m2), m2 *= p2, n2 *= p2) : p2 === Sk && (p2 = Math.max(d.height / n2, d.width / m2), m2 *= p2, n2 *= p2, m2 >= d.width && (e = (e + r2.offsetX + (m2 * r2.x - d.width * r2.x) / m2) * h), n2 >= d.height && (f2 = (f2 + r2.offsetY + (n2 * r2.y - d.height * r2.y) / n2) * g2), h *= 1 / (m2 / d.width), g2 *= 1 / (n2 / d.height), m2 = d.width, n2 = d.height);
          }
          p2 = this.Af() * b.scale;
          var q2 = m2 * p2 * n2 * p2, u2 = h * g2 / q2, w = c.__goCache;
          p2 = null;
          var v2 = ho;
          if (c.mr && w !== void 0 && 4 < q2 && u2 > v2 * v2)
            for (w.Ci === null && (io(w, 4, k, l2, c), io(w, 16, k, l2, c)), k = w.Ci, l2 = k.length, q2 = 0; q2 < l2; q2++)
              if (k[q2].ratio * k[q2].ratio < u2)
                p2 = k[q2];
              else
                break;
          if (!b.rn) {
            if (this.Ol === null)
              if (this.Mg === null)
                this.Ol = false;
              else {
                k = new vk2(null).context;
                k.drawImage(this.Mg, 0, 0);
                try {
                  k.getImageData(0, 0, 1, 1).data[3] && (this.Ol = false), this.Ol = false;
                } catch (z2) {
                  this.Ol = true;
                }
              }
            if (this.Ol)
              return;
          }
          k = 0;
          m2 < d.width && (k = r2.offsetX + (d.width * r2.x - m2 * r2.x));
          l2 = 0;
          n2 < d.height && (l2 = r2.offsetY + (d.height * r2.y - n2 * r2.y));
          switch (this.flip) {
            case Uk:
              a.translate(Math.min(d.width, m2), 0);
              a.scale(-1, 1);
              break;
            case Tk:
              a.translate(0, Math.min(d.height, n2));
              a.scale(1, -1);
              break;
            case Vk:
              a.translate(Math.min(d.width, m2), Math.min(d.height, n2)), a.scale(-1, -1);
          }
          a.Ed();
          if (b.Ie("pictureRatioOptimization") && !b.pj && w !== void 0 && p2 !== null && p2.ratio !== 1) {
            a.save();
            b = p2.ratio;
            try {
              a.drawImage(p2.source, e / b, f2 / b, Math.min(p2.source.width, h / b), Math.min(p2.source.height, g2 / b), k, l2, Math.min(d.width, m2), Math.min(d.height, n2));
            } catch (z2) {
              this.br = false;
            }
            a.restore();
          } else
            try {
              a.drawImage(c, e, f2, h, g2, k, l2, Math.min(d.width, m2), Math.min(d.height, n2));
            } catch (z2) {
              this.br = false;
            }
          switch (this.flip) {
            case Uk:
              a.scale(-1, 1);
              a.translate(-Math.min(d.width, m2), 0);
              break;
            case Tk:
              a.scale(1, -1);
              a.translate(0, -Math.min(d.height, n2));
              break;
            case Vk:
              a.scale(-1, -1), a.translate(-Math.min(d.width, m2), -Math.min(d.height, n2));
          }
        }
      }
    }
  };
  Rj2.prototype.im = function(a, b, c, d) {
    var e = this.desiredSize, f2 = cl(this, true), g2 = this.Mg, h = this.Rn;
    if (h || !this.ml && g2 && g2.complete)
      this.ml = true;
    g2 === null && (isFinite(e.width) || (a = 0), isFinite(e.height) || (b = 0));
    isFinite(e.width) || f2 === qd2 || f2 === Qk ? (isFinite(a) || (a = this.sourceRect.u() ? this.sourceRect.width : h ? +g2.width : g2.naturalWidth), c = 0) : g2 !== null && this.ml !== false && (a = this.sourceRect.u() ? this.sourceRect.width : h ? +g2.width : g2.naturalWidth);
    isFinite(e.height) || f2 === qd2 || f2 === Rk ? (isFinite(b) || (b = this.sourceRect.u() ? this.sourceRect.height : h ? +g2.height : g2.naturalHeight), d = 0) : g2 !== null && this.ml !== false && (b = this.sourceRect.u() ? this.sourceRect.height : h ? +g2.height : g2.naturalHeight);
    isFinite(e.width) && (a = e.width);
    isFinite(e.height) && (b = e.height);
    e = this.maxSize;
    f2 = this.minSize;
    c = Math.max(c, f2.width);
    d = Math.max(d, f2.height);
    a = Math.min(e.width, a);
    b = Math.min(e.height, b);
    a = Math.max(c, a);
    b = Math.max(d, b);
    g2 === null || g2.complete || (isFinite(a) || (a = 0), isFinite(b) || (b = 0));
    Rb2(this.wc, a, b);
    this.xe(0, 0, a, b);
  };
  Rj2.prototype.zh = function(a, b, c, d) {
    el(this, a, b, c, d);
  };
  na2.Object.defineProperties(Rj2.prototype, { element: { get: function() {
    return this.Mg;
  }, set: function(a) {
    var b = this.Mg;
    if (b !== a) {
      this.Rn = a instanceof HTMLCanvasElement;
      var c = a instanceof HTMLImageElement;
      b instanceof HTMLImageElement && Tj2(b);
      a === null || c || a instanceof HTMLVideoElement || this.Rn || C2("Picture.element must be an instance of Image, Canvas, or Video, not: " + a);
      var d = this.diagram;
      d !== null && Sj2(d, this);
      this.Mg = a;
      a !== null && c && a.Ig === void 0 && (a.Ig = new G2());
      d !== null && c && Qj2(d, this);
      a !== null && (this.Rn || a.complete === true ? (a.Fn && (a.Mn instanceof Event && this.md !== null ? this.md(this, a.Mn) : a.mr === true && !a.Mn && this.oh !== null && a.lu && this.oh(this, a.lu)), a.mr = true, this.desiredSize.u() || (dj2(this, false), this.s())) : c && go2(this, a));
      this.g("element", b, a);
      this.N();
    }
  } }, source: { get: function() {
    return this.sp;
  }, set: function(a) {
    var b = this.sp;
    if (b !== a) {
      this.sp = a;
      var c = eo;
      if (Kg2) {
        var d = null;
        if (c[a] !== void 0)
          d = c[a];
        else if (a !== "") {
          30 < fo && (Di2(), c = eo);
          d = va("img");
          d.Fn = true;
          go2(this, d);
          var e = this.Hl;
          e !== null && (d.crossOrigin = e(this));
          d.src = a;
          c[a] = d;
          fo++;
        }
        this.element = d;
        d !== null && d.__goCache === void 0 && (d.__goCache = new jo());
        this.s();
        this.N();
      }
      this.g("source", b, a);
    }
  } }, sourceCrossOrigin: { get: function() {
    return this.Hl;
  }, set: function(a) {
    if (this.Hl !== a && (this.Hl = a, this.element !== null)) {
      var b = this.element.getAttribute("src");
      a === null && typeof b === "string" ? this.element.crossOrigin = null : a !== null && (this.element.crossOrigin = a(this));
      this.element.src = b;
    }
  } }, sourceRect: {
    get: function() {
      return this.lh;
    },
    set: function(a) {
      var b = this.lh;
      b.A(a) || (this.lh = a = a.I(), this.N(), this.g("sourceRect", b, a));
    }
  }, imageStretch: { get: function() {
    return this.Xk;
  }, set: function(a) {
    var b = this.Xk;
    b !== a && (this.Xk = a, this.N(), this.g("imageStretch", b, a));
  } }, flip: { get: function() {
    return this.Vd;
  }, set: function(a) {
    var b = this.Vd;
    b !== a && (this.Vd = a, this.N(), this.g("flip", b, a));
  } }, imageAlignment: {
    get: function() {
      return this.Wk;
    },
    set: function(a) {
      var b = this.Wk;
      b.A(a) || (this.Wk = a = a.I(), this.N(), this.g("imageAlignment", b, a));
    }
  }, errorFunction: { get: function() {
    return this.md;
  }, set: function(a) {
    var b = this.md;
    b !== a && (this.md = a, this.g("errorFunction", b, a));
  } }, successFunction: { get: function() {
    return this.oh;
  }, set: function(a) {
    var b = this.oh;
    b !== a && (this.oh = a, this.g("successFunction", b, a));
  } }, naturalBounds: { get: function() {
    return this.wc;
  } } });
  Rj2.prototype.redraw = Rj2.prototype.redraw;
  Rj2.prototype.reloadSource = Rj2.prototype.DA;
  var eo = null, fo = 0, ho = 4;
  Rj2.className = "Picture";
  eo = new Ya2();
  Rj2.clearCache = Di2;
  function jo() {
    this.Ci = null;
  }
  function io(a, b, c, d, e) {
    a.Ci === null && (a.Ci = []);
    var f2 = new vk2(null), g2 = f2.context, h = 1 / b;
    f2.width = c / b;
    f2.height = d / b;
    f2.width !== 0 && f2.height !== 0 && (b = new ko(f2.La, b), c = 1, 0 < a.Ci.length && (c = a.Ci[a.Ci.length - 1], e = c.source, c = c.ratio), g2.setTransform(h * c, 0, 0, h * c, 0, 0), g2.Ed(), g2.drawImage(e, 0, 0), a.Ci.push(b));
  }
  jo.className = "PictureCacheArray";
  function ko(a, b) {
    this.source = a;
    this.ratio = b;
  }
  ko.className = "PictureCacheInstance";
  function lo() {
    this.ts = new P2();
    this.kc = null;
  }
  lo.prototype.reset = function(a) {
    a !== null ? (a.ea(), this.ts = a, a.figures.clear()) : this.ts = new P2();
    this.kc = null;
  };
  function xd2(a, b, c, d, e) {
    a.kc = new $d2();
    a.kc.startX = b;
    a.kc.startY = c;
    a.kc.isFilled = d;
    a.ts.figures.add(a.kc);
    e !== void 0 && (a.kc.isShadowed = e);
  }
  function Bd2(a) {
    var b = a.kc.segments.length;
    0 < b && a.kc.segments.J(b - 1).close();
  }
  lo.prototype.Bm = function(a) {
    this.kc.isShadowed = a;
  };
  lo.prototype.moveTo = function(a, b, c) {
    c === void 0 && (c = false);
    var d = new ae2(Pd2);
    d.endX = a;
    d.endY = b;
    c && d.close();
    this.kc.segments.add(d);
  };
  lo.prototype.lineTo = function(a, b, c) {
    c === void 0 && (c = false);
    var d = new ae2(sd2);
    d.endX = a;
    d.endY = b;
    c && d.close();
    this.kc.segments.add(d);
  };
  function yd2(a, b, c, d, e, f2, g2) {
    var h;
    h === void 0 && (h = false);
    var k = new ae2(Qd2);
    k.point1X = b;
    k.point1Y = c;
    k.point2X = d;
    k.point2Y = e;
    k.endX = f2;
    k.endY = g2;
    h && k.close();
    a.kc.segments.add(k);
  }
  function zd2(a, b, c, d, e) {
    var f2;
    f2 === void 0 && (f2 = false);
    var g2 = new ae2(Rd2);
    g2.point1X = b;
    g2.point1Y = c;
    g2.endX = d;
    g2.endY = e;
    f2 && g2.close();
    a.kc.segments.add(g2);
  }
  lo.prototype.arcTo = function(a, b, c, d, e, f2, g2) {
    f2 === void 0 && (f2 = 0);
    g2 === void 0 && (g2 = false);
    var h = new ae2(Sd2);
    h.startAngle = a;
    h.sweepAngle = b;
    h.centerX = c;
    h.centerY = d;
    h.radiusX = e;
    h.radiusY = f2 !== 0 ? f2 : e;
    g2 && h.close();
    this.kc.segments.add(h);
  };
  function Ad2(a, b, c, d, e, f2, g2, h) {
    var k;
    k === void 0 && (k = false);
    b = new ae2(Td2, g2, h, b, c, d, e, f2);
    k && b.close();
    a.kc.segments.add(b);
  }
  function td2(a) {
    var b = Cd2;
    if (b !== null)
      return Cd2 = null, b.reset(a), b;
    b = new lo();
    b.reset(a);
    return b;
  }
  var Cd2 = null;
  lo.className = "StreamGeometryContext";
  function mo(a, b) {
    var c = a.toLowerCase(), d = M2.Qe;
    d[a] = b;
    d[c] = a;
  }
  mo("Rectangle", function(a, b, c) {
    a = "r" + b + "," + c;
    var d = M2.Jf[a];
    if (d !== void 0)
      return d;
    d = new P2(P2.C);
    d.endX = b;
    d.endY = c;
    M2.Kf < M2.Jm && (M2.Jf[a] = d, M2.Kf++);
    return d;
  });
  mo("Square", function(a, b, c) {
    a = "s" + b + "," + c;
    var d = M2.Jf[a];
    if (d !== void 0)
      return d;
    d = new P2(P2.C);
    d.endX = b;
    d.endY = c;
    d.defaultStretch = rg2;
    M2.Kf < M2.Jm && (M2.Jf[a] = d, M2.Kf++);
    return d;
  });
  mo("RoundedRectangle", function(a, b, c) {
    a = a ? a.parameter1 : NaN;
    if (isNaN(a) || 0 > a)
      a = 5;
    a = Math.min(a, b / 3);
    a = Math.min(a, c / 3);
    var d = "rr" + b + "," + c + "," + a, e = M2.Jf[d];
    if (e !== void 0)
      return e;
    var f2 = a * M2.wg;
    e = new P2().add(new $d2(a, 0, true).add(new ae2(sd2, b - a, 0)).add(new ae2(Qd2, b, a, b - f2, 0, b, f2)).add(new ae2(sd2, b, c - a)).add(new ae2(Qd2, b - a, c, b, c - f2, b - f2, c)).add(new ae2(sd2, a, c)).add(new ae2(Qd2, 0, c - a, f2, c, 0, c - f2)).add(new ae2(sd2, 0, a)).add(new ae2(Qd2, a, 0, 0, f2, f2, 0).close()));
    1 < f2 && (e.spot1 = new O2(0, 0, f2, f2), e.spot2 = new O2(1, 1, -f2, -f2));
    M2.Kf < M2.Jm && (M2.Jf[d] = e, M2.Kf++);
    return e;
  });
  mo("Border", "RoundedRectangle");
  mo("Ellipse", function(a, b, c) {
    a = "e" + b + "," + c;
    var d = M2.Jf[a];
    if (d !== void 0)
      return d;
    d = new P2(P2.L);
    d.endX = b;
    d.endY = c;
    d.spot1 = ed2;
    d.spot2 = fd2;
    M2.Kf < M2.Jm && (M2.Jf[a] = d, M2.Kf++);
    return d;
  });
  mo("Circle", function(a, b, c) {
    a = "c" + b + "," + c;
    var d = M2.Jf[a];
    if (d !== void 0)
      return d;
    d = new P2(P2.L);
    d.endX = b;
    d.endY = c;
    d.spot1 = ed2;
    d.spot2 = fd2;
    d.defaultStretch = rg2;
    M2.Kf < M2.Jm && (M2.Jf[a] = d, M2.Kf++);
    return d;
  });
  mo("TriangleRight", function(a, b, c) {
    return new P2().add(new $d2(0, 0).add(new ae2(sd2, b, 0.5 * c)).add(new ae2(sd2, 0, c).close())).Cm(0, 0.25, 0.5, 0.75);
  });
  mo("TriangleDown", function(a, b, c) {
    return new P2().add(new $d2(0, 0).add(new ae2(sd2, b, 0)).add(new ae2(sd2, 0.5 * b, c).close())).Cm(0.25, 0, 0.75, 0.5);
  });
  mo("TriangleLeft", function(a, b, c) {
    return new P2().add(new $d2(b, c).add(new ae2(sd2, 0, 0.5 * c)).add(new ae2(sd2, b, 0).close())).Cm(0.5, 0.25, 1, 0.75);
  });
  mo("TriangleUp", function(a, b, c) {
    return new P2().add(new $d2(b, c).add(new ae2(sd2, 0, c)).add(new ae2(sd2, 0.5 * b, 0).close())).Cm(0.25, 0.5, 0.75, 1);
  });
  mo("Triangle", "TriangleUp");
  mo("Diamond", function(a, b, c) {
    return new P2().add(new $d2(0.5 * b, 0).add(new ae2(sd2, 0, 0.5 * c)).add(new ae2(sd2, 0.5 * b, c)).add(new ae2(sd2, b, 0.5 * c).close())).Cm(0.25, 0.25, 0.75, 0.75);
  });
  mo("LineH", function(a, b, c) {
    a = new P2(P2.j);
    a.startX = 0;
    a.startY = c / 2;
    a.endX = b;
    a.endY = c / 2;
    return a;
  });
  mo("LineV", function(a, b, c) {
    a = new P2(P2.j);
    a.startX = b / 2;
    a.startY = 0;
    a.endX = b / 2;
    a.endY = c;
    return a;
  });
  mo("None", "Rectangle");
  mo("BarH", "Rectangle");
  mo("BarV", "Rectangle");
  mo("MinusLine", "LineH");
  mo("PlusLine", function(a, b, c) {
    return new P2().add(new $d2(0, c / 2, false).add(new ae2(sd2, b, c / 2)).add(new ae2(Pd2, b / 2, 0)).add(new ae2(sd2, b / 2, c)));
  });
  mo("XLine", function(a, b, c) {
    return new P2().add(new $d2(0, c, false).add(new ae2(sd2, b, 0)).add(new ae2(Pd2, 0, 0)).add(new ae2(sd2, b, c)));
  });
  M2.Im = {
    "": "",
    Standard: "F1 m 0,0 l 8,4 -8,4 2,-4 z",
    Backward: "F1 m 8,0 l -2,4 2,4 -8,-4 z",
    Triangle: "F1 m 0,0 l 8,4.62 -8,4.62 z",
    BackwardTriangle: "F1 m 8,4 l 0,4 -8,-4 8,-4 0,4 z",
    Boomerang: "F1 m 0,0 l 8,4 -8,4 4,-4 -4,-4 z",
    BackwardBoomerang: "F1 m 8,0 l -8,4 8,4 -4,-4 4,-4 z",
    SidewaysV: "m 0,0 l 8,4 -8,4 0,-1 6,-3 -6,-3 0,-1 z",
    BackwardV: "m 8,0 l -8,4 8,4 0,-1 -6,-3 6,-3 0,-1 z",
    OpenTriangle: "m 0,0 l 8,4 -8,4",
    BackwardOpenTriangle: "m 8,0 l -8,4 8,4",
    OpenTriangleLine: "m 0,0 l 8,4 -8,4 m 8.5,0 l 0,-8",
    BackwardOpenTriangleLine: "m 8,0 l  -8,4 8,4 m -8.5,0 l 0,-8",
    OpenTriangleTop: "m 0,0 l 8,4 m 0,4",
    BackwardOpenTriangleTop: "m 8,0 l -8,4 m 0,4",
    OpenTriangleBottom: "m 0,8 l 8,-4",
    BackwardOpenTriangleBottom: "m 0,4 l 8,4",
    HalfTriangleTop: "F1 m 0,0 l 0,4 8,0 z m 0,8",
    BackwardHalfTriangleTop: "F1 m 8,0 l 0,4 -8,0 z m 0,8",
    HalfTriangleBottom: "F1 m 0,4 l 0,4 8,-4 z",
    BackwardHalfTriangleBottom: "F1 m 8,4 l 0,4 -8,-4 z",
    ForwardSemiCircle: "m 4,0 b 270 180 0 4 4",
    BackwardSemiCircle: "m 4,8 b 90 180 0 -4 4",
    Feather: "m 0,0 l 3,4 -3,4",
    BackwardFeather: "m 3,0 l -3,4 3,4",
    DoubleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
    BackwardDoubleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4",
    TripleFeathers: "m 0,0 l 3,4 -3,4 m 3,-8 l 3,4 -3,4 m 3,-8 l 3,4 -3,4",
    BackwardTripleFeathers: "m 3,0 l -3,4 3,4 m 3,-8 l -3,4 3,4 m 3,-8 l -3,4 3,4",
    ForwardSlash: "m 0,8 l 5,-8",
    BackSlash: "m 0,0 l 5,8",
    DoubleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8",
    DoubleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8",
    TripleForwardSlash: "m 0,8 l 4,-8 m -2,8 l 4,-8 m -2,8 l 4,-8",
    TripleBackSlash: "m 0,0 l 4,8 m -2,-8 l 4,8 m -2,-8 l 4,8",
    Fork: "m 0,4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
    BackwardFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4",
    LineFork: "m 0,0 l 0,8 m 0,-4 l 8,0 m -8,0 l 8,-4 m -8,4 l 8,4",
    BackwardLineFork: "m 8,4 l -8,0 m 8,0 l -8,-4 m 8,4 l -8,4 m 8,-8 l 0,8",
    CircleFork: "F1 m 6,4 b 0 360 -3 0 3 z m 0,0 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
    BackwardCircleFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 6,0 b 0 360 -3 0 3",
    CircleLineFork: "F1 m 6,4 b 0 360 -3 0 3 z m 1,-4 l 0,8 m 0,-4 l 6,0 m -6,0 l 6,-4 m -6,4 l 6,4",
    BackwardCircleLineFork: "F1 m 0,4 l 6,0 m -6,-4 l 6,4 m -6,4 l 6,-4 m 0,-4 l 0,8 m 7,-4 b 0 360 -3 0 3",
    Circle: "F1 m 8,4 b 0 360 -4 0 4 z",
    Block: "F1 m 0,0 l 0,8 8,0 0,-8 z",
    StretchedDiamond: "F1 m 0,3 l 5,-3 5,3 -5,3 -5,-3 z",
    Diamond: "F1 m 0,4 l 4,-4 4,4 -4,4 -4,-4 z",
    Chevron: "F1 m 0,0 l 5,0 3,4 -3,4 -5,0 3,-4 -3,-4 z",
    StretchedChevron: "F1 m 0,0 l 8,0 3,4 -3,4 -8,0 3,-4 -3,-4 z",
    NormalArrow: "F1 m 0,2 l 4,0 0,-2 4,4 -4,4 0,-2 -4,0 z",
    X: "m 0,0 l 8,8 m 0,-8 l -8,8",
    TailedNormalArrow: "F1 m 0,0 l 2,0 1,2 3,0 0,-2 2,4 -2,4 0,-2 -3,0 -1,2 -2,0 1,-4 -1,-4 z",
    DoubleTriangle: "F1 m 0,0 l 4,4 -4,4 0,-8 z  m 4,0 l 4,4 -4,4 0,-8 z",
    BigEndArrow: "F1 m 0,0 l 5,2 0,-2 3,4 -3,4 0,-2 -5,2 0,-8 z",
    ConcaveTailArrow: "F1 m 0,2 h 4 v -2 l 4,4 -4,4 v -2 h -4 l 2,-2 -2,-2 z",
    RoundedTriangle: "F1 m 0,1 a 1,1 0 0 1 1,-1 l 7,3 a 0.5,1 0 0 1 0,2 l -7,3 a 1,1 0 0 1 -1,-1 l 0,-6 z",
    SimpleArrow: "F1 m 1,2 l -1,-2 2,0 1,2 -1,2 -2,0 1,-2 5,0 0,-2 2,2 -2,2 0,-2 z",
    AccelerationArrow: "F1 m 0,0 l 0,8 0.2,0 0,-8 -0.2,0 z m 2,0 l 0,8 1,0 0,-8 -1,0 z m 3,0 l 2,0 2,4 -2,4 -2,0 0,-8 z",
    BoxArrow: "F1 m 0,0 l 4,0 0,2 2,0 0,-2 2,4 -2,4 0,-2 -2,0 0,2 -4,0 0,-8 z",
    TriangleLine: "F1 m 8,4 l -8,-4 0,8 8,-4 z m 0.5,4 l 0,-8",
    CircleEndedArrow: "F1 m 10,4 l -2,-3 0,2 -2,0 0,2 2,0 0,2 2,-3 z m -4,0 b 0 360 -3 0 3 z",
    DynamicWidthArrow: "F1 m 0,3 l 2,0 2,-1 2,-2 2,4 -2,4 -2,-2 -2,-1 -2,0 0,-2 z",
    EquilibriumArrow: "m 0,3 l 8,0 -3,-3 m 3,5 l -8,0 3,3",
    FastForward: "F1 m 0,0 l 3.5,4 0,-4 3.5,4 0,-4 1,0 0,8 -1,0 0,-4 -3.5,4 0,-4 -3.5,4 0,-8 z",
    Kite: "F1 m 0,4 l 2,-4 6,4 -6,4 -2,-4 z",
    HalfArrowTop: "F1 m 0,0 l 4,4 4,0 -8,-4 z m 0,8",
    HalfArrowBottom: "F1 m 0,8 l 4,-4 4,0 -8,4 z",
    OpposingDirectionDoubleArrow: "F1 m 0,4 l 2,-4 0,2 4,0 0,-2 2,4 -2,4 0,-2 -4,0 0,2 -2,-4 z",
    PartialDoubleTriangle: "F1 m 0,0 4,3 0,-3 4,4 -4,4 0,-3 -4,3 0,-8 z",
    LineCircle: "F1 m 0,0 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
    DoubleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
    TripleLineCircle: "F1 m 0,0 l 0,8 m 2,-8 l 0,8 m 2,-8 l 0,8 m 7 -4 b 0 360 -3 0 3 z",
    CircleLine: "F1 m 6 4 b 0 360 -3 0 3 z m 1,-4 l 0,8",
    DiamondCircle: "F1 m 8,4 l -4,4 -4,-4 4,-4 4,4 m 8,0 b 0 360 -4 0 4 z",
    PlusCircle: "F1 m 8,4 b 0 360 -4 0 4 l -8 0 z m -4 -4 l 0 8",
    OpenRightTriangleTop: "m 8,0 l 0,4 -8,0 m 0,4",
    OpenRightTriangleBottom: "m 8,8 l 0,-4 -8,0",
    Line: "m 0,0 l 0,8",
    DoubleLine: "m 0,0 l 0,8 m 2,0 l 0,-8",
    TripleLine: "m 0,0 l 0,8 m 2,0 l 0,-8 m 2,0 l 0,8",
    PentagonArrow: "F1 m 8,4 l -4,-4 -4,0 0,8 4,0 4,-4 z"
  };
  function V2(a, b) {
    a === void 0 || a instanceof Fl || typeof a === "string" ? X2.call(this, a) : (X2.call(this), a && (b = a));
    this.F = 2408959;
    this.Ug = this.Nf = "";
    this.Yo = this.Uo = this.ip = this.eo = null;
    this.kp = "";
    this.Lf = this.Pn = this.jp = this.jh = null;
    this.Wo = "";
    this.Vo = Nb2;
    this.Xb = this.Zo = "";
    this.fi = this.$m = this.Rh = null;
    this.Wf = new K2(NaN, NaN).freeze();
    this.lo = "";
    this.cf = null;
    this.mo = uc2;
    this.$o = Uc2;
    this.uo = Ab2;
    this.no = Db2;
    this.qn = null;
    this.fo = 127;
    this.pp = Eb2;
    this.op = "gray";
    this.hg = 4;
    this.Ww = -1;
    this.Lp = NaN;
    this.Oy = new N2();
    this.li = null;
    this.Xf = NaN;
    b && Object.assign(this, b);
  }
  ma2(V2, X2);
  V2.prototype.cloneProtected = function(a) {
    X2.prototype.cloneProtected.call(this, a);
    a.F = this.F & -4097 | 49152;
    a.Nf = this.Nf;
    a.Ug = this.Ug;
    a.eo = this.eo;
    a.ip = this.ip;
    a.Uo = this.Uo;
    a.Yo = this.Yo;
    a.kp = this.kp;
    a.jp = this.jp;
    a.Pn = this.Pn;
    a.Lf = null;
    a.Wo = this.Wo;
    a.Vo = this.Vo.I();
    a.Zo = this.Zo;
    a.$o = this.$o.I();
    a.Xb = this.Xb;
    a.$m = this.$m;
    a.Wf.assign(this.Wf);
    a.lo = this.lo;
    a.mo = this.mo.I();
    a.uo = this.uo.I();
    a.no = this.no.I();
    a.qn = this.qn;
    a.fo = this.fo;
    a.pp = this.pp.I();
    a.op = this.op;
    a.hg = this.hg;
    a.Lp = this.Lp;
  };
  V2.prototype.wf = function(a) {
    X2.prototype.wf.call(this, a);
    a.Gh();
    a.jh = null;
    a.cf = null;
    a.li = null;
  };
  V2.prototype.toString = function() {
    var a = Ja2(this.constructor) + "#" + ib2(this);
    this.data !== null && (a += "(" + Ka2(this.data) + ")");
    return a;
  };
  V2.prototype.qk = function(a, b, c, d, e, f2, g2) {
    var h = this.diagram;
    h !== null && (a === pe2 && b === "elements" ? e instanceof X2 ? vj2(e, function(a2) {
      xj2(h.partManager, a2);
      wj2(h, a2);
    }) : Qj2(h, e) : a === qe2 && b === "elements" && (e instanceof X2 ? vj2(e, function(a2) {
      Aj2(h.partManager, a2, h);
    }) : Sj2(h, e)), h.Wa(a, b, c, d, e, f2, g2));
  };
  V2.prototype.Fa = function(a) {
    X2.prototype.Fa.call(this, a);
    if (this.data !== null) {
      for (var b = this.T.m, c = b.length, d = 0; d < c; d++) {
        var e = b[d];
        e instanceof X2 && vj2(e, function(a2) {
          a2.data !== null && a2.Fa();
        });
      }
      for (b = this.adornments; b.next(); )
        b.value.Fa(a);
    }
  };
  V2.prototype.updateRelationshipsFromData = function() {
    this.data !== null && this.diagram.partManager.updateRelationshipsFromData(this);
  };
  V2.prototype.Yj = function(a) {
    var b = this.Lf;
    return b === null ? null : b.H(a);
  };
  V2.prototype.xh = function(a, b) {
    if (b !== null) {
      var c = null, d = this.Lf;
      d !== null && (c = d.H(a));
      if (c !== b) {
        if (c !== null) {
          var e = c.diagram;
          e !== null && e.remove(c);
        }
        d === null && (this.Lf = d = new H2());
        b.Nf !== a && (b.category = a);
        d.add(a, b);
        a = this.diagram;
        a !== null && (a.add(b), a = b.adornedObject, a !== null && (a = a.Ch(), a !== null && (b.data = a.data)));
      }
    }
  };
  V2.prototype.Gf = function(a) {
    var b = this.Lf;
    if (b !== null) {
      var c = b.H(a);
      if (c !== null) {
        var d = c.diagram;
        d !== null && d.remove(c);
      }
      b.remove(a);
      b.count === 0 && (this.Lf = null);
    }
  };
  V2.prototype.Qj = function() {
    var a = this.Lf;
    if (a !== null) {
      var b = Ea2();
      for (a = a.iterator; a.next(); )
        b.push(a.key);
      a = b.length;
      for (var c = 0; c < a; c++)
        this.Gf(b[c]);
      Ia2(b);
    }
  };
  V2.prototype.updateAdornments = function() {
    var a = this.diagram;
    if (a !== null) {
      for (var b = this.adornments; b.next(); ) {
        var c = b.value;
        c.s();
        c.placeholder && c.placeholder.s();
      }
      a: {
        if (this.isSelected && this.selectionAdorned && (b = this.selectionObject, b !== null && this.actualBounds.u() && this.isVisible() && b.Ff() && b.actualBounds.u())) {
          c = this.Yj("Selection");
          if (c === null) {
            c = this.selectionAdornmentTemplate;
            c === null && (c = this.Hh() ? a.linkSelectionAdornmentTemplate : this instanceof U2 ? a.groupSelectionAdornmentTemplate : a.nodeSelectionAdornmentTemplate);
            if (!(c instanceof ze))
              break a;
            og2(c);
            c = c.copy();
            c !== null && (this.Hh() && this.selectionObject === this.path && (c.type = X2.Link), c.adornedObject = b);
          }
          if (c !== null) {
            c.type === X2.Link && c.s();
            this.xh("Selection", c);
            break a;
          }
        }
        this.Gf("Selection");
      }
      no(this, a);
      for (b = this.adornments; b.next(); )
        b.value.Fa();
    }
  };
  V2.prototype.Mb = function() {
    var a = this.diagram;
    a !== null && (Mi2(a), (this.F & 16384) !== 0 !== true && (this.F |= 16384, a.Gb()));
  };
  function bi2(a) {
    (a.F & 16384) !== 0 !== false && (a.updateAdornments(), a.F &= -16385);
  }
  function no(a, b) {
    b.toolManager.mouseDownTools.each(function(b2) {
      b2.isEnabled && b2.updateAdornments(a);
    });
    b.toolManager.updateAdornments(a);
  }
  function oo(a) {
    if (kj2(a) === false) {
      po(a, true);
      a.dl();
      var b = a.diagram;
      b !== null && (b.te.add(a), b.Gb());
    }
  }
  function qo(a) {
    a.F |= 2097152;
    if (kj2(a) !== false) {
      var b = a.position, c = a.location;
      c.u() && b.u() || ro(a, b, c);
      c = a.xb;
      var d = N2.alloc().assign(c);
      c.ea();
      c.x = b.x;
      c.y = b.y;
      c.freeze();
      a.jm(d, c);
      N2.free(d);
      po(a, false);
    }
  }
  V2.prototype.xe = function(a, b, c, d) {
    var e = this.mc;
    e.h(a, b, c, d);
    this.Cb === null && (this.Cb = new od2());
    var f2 = this.Cb;
    f2.reset();
    this.np(f2, a, b, c, d);
    this.Cb = f2;
    f2.Cs() || f2.xq(e);
  };
  V2.prototype.np = function(a, b, c, d, e) {
    this.sa !== 1 && a.scale(this.sa);
    if (this.zb !== 0) {
      var f2 = yc2;
      this.locationSpot.hb() && (f2 = this.locationSpot);
      var g2 = K2.alloc();
      if (this.locationObject !== this)
        for (b = this.locationObject, c = b.naturalBounds, g2.Ui(c.x, c.y, c.width, c.height, f2), b.Cb !== null && b.Cb.Aa(g2), g2.offset(-b.measuredBounds.x, -b.measuredBounds.y), f2 = b.panel; f2 !== null && f2 !== this; )
          f2.Cb !== null && f2.Cb.Aa(g2), g2.offset(-f2.measuredBounds.x, -f2.measuredBounds.y), f2 = f2.panel;
      else
        g2.Ui(b, c, d, e, f2);
      a.rotate(this.zb, g2.x, g2.y);
      K2.free(g2);
    }
  };
  V2.prototype.move = function(a, b) {
    b === true ? this.location = a : this.position = a;
  };
  V2.prototype.moveTo = function(a, b, c) {
    a = K2.allocAt(a, b);
    this.move(a, c);
    K2.free(a);
  };
  V2.prototype.isVisible = function() {
    if (!this.visible)
      return false;
    var a = this.layer;
    if (a !== null) {
      if (!a.visible)
        return false;
      a = a.diagram;
      if (a !== null && a.animationManager.Ms(this))
        return true;
    }
    a = this.containingGroup;
    return a === null || a.isSubGraphExpanded && a.isVisible() ? true : false;
  };
  V2.prototype.Pb = function(a) {
    var b = this.diagram;
    a ? (this.B(4), this.Mb(), b !== null && b.te.add(this)) : (this.B(8), this.Qj());
    this.Gh();
    b !== null && (b.Qa(), b.N());
  };
  V2.prototype.Ya = function(a) {
    if (this.name === a)
      return this;
    var b = this.li;
    b === null && (this.li = b = new H2());
    if (b.H(a) !== null)
      return b.H(a);
    var c = X2.prototype.Ya.call(this, a);
    if (c !== null)
      return b.set(a, c), c;
    b.set(a, null);
    return null;
  };
  function so(a, b, c, d) {
    d === void 0 && (d = new K2());
    c = c.Bc() ? yc2 : c;
    var e = b.naturalBounds;
    d.h(e.width * c.x + c.offsetX, e.height * c.y + c.offsetY);
    if (b === null || b === a)
      return d;
    b.transform.Aa(d);
    for (b = b.panel; b !== null && b !== a; )
      b.transform.Aa(d), b = b.panel;
    a.Cb !== null && a.Cb.Aa(d);
    d.offset(-a.mc.x, -a.mc.y);
    return d;
  }
  V2.prototype.Li = function(a) {
    a === void 0 && (a = new N2());
    return a.assign(this.actualBounds);
  };
  V2.prototype.Ta = function() {
    ij2(this) === true && this.measure(Infinity, Infinity);
    this.arrange();
  };
  function tj2(a, b) {
    var c = a.Oy;
    isNaN(a.Xf) && (a.Xf = Xm(a));
    var d = a.Xf;
    var e = 2 * d;
    if (!a.isShadowed)
      return c.h(b.x - 1 - d, b.y - 1 - d, b.width + 2 + e, b.height + 2 + e), c;
    d = b.x;
    e = b.y;
    var f2 = b.width;
    b = b.height;
    var g2 = a.shadowBlur;
    a = a.shadowOffset;
    f2 += g2;
    b += g2;
    d -= g2 / 2;
    e -= g2 / 2;
    0 < a.x ? f2 += a.x : (d += a.x, f2 -= a.x);
    0 < a.y ? b += a.y : (e += a.y, b -= a.y);
    c.h(d - 1, e - 1, f2 + 2, b + 2);
    return c;
  }
  V2.prototype.arrange = function() {
    if (jj2(this) === false)
      qo(this);
    else {
      dl(this, false);
      var a = this.xb, b = N2.alloc();
      b.assign(a);
      var c = mg2(this);
      this.zh(0, 0, this.mc.width, this.mc.height);
      var d = this.position;
      ro(this, d, this.location);
      a.ea();
      a.x = d.x;
      a.y = d.y;
      a.freeze();
      this.jm(b, a);
      b.A(a) ? this.Md(c) : !this.Mc() || M2.w(b.width, a.width) && M2.w(b.height, a.height) || 0 <= this.Ww && this.B(16);
      N2.free(b);
      po(this, false);
    }
  };
  t2 = V2.prototype;
  t2.jm = function(a, b) {
    var c = this.diagram;
    if (c !== null) {
      var d = false;
      if (c.lj === false && a.u()) {
        var e = N2.alloc();
        e.assign(c.documentBounds);
        e.Vv(c.padding);
        a.x > e.x && a.y > e.y && a.right < e.right && a.bottom < e.bottom && b.x > e.x && b.y > e.y && b.right < e.right && b.bottom < e.bottom && (d = true);
        N2.free(e);
      }
      (this.F & 65536) !== 0 !== true && a.A(b) || yj2(this, d, c);
      c.N();
      !a.u() && !b.u() || Ub2(a, b) || (this instanceof W2 && !c.undoManager.isUndoingRedoing && this.rd(), this.Gh());
    }
  };
  t2.Rv = function(a, b, c) {
    if (this.Hh() || !a.u())
      return false;
    var d = this.diagram;
    d !== null && to(this, d, a, b, c);
    this.ja = a;
    this.F &= -2097153;
    var e = this.Wf;
    !e.u() || d !== null && !d.animationManager.isTicking && d.undoManager.isUndoingRedoing || (d = e.copy(), e.h(e.x + (a.x - b), e.y + (a.y - c)), this.g("location", d, e.copy()));
    kj2(this) === false && jj2(this) === false && (oo(this), qo(this));
    return true;
  };
  function to(a, b, c, d, e) {
    b === null || a instanceof ze || (b = b.animationManager, b.tb && Eh2(b, a, new K2(d, e), c));
  }
  t2.ym = function(a, b, c) {
    var d = this.Wf, e = this.ja;
    if (c) {
      if (d.x === a && d.y === b)
        return;
      kj2(this) || jj2(this) ? e.h(NaN, NaN) : e.h(e.x + a - d.x, e.y + b - d.y);
      d.h(a, b);
    } else {
      if (e.x === a && e.y === b)
        return;
      kj2(this) || jj2(this) ? this.Vs() : d.h(d.x + a - e.x, d.y + b - e.y);
      e.h(a, b);
    }
    oo(this);
  };
  t2.Vs = function() {
    this.F &= -2097153;
    oo(this);
  };
  function ro(a, b, c) {
    var d = K2.alloc(), e = a.locationObject, f2 = e.naturalBounds, g2 = e instanceof xf2 ? e.strokeWidth : 0;
    d.Ui(0, 0, f2.width + g2, f2.height + g2, a.locationSpot);
    if (e !== a)
      for (d.offset(-g2 / 2, -g2 / 2), e.transform.Aa(d), e = e.panel; e !== null && e !== a; )
        e.transform.Aa(d), e = e.panel;
    a.Cb !== null && a.Cb.Aa(d);
    d.offset(-a.mc.x, -a.mc.y);
    e = a.diagram;
    f2 = c.u();
    g2 = b.u();
    f2 && g2 ? (a.F & 2097152) !== 0 ? uo(a, b, c, e, d) : vo(a, b, c, e, d) : f2 ? uo(a, b, c, e, d) : g2 && vo(a, b, c, e, d);
    a.F |= 2097152;
    K2.free(d);
    a.dl();
  }
  function uo(a, b, c, d, e) {
    var f2 = b.x, g2 = b.y;
    b.h(c.x - e.x, c.y - e.y);
    d !== null && (c = d.animationManager, (d = c.defaultAnimation.isAnimating) || !c.tb || a instanceof ze || Eh2(c, a, new K2(f2, g2), b), d || b.x === f2 && b.y === g2 || a.g("position", new K2(f2, g2), b.copy()));
  }
  function vo(a, b, c, d, e) {
    var f2 = c.copy();
    c.h(b.x + e.x, b.y + e.y);
    c.A(f2) || d === null || a.g("location", f2, c.copy());
  }
  function yj2(a, b, c) {
    fl(a, false);
    a instanceof W2 && qk2(c, a);
    a.layer.isTemporary || b || c.Qa();
    b = a.xb;
    var d = c.viewportBounds;
    d.u() ? mg2(a) ? ($b2(b, d) || a.Md(false), a.updateAdornments()) : b.Lc(d) ? (a.Md(true), a.updateAdornments()) : a.Mb() : c.nj = true;
  }
  t2.Ri = function() {
    return true;
  };
  t2.Mc = function() {
    return true;
  };
  t2.Hh = function() {
    return false;
  };
  t2.Qi = function() {
    return true;
  };
  function wo(a, b, c, d) {
    b.constructor === a.constructor || xo || (xo = true, ya2('Should not change the class of the Part when changing category from "' + c + '" to "' + d + '"'), ya2("  Old class: " + Ja2(a.constructor) + ", new class: " + Ja2(b.constructor) + ", part: " + a.toString()));
    a.Qj();
    var e = a.data;
    c = a.layerName;
    var f2 = a.isSelected, g2 = a.isHighlighted, h = true, k = true, l2 = false;
    a instanceof W2 && (h = a.isTreeLeaf, k = a.isTreeExpanded, l2 = a.wasTreeExpanded);
    b.wf(a);
    b.cloneProtected(a);
    a.Nf = d;
    a.s();
    a.N();
    b = a.diagram;
    d = true;
    b !== null && (d = b.skipsUndoManager, b.skipsUndoManager = true);
    a.jb = e;
    a.F = f2 ? a.F | 4096 : a.F & -4097;
    a.F = g2 ? a.F | 524288 : a.F & -524289;
    a instanceof W2 && (a.R = h ? a.R | 4 : a.R & -5, a.R = k ? a.R | 1 : a.R & -2, a.R = l2 ? a.R | 2 : a.R & -3);
    e !== null && a.Fa();
    e = a.layerName;
    e !== c && (a.Ug = c, a.layerName = e);
    b !== null && (b.skipsUndoManager = d);
    a.Mc() && a.B(64);
  }
  V2.prototype.canCopy = function() {
    if (!this.copyable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowCopy)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowCopy ? true : false;
  };
  V2.prototype.canDelete = function() {
    if (!this.deletable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowDelete)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowDelete ? true : false;
  };
  V2.prototype.canEdit = function() {
    if (!this.textEditable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowTextEdit)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowTextEdit ? true : false;
  };
  V2.prototype.canGroup = function() {
    if (!this.groupable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowGroup)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowGroup ? true : false;
  };
  V2.prototype.canMove = function() {
    if (!this.movable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowMove)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowMove ? true : false;
  };
  V2.prototype.canReshape = function() {
    if (!this.reshapable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowReshape)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowReshape ? true : false;
  };
  V2.prototype.canResize = function() {
    if (!this.resizable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowResize)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowResize ? true : false;
  };
  V2.prototype.canRotate = function() {
    if (!this.rotatable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowRotate)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowRotate ? true : false;
  };
  V2.prototype.canSelect = function() {
    if (!this.selectable)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowSelect)
      return false;
    a = a.diagram;
    return a === null ? true : a.allowSelect ? true : false;
  };
  function kj2(a) {
    return (a.F & 32768) !== 0;
  }
  function po(a, b) {
    a.F = b ? a.F | 32768 : a.F & -32769;
  }
  function fl(a, b) {
    a.F = b ? a.F | 65536 : a.F & -65537;
  }
  function mg2(a) {
    return (a.F & 131072) !== 0;
  }
  t2 = V2.prototype;
  t2.Md = function(a) {
    this.F = a ? this.F | 131072 : this.F & -131073;
  };
  function yo(a, b) {
    a.F = b ? a.F | 1048576 : a.F & -1048577;
  }
  t2.Gh = function() {
    var a = this.containingGroup;
    a !== null && (a.s(), a.placeholder !== null && a.placeholder.s(), a.rd());
  };
  t2.N = function() {
    var a = this.diagram;
    a !== null && !jj2(this) && !kj2(this) && this.isVisible() && this.xb.u() && a.N(tj2(this, this.xb));
  };
  t2.s = function() {
    X2.prototype.s.call(this);
    var a = this.diagram;
    a !== null && (a.te.add(this), this instanceof W2 && this.labeledLink !== null && ul(this.labeledLink), a.Gb(true));
  };
  t2.cq = function(a) {
    a || (a = this.Rh, a !== null && zo(a, this));
  };
  t2.eq = function(a) {
    a || (a = this.Rh, a !== null && Ao(a, this));
  };
  t2.Wj = function() {
    var a = this.data;
    if (a !== null) {
      var b = this.diagram;
      b !== null && (b = b.model, b !== null && b.om(a));
    }
  };
  t2.Nz = function() {
    return Bo(this, this);
  };
  function Bo(a, b) {
    var c = b.containingGroup;
    return c !== null ? 1 + Bo(a, c) : b instanceof W2 && (b = b.labeledLink, b !== null) ? Bo(a, b) : 0;
  }
  t2.Rz = function() {
    return Co(this, this);
  };
  function Co(a, b) {
    var c = b.containingGroup;
    return c !== null || b instanceof W2 && (c = b.labeledLink, c !== null) ? Co(a, c) : b;
  }
  t2.Jd = function(a) {
    return a instanceof U2 ? Do(this, this, a) : false;
  };
  function Do(a, b, c) {
    if (b === c || c === null)
      return false;
    var d = b.containingGroup;
    return d === null || d !== c && !Do(a, d, c) ? b instanceof W2 && (b = b.labeledLink, b !== null) ? Do(a, b, c) : false : true;
  }
  t2.Px = function(a) {
    if (a === null)
      return null;
    if (this === a)
      return this.containingGroup;
    for (var b = this; b !== null; ) {
      b instanceof U2 && yo(b, true);
      if (b instanceof W2) {
        var c = b.labeledLink;
        c !== null && (b = c);
      }
      b = b.containingGroup;
    }
    c = null;
    for (b = a; b !== null; ) {
      if ((b.F & 1048576) !== 0) {
        c = b;
        break;
      }
      b instanceof W2 && (a = b.labeledLink, a !== null && (b = a));
      b = b.containingGroup;
    }
    for (b = this; b !== null; )
      b instanceof U2 && yo(b, false), b instanceof W2 && (a = b.labeledLink, a !== null && (b = a)), b = b.containingGroup;
    return c;
  };
  V2.prototype.canLayout = function() {
    if (!this.isLayoutPositioned || !this.isVisible())
      return false;
    var a = this.layer;
    return a !== null && a.isTemporary || this instanceof W2 && this.isLinkLabel ? false : true;
  };
  V2.prototype.B = function(a) {
    a === void 0 && (a = 16777215);
    if (this.isLayoutPositioned && (a & this.layoutConditions) !== 0) {
      var b = this.layer;
      b !== null && b.isTemporary || this instanceof W2 && this.isLinkLabel ? b = false : (b = this.diagram, b = b !== null && b.undoManager.isUndoingRedoing ? false : true);
    } else
      b = false;
    if (b)
      if (b = this.Rh, b !== null) {
        var c = b.layout;
        c !== null ? c.B() : b.B(a);
      } else
        a = this.diagram, a !== null && (a = a.layout, a !== null && a.B());
  };
  function zj2(a) {
    if (!a.isVisible())
      return false;
    a = a.layer;
    return a !== null && a.isTemporary ? false : true;
  }
  function Mk(a, b, c, d, e, f2) {
    f2 === void 0 && (f2 = null);
    if (!(a.contains(b) || f2 !== null && !f2(b) || b instanceof ze)) {
      if (a.add(b), b instanceof W2) {
        if (c && b instanceof U2)
          for (var g2 = b.memberParts; g2.next(); )
            Mk(a, g2.value, c, d, e, f2);
        if (e !== false)
          for (g2 = b.linksConnected; g2.next(); ) {
            var h = g2.value;
            if (!a.contains(h)) {
              var k = h.fromNode, l2 = h.toNode;
              k = k === null || a.contains(k);
              l2 = l2 === null || a.contains(l2);
              (e ? k && l2 : k || l2) && Mk(a, h, c, d, e, f2);
            }
          }
        if (1 < d)
          for (b = b.Zu(); b.next(); )
            Mk(a, b.value, c, d - 1, e, f2);
      } else if (b instanceof T2)
        for (b = b.labelNodes; b.next(); )
          Mk(a, b.value, c, d, e, f2);
    }
  }
  na2.Object.defineProperties(V2.prototype, {
    key: { get: function() {
      var a = this.diagram;
      if (a !== null)
        return a.model.pa(this.data);
    } },
    adornments: { get: function() {
      return this.Lf === null ? ab2 : this.Lf.iteratorValues;
    } },
    layer: { get: function() {
      return this.fi;
    } },
    diagram: { get: function() {
      var a = this.fi;
      return a === null || a === void 0 ? null : a.diagram;
    } },
    layerName: { get: function() {
      return this.Ug;
    }, set: function(a) {
      var b = this.Ug;
      if (b !== a) {
        var c = this.diagram;
        if (c === null || c.Zj(a) !== null && !c.partManager.addsToTemporaryLayer) {
          if (this.Ug = a, c !== null && c.Qa(), this.g("layerName", b, a), b = this.layer, b !== null && b.name !== a && (c = b.diagram, c !== null && (a = c.Zj(a), a !== null && a !== b))) {
            var d = b.fc(-1, this, true);
            0 <= d && c.Wa(qe2, "parts", b, this, null, d, true);
            d = a.Ni(99999999, this, true);
            b.visible !== a.visible && this.Pb(a.visible);
            0 <= d && c.Wa(pe2, "parts", a, null, this, true, d);
            d = this.layerChanged;
            if (d !== null) {
              var e = c.Z;
              c.Z = true;
              d(this, b, a);
              c.Z = e;
            }
          }
        }
      }
    } },
    layerChanged: {
      get: function() {
        return this.eo;
      },
      set: function(a) {
        var b = this.eo;
        b !== a && (this.eo = a, this.g("layerChanged", b, a));
      }
    },
    zOrder: { get: function() {
      return this.Lp;
    }, set: function(a) {
      var b = this.Lp;
      if (b !== a) {
        this.Lp = a;
        var c = this.layer;
        c !== null && ei2(c, -1, this);
        this.g("zOrder", b, a);
        a = this.diagram;
        a !== null && a.N();
      }
    } },
    locationObject: { get: function() {
      if (this.cf === null) {
        var a = this.locationObjectName;
        a !== "" ? (a = this.Ya(a), a !== null ? this.cf = a : this.cf = this) : this instanceof ze ? this.type !== X2.Link && this.placeholder !== null ? this.cf = this.placeholder : this.cf = this : this.cf = this;
      }
      return this.cf.visible ? this.cf : this;
    } },
    minLocation: { get: function() {
      return this.uo;
    }, set: function(a) {
      var b = this.uo;
      b.A(a) || (this.uo = a = a.I(), this.g("minLocation", b, a));
    } },
    maxLocation: { get: function() {
      return this.no;
    }, set: function(a) {
      var b = this.no;
      b.A(a) || (this.no = a = a.I(), this.g("maxLocation", b, a));
    } },
    locationObjectName: {
      get: function() {
        return this.lo;
      },
      set: function(a) {
        var b = this.lo;
        b !== a && (this.lo = a, this.cf = null, this.s(), this.g("locationObjectName", b, a));
      }
    },
    locationSpot: { get: function() {
      return this.mo;
    }, set: function(a) {
      var b = this.mo;
      b.A(a) || (this.mo = a = a.I(), this.s(), this.g("locationSpot", b, a));
    } },
    location: { get: function() {
      return this.Wf;
    }, set: function(a) {
      var b = a.x, c = a.y, d = this.Wf;
      if (!(d.x === b || isNaN(d.x) && isNaN(b)) || !(d.y === c || isNaN(d.y) && isNaN(c))) {
        a = a.copy();
        b = a;
        if (this.Hh())
          b = false;
        else {
          this.Wf = b;
          this.F |= 2097152;
          if (jj2(this) === false && (oo(this), c = this.ja, c.u())) {
            var e = this.diagram;
            if (e === null || e.animationManager.isTicking || !e.undoManager.isUndoingRedoing) {
              var f2 = c.copy();
              c.h(c.x + (b.x - d.x), c.y + (b.y - d.y));
              to(this, e, c, f2.x, f2.y);
              this.g("position", f2, c.copy());
            }
          }
          b = true;
        }
        b && this.g("location", d, a.copy());
      }
    } },
    category: { get: function() {
      return this.Nf;
    }, set: function(a) {
      var b = this.Nf;
      if (b !== a) {
        var c = this.diagram, d = this.data, e = null;
        if (c !== null && d !== null && !(this instanceof ze)) {
          var f2 = c.model.undoManager;
          f2.isEnabled && !f2.isUndoingRedoing && (e = this.clone(), e.T.addAll(this.T));
        }
        this.Nf = a;
        this.g("category", b, a);
        c === null || d === null || this instanceof ze ? this instanceof ze && (e = this.adornedPart, e !== null && (a = e.Lf, a !== null && a.remove(b), e.xh(this.category, this))) : (f2 = c.model, f2.undoManager.isUndoingRedoing || (this.Hh() ? (c.partManager.setLinkCategoryForData(d, a), c = c.partManager.findLinkTemplateForCategory(a), c !== null && (og2(c), c = c.copy(), c !== null && wo(this, c, b, a))) : (f2 !== null && f2.vm(d, a), c = Eo(c.partManager, d, a), c !== null && (og2(c), c = c.copy(), c === null || c instanceof T2 || (d = this.location.copy(), wo(this, c, b, a), this.location.u() || (this.location = d)))), e !== null && (b = this.clone(), b.T.addAll(this.T), this.g("self", e, b))));
      }
    } },
    self: { get: function() {
      return this;
    }, set: function(a) {
      wo(this, a, this.category, a.category);
    } },
    copyable: { get: function() {
      return (this.F & 1) !== 0;
    }, set: function(a) {
      var b = (this.F & 1) !== 0;
      b !== a && (this.F ^= 1, this.g("copyable", b, a));
    } },
    deletable: { get: function() {
      return (this.F & 2) !== 0;
    }, set: function(a) {
      var b = (this.F & 2) !== 0;
      b !== a && (this.F ^= 2, this.g("deletable", b, a));
    } },
    textEditable: { get: function() {
      return (this.F & 4) !== 0;
    }, set: function(a) {
      var b = (this.F & 4) !== 0;
      b !== a && (this.F ^= 4, this.g("textEditable", b, a), this.Mb());
    } },
    groupable: { get: function() {
      return (this.F & 8) !== 0;
    }, set: function(a) {
      var b = (this.F & 8) !== 0;
      b !== a && (this.F ^= 8, this.g("groupable", b, a));
    } },
    movable: { get: function() {
      return (this.F & 16) !== 0;
    }, set: function(a) {
      var b = (this.F & 16) !== 0;
      b !== a && (this.F ^= 16, this.g("movable", b, a));
    } },
    selectionAdorned: { get: function() {
      return (this.F & 32) !== 0;
    }, set: function(a) {
      var b = (this.F & 32) !== 0;
      b !== a && (this.F ^= 32, this.g("selectionAdorned", b, a), this.Mb());
    } },
    isInDocumentBounds: { get: function() {
      return (this.F & 64) !== 0;
    }, set: function(a) {
      var b = (this.F & 64) !== 0;
      if (b !== a) {
        this.F ^= 64;
        var c = this.diagram;
        c !== null && c.Qa();
        this.g("isInDocumentBounds", b, a);
      }
    } },
    isLayoutPositioned: { get: function() {
      return (this.F & 128) !== 0;
    }, set: function(a) {
      var b = (this.F & 128) !== 0;
      b !== a && (this.F ^= 128, this.g("isLayoutPositioned", b, a), this.B(a ? 4 : 8));
    } },
    selectable: { get: function() {
      return (this.F & 256) !== 0;
    }, set: function(a) {
      var b = (this.F & 256) !== 0;
      b !== a && (this.F ^= 256, this.g("selectable", b, a), this.Mb());
    } },
    reshapable: { get: function() {
      return (this.F & 512) !== 0;
    }, set: function(a) {
      var b = (this.F & 512) !== 0;
      b !== a && (this.F ^= 512, this.g("reshapable", b, a), this.Mb());
    } },
    resizable: { get: function() {
      return (this.F & 1024) !== 0;
    }, set: function(a) {
      var b = (this.F & 1024) !== 0;
      b !== a && (this.F ^= 1024, this.g("resizable", b, a), this.Mb());
    } },
    rotatable: { get: function() {
      return (this.F & 2048) !== 0;
    }, set: function(a) {
      var b = (this.F & 2048) !== 0;
      b !== a && (this.F ^= 2048, this.g("rotatable", b, a), this.Mb());
    } },
    isSelected: {
      get: function() {
        return (this.F & 4096) !== 0;
      },
      set: function(a) {
        var b = (this.F & 4096) !== 0;
        if (b !== a) {
          var c = this.diagram;
          if (!a || this.canSelect() && !(c !== null && c.selection.count >= c.maxSelectionCount)) {
            this.F ^= 4096;
            var d = false;
            if (c !== null) {
              d = c.skipsUndoManager;
              c.skipsUndoManager = true;
              var e = c.selection;
              e.ea();
              a ? e.add(this) : e.remove(this);
              e.freeze();
            }
            this.g("isSelected", b, a);
            this.Mb();
            a = this.selectionChanged;
            a !== null && a(this);
            c !== null && (c.Gb(), c.skipsUndoManager = d);
          }
        }
      }
    },
    isHighlighted: { get: function() {
      return (this.F & 524288) !== 0;
    }, set: function(a) {
      var b = (this.F & 524288) !== 0;
      if (b !== a) {
        this.F ^= 524288;
        var c = this.diagram;
        c !== null && (c = c.highlighteds, c.ea(), a ? c.add(this) : c.remove(this), c.freeze());
        this.g("isHighlighted", b, a);
        this.N();
        a = this.highlightedChanged;
        a !== null && a(this);
      }
    } },
    isShadowed: { get: function() {
      return (this.F & 8192) !== 0;
    }, set: function(a) {
      var b = (this.F & 8192) !== 0;
      b !== a && (this.F ^= 8192, this.g("isShadowed", b, a), this.N());
    } },
    isAnimated: { get: function() {
      return (this.F & 262144) !== 0;
    }, set: function(a) {
      var b = (this.F & 262144) !== 0;
      b !== a && (this.F ^= 262144, this.g("isAnimated", b, a));
    } },
    highlightedChanged: { get: function() {
      return this.Pn;
    }, set: function(a) {
      var b = this.Pn;
      b !== a && (this.Pn = a, this.g("highlightedChanged", b, a));
    } },
    selectionObjectName: { get: function() {
      return this.kp;
    }, set: function(a) {
      var b = this.kp;
      b !== a && (this.kp = a, this.jh = null, this.g("selectionObjectName", b, a));
    } },
    selectionAdornmentTemplate: {
      get: function() {
        return this.ip;
      },
      set: function(a) {
        var b = this.ip;
        b !== a && (this.ip = a, this.g("selectionAdornmentTemplate", b, a));
      }
    },
    selectionObject: { get: function() {
      if (this.jh === null) {
        var a = this.selectionObjectName;
        a !== null && a !== "" ? (a = this.Ya(a), a !== null ? this.jh = a : this.jh = this) : this instanceof T2 ? (a = this.path, a !== null ? this.jh = a : this.jh = this) : this.jh = this;
      }
      return this.jh;
    } },
    selectionChanged: { get: function() {
      return this.jp;
    }, set: function(a) {
      var b = this.jp;
      b !== a && (this.jp = a, this.g("selectionChanged", b, a));
    } },
    resizeAdornmentTemplate: { get: function() {
      return this.Uo;
    }, set: function(a) {
      var b = this.Uo;
      b !== a && (this.Uo = a, this.g("resizeAdornmentTemplate", b, a));
    } },
    resizeObjectName: { get: function() {
      return this.Wo;
    }, set: function(a) {
      var b = this.Wo;
      b !== a && (this.Wo = a, this.g("resizeObjectName", b, a));
    } },
    resizeObject: { get: function() {
      var a = this.resizeObjectName;
      return a !== "" && (a = this.Ya(a), a !== null) ? a : this;
    } },
    resizeCellSize: { get: function() {
      return this.Vo;
    }, set: function(a) {
      var b = this.Vo;
      b.A(a) || (this.Vo = a = a.I(), this.g("resizeCellSize", b, a));
    } },
    rotateAdornmentTemplate: { get: function() {
      return this.Yo;
    }, set: function(a) {
      var b = this.Yo;
      b !== a && (this.Yo = a, this.g("rotateAdornmentTemplate", b, a));
    } },
    rotateObjectName: { get: function() {
      return this.Zo;
    }, set: function(a) {
      var b = this.Zo;
      b !== a && (this.Zo = a, this.g("rotateObjectName", b, a));
    } },
    rotateObject: { get: function() {
      var a = this.rotateObjectName;
      return a !== "" && (a = this.Ya(a), a !== null) ? a : this;
    } },
    rotationSpot: { get: function() {
      return this.$o;
    }, set: function(a) {
      var b = this.$o;
      b.A(a) || (this.$o = a = a.I(), this.g("rotationSpot", b, a));
    } },
    text: { get: function() {
      return this.Xb;
    }, set: function(a) {
      var b = this.Xb;
      b !== a && (this.Xb = a, this.g("text", b, a));
    } },
    containingGroup: {
      get: function() {
        return this.Rh;
      },
      set: function(a) {
        if (this.Mc()) {
          var b = this.Rh;
          if (b !== a) {
            a === null || this !== a && !a.Jd(this) || (this === a && C2("Cannot make a Group a member of itself: " + this.toString()), C2("Cannot make a Group indirectly contain itself: " + this.toString() + " already contains " + a.toString()));
            this.B(2);
            var c = this.diagram;
            b !== null ? Ao(b, this) : this instanceof U2 && c !== null && c.wi.remove(this);
            this.Rh = a;
            a !== null ? zo(a, this) : this instanceof U2 && c !== null && c.wi.add(this);
            this.B(1);
            if (c !== null && c.Z) {
              var d = this.data, e = c.model;
              if (d !== null && e.ek()) {
                var f2 = e.pa(a !== null ? a.data : null);
                e.uq(d, f2);
              }
            }
            d = this.containingGroupChanged;
            d !== null && (e = true, c !== null && (e = c.Z, c.Z = true), d(this, b, a), c !== null && (c.Z = e));
            if (this instanceof U2) {
              for (c = new G2(), Mk(c, this, true, 0, true), c = c.iterator; c.next(); )
                if (d = c.value, d instanceof W2)
                  for (d = d.linksConnected; d.next(); )
                    Fo(d.value);
            }
            if (this instanceof W2) {
              for (c = this.linksConnected; c.next(); )
                Fo(c.value);
              c = this.labeledLink;
              c !== null && Fo(c);
            }
            this.g("containingGroup", b, a);
            a !== null && (b = a.layer, b !== null && ei2(b, -1, a));
          }
        } else
          C2("cannot set the Part.containingGroup of a Link or Adornment");
      }
    },
    containingGroupChanged: { get: function() {
      return this.$m;
    }, set: function(a) {
      var b = this.$m;
      b !== a && (this.$m = a, this.g("containingGroupChanged", b, a));
    } },
    isTopLevel: { get: function() {
      return this.containingGroup !== null || this instanceof W2 && this.labeledLink !== null ? false : true;
    } },
    layoutConditions: { get: function() {
      return this.fo;
    }, set: function(a) {
      var b = this.fo;
      b !== a && (this.fo = a, this.g("layoutConditions", b, a));
    } },
    dragComputation: {
      get: function() {
        return this.qn;
      },
      set: function(a) {
        var b = this.qn;
        b !== a && (this.qn = a, this.g("dragComputation", b, a));
      }
    },
    shadowOffset: { get: function() {
      return this.pp;
    }, set: function(a) {
      var b = this.pp;
      b.A(a) || (this.pp = a = a.I(), this.N(), this.g("shadowOffset", b, a));
    } },
    shadowColor: { get: function() {
      return this.op;
    }, set: function(a) {
      var b = this.op;
      b !== a && (this.op = a, this.N(), this.g("shadowColor", b, a));
    } },
    shadowBlur: {
      get: function() {
        return this.hg;
      },
      set: function(a) {
        var b = this.hg;
        b !== a && (this.hg = a, this.N(), this.g("shadowBlur", b, a));
      }
    }
  });
  V2.prototype.invalidateLayout = V2.prototype.B;
  V2.prototype.findCommonContainingGroup = V2.prototype.Px;
  V2.prototype.isMemberOf = V2.prototype.Jd;
  V2.prototype.findTopLevelPart = V2.prototype.Rz;
  V2.prototype.findSubGraphLevel = V2.prototype.Nz;
  V2.prototype.ensureBounds = V2.prototype.Ta;
  V2.prototype.getDocumentBounds = V2.prototype.Li;
  V2.prototype.findObject = V2.prototype.Ya;
  V2.prototype.moveTo = V2.prototype.moveTo;
  V2.prototype.invalidateAdornments = V2.prototype.Mb;
  V2.prototype.clearAdornments = V2.prototype.Qj;
  V2.prototype.removeAdornment = V2.prototype.Gf;
  V2.prototype.addAdornment = V2.prototype.xh;
  V2.prototype.findAdornment = V2.prototype.Yj;
  V2.prototype.updateTargetBindings = V2.prototype.Fa;
  var xo = false;
  V2.className = "Part";
  V2.LayoutNone = 0;
  V2.LayoutAdded = 1;
  V2.LayoutRemoved = 2;
  V2.LayoutShown = 4;
  V2.LayoutHidden = 8;
  V2.LayoutNodeSized = 16;
  V2.LayoutGroupLayout = 32;
  V2.LayoutNodeReplaced = 64;
  V2.LayoutStandard = 127;
  V2.LayoutAll = 16777215;
  function ze(a, b) {
    a === void 0 || a instanceof Fl || typeof a === "string" ? V2.call(this, a) : (V2.call(this), a && (b = a));
    this.F &= -257;
    this.Ug = "Adornment";
    this.le = null;
    this.$w = 0;
    this.vx = false;
    this.j = a instanceof Dm ? [] : Go;
    this.Sa = null;
    b && Object.assign(this, b);
  }
  ma2(ze, V2);
  ze.prototype.toString = function() {
    var a = this.adornedPart;
    return "Adornment(" + this.category + ")" + (a !== null ? a.toString() : "");
  };
  ze.prototype.updateRelationshipsFromData = function() {
  };
  ze.prototype.hk = function(a) {
    var b = this.adornedObject.part;
    if (b instanceof T2 && this.adornedObject instanceof xf2) {
      var c = b.path;
      b.hk(a);
      a = c.geometry;
      b = this.T.m;
      c = b.length;
      for (var d = 0; d < c; d++) {
        var e = b[d];
        e.isPanelMain && e instanceof xf2 && (e.ma = a);
      }
    }
  };
  ze.prototype.Ri = function() {
    var a = this.le;
    if (a === null)
      return true;
    a = a.part;
    return a === null || !jj2(a);
  };
  ze.prototype.Mc = function() {
    return false;
  };
  ze.prototype.qk = function(a, b, c, d, e, f2, g2) {
    if (a === pe2 && b === "elements")
      if (e instanceof ng2)
        this.Sa === null && (this.Sa = e);
      else {
        if (e instanceof X2) {
          var h = e.$l(function(a2) {
            return a2 instanceof ng2;
          });
          h instanceof ng2 && this.Sa === null && (this.Sa = h);
        }
      }
    else
      a === qe2 && b === "elements" && this.Sa !== null && (d === this.Sa ? this.Sa = null : d instanceof X2 && this.Sa.sg(d) && (this.Sa = null));
    V2.prototype.qk.call(this, a, b, c, d, e, f2, g2);
  };
  ze.prototype.updateAdornments = function() {
  };
  ze.prototype.Wj = function() {
  };
  na2.Object.defineProperties(ze.prototype, { placeholder: { get: function() {
    return this.Sa;
  } }, adornedObject: { get: function() {
    return this.le;
  }, set: function(a) {
    var b = this.adornedPart, c = null;
    a !== null && (c = a.part);
    b === null || a !== null && b === c || b.Gf(this.category);
    this.le = a;
    c !== null && c.xh(this.category, this);
  } }, adornedPart: { get: function() {
    var a = this.le;
    return a !== null ? a.part : null;
  } }, containingGroup: {
    get: function() {
      return null;
    }
  } });
  var Go = [];
  ze.className = "Adornment";
  function W2(a, b) {
    a === void 0 || a instanceof Fl || typeof a === "string" ? V2.call(this, a) : (V2.call(this), a && (b = a));
    this.R = 13;
    this.ab = new F2();
    this.Ep = this.il = this.ii = this.io = this.ho = null;
    this.Bk = qc2;
    this.oc = this.Te = null;
    this.Ro = Ho;
    this.vh = false;
    b && Object.assign(this, b);
  }
  ma2(W2, V2);
  W2.prototype.cloneProtected = function(a) {
    V2.prototype.cloneProtected.call(this, a);
    a.R = this.R;
    a.R = this.R & -17;
    a.ho = this.ho;
    a.io = this.io;
    a.ii = this.ii;
    a.Ep = this.Ep;
    a.Bk = this.Bk.I();
    a.Ro = this.Ro;
  };
  t2 = W2.prototype;
  t2.wf = function(a) {
    V2.prototype.wf.call(this, a);
    a.rd();
    a.Te = this.Te;
    a.oc = null;
  };
  function Io(a, b) {
    b !== null && (a.Te === null && (a.Te = new G2()), a.Te.add(b));
  }
  function Jo(a, b, c, d) {
    if (b === null || a.Te === null)
      return null;
    for (var e = a.Te.iterator; e.next(); ) {
      var f2 = e.value;
      if (f2.Ks === a && f2.vv === b && f2.qy === c && f2.sy === d || f2.Ks === b && f2.vv === a && f2.qy === d && f2.sy === c)
        return f2;
    }
    return null;
  }
  t2.jA = function(a, b, c) {
    if (b === void 0 || b === null)
      b = "";
    if (c === void 0 || c === null)
      c = "";
    a = Jo(this, a, b, c);
    a !== null && a.em();
  };
  t2.qk = function(a, b, c, d, e, f2, g2) {
    a === pe2 && b === "elements" ? this.oc = null : a === qe2 && b === "elements" && (this.oc = null);
    V2.prototype.qk.call(this, a, b, c, d, e, f2, g2);
  };
  t2.rd = function(a) {
    a === void 0 && (a = null);
    for (var b = this.linksConnected; b.next(); ) {
      var c = b.value;
      a !== null && a.contains(c) || (Ko(c.fromPort), Ko(c.toPort), c.Va());
    }
  };
  function gl(a, b) {
    for (a = a.linksConnected; a.next(); ) {
      var c = a.value;
      if (c.fromPort === b || c.toPort === b)
        Ko(c.fromPort), Ko(c.toPort), c.Va();
    }
  }
  function Ko(a) {
    if (a !== null) {
      var b = a.Qo;
      b !== null && b.em();
      a = a.part;
      b = a.containingGroup;
      b === null || a.isVisible() || Ko(b.port);
    }
  }
  t2.Ri = function() {
    return true;
  };
  W2.prototype.getAvoidableRect = function(a) {
    a.set(this.actualBounds);
    a.Mp(this.Bk);
    return a;
  };
  W2.prototype.findVisibleNode = function() {
    for (var a = this; a !== null && !a.isVisible(); )
      a = a.containingGroup;
    return a;
  };
  W2.prototype.isVisible = function() {
    if (!V2.prototype.isVisible.call(this))
      return false;
    var a = true, b = ri2, c = this.diagram;
    if (c !== null) {
      if (c.animationManager.Ms(this))
        return true;
      a = c.isTreePathToChildren;
      b = c.treeCollapsePolicy;
    }
    if (b === ri2) {
      if (a = this.rg(), a !== null && !a.isTreeExpanded)
        return false;
    } else if (b === xk2) {
      if (a = a ? this.Wu() : this.Xu(), 0 < a.count && a.all(function(a2) {
        return !a2.isTreeExpanded;
      }))
        return false;
    } else if (b === yk && (a = a ? this.Wu() : this.Xu(), 0 < a.count && a.any(function(a2) {
      return !a2.isTreeExpanded;
    })))
      return false;
    a = this.labeledLink;
    return a !== null ? a.isVisible() : true;
  };
  W2.prototype.Pb = function(a) {
    V2.prototype.Pb.call(this, a);
    for (var b = this.linksConnected; b.next(); ) {
      var c = b.value;
      if (a && this.containingGroup !== null) {
        var d = c.aq(this);
        d === null || d.Jd(this.containingGroup) || c.Va();
      }
      c.Pb(a);
    }
  };
  W2.prototype.Qx = function() {
    var a = new G2(), b = new G2();
    Lo(this, this, a, b);
    return b.iterator;
  };
  function Lo(a, b, c, d) {
    if (b !== null && !c.has(b)) {
      c.add(b);
      var e = true, f2 = a.diagram;
      f2 !== null && (e = f2.isTreePathToChildren);
      b.linksConnected.each(function(f3) {
        f3.isTreeLink ? (e ? f3.fromNode === b : f3.toNode === b) && Lo(a, e ? f3.toNode : f3.fromNode, c, d) : d.add(f3);
      });
    }
  }
  W2.prototype.findLinksConnected = function(a) {
    a === void 0 && (a = null);
    if (a === null)
      return this.ab.iterator;
    var b = new db2(this.ab), c = this;
    b.predicate = function(b2) {
      return b2.fromNode === c && b2.fromPortId === a || b2.toNode === c && b2.toPortId === a;
    };
    return b;
  };
  t2 = W2.prototype;
  t2.Wp = function(a) {
    a === void 0 && (a = null);
    var b = new db2(this.ab), c = this;
    b.predicate = function(b2) {
      return b2.fromNode !== c ? false : a === null ? true : b2.fromPortId === a;
    };
    return b;
  };
  t2.Gd = function(a) {
    a === void 0 && (a = null);
    var b = new db2(this.ab), c = this;
    b.predicate = function(b2) {
      return b2.toNode !== c ? false : a === null ? true : b2.toPortId === a;
    };
    return b;
  };
  t2.Vu = function(a) {
    a === void 0 && (a = null);
    for (var b = null, c = null, d = this.ab.iterator; d.next(); ) {
      var e = d.value;
      if (e.fromNode === this) {
        if (a === null || e.fromPortId === a)
          e = e.toNode, b !== null ? b.add(e) : c !== null && c !== e ? (b = new G2(), b.add(c), b.add(e)) : c = e;
      } else
        e.toNode !== this || a !== null && e.toPortId !== a || (e = e.fromNode, b !== null ? b.add(e) : c !== null && c !== e ? (b = new G2(), b.add(c), b.add(e)) : c = e);
    }
    return b !== null ? b.iterator : c !== null ? new bb2(c) : ab2;
  };
  t2.Xu = function(a) {
    a === void 0 && (a = null);
    for (var b = null, c = null, d = this.ab.iterator; d.next(); ) {
      var e = d.value;
      e.fromNode !== this || a !== null && e.fromPortId !== a || (e = e.toNode, b !== null ? b.add(e) : c !== null && c !== e ? (b = new G2(), b.add(c), b.add(e)) : c = e);
    }
    return b !== null ? b.iterator : c !== null ? new bb2(c) : ab2;
  };
  t2.Wu = function(a) {
    a === void 0 && (a = null);
    for (var b = null, c = null, d = this.ab.iterator; d.next(); ) {
      var e = d.value;
      e.toNode !== this || a !== null && e.toPortId !== a || (e = e.fromNode, b !== null ? b.add(e) : c !== null && c !== e ? (b = new G2(), b.add(c), b.add(e)) : c = e);
    }
    return b !== null ? b.iterator : c !== null ? new bb2(c) : ab2;
  };
  t2.Iz = function(a, b, c) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    var d = new db2(this.ab), e = this;
    d.predicate = function(d2) {
      return (d2.fromNode !== e || d2.toNode !== a || b !== null && d2.fromPortId !== b || c !== null && d2.toPortId !== c) && (d2.fromNode !== a || d2.toNode !== e || c !== null && d2.fromPortId !== c || b !== null && d2.toPortId !== b) ? false : true;
    };
    return d;
  };
  t2.Jz = function(a, b, c) {
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    var d = new db2(this.ab), e = this;
    d.predicate = function(d2) {
      return d2.fromNode !== e || d2.toNode !== a || b !== null && d2.fromPortId !== b || c !== null && d2.toPortId !== c ? false : true;
    };
    return d;
  };
  function Mo(a, b, c) {
    Ko(c);
    var d = a.ab.contains(b);
    d || a.ab.add(b);
    if (!d || b.fromNode === b.toNode) {
      var e = a.linkConnected;
      if (e !== null) {
        var f2 = true, g2 = a.diagram;
        g2 !== null && (f2 = g2.Z, g2.Z = true);
        e(a, b, c);
        g2 !== null && (g2.Z = f2);
      }
    }
    !d && b.isTreeLink && (c = b.fromNode, b = b.toNode, c !== null && b !== null && c !== b && (d = true, a = a.diagram, a !== null && (d = a.isTreePathToChildren), e = d ? b : c, f2 = d ? c : b, e.vh || (e.vh = f2), !f2.isTreeLeaf || a !== null && a.undoManager.isUndoingRedoing || (d ? c === f2 && (f2.isTreeLeaf = false) : b === f2 && (f2.isTreeLeaf = false))));
  }
  function No(a, b, c) {
    Ko(c);
    var d = a.ab.remove(b), e = null;
    if (d || b.toNode === b.fromNode) {
      var f2 = a.linkDisconnected;
      e = a.diagram;
      if (f2 !== null) {
        var g2 = true;
        e !== null && (g2 = e.Z, e.Z = true);
        f2(a, b, c);
        e !== null && (e.Z = g2);
      }
    }
    d && b.isTreeLink && (c = true, e !== null && (c = e.isTreePathToChildren), a = c ? b.toNode : b.fromNode, b = c ? b.fromNode : b.toNode, a !== null && (a.vh = false), b === null || b.isTreeLeaf || (b.ab.count === 0 ? (b.vh = null, e !== null && e.undoManager.isUndoingRedoing || (b.isTreeLeaf = true)) : wk2(b)));
  }
  function wk2(a) {
    a.vh = false;
    if (a.ab.count !== 0) {
      var b = true, c = a.diagram;
      if (c === null || !c.undoManager.isUndoingRedoing) {
        c !== null && (b = c.isTreePathToChildren);
        for (c = a.ab.iterator; c.next(); ) {
          var d = c.value;
          if (d.isTreeLink) {
            if (b) {
              if (d.fromNode === a) {
                a.isTreeLeaf = false;
                return;
              }
            } else if (d.toNode === a) {
              a.isTreeLeaf = false;
              return;
            }
          }
        }
        a.isTreeLeaf = true;
      }
    }
  }
  W2.prototype.updateRelationshipsFromData = function() {
    var a = this.diagram;
    a !== null && a.partManager.updateRelationshipsFromData(this);
  };
  t2 = W2.prototype;
  t2.cq = function(a) {
    V2.prototype.cq.call(this, a);
    a || (wk2(this), a = this.il, a !== null && Oo(a, this));
  };
  t2.eq = function(a) {
    V2.prototype.eq.call(this, a);
    a || (a = this.il, a !== null && a.nd !== null && (a.nd.remove(this), a.s()));
  };
  t2.Wj = function() {
    if (0 < this.ab.count) {
      var a = this.diagram;
      if (a !== null)
        for (var b = a.commandHandler !== null ? a.commandHandler.deletesConnectedLinks : true, c = this.ab.copy().iterator; c.next(); ) {
          var d = c.value;
          b ? a.remove(d) : (d.fromNode === this && (d.fromNode = null), d.toNode === this && (d.toNode = null));
        }
    }
    this.labeledLink = null;
    V2.prototype.Wj.call(this);
  };
  t2.ss = function(a) {
    if (this.oc === null) {
      if (a === "" && this.Je === false)
        return this;
      Po(this);
    }
    var b = this.oc.H(a);
    return b !== null || a !== "" && (b = this.oc.H(""), b !== null) ? b : this;
  };
  function Po(a) {
    a.oc === null ? a.oc = new H2() : a.oc.clear();
    a.Em(a, function(a2, c) {
      Kl(a2, c);
    });
    a.oc.count === 0 && a.oc.add("", a);
  }
  function Kl(a, b) {
    var c = b.portId;
    c !== null && a.oc !== null && a.oc.add(c, b);
  }
  function Jl(a, b, c) {
    var d = b.portId;
    if (d !== null && (a.oc !== null && a.oc.remove(d), b = a.diagram, b !== null && c)) {
      c = null;
      for (a = a.findLinksConnected(d); a.next(); )
        d = a.value, c === null && (c = Ea2()), c.push(d);
      if (c !== null) {
        for (a = 0; a < c.length; a++)
          b.remove(c[a]);
        Ia2(c);
      }
    }
  }
  t2.lA = function(a) {
    if (a === null || a === this)
      return false;
    var b = true, c = this.diagram;
    c !== null && (b = c.isTreePathToChildren);
    c = this;
    if (b)
      for (; c !== a; ) {
        b = null;
        for (var d = c.ab.iterator; d.next(); ) {
          var e = d.value;
          if (e.isTreeLink && (b = e.fromNode, b !== c && b !== this))
            break;
        }
        if (b === this || b === null || b === c)
          return false;
        c = b;
      }
    else
      for (; c !== a; ) {
        b = null;
        for (d = c.ab.iterator; d.next() && (e = d.value, !e.isTreeLink || (b = e.toNode, b === c || b === this)); )
          ;
        if (b === this || b === null || b === c)
          return false;
        c = b;
      }
    return true;
  };
  t2.Vz = function() {
    var a = true, b = this.diagram;
    b !== null && (a = b.isTreePathToChildren);
    b = this;
    if (a)
      for (; ; ) {
        a = null;
        for (var c = b.ab.iterator; c.next(); ) {
          var d = c.value;
          if (d.isTreeLink && (a = d.fromNode, a !== b && a !== this))
            break;
        }
        if (a === this)
          return this;
        if (a === null || a === b)
          return b;
        b = a;
      }
    else
      for (; ; ) {
        a = null;
        for (c = b.ab.iterator; c.next() && (d = c.value, !d.isTreeLink || (a = d.toNode, a === b || a === this)); )
          ;
        if (a === this)
          return this;
        if (a === null || a === b)
          return b;
        b = a;
      }
  };
  t2.Fz = function(a) {
    if (a === null)
      return null;
    if (this === a)
      return this;
    for (var b = this; b !== null; )
      yo(b, true), b = b.rg();
    var c = null;
    for (b = a; b !== null; ) {
      if ((b.F & 1048576) !== 0) {
        c = b;
        break;
      }
      b = b.rg();
    }
    for (b = this; b !== null; )
      yo(b, false), b = b.rg();
    return c;
  };
  t2.Ii = function() {
    var a = true, b = this.diagram;
    b !== null && (a = b.isTreePathToChildren);
    b = this.ab.iterator;
    if (a)
      for (; b.next(); ) {
        if (a = b.value, a.isTreeLink && a.fromNode !== this)
          return a;
      }
    else
      for (; b.next(); )
        if (a = b.value, a.isTreeLink && a.toNode !== this)
          return a;
    return null;
  };
  t2.rg = function() {
    var a = this.vh;
    if (a === null)
      return null;
    if (a instanceof W2)
      return a;
    var b = true;
    a = this.diagram;
    a !== null && (b = a.isTreePathToChildren);
    a = this.ab.iterator;
    if (b)
      for (; a.next(); ) {
        if (b = a.value, b.isTreeLink && (b = b.fromNode, b !== this))
          return this.vh = b;
      }
    else
      for (; a.next(); )
        if (b = a.value, b.isTreeLink && (b = b.toNode, b !== this))
          return this.vh = b;
    return this.vh = null;
  };
  t2.Tz = function() {
    function a(b2, d) {
      if (b2 !== null) {
        d.add(b2);
        var c = b2.Ii();
        c !== null && (d.add(c), a(b2.rg(), d));
      }
    }
    var b = new G2();
    a(this, b);
    return b;
  };
  t2.Sz = function() {
    return Qo(this, this);
  };
  function Qo(a, b) {
    b = b.rg();
    return b === null ? 0 : 1 + Qo(a, b);
  }
  t2.Yp = function() {
    var a = true, b = this.diagram;
    b !== null && (a = b.isTreePathToChildren);
    b = new db2(this.ab);
    var c = this;
    b.predicate = a ? function(a2) {
      return a2.isTreeLink && a2.fromNode === c ? true : false;
    } : function(a2) {
      return a2.isTreeLink && a2.toNode === c ? true : false;
    };
    return b;
  };
  t2.Zu = function() {
    var a = true, b = this.diagram;
    b !== null && (a = b.isTreePathToChildren);
    var c = b = null, d = this.ab.iterator;
    if (a)
      for (; d.next(); )
        a = d.value, a.isTreeLink && a.fromNode === this && (a = a.toNode, b !== null ? b.add(a) : c !== null && c !== a ? (b = new F2(), b.add(c), b.add(a)) : c = a);
    else
      for (; d.next(); )
        a = d.value, a.isTreeLink && a.toNode === this && (a = a.fromNode, b !== null ? b.add(a) : c !== null && c !== a ? (b = new F2(), b.add(c), b.add(a)) : c = a);
    return b !== null ? b.iterator : c !== null ? new bb2(c) : ab2;
  };
  t2.Uz = function(a) {
    a === void 0 && (a = Infinity);
    var b = new G2();
    Mk(b, this, false, a, true);
    return b;
  };
  W2.prototype.collapseTree = function(a) {
    a === void 0 && (a = 1);
    1 > a && (a = 1);
    var b = this.diagram;
    if (b !== null && !b.Ke) {
      b.Ke = true;
      var c = new G2();
      c.add(this);
      Ro(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === ri2);
      b.Ke = false;
    }
  };
  function Ro(a, b, c, d, e, f2, g2) {
    if (1 < d)
      for (var h = c ? a.Wp() : a.Gd(); h.next(); ) {
        var k = h.value;
        k.isTreeLink && (k = k.aq(a), k === null || k === a || b.contains(k) || (b.add(k), Ro(k, b, c, d - 1, e, f2, g2)));
      }
    else
      So(a, b, c, e, f2, g2);
  }
  function So(a, b, c, d, e, f2) {
    for (var g2 = e === a ? true : a.isTreeExpanded, h = c ? a.Wp() : a.Gd(); h.next(); ) {
      var k = h.value;
      if (k.isTreeLink && (k = k.aq(a), k !== null && k !== a)) {
        var l2 = b.contains(k);
        l2 || b.add(k);
        g2 && (f2 && d.Mj(k, e), k.Gh(), k.Pb(false));
        k.isTreeExpanded && (k.wasTreeExpanded = k.isTreeExpanded, l2 || So(k, b, c, d, e, f2));
      }
    }
    a.isTreeExpanded = false;
  }
  W2.prototype.expandTree = function(a) {
    a === void 0 && (a = 2);
    2 > a && (a = 2);
    var b = this.diagram;
    if (b !== null && !b.Ke) {
      b.Ke = true;
      var c = new G2();
      c.add(this);
      To(this, c, b.isTreePathToChildren, a, b, this, b.treeCollapsePolicy === ri2);
      b.Ke = false;
    }
  };
  function To(a, b, c, d, e, f2, g2) {
    for (var h = f2 === a ? false : a.isTreeExpanded, k = c ? a.Wp() : a.Gd(); k.next(); ) {
      var l2 = k.value;
      l2.isTreeLink && (h || l2.td || l2.Va(), l2 = l2.aq(a), l2 !== null && l2 !== a && !b.contains(l2) && (b.add(l2), h || (l2.Pb(true), l2.Gh(), g2 && e.Oj(l2, f2)), 2 < d || l2.wasTreeExpanded)) && (l2.wasTreeExpanded = false, To(l2, b, c, d - 1, e, f2, g2));
    }
    a.isTreeExpanded = true;
  }
  na2.Object.defineProperties(W2.prototype, { portSpreading: { get: function() {
    return this.Ro;
  }, set: function(a) {
    var b = this.Ro;
    b !== a && (this.Ro = a, this.g("portSpreading", b, a), a = this.diagram, a !== null && a.undoManager.isUndoingRedoing || this.rd());
  } }, avoidable: { get: function() {
    return (this.R & 8) !== 0;
  }, set: function(a) {
    var b = (this.R & 8) !== 0;
    if (b !== a) {
      this.R ^= 8;
      var c = this.diagram;
      c !== null && qk2(c, this);
      this.g("avoidable", b, a);
    }
  } }, avoidableMargin: {
    get: function() {
      return this.Bk;
    },
    set: function(a) {
      typeof a === "number" && (a = new lc2(a));
      var b = this.Bk;
      if (!b.A(a)) {
        this.Bk = a = a.I();
        var c = this.diagram;
        c !== null && qk2(c, this);
        this.g("avoidableMargin", b, a);
      }
    }
  }, linksConnected: { get: function() {
    return this.ab.iterator;
  } }, linkConnected: { get: function() {
    return this.ho;
  }, set: function(a) {
    var b = this.ho;
    b !== a && (this.ho = a, this.g("linkConnected", b, a));
  } }, linkDisconnected: {
    get: function() {
      return this.io;
    },
    set: function(a) {
      var b = this.io;
      b !== a && (this.io = a, this.g("linkDisconnected", b, a));
    }
  }, linkValidation: { get: function() {
    return this.ii;
  }, set: function(a) {
    var b = this.ii;
    b !== a && (this.ii = a, this.g("linkValidation", b, a));
  } }, isLinkLabel: { get: function() {
    return this.il !== null;
  } }, labeledLink: { get: function() {
    return this.il;
  }, set: function(a) {
    var b = this.il;
    if (b !== a) {
      var c = this.diagram, d = this.data;
      if (b !== null) {
        b.nd !== null && (b.nd.remove(this), b.s());
        if (c !== null && d !== null && !c.undoManager.isUndoingRedoing) {
          var e = b.data, f2 = c.model;
          if (e !== null && f2.Pi()) {
            var g2 = f2.pa(d);
            g2 !== void 0 && f2.ty(e, g2);
          }
        }
        this.containingGroup = null;
      }
      this.il = a;
      a !== null && (Oo(a, this), c === null || d === null || c.undoManager.isUndoingRedoing || (e = a.data, c = c.model, e !== null && c.Pi() && (d = c.pa(d), d !== void 0 && c.Bu(e, d))), this.containingGroup = a.containingGroup);
      ul(this);
      this.g("labeledLink", b, a);
    }
  } }, port: { get: function() {
    return this.ss("");
  } }, ports: {
    get: function() {
      this.oc === null && Po(this);
      return this.oc.iteratorValues;
    }
  }, isTreeExpanded: { get: function() {
    return (this.R & 1) !== 0;
  }, set: function(a) {
    var b = (this.R & 1) !== 0;
    if (b !== a) {
      this.R ^= 1;
      var c = this.diagram;
      this.g("isTreeExpanded", b, a);
      b = this.treeExpandedChanged;
      if (b !== null) {
        var d = true;
        c !== null && (d = c.Z, c.Z = true);
        b(this);
        c !== null && (c.Z = d);
      }
      c !== null && c.undoManager.isUndoingRedoing ? this.Pb(a) : a ? this.expandTree() : this.collapseTree();
    }
  } }, wasTreeExpanded: {
    get: function() {
      return (this.R & 2) !== 0;
    },
    set: function(a) {
      var b = (this.R & 2) !== 0;
      b !== a && (this.R ^= 2, this.g("wasTreeExpanded", b, a));
    }
  }, treeExpandedChanged: { get: function() {
    return this.Ep;
  }, set: function(a) {
    var b = this.Ep;
    b !== a && (this.Ep = a, this.g("treeExpandedChanged", b, a));
  } }, isTreeLeaf: { get: function() {
    return (this.R & 4) !== 0;
  }, set: function(a) {
    var b = (this.R & 4) !== 0;
    b !== a && (this.R ^= 4, this.g("isTreeLeaf", b, a));
  } } });
  W2.prototype.expandTree = W2.prototype.expandTree;
  W2.prototype.collapseTree = W2.prototype.collapseTree;
  W2.prototype.findTreeParts = W2.prototype.Uz;
  W2.prototype.findTreeChildrenNodes = W2.prototype.Zu;
  W2.prototype.findTreeChildrenLinks = W2.prototype.Yp;
  W2.prototype.findTreeLevel = W2.prototype.Sz;
  W2.prototype.findTreeParentChain = W2.prototype.Tz;
  W2.prototype.findTreeParentNode = W2.prototype.rg;
  W2.prototype.findTreeParentLink = W2.prototype.Ii;
  W2.prototype.findCommonTreeParent = W2.prototype.Fz;
  W2.prototype.findTreeRoot = W2.prototype.Vz;
  W2.prototype.isInTreeOf = W2.prototype.lA;
  W2.prototype.findPort = W2.prototype.ss;
  W2.prototype.findLinksTo = W2.prototype.Jz;
  W2.prototype.findLinksBetween = W2.prototype.Iz;
  W2.prototype.findNodesInto = W2.prototype.Wu;
  W2.prototype.findNodesOutOf = W2.prototype.Xu;
  W2.prototype.findNodesConnected = W2.prototype.Vu;
  W2.prototype.findLinksInto = W2.prototype.Gd;
  W2.prototype.findLinksOutOf = W2.prototype.Wp;
  W2.prototype.findExternalTreeLinksConnected = W2.prototype.Qx;
  W2.prototype.invalidateConnectedLinks = W2.prototype.rd;
  W2.prototype.invalidateLinkBundle = W2.prototype.jA;
  var Uo = new D2(W2, "SpreadingNone", 10), Ho = new D2(W2, "SpreadingEvenly", 11), Vo = new D2(W2, "SpreadingPacked", 12);
  W2.className = "Node";
  W2.SpreadingNone = Uo;
  W2.SpreadingEvenly = Ho;
  W2.SpreadingPacked = Vo;
  function U2(a, b) {
    a === void 0 || a instanceof Fl || typeof a === "string" ? W2.call(this, a) : (W2.call(this), a && (b = a));
    this.R |= 4608;
    this.so = new G2();
    this.rl = new G2();
    this.Sa = this.xp = this.ki = this.to = this.ro = this.$a = null;
    this.uc = new ni2();
    this.uc.group = this;
    this.$q = null;
    b && Object.assign(this, b);
  }
  ma2(U2, W2);
  U2.prototype.cloneProtected = function(a) {
    W2.prototype.cloneProtected.call(this, a);
    this.R = this.R & -32769;
    this.$a !== null && (a.$a = this.$a.copy());
    a.ro = this.ro;
    a.to = this.to;
    a.ki = this.ki;
    a.xp = this.xp;
    var b = a.$l(function(a2) {
      return a2 instanceof ng2;
    });
    b instanceof ng2 ? a.Sa = b : a.Sa = null;
    this.uc !== null ? (a.uc = this.uc.copy(), a.uc.group = a) : (a.uc !== null && (a.uc.group = null), a.uc = null);
  };
  t2 = U2.prototype;
  t2.wf = function(a) {
    W2.prototype.wf.call(this, a);
    var b = a.$j();
    for (a = a.memberParts; a.next(); ) {
      var c = a.value;
      c.s();
      c.B(8);
      c.Qj();
      if (c instanceof W2)
        c.rd(b);
      else if (c instanceof T2)
        for (c = c.labelNodes; c.next(); )
          c.value.rd(b);
    }
  };
  t2.qk = function(a, b, c, d, e, f2, g2) {
    if (a === pe2 && b === "elements")
      if (e instanceof ng2)
        this.Sa === null ? this.Sa = e : this.Sa !== e && C2("Cannot insert a second Placeholder into the visual tree of a Group.");
      else {
        if (e instanceof X2) {
          var h = e.$l(function(a2) {
            return a2 instanceof ng2;
          });
          h instanceof ng2 && (this.Sa === null ? this.Sa = h : this.Sa !== h && C2("Cannot insert a second Placeholder into the visual tree of a Group."));
        }
      }
    else
      a === qe2 && b === "elements" && this.Sa !== null && (d === this.Sa ? this.Sa = null : d instanceof X2 && this.Sa.sg(d) && (this.Sa = null));
    W2.prototype.qk.call(this, a, b, c, d, e, f2, g2);
  };
  t2.jm = function(a, b) {
    W2.prototype.jm.call(this, a, b);
    this.isClipping && this.type !== X2.Spot && this.isSubGraphExpanded && (a = this.resizeObject, a instanceof X2 && (a = a.pb()), this.$a === null && (this.$a = new N2()), a.Li(this.$a), a instanceof xf2 && this.$a.Jc(-a.strokeWidth, -a.strokeWidth));
  };
  t2.zh = function(a, b, c, d) {
    this.cf = this.Sa;
    W2.prototype.zh.call(this, a, b, c, d);
  };
  t2.Ta = function() {
    var a = this;
    a.isSubGraphExpanded && this.memberParts.each(function(b) {
      !a.computesBoundsIncludingLinks && b instanceof T2 || b.Ta();
    });
    W2.prototype.Ta.call(this);
  };
  t2.Ri = function() {
    if (!W2.prototype.Ri.call(this))
      return false;
    for (var a = this.memberParts; a.next(); ) {
      var b = a.value;
      if (b instanceof W2) {
        if (b.isVisible() && jj2(b))
          return false;
      } else if (b instanceof T2 && b.isVisible() && jj2(b) && b.fromNode !== this && b.toNode !== this)
        return false;
    }
    return true;
  };
  function zo(a, b) {
    if (a.so.add(b)) {
      b instanceof U2 && a.rl.add(b);
      var c = a.memberAdded;
      if (c !== null) {
        var d = true, e = a.diagram;
        e !== null && (d = e.Z, e.Z = true);
        c(a, b);
        e !== null && (e.Z = d);
      }
      a.isVisible() && a.isSubGraphExpanded || b.Pb(false);
    }
    b instanceof T2 && !a.computesBoundsIncludingLinks || (b = a.Sa, b === null && (b = a), b.s());
  }
  function Ao(a, b) {
    if (a.so.remove(b)) {
      b instanceof U2 && a.rl.remove(b);
      var c = a.memberRemoved;
      if (c !== null) {
        var d = true, e = a.diagram;
        e !== null && (d = e.Z, e.Z = true);
        c(a, b);
        e !== null && (e.Z = d);
      }
      a.isVisible() && a.isSubGraphExpanded || b.Pb(true);
    }
    b instanceof T2 && !a.computesBoundsIncludingLinks || (b = a.Sa, b === null && (b = a), b.s());
  }
  t2.Wj = function() {
    if (0 < this.so.count) {
      var a = this.diagram;
      if (a !== null)
        for (var b = this.so.copy().iterator; b.next(); )
          a.remove(b.value);
    }
    W2.prototype.Wj.call(this);
  };
  U2.prototype.canAddMembers = function(a) {
    var b = this.diagram;
    if (b === null)
      return false;
    b = b.commandHandler;
    for (a = Ok(a).iterator; a.next(); )
      if (!b.isValidMember(this, a.value))
        return false;
    return true;
  };
  U2.prototype.addMembers = function(a, b) {
    var c = this.diagram;
    if (c === null)
      return false;
    c = c.commandHandler;
    var d = true;
    for (a = Ok(a).iterator; a.next(); ) {
      var e = a.value;
      !b || c.isValidMember(this, e) ? e.containingGroup = this : d = false;
    }
    return d;
  };
  U2.prototype.canUngroup = function() {
    if (!this.ungroupable)
      return false;
    var a = this.layer;
    if (a !== null && !a.allowUngroup)
      return false;
    a = a.diagram;
    return a === null || a.allowUngroup ? true : false;
  };
  t2 = U2.prototype;
  t2.rd = function(a) {
    a === void 0 && (a = null);
    var b = (this.R & 65536) !== 0;
    W2.prototype.rd.call(this, a);
    if (!b)
      for ((this.R & 65536) !== 0 !== true && (this.R = this.R ^ 65536), b = this.Uu(); b.next(); ) {
        var c = b.value;
        if (a === null || !a.contains(c)) {
          var d = c.fromNode;
          d !== null && d !== this && d.Jd(this) && !d.isVisible() ? (Ko(c.fromPort), Ko(c.toPort), c.Va()) : (d = c.toNode, d !== null && d !== this && d.Jd(this) && !d.isVisible() && (Ko(c.fromPort), Ko(c.toPort), c.Va()));
        }
      }
  };
  t2.Uu = function() {
    var a = this.diagram !== null && this.diagram.qx;
    if (a && this.$q !== null)
      return this.$q.iterator;
    var b = this.$j();
    b.add(this);
    for (var c = new G2(), d = b.iterator; d.next(); ) {
      var e = d.value;
      if (e instanceof W2)
        for (e = e.linksConnected; e.next(); ) {
          var f2 = e.value;
          b.contains(f2) || c.add(f2);
        }
    }
    a && (this.$q = c);
    return c.iterator;
  };
  t2.Hz = function() {
    var a = this.$j();
    a.add(this);
    for (var b = new G2(), c = a.iterator; c.next(); ) {
      var d = c.value;
      if (d instanceof W2)
        for (d = d.linksConnected; d.next(); ) {
          var e = d.value, f2 = e.fromNode;
          f2 === null || a.contains(f2) && f2 !== this || b.add(f2);
          e = e.toNode;
          e === null || a.contains(e) && e !== this || b.add(e);
        }
    }
    return b.iterator;
  };
  t2.Gz = function() {
    function a(b2, d) {
      b2 !== null && (d.add(b2), a(b2.containingGroup, d));
    }
    var b = new G2();
    a(this, b);
    return b;
  };
  t2.$j = function() {
    var a = new G2();
    Mk(a, this, true, 0, true);
    a.remove(this);
    return a;
  };
  t2.Pb = function(a) {
    W2.prototype.Pb.call(this, a);
    for (var b = this.memberParts; b.next(); )
      b.value.Pb(a);
  };
  U2.prototype.collapseSubGraph = function() {
    var a = this.diagram;
    if (a !== null && !a.Ke) {
      a.Ke = true;
      var b = this.$j();
      Wo(this, b, a, this);
      a.Ke = false;
    }
  };
  function Wo(a, b, c, d) {
    for (var e = a.memberParts; e.next(); ) {
      var f2 = e.value;
      f2.Pb(false);
      f2 instanceof U2 && f2.isSubGraphExpanded && (f2.wasSubGraphExpanded = f2.isSubGraphExpanded, Wo(f2, b, c, d));
      if (f2 instanceof W2)
        f2.rd(b), c.Mj(f2, d);
      else if (f2 instanceof T2)
        for (f2 = f2.labelNodes; f2.next(); )
          f2.value.rd(b);
    }
    a.isSubGraphExpanded = false;
  }
  U2.prototype.expandSubGraph = function() {
    var a = this.diagram;
    if (a !== null && !a.Ke) {
      a.Ke = true;
      var b = this.$j();
      Xo(this, b, a, this);
      a.Ke = false;
    }
  };
  function Xo(a, b, c, d) {
    for (var e = a.memberParts; e.next(); ) {
      var f2 = e.value;
      f2.Pb(true);
      f2 instanceof U2 && f2.wasSubGraphExpanded && (f2.wasSubGraphExpanded = false, Xo(f2, b, c, d));
      if (f2 instanceof W2)
        f2.rd(b), c.Oj(f2, d);
      else if (f2 instanceof T2)
        for (f2 = f2.labelNodes; f2.next(); )
          f2.value.rd(b);
    }
    a.isSubGraphExpanded = true;
  }
  U2.prototype.move = function(a, b) {
    b === void 0 && (b = false);
    var c = b ? this.location : this.position, d = c.x;
    c = c.y;
    var e = a.x, f2 = a.y;
    if (!(d === e || isNaN(d) && isNaN(e)) || !(c === f2 || isNaN(c) && isNaN(f2))) {
      d = e - (isNaN(d) ? 0 : d);
      c = f2 - (isNaN(c) ? 0 : c);
      f2 = K2.alloc();
      W2.prototype.move.call(this, a, b);
      a = new G2();
      for (b = this.$j().iterator; b.next(); )
        if (e = b.value, e instanceof T2 && (e.suspendsRouting && a.add(e), e.td || e.fromNode !== this && e.toNode !== this))
          e.suspendsRouting = true;
      for (b.reset(); b.next(); )
        if (e = b.value, !(e.Hh() || e instanceof W2 && e.isLinkLabel)) {
          var g2 = e.position, h = e.location;
          g2.u() ? (f2.x = g2.x + d, f2.y = g2.y + c, e.position = f2) : h.u() && (f2.x = h.x + d, f2.y = h.y + c, e.location = f2);
        }
      for (b.reset(); b.next(); )
        if (e = b.value, e instanceof T2 && (e.suspendsRouting = a.contains(e), e.td || e.fromNode !== this && e.toNode !== this))
          g2 = e.position, f2.x = g2.x + d, f2.y = g2.y + c, f2.u() ? e.move(f2) : e.Va(), Gj2(e) && e.Va();
      K2.free(f2);
    }
  };
  na2.Object.defineProperties(U2.prototype, {
    placeholder: { get: function() {
      return this.Sa;
    } },
    computesBoundsAfterDrag: { get: function() {
      return (this.R & 2048) !== 0;
    }, set: function(a) {
      var b = (this.R & 2048) !== 0;
      b !== a && (this.R ^= 2048, this.g("computesBoundsAfterDrag", b, a));
    } },
    computesBoundsIncludingLinks: { get: function() {
      return (this.R & 4096) !== 0;
    }, set: function(a) {
      var b = (this.R & 4096) !== 0;
      b !== a && (this.R ^= 4096, this.g("computesBoundsIncludingLinks", b, a));
    } },
    computesBoundsIncludingLocation: { get: function() {
      return (this.R & 8192) !== 0;
    }, set: function(a) {
      var b = (this.R & 8192) !== 0;
      b !== a && (this.R ^= 8192, this.g("computesBoundsIncludingLocation", b, a));
    } },
    handlesDragDropForMembers: { get: function() {
      return (this.R & 16384) !== 0;
    }, set: function(a) {
      var b = (this.R & 16384) !== 0;
      b !== a && (this.R ^= 16384, this.g("handlesDragDropForMembers", b, a));
    } },
    memberParts: { get: function() {
      return this.so.iterator;
    } },
    layout: { get: function() {
      return this.uc;
    }, set: function(a) {
      var b = this.uc;
      if (b !== a) {
        b !== null && (b.diagram = null, b.group = null);
        this.uc = a;
        var c = this.diagram;
        a !== null && (a.diagram = c, a.group = this);
        c !== null && (c.Oh = true);
        this.g("layout", b, a);
        c !== null && c.Gb();
      }
    } },
    memberAdded: { get: function() {
      return this.ro;
    }, set: function(a) {
      var b = this.ro;
      b !== a && (this.ro = a, this.g("memberAdded", b, a));
    } },
    memberRemoved: {
      get: function() {
        return this.to;
      },
      set: function(a) {
        var b = this.to;
        b !== a && (this.to = a, this.g("memberRemoved", b, a));
      }
    },
    memberValidation: { get: function() {
      return this.ki;
    }, set: function(a) {
      var b = this.ki;
      b !== a && (this.ki = a, this.g("memberValidation", b, a));
    } },
    ungroupable: { get: function() {
      return (this.R & 256) !== 0;
    }, set: function(a) {
      var b = (this.R & 256) !== 0;
      b !== a && (this.R ^= 256, this.g("ungroupable", b, a));
    } },
    isSubGraphExpanded: {
      get: function() {
        return (this.R & 512) !== 0;
      },
      set: function(a) {
        var b = (this.R & 512) !== 0;
        if (b !== a) {
          this.R ^= 512;
          var c = this.diagram;
          this.g("isSubGraphExpanded", b, a);
          b = this.subGraphExpandedChanged;
          if (b !== null) {
            var d = true;
            c !== null && (d = c.Z, c.Z = true);
            b(this);
            c !== null && (c.Z = d);
          }
          c !== null && c.undoManager.isUndoingRedoing ? (this.Sa !== null && this.Sa.s(), this.memberParts.each(function(a2) {
            a2.updateAdornments();
          })) : a ? this.expandSubGraph() : this.collapseSubGraph();
        }
      }
    },
    wasSubGraphExpanded: { get: function() {
      return (this.R & 1024) !== 0;
    }, set: function(a) {
      var b = (this.R & 1024) !== 0;
      b !== a && (this.R ^= 1024, this.g("wasSubGraphExpanded", b, a));
    } },
    subGraphExpandedChanged: { get: function() {
      return this.xp;
    }, set: function(a) {
      var b = this.xp;
      b !== a && (this.xp = a, this.g("subGraphExpandedChanged", b, a));
    } },
    Jh: { get: function() {
      return (this.R & 32768) !== 0;
    }, set: function(a) {
      (this.R & 32768) !== 0 !== a && (this.R ^= 32768);
    } }
  });
  U2.prototype.expandSubGraph = U2.prototype.expandSubGraph;
  U2.prototype.collapseSubGraph = U2.prototype.collapseSubGraph;
  U2.prototype.findSubGraphParts = U2.prototype.$j;
  U2.prototype.findContainingGroupChain = U2.prototype.Gz;
  U2.prototype.findExternalNodesConnected = U2.prototype.Hz;
  U2.prototype.findExternalLinksConnected = U2.prototype.Uu;
  U2.prototype.ensureBounds = U2.prototype.Ta;
  U2.className = "Group";
  function ng2(a) {
    Y2.call(this);
    this.nb = pc2;
    this.fp = new N2(NaN, NaN, NaN, NaN);
    a && Object.assign(this, a);
  }
  ma2(ng2, Y2);
  ng2.prototype.cloneProtected = function(a) {
    Y2.prototype.cloneProtected.call(this, a);
    a.nb = this.nb.I();
    a.fp = this.fp.copy();
  };
  ng2.prototype.Bh = function(a) {
    if (this.background === null && this.areaBackground === null)
      return false;
    var b = this.naturalBounds;
    return bc2(0, 0, b.width, b.height, a.x, a.y);
  };
  ng2.prototype.im = function() {
    var a = this.part;
    a !== null && (a instanceof U2 || a instanceof ze) || C2("Placeholder is not inside a Group or Adornment.");
    if (a instanceof U2) {
      var b = this.computeBorder(this.fp), c = this.minSize, d = this.wc;
      Rb2(d, (isFinite(c.width) ? Math.max(c.width, b.width) : b.width) || 0, (isFinite(c.height) ? Math.max(c.height, b.height) : b.height) || 0);
      this.xe(0, 0, d.width, d.height);
      d = a.memberParts;
      for (c = false; d.next(); )
        if (d.value.isVisible()) {
          c = true;
          break;
        }
      d = a.diagram;
      !c || d === null || d.animationManager.kv(a) || isNaN(b.x) || isNaN(b.y) || (c = K2.alloc(), c.Ti(b, a.locationSpot), c.A(a.location) || (a.location = c), K2.free(c));
    } else {
      b = this.wc;
      c = this.nb;
      d = c.left + c.right;
      var e = c.top + c.bottom, f2 = a.adornedObject;
      a.angle = f2.Ki();
      var g2 = 0;
      f2 instanceof xf2 && (g2 = f2.strokeWidth);
      var h = f2.Af(), k = f2.naturalBounds, l2 = (k.width + g2) * h;
      g2 = (k.height + g2) * h;
      a.type !== X2.Link && (f2 = f2.da(a.category === "Selection" ? uc2 : a.locationSpot, K2.alloc()), a.location = f2, K2.free(f2));
      isNaN(l2) || isNaN(g2) ? (a = a.adornedObject, l2 = a.da(uc2, K2.alloc()), f2 = N2.allocAt(l2.x, l2.y, 0, 0), f2.Oe(a.da(Cc2, l2)), f2.Oe(a.da(wc2, l2)), f2.Oe(a.da(Ac2, l2)), Rb2(b, f2.width + d || 0, f2.height + e || 0), this.xe(-c.left, -c.top, b.width, b.height), K2.free(l2), N2.free(f2)) : (Rb2(b, l2 + d || 0, g2 + e || 0), this.xe(-c.left, -c.top, b.width, b.height));
    }
  };
  ng2.prototype.zh = function(a, b, c, d) {
    this.actualBounds.h(a, b, c, d);
  };
  ng2.prototype.computeBorder = function(a) {
    var b = this.part, c = b.diagram;
    if (c !== null && b instanceof U2 && !b.layer.isTemporary && b.computesBoundsAfterDrag && this.fp.u()) {
      var d = c.toolManager.findTool("Dragging");
      if (d === c.currentTool && (c = d.computeBorder(b, this.fp, a), c !== null))
        return c;
    }
    c = N2.alloc();
    d = this.computeMemberBounds(c);
    var e = this.nb;
    b instanceof U2 && !b.isSubGraphExpanded ? a.h(d.x - e.left, d.y - e.top, 0, 0) : a.h(d.x - e.left, d.y - e.top, Math.max(d.width + e.left + e.right, 0), Math.max(d.height + e.top + e.bottom, 0));
    N2.free(c);
    b instanceof U2 && b.computesBoundsIncludingLocation && b.location.u() && a.Oe(b.location);
    return a;
  };
  ng2.prototype.computeMemberBounds = function(a) {
    if (!(this.part instanceof U2))
      return a.h(0, 0, 0, 0), a;
    for (var b = this.part, c = Infinity, d = Infinity, e = -Infinity, f2 = -Infinity, g2 = b.memberParts; g2.next(); ) {
      var h = g2.value;
      if (h.isVisible()) {
        if (h instanceof T2) {
          if (!b.computesBoundsIncludingLinks)
            continue;
          if (ij2(h))
            continue;
          if (h.fromNode === b || h.toNode === b)
            continue;
        }
        h = h.actualBounds;
        h.left < c && (c = h.left);
        h.top < d && (d = h.top);
        h.right > e && (e = h.right);
        h.bottom > f2 && (f2 = h.bottom);
      }
    }
    isFinite(c) && isFinite(d) ? a.h(c, d, e - c, f2 - d) : (b = b.location, a.h(b.x, b.y, 0, 0));
    return a;
  };
  na2.Object.defineProperties(ng2.prototype, { padding: { get: function() {
    return this.nb;
  }, set: function(a) {
    typeof a === "number" && (a = new lc2(a));
    var b = this.nb;
    b.A(a) || (this.nb = a = a.I(), this.g("padding", b, a), this.s());
  } } });
  ng2.className = "Placeholder";
  function T2(a) {
    V2.call(this, X2.Link);
    this.Ia = 8;
    this.We = null;
    this.Xe = "";
    this.pf = this.Dn = null;
    this.qf = "";
    this.Dp = null;
    this.vk = Rf2;
    this.gn = 0;
    this.jn = Rf2;
    this.kn = NaN;
    this.Ej = Yo;
    this.rp = 0.5;
    this.nd = null;
    this.Db = new F2().freeze();
    this.gf = this.eh = null;
    this.yl = new N2();
    this.ma = new P2();
    this.C = this.o = this.Mf = this.Qf = null;
    this.j = [];
    this.tu = new K2();
    this.dr = this.nx = this.mx = null;
    this.Pt = NaN;
    this.P = null;
    a && Object.assign(this, a);
  }
  ma2(T2, V2);
  T2.prototype.cloneProtected = function(a) {
    V2.prototype.cloneProtected.call(this, a);
    a.Ia = this.Ia & -113;
    a.Xe = this.Xe;
    a.Dn = this.Dn;
    a.qf = this.qf;
    a.Dp = this.Dp;
    a.vk = this.vk;
    a.gn = this.gn;
    a.jn = this.jn;
    a.kn = this.kn;
    a.Ej = this.Ej;
    a.rp = this.rp;
    this.P !== null && (a.P = this.P.copy());
  };
  t2 = T2.prototype;
  t2.wf = function(a) {
    V2.prototype.wf.call(this, a);
    this.Xe = a.Xe;
    this.qf = a.qf;
    a.eh = null;
    a.Va();
    a.Mf = this.Mf;
    var b = a.fromPort;
    b !== null && Ko(b);
    a = a.toPort;
    a !== null && Ko(a);
  };
  t2.gb = function(a) {
    a.classType === T2 ? (a.value & 2) === 2 ? this.routing = a : a === Uf2 || a === Qf2 || a === Pf2 ? this.curve = a : a === Zo || a === $o || a === ap ? this.adjusting = a : a !== Yo && a !== Rf2 && C2("Unknown Link enum value for a Link property: " + a) : V2.prototype.gb.call(this, a);
  };
  t2.Kc = function() {
    this.P === null && (this.P = new Yk());
  };
  t2.Ri = function() {
    var a = this.fromNode;
    if (a !== null) {
      var b = a.findVisibleNode();
      b !== null && (a = b);
      if (jj2(a) || kj2(a))
        return false;
    }
    a = this.toNode;
    return a !== null && (b = a.findVisibleNode(), b !== null && (a = b), jj2(a) || kj2(a)) ? false : true;
  };
  t2.Rv = function() {
    return false;
  };
  t2.Vs = function() {
  };
  t2.Mc = function() {
    return false;
  };
  T2.prototype.computeAngle = function(a, b, c) {
    return T2.computeAngle(b, c);
  };
  T2.computeAngle = function(a, b) {
    switch (a) {
      default:
      case Rf2:
        a = 0;
        break;
      case Mm:
        a = b;
        break;
      case Fm:
        a = b + 90;
        break;
      case Hm:
        a = b - 90;
        break;
      case bp:
        a = b + 180;
        break;
      case Nm:
        a = M2.jq(b);
        90 < a && 270 > a && (a -= 180);
        break;
      case Gm:
        a = M2.jq(b + 90);
        90 < a && 270 > a && (a -= 180);
        break;
      case Im:
        a = M2.jq(b - 90);
        90 < a && 270 > a && (a -= 180);
        break;
      case Jm:
        a = M2.jq(b);
        if (45 < a && 135 > a || 225 < a && 315 > a)
          return 0;
        90 < a && 270 > a && (a -= 180);
    }
    return M2.jq(a);
  };
  function Fo(a) {
    var b = a.fromNode, c = a.toNode, d = null;
    b !== null ? d = c !== null ? b.Px(c) : b.containingGroup : c !== null ? d = c.containingGroup : d = null;
    b = d;
    c = a.Rh;
    if (c !== b) {
      c !== null && Ao(c, a);
      a.Rh = b;
      b !== null && zo(b, a);
      var e = a.containingGroupChanged;
      if (e !== null) {
        var f2 = true, g2 = a.diagram;
        g2 !== null && (f2 = g2.Z, g2.Z = true);
        e(a, c, b);
        g2 !== null && (g2.Z = f2);
      }
      !a.td || a.mx !== c && a.nx !== c || a.Va();
    }
    if (a.isLabeledLink)
      for (a = a.labelNodes; a.next(); )
        a.value.containingGroup = d;
  }
  t2 = T2.prototype;
  t2.Gh = function() {
    var a = this.containingGroup;
    a !== null && this.fromNode !== a && this.toNode !== a && a.computesBoundsIncludingLinks && V2.prototype.Gh.call(this);
  };
  t2.aq = function(a) {
    var b = this.fromNode;
    return a === b ? this.toNode : b;
  };
  t2.$z = function(a) {
    var b = this.fromPort;
    return a === b ? this.toPort : b;
  };
  function Oo(a, b) {
    a.nd === null && (a.nd = new G2());
    a.nd.add(b);
    a.s();
  }
  t2.cq = function(a) {
    V2.prototype.cq.call(this, a);
    cp(this) && this.fq(this.actualBounds);
    if (!a) {
      a = this.We;
      var b = null;
      a !== null && (b = this.fromPort, Mo(a, this, b));
      var c = this.pf;
      if (c !== null) {
        var d = this.toPort;
        c === a && d === b || Mo(c, this, d);
      }
      dp(this);
    }
  };
  t2.eq = function(a) {
    V2.prototype.eq.call(this, a);
    cp(this) && this.fq(this.actualBounds);
    if (!a) {
      a = this.We;
      var b = null;
      a !== null && (b = this.fromPort, No(a, this, b));
      var c = this.pf;
      if (c !== null) {
        var d = this.toPort;
        c === a && d === b || No(c, this, d);
      }
      ep(this);
    }
  };
  t2.Wj = function() {
    this.td = true;
    if (this.nd !== null) {
      var a = this.diagram;
      if (a !== null)
        for (var b = this.nd.copy().iterator; b.next(); )
          a.remove(b.value);
    }
    this.data !== null && (a = this.diagram, a !== null && a.partManager.removeDataForLink(this));
  };
  T2.prototype.updateRelationshipsFromData = function() {
    if (this.data !== null) {
      var a = this.diagram;
      a !== null && a.partManager.updateRelationshipsFromData(this);
    }
  };
  T2.prototype.move = function(a, b) {
    var c = b ? this.location : this.position, d = c.x;
    isNaN(d) && (d = 0);
    var e = c.y;
    isNaN(e) && (e = 0);
    d = a.x - d;
    e = a.y - e;
    b === true ? V2.prototype.move.call(this, a, false) : (a = K2.allocAt(c.x + d, c.y + e), V2.prototype.move.call(this, a, false), K2.free(a));
    gf2(this, d, e);
    for (a = this.labelNodes; a.next(); )
      b = a.value, c = b.position, b.moveTo(c.x + d, c.y + e);
  };
  T2.prototype.canRelinkFrom = function() {
    if (!this.relinkableFrom)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowRelink)
      return false;
    a = a.diagram;
    return a === null || a.allowRelink ? true : false;
  };
  T2.prototype.canRelinkTo = function() {
    if (!this.relinkableTo)
      return false;
    var a = this.layer;
    if (a === null)
      return true;
    if (!a.allowRelink)
      return false;
    a = a.diagram;
    return a === null || a.allowRelink ? true : false;
  };
  T2.prototype.computeMidPoint = function(a) {
    var b = this.pointsCount;
    if (b === 0)
      return a.assign(Fb2), a;
    if (b === 1)
      return a.assign(this.i(0)), a;
    if (b === 2) {
      var c = this.i(0), d = this.i(1);
      a.h((c.x + d.x) / 2, (c.y + d.y) / 2);
      return a;
    }
    if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === Uf2))
      return this.ma.av(0.5, a), a.add(this.i(0)), c = this.ma.figures.first(), a.offset(-c.startX, -c.startY), a;
    if (this.computeCurve() === Uf2) {
      if (b === 3)
        return this.i(1);
      d = (b - 1) / 3 | 0;
      c = 3 * (d / 2 | 0);
      if (d % 2 === 1) {
        d = this.i(c);
        var e = this.i(c + 1), f2 = this.i(c + 2);
        c = this.i(c + 3);
        M2.iz(d.x, d.y, e.x, e.y, f2.x, f2.y, c.x, c.y, a);
      } else
        a.assign(this.i(c));
      return a;
    }
    var g2 = this.flattenedLengths;
    c = this.flattenedTotalLength;
    for (e = f2 = d = 0; d < c / 2 && f2 < b; ) {
      e = g2[f2];
      if (d + e > c / 2)
        break;
      d += e;
      f2++;
    }
    b = this.i(f2);
    f2 = this.i(f2 + 1);
    1 > Math.abs(b.x - f2.x) ? b.y > f2.y ? a.h(b.x, b.y - (c / 2 - d)) : a.h(b.x, b.y + (c / 2 - d)) : 1 > Math.abs(b.y - f2.y) ? b.x > f2.x ? a.h(b.x - (c / 2 - d), b.y) : a.h(b.x + (c / 2 - d), b.y) : (c = (c / 2 - d) / e, a.h(b.x + c * (f2.x - b.x), b.y + c * (f2.y - b.y)));
    return a;
  };
  T2.prototype.computeMidAngle = function() {
    var a = this.pointsCount;
    if (2 > a)
      return NaN;
    if (a === 2)
      return this.i(0).Pa(this.i(1));
    if (this.isOrthogonal && (15 <= this.computeCorner() || this.computeCurve() === Uf2))
      return this.ma.Vx(0.5);
    if (this.computeCurve() === Uf2 && 4 <= a) {
      var b = (a - 1) / 3 | 0, c = 3 * (b / 2 | 0);
      if (b % 2 === 1) {
        c = Math.floor(c);
        a = this.i(c);
        b = this.i(c + 1);
        var d = this.i(c + 2);
        c = this.i(c + 3);
        return M2.hz(a.x, a.y, b.x, b.y, d.x, d.y, c.x, c.y);
      }
      if (0 < c && c + 1 < a)
        return this.i(c - 1).Pa(this.i(c + 1));
    }
    b = this.flattenedLengths;
    d = this.flattenedTotalLength;
    var e = 0;
    c = 0;
    for (var f2; e < d / 2 && c < a; ) {
      f2 = b[c];
      if (e + f2 > d / 2)
        break;
      e += f2;
      c++;
    }
    b = this.i(c);
    d = this.i(c + 1);
    if (1 > Math.abs(b.x - d.x) && 1 > Math.abs(b.y - d.y)) {
      if (0 < c && c + 2 < a)
        return this.i(c - 1).Pa(this.i(c + 2));
    } else {
      if (1 > Math.abs(b.x - d.x))
        return b.y > d.y ? 270 : 90;
      if (1 > Math.abs(b.y - d.y))
        return b.x > d.x ? 180 : 0;
    }
    return b.Pa(d);
  };
  t2 = T2.prototype;
  t2.i = function(a) {
    return this.Db.m[a];
  };
  t2.Pc = function(a, b) {
    this.Db.Oc(a, b);
  };
  t2.M = function(a, b, c) {
    this.Db.Oc(a, new K2(b, c));
  };
  t2.iA = function(a, b) {
    this.Db.wb(a, b);
  };
  t2.l = function(a, b, c) {
    this.Db.wb(a, new K2(b, c));
  };
  t2.ee = function(a) {
    this.Db.add(a);
  };
  t2.tf = function(a, b) {
    this.Db.add(new K2(a, b));
  };
  t2.Iv = function(a) {
    this.Db.eb(a);
  };
  t2.Rj = function() {
    this.Db.clear();
  };
  function gf2(a, b, c) {
    if (b !== 0 || c !== 0)
      if (a.pointsCount === 0)
        a.defaultFromPoint && a.defaultFromPoint.offset(b, c), a.defaultToPoint && a.defaultToPoint.offset(b, c);
      else {
        for (var d = a.td, e = new F2(), f2 = a.Db.iterator; f2.next(); ) {
          var g2 = f2.value;
          e.add(new K2(g2.x + b, g2.y + c).freeze());
        }
        e.freeze();
        f2 = a.Db;
        a.Db = e;
        g2 = a.diagram;
        isNaN(b) || isNaN(c) || g2 !== null && g2.animationManager.tb ? a.s() : (a.Wf.h(a.Wf.x + b, a.Wf.y + c), a.ja.h(a.ja.x + b, a.ja.y + c), ul(a));
        d ? fp(a) : (a.defaultFromPoint && (a.defaultFromPoint = a.i(0)), a.defaultToPoint && (a.defaultToPoint = a.i(a.pointsCount - 1)));
        g2 !== null && g2.animationManager.tb && (b = g2.animationManager, a.gf = e, b.Al.add(a));
        a.g("points", f2, e);
      }
  }
  t2.Lh = function() {
    this.eh === null && (this.eh = this.Db, this.Db = this.Db.copy());
  };
  t2.vf = function() {
    if (this.eh !== null) {
      for (var a = this.eh, b = this.Db, c = Infinity, d = Infinity, e = a.m, f2 = e.length, g2 = 0; g2 < f2; g2++) {
        var h = e[g2];
        c = Math.min(h.x, c);
        d = Math.min(h.y, d);
      }
      h = g2 = Infinity;
      for (var k = b.m, l2 = k.length, m2 = 0; m2 < l2; m2++) {
        var n2 = k[m2];
        g2 = Math.min(n2.x, g2);
        h = Math.min(n2.y, h);
        n2.freeze();
      }
      b.freeze();
      if (l2 === f2)
        for (f2 = 0; f2 < l2; f2++) {
          if (m2 = e[f2], n2 = k[f2], m2.x - c !== n2.x - g2 || m2.y - d !== n2.y - h) {
            this.gc(true);
            break;
          }
        }
      else
        this.gc(true);
      this.eh = null;
      c = this.diagram;
      c !== null && c.animationManager.tb && (c = c.animationManager, this.gf = b, c.Al.add(this));
      fp(this);
      this.g("points", a, b);
    }
  };
  t2.Kv = function() {
    this.eh !== null && (this.Db = this.eh, this.eh = null);
  };
  function fp(a) {
    a.Db.count === 0 ? a.td = false : (a.td = true, a.dr = null, a.Pt = NaN, a.defaultFromPoint = a.i(0), a.defaultToPoint = a.i(a.pointsCount - 1), gp(a, false));
  }
  t2.Va = function() {
    if (!this.suspendsRouting) {
      var a = this.diagram;
      if (a) {
        if (a.Hs.contains(this) || a.undoManager.isUndoingRedoing)
          return;
        a = a.animationManager;
        if (a.isTicking && !a.isAnimating)
          return;
        this.gf !== null && !a.isTicking && a.isAnimating && (this.gf = null);
      }
      a = this.path;
      a !== null && (this.td = false, this.s(), a.s());
    }
  };
  t2.vg = function() {
    if (!this.td && !this.computingPoints) {
      var a = true;
      try {
        this.computingPoints = true, this.Lh(), a = this.computePoints();
      } catch (b) {
        this.computingPoints = false, this.Kv();
      } finally {
        this.computingPoints = false, a ? this.vf() : this.Kv();
      }
    }
  };
  T2.prototype.computePoints = function() {
    if (this.diagram === null)
      return false;
    var a = this.fromNode, b = null;
    a === null ? (hp || (hp = new W2(), hp.desiredSize = Hb2, hp.Ta()), this.defaultFromPoint && (hp.location = this.defaultFromPoint, hp.Ta(), b = a = hp)) : b = this.fromPort;
    if (b !== null && !a.isVisible()) {
      var c = a.findVisibleNode();
      c !== null && c !== a ? (a = c, b = c.port) : a = c;
    }
    this.mx = a;
    if (a === null || !a.location.u())
      return false;
    for (; !(b === null || b.actualBounds.u() && b.Ff()); )
      b = b.panel;
    if (b === null)
      return false;
    var d = this.toNode, e = null;
    d === null ? (ip || (ip = new W2(), ip.desiredSize = Hb2, ip.Ta()), this.defaultToPoint && (ip.location = this.defaultToPoint, ip.Ta(), e = d = ip)) : e = this.toPort;
    e === null || d.isVisible() || (c = d.findVisibleNode(), c !== null && c !== d ? (d = c, e = c.port) : d = c);
    this.nx = d;
    if (d === null || !d.location.u())
      return false;
    for (; !(e === null || e.actualBounds.u() && e.Ff()); )
      e = e.panel;
    if (e === null)
      return false;
    var f2 = this.pointsCount, g2 = this.computeSpot(true, b);
    c = this.computeSpot(false, e);
    var h = jp(g2), k = jp(c), l2 = b === e && b !== null, m2 = this.isOrthogonal, n2 = this.curve === Uf2;
    this.Qf = l2 && !m2 ? n2 = true : false;
    var p2 = this.computeAdjusting() === Rf2 || l2;
    if (!m2 && !l2 && h && k) {
      if (h = false, !p2 && 3 <= f2 && (p2 = this.getLinkPoint(a, b, g2, true, false, d, e), k = this.getLinkPoint(d, e, c, false, false, a, b), h = this.adjustPoints(0, p2, f2 - 1, k)) && (p2 = this.getLinkPoint(a, b, g2, true, false, d, e), k = this.getLinkPoint(d, e, c, false, false, a, b), this.adjustPoints(0, p2, f2 - 1, k)), !h)
        if (this.Rj(), n2) {
          f2 = this.getLinkPoint(a, b, g2, true, false, d, e);
          p2 = this.getLinkPoint(d, e, c, false, false, a, b);
          h = p2.x - f2.x;
          k = p2.y - f2.y;
          l2 = this.computeCurviness();
          n2 = m2 = 0;
          var r2 = f2.x + h / 3, q2 = f2.y + k / 3, u2 = r2, w = q2;
          M2.w(k, 0) ? w = 0 < h ? w - l2 : w + l2 : (m2 = -h / k, n2 = Math.sqrt(l2 * l2 / (m2 * m2 + 1)), 0 > l2 && (n2 = -n2), u2 = (0 > k ? -1 : 1) * n2 + r2, w = m2 * (u2 - r2) + q2);
          r2 = f2.x + 2 * h / 3;
          q2 = f2.y + 2 * k / 3;
          var v2 = r2, z2 = q2;
          M2.w(k, 0) ? z2 = 0 < h ? z2 - l2 : z2 + l2 : (v2 = (0 > k ? -1 : 1) * n2 + r2, z2 = m2 * (v2 - r2) + q2);
          this.Rj();
          this.ee(f2);
          this.tf(u2, w);
          this.tf(v2, z2);
          this.ee(p2);
          this.Pc(0, this.getLinkPoint(a, b, g2, true, false, d, e));
          this.Pc(3, this.getLinkPoint(d, e, c, false, false, a, b));
        } else if (f2 = d, p2 = e, d = this.getLinkPoint(a, b, g2, true, false, f2, p2), e = this.getLinkPoint(f2, p2, c, false, false, a, b), this.hasCurviness())
          p2 = e.x - d.x, c = e.y - d.y, g2 = this.computeCurviness(), a = d.x + p2 / 2, b = d.y + c / 2, f2 = a, h = b, M2.w(c, 0) ? h = 0 < p2 ? h - g2 : h + g2 : (p2 = -p2 / c, f2 = Math.sqrt(g2 * g2 / (p2 * p2 + 1)), 0 > g2 && (f2 = -f2), f2 = (0 > c ? -1 : 1) * f2 + a, h = p2 * (f2 - a) + b), this.ee(d), this.tf(f2, h), this.ee(e);
        else {
          this.ee(d);
          this.ee(e);
          h = N2.alloc();
          b.Li(h);
          k = h.$(e);
          p2.Li(h);
          l2 = h.$(d);
          if (k || l2)
            g2 = b.da(kp(g2), new K2()), this.Pc(0, this.getLinkPointFromPoint(a, b, g2, e, true, g2)), c = p2.da(kp(c), new K2()), this.Pc(1, this.getLinkPointFromPoint(f2, p2, c, d, false, c));
          N2.free(h);
        }
    } else {
      n2 = this.isAvoiding;
      p2 && (m2 && n2 || l2) && this.Rj();
      var y2 = l2 ? this.computeCurviness() : 0;
      n2 = this.getLinkPoint(a, b, g2, true, m2, d, e);
      r2 = u2 = q2 = 0;
      if (m2 || !h || l2)
        w = this.computeEndSegmentLength(a, b, g2, true), r2 = this.getLinkDirection(a, b, n2, g2, true, m2, d, e), l2 && (h || g2.A(c) || !m2 && g2.x + c.x === 1 && g2.y + c.y === 1) && (r2 -= m2 ? 90 : 30, 0 > y2 && (r2 -= 180)), 0 > r2 ? r2 += 360 : 360 <= r2 && (r2 -= 360), l2 && (w += Math.abs(y2) * (m2 ? 1 : 2)), r2 === 0 ? q2 = w : r2 === 90 ? u2 = w : r2 === 180 ? q2 = -w : r2 === 270 ? u2 = -w : (q2 = w * Math.cos(r2 * Math.PI / 180), u2 = w * Math.sin(r2 * Math.PI / 180)), g2.Bc() && l2 && (w = b.da(yc2, K2.alloc()), v2 = K2.allocAt(w.x + 1e3 * q2, w.y + 1e3 * u2), this.getLinkPointFromPoint(a, b, w, v2, true, n2), K2.free(w), K2.free(v2));
      w = this.getLinkPoint(d, e, c, false, m2, a, b);
      var B2 = z2 = v2 = 0;
      if (m2 || !k || l2) {
        var A2 = this.computeEndSegmentLength(d, e, c, false);
        B2 = this.getLinkDirection(d, e, w, c, false, m2, a, b);
        l2 && (k || g2.A(c) || !m2 && g2.x + c.x === 1 && g2.y + c.y === 1) && (B2 += m2 ? 0 : 30, 0 > y2 && (B2 += 180));
        0 > B2 ? B2 += 360 : 360 <= B2 && (B2 -= 360);
        l2 && (A2 += Math.abs(y2) * (m2 ? 1 : 2));
        B2 === 0 ? v2 = A2 : B2 === 90 ? z2 = A2 : B2 === 180 ? v2 = -A2 : B2 === 270 ? z2 = -A2 : (v2 = A2 * Math.cos(B2 * Math.PI / 180), z2 = A2 * Math.sin(B2 * Math.PI / 180));
        c.Bc() && l2 && (c = e.da(yc2, K2.alloc()), g2 = K2.allocAt(c.x + 1e3 * v2, c.y + 1e3 * z2), this.getLinkPointFromPoint(d, e, c, g2, false, w), K2.free(c), K2.free(g2));
      }
      c = n2;
      if (m2 || !h || l2)
        c = new K2(n2.x + q2, n2.y + u2);
      g2 = w;
      if (m2 || !k || l2)
        g2 = new K2(w.x + v2, w.y + z2);
      !p2 && !m2 && h && 3 < f2 && this.adjustPoints(0, n2, f2 - 2, g2) ? this.Pc(f2 - 1, w) : !p2 && !m2 && k && 3 < f2 && this.adjustPoints(1, c, f2 - 1, w) ? this.Pc(0, n2) : !p2 && (m2 ? 6 <= f2 : 4 < f2) && this.adjustPoints(1, c, f2 - 2, g2) ? (this.Pc(0, n2), this.Pc(f2 - 1, w)) : (this.Rj(), this.ee(n2), (m2 || !h || l2) && this.ee(c), m2 && this.addOrthoPoints(c, r2, g2, B2, a, d), (m2 || !k || l2) && this.ee(g2), this.ee(w));
    }
    return true;
  };
  function lp(a, b) {
    Math.abs(b.x - a.x) > Math.abs(b.y - a.y) ? (b.x >= a.x ? b.x = a.x + 9e9 : b.x = a.x - 9e9, b.y = a.y) : (b.y >= a.y ? b.y = a.y + 9e9 : b.y = a.y - 9e9, b.x = a.x);
    return b;
  }
  T2.prototype.getLinkPointFromPoint = function(a, b, c, d, e, f2) {
    f2 === void 0 && (f2 = new K2());
    if (a === null || b === null)
      return f2.assign(c), f2;
    a.isVisible() || (e = a.findVisibleNode(), e !== null && e !== a && (b = e.port));
    a = null;
    e = b.panel;
    e === null || e.je() || (e = e.panel);
    if (e === null) {
      e = d.x;
      d = d.y;
      var g2 = c.x;
      c = c.y;
    } else {
      a = e.fe;
      e = 1 / (a.m11 * a.m22 - a.m12 * a.m21);
      g2 = a.m22 * e;
      var h = -a.m12 * e, k = -a.m21 * e, l2 = a.m11 * e, m2 = e * (a.m21 * a.dy - a.m22 * a.dx), n2 = e * (a.m12 * a.dx - a.m11 * a.dy);
      e = d.x * g2 + d.y * k + m2;
      d = d.x * h + d.y * l2 + n2;
      g2 = c.x * g2 + c.y * k + m2;
      c = c.x * h + c.y * l2 + n2;
    }
    b.ak(e, d, g2, c, f2);
    a !== null && f2.transform(a);
    return f2;
  };
  function mp(a, b) {
    var c = b.Qo;
    c === null && (c = new np(), c.port = b, c.node = b.part, b.Qo = c);
    return op(c, a);
  }
  T2.prototype.getLinkPoint = function(a, b, c, d, e, f2, g2, h) {
    h === void 0 && (h = new K2());
    if (c.hb() && !jp(c))
      return b.da(c, h), h;
    if (c.Nc()) {
      var k = mp(this, b);
      if (k !== null) {
        h.assign(k.hq);
        if (e && this.routing === pp) {
          var l2 = mp(this, g2);
          if (l2 !== null && k.Yl < l2.Yl) {
            k = K2.alloc();
            l2 = K2.alloc();
            var m2 = new N2(b.da(uc2, k), b.da(Cc2, l2)), n2 = this.computeSpot(!d, g2);
            a = this.getLinkPoint(f2, g2, n2, !d, e, a, b, l2);
            (c.Df(Fc2) || c.Df(Gc2)) && a.y >= m2.y && a.y <= m2.y + m2.height ? h.y = a.y : (c.Df(Ec2) || c.Df(Hc2)) && a.x >= m2.x && a.x <= m2.x + m2.width && (h.x = a.x);
            K2.free(k);
            K2.free(l2);
          }
        }
        return h;
      }
    }
    c = b.da(kp(c), K2.alloc());
    this.pointsCount > (e ? 6 : 2) ? (g2 = d ? this.i(1) : this.i(this.pointsCount - 2), e && (g2 = lp(c, g2.copy()))) : (k = this.computeSpot(!d, g2), f2 = K2.alloc(), g2 = g2.da(kp(k), f2), e && (g2 = lp(c, g2)), K2.free(f2));
    this.getLinkPointFromPoint(a, b, c, g2, d, h);
    K2.free(c);
    return h;
  };
  T2.prototype.getLinkDirection = function(a, b, c, d, e, f2, g2, h) {
    a:
      if (d.hb())
        var k = d.x > d.y ? d.x > 1 - d.y ? 0 : d.x < 1 - d.y ? 270 : 315 : d.x < d.y ? d.x > 1 - d.y ? 90 : d.x < 1 - d.y ? 180 : 135 : 0.5 > d.x ? 225 : 0.5 < d.x ? 45 : 0;
      else {
        if (d.Nc() && (k = mp(this, b), k !== null))
          switch (k.Cc) {
            case 1:
              k = 270;
              break a;
            case 2:
              k = 180;
              break a;
            default:
            case 4:
              k = 0;
              break a;
            case 8:
              k = 90;
              break a;
          }
        k = b.da(yc2, K2.alloc());
        this.pointsCount > (f2 ? 6 : 2) ? (h = e ? this.i(1) : this.i(this.pointsCount - 2), h = f2 ? lp(k, h.copy()) : c) : (c = K2.alloc(), h = h.da(yc2, c), K2.free(c));
        c = Math.abs(h.x - k.x) > Math.abs(h.y - k.y) ? h.x >= k.x ? 0 : 180 : h.y >= k.y ? 90 : 270;
        K2.free(k);
        k = c;
      }
    d.Bc() && g2.Jd(a) && (k += 180, 360 <= k && (k -= 360));
    if (jp(d))
      return k;
    a = b.Ki();
    if (a === 0)
      return k;
    45 <= a && 135 > a ? k += 90 : 135 <= a && 225 > a ? k += 180 : 225 <= a && 315 > a && (k += 270);
    360 <= k && (k -= 360);
    return k;
  };
  T2.prototype.computeEndSegmentLength = function(a, b, c, d) {
    if (b !== null && c.Nc() && (a = mp(this, b), a !== null))
      return a.Ru;
    a = d ? this.fromEndSegmentLength : this.toEndSegmentLength;
    b !== null && isNaN(a) && (a = d ? b.fromEndSegmentLength : b.toEndSegmentLength);
    isNaN(a) && (a = 10);
    return a;
  };
  T2.prototype.computeSpot = function(a, b) {
    b === void 0 && (b = null);
    a ? (a = b ? b : this.fromPort, a === null ? a = yc2 : (b = this.fromSpot, b.Nb() && (b = a.fromSpot), a = b === Uc2 ? rc2 : b)) : (a = b ? b : this.toPort, a === null ? a = yc2 : (b = this.toSpot, b.Nb() && (b = a.toSpot), a = b === Uc2 ? rc2 : b));
    return a;
  };
  function jp(a) {
    return a === rc2 || a.x === 0.5 && a.y === 0.5;
  }
  function kp(a) {
    return a.x === 0.5 && a.y === 0.5 ? a : yc2;
  }
  T2.prototype.computeOtherPoint = function(a, b) {
    if (this.computeAdjusting() !== Rf2 && 4 < this.pointsCount)
      return this.computeMidPoint(new K2());
    a = b.Qo;
    a = a !== null ? op(a, this) : null;
    return a !== null ? a.hq : b.da(yc2);
  };
  T2.prototype.computeShortLength = function(a) {
    if (a) {
      a = this.fromShortLength;
      if (isNaN(a)) {
        var b = this.fromPort;
        b !== null && (a = b.fromShortLength);
      }
      return isNaN(a) ? 0 : a;
    }
    a = this.toShortLength;
    isNaN(a) && (b = this.toPort, b !== null && (a = b.toShortLength));
    return isNaN(a) ? 0 : a;
  };
  T2.prototype.zf = function(a, b, c, d, e, f2) {
    if (this.pickable === false)
      return false;
    b === void 0 && (b = null);
    c === void 0 && (c = null);
    var g2 = f2;
    f2 === void 0 && (g2 = od2.alloc(), g2.reset());
    g2.multiply(this.transform);
    if (this.Ah(a, g2))
      return Ym(this, b, c, e), f2 === void 0 && od2.free(g2), true;
    if (this.Lc(a, g2)) {
      var h = false;
      if (!this.isAtomic)
        for (var k = this.T.m, l2 = k.length; l2--; ) {
          var m2 = k[l2];
          if (m2.visible || m2 === this.locationObject) {
            var n2 = m2.actualBounds, p2 = this.naturalBounds;
            if (!(n2.x > p2.width || n2.y > p2.height || 0 > n2.x + n2.width || 0 > n2.y + n2.height)) {
              n2 = od2.alloc();
              n2.set(g2);
              if (m2 instanceof X2)
                h = m2.zf(a, b, c, d, e, n2);
              else if (this.path === m2) {
                if (m2 instanceof xf2)
                  if (h = a, p2 = d, m2.pickable === false)
                    h = false;
                  else if (n2.multiply(m2.transform), p2)
                    b: {
                      var r2 = h, q2 = n2;
                      if (m2.Ah(r2, q2))
                        h = true;
                      else {
                        if (q2 === void 0 && (q2 = m2.transform, r2.Ge(m2.actualBounds))) {
                          h = true;
                          break b;
                        }
                        h = r2.left;
                        p2 = r2.right;
                        var u2 = r2.top;
                        r2 = r2.bottom;
                        var w = K2.alloc(), v2 = K2.alloc(), z2 = K2.alloc(), y2 = od2.alloc();
                        y2.set(q2);
                        y2.tv(m2.transform);
                        y2.Bs();
                        v2.x = p2;
                        v2.y = u2;
                        v2.transform(y2);
                        w.x = h;
                        w.y = u2;
                        w.transform(y2);
                        q2 = false;
                        An(m2, w, v2, z2) ? q2 = true : (w.x = p2, w.y = r2, w.transform(y2), An(m2, w, v2, z2) ? q2 = true : (v2.x = h, v2.y = r2, v2.transform(y2), An(m2, w, v2, z2) ? q2 = true : (w.x = h, w.y = u2, w.transform(y2), An(m2, w, v2, z2) && (q2 = true))));
                        od2.free(y2);
                        K2.free(w);
                        K2.free(v2);
                        K2.free(z2);
                        h = q2;
                      }
                    }
                  else
                    h = m2.Ah(h, n2);
              } else
                h = bl(m2, a, d, n2);
              h && (p2 = m2, b !== null && (p2 = b(m2)), p2 && (c === null || c(p2)) && e.add(p2));
              od2.free(n2);
            }
          }
        }
      f2 === void 0 && od2.free(g2);
      return h || this.background !== null || this.areaBackground !== null;
    }
    f2 === void 0 && od2.free(g2);
    return false;
  };
  T2.prototype.computeCurve = function() {
    if (this.Qf === null) {
      var a = this.fromPort, b = this.isOrthogonal;
      this.Qf = a !== null && a === this.toPort && !b;
    }
    return this.Qf ? Uf2 : this.curve;
  };
  T2.prototype.computeCorner = function() {
    if (this.curve === Uf2)
      return 0;
    var a = this.corner;
    if (isNaN(a) || 0 > a)
      a = 10;
    return a;
  };
  T2.prototype.findMidLabel = function() {
    for (var a = this.path, b = this.T.m, c = b.length, d = 0; d < c; d++) {
      var e = b[d];
      if (e !== a && !e.isPanelMain && (e.segmentIndex === -Infinity || isNaN(e.segmentIndex)))
        return e;
    }
    for (a = this.labelNodes; a.next(); )
      if (b = a.value, b.segmentIndex === -Infinity || isNaN(b.segmentIndex))
        return b;
    return null;
  };
  T2.prototype.computeSpacing = function() {
    if (!this.isVisible())
      return 0;
    var a = qp;
    a = Math.max(a, this.computeThickness());
    var b = this.fromPort, c = this.toPort;
    if (b !== null && c !== null) {
      var d = this.findMidLabel();
      if (d !== null) {
        var e = d.naturalBounds, f2 = d.margin, g2 = isNaN(e.width) ? 30 : e.width * d.scale + f2.left + f2.right;
        e = isNaN(e.height) ? 14 : e.height * d.scale + f2.top + f2.bottom;
        d = d.segmentOrientation;
        d === Mm || d === Nm || d === bp ? a = Math.max(a, e) : d === Hm || d === Im || d === Fm || d === Gm ? a = Math.max(a, g2) : (b = b.da(yc2).Pa(c.da(yc2)) / 180 * Math.PI, a = Math.max(a, Math.abs(Math.sin(b) * g2) + Math.abs(Math.cos(b) * e) + 1));
        this.curve === Uf2 && (a *= 1.333);
      }
    }
    return a;
  };
  T2.prototype.arrangeBundledLinks = function(a, b) {
    if (b)
      for (b = 0; b < a.length; b++) {
        var c = a[b];
        c.computeAdjusting() === Rf2 && c.Va();
      }
  };
  T2.prototype.computeCurviness = function() {
    var a = this.curviness;
    if (isNaN(a)) {
      a = rp;
      var b = this.Mf;
      if (b !== null) {
        for (var c = Ea2(), d = 0, e = b.links, f2 = 0; f2 < e.length; f2++) {
          var g2 = e[f2].computeSpacing();
          c.push(g2);
          d += g2;
        }
        d = -d / 2;
        for (f2 = 0; f2 < e.length; f2++) {
          if (e[f2] === this) {
            a = d + c[f2] / 2;
            break;
          }
          d += c[f2];
        }
        b.Ks === this.fromNode && (a = -a);
        Ia2(c);
      }
    }
    return a;
  };
  T2.prototype.computeThickness = function() {
    if (!this.isVisible())
      return 0;
    var a = this.path;
    return a !== null ? Math.max(a.strokeWidth, 1) : 1;
  };
  T2.prototype.hasCurviness = function() {
    return !isNaN(this.curviness) || this.Mf !== null;
  };
  T2.prototype.adjustPoints = function(a, b, c, d) {
    var e = this.computeAdjusting();
    if (this.isOrthogonal) {
      if (e === $o)
        return false;
      e === ap && (e = Zo);
    }
    switch (e) {
      case $o:
        var f2 = this.i(a), g2 = this.i(c);
        if (!f2.Ua(b) || !g2.Ua(d)) {
          e = f2.x;
          f2 = f2.y;
          var h = g2.x - e, k = g2.y - f2, l2 = Math.sqrt(h * h + k * k);
          if (!M2.aa(l2, 0)) {
            if (M2.aa(h, 0))
              var m2 = 0 > k ? -Math.PI / 2 : Math.PI / 2;
            else
              m2 = Math.atan(k / Math.abs(h)), 0 > h && (m2 = Math.PI - m2);
            g2 = b.x;
            var n2 = b.y;
            h = d.x - g2;
            var p2 = d.y - n2;
            k = Math.sqrt(h * h + p2 * p2);
            M2.aa(h, 0) ? p2 = 0 > p2 ? -Math.PI / 2 : Math.PI / 2 : (p2 = Math.atan(p2 / Math.abs(h)), 0 > h && (p2 = Math.PI - p2));
            l2 = k / l2;
            m2 = p2 - m2;
            this.Pc(a, b);
            for (a += 1; a < c; a++)
              b = this.i(a), h = b.x - e, k = b.y - f2, b = Math.sqrt(h * h + k * k), M2.aa(b, 0) || (M2.aa(h, 0) ? k = 0 > k ? -Math.PI / 2 : Math.PI / 2 : (k = Math.atan(k / Math.abs(h)), 0 > h && (k = Math.PI - k)), h = k + m2, b *= l2, this.M(a, g2 + b * Math.cos(h), n2 + b * Math.sin(h)));
            this.Pc(c, d);
          }
        }
        return true;
      case ap:
        f2 = this.i(a);
        n2 = this.i(c);
        if (!f2.Ua(b) || !n2.Ua(d)) {
          e = f2.x;
          f2 = f2.y;
          g2 = n2.x;
          n2 = n2.y;
          l2 = (g2 - e) * (g2 - e) + (n2 - f2) * (n2 - f2);
          h = b.x;
          m2 = b.y;
          k = d.x;
          p2 = d.y;
          var r2 = 1;
          if (k - h !== 0) {
            var q2 = (p2 - m2) / (k - h);
            r2 = Math.sqrt(1 + 1 / (q2 * q2));
          } else
            q2 = 9e9;
          this.Pc(a, b);
          for (a += 1; a < c; a++) {
            b = this.i(a);
            var u2 = b.x, w = b.y, v2 = 0.5;
            l2 !== 0 && (v2 = ((e - u2) * (e - g2) + (f2 - w) * (f2 - n2)) / l2);
            var z2 = e + v2 * (g2 - e), y2 = f2 + v2 * (n2 - f2);
            b = Math.sqrt((u2 - z2) * (u2 - z2) + (w - y2) * (w - y2));
            w < q2 * (u2 - z2) + y2 && (b = -b);
            0 < q2 && (b = -b);
            u2 = h + v2 * (k - h);
            v2 = m2 + v2 * (p2 - m2);
            q2 !== 0 ? (b = u2 + b / r2, this.M(a, b, v2 - (b - u2) / q2)) : this.M(a, u2, v2 + b);
          }
          this.Pc(c, d);
        }
        return true;
      case Zo:
        a: {
          if (this.isOrthogonal && (e = this.i(a), f2 = this.i(a + 1), g2 = this.i(a + 2), h = f2.x, m2 = f2.y, n2 = h, l2 = m2, M2.w(e.y, f2.y) ? M2.w(f2.x, g2.x) ? m2 = b.y : M2.w(f2.y, g2.y) && (h = b.x) : M2.w(e.x, f2.x) && (M2.w(f2.y, g2.y) ? h = b.x : M2.w(f2.x, g2.x) && (m2 = b.y)), this.M(a + 1, h, m2), e = this.i(c), f2 = this.i(c - 1), g2 = this.i(c - 2), h = f2.x, m2 = f2.y, k = h, p2 = m2, M2.w(e.y, f2.y) ? M2.w(f2.x, g2.x) ? m2 = d.y : M2.w(f2.y, g2.y) && (h = d.x) : M2.w(e.x, f2.x) && (M2.w(f2.y, g2.y) ? h = d.x : M2.w(f2.x, g2.x) && (m2 = d.y)), this.M(c - 1, h, m2), Gj2(this))) {
            this.M(a + 1, n2, l2);
            this.M(c - 1, k, p2);
            c = false;
            break a;
          }
          this.Pc(a, b);
          this.Pc(c, d);
          c = true;
        }
        return c;
      default:
        return false;
    }
  };
  T2.prototype.addOrthoPoints = function(a, b, c, d, e, f2) {
    0 > b ? b += 360 : 360 <= b && (b -= 360);
    0 > d ? d += 360 : 360 <= d && (d -= 360);
    var g2 = d;
    b = 315 <= b || 45 > b ? 0 : 45 <= b && 135 > b ? 90 : 135 <= b && 225 > b ? 180 : 270;
    d = 315 <= d || 45 > d ? 0 : 45 <= d && 135 > d ? 90 : 135 <= d && 225 > d ? 180 : 270;
    var h = e.actualBounds.copy(), k = f2.actualBounds.copy();
    if (h.u() && k.u()) {
      h.Jc(sp, sp);
      k.Jc(sp, sp);
      h.Oe(a);
      k.Oe(c);
      var l2 = K2.alloc(), m2 = K2.alloc();
      if (b === 0)
        if (c.x > a.x || d === 270 && c.y < a.y && k.right > a.x || d === 90 && c.y > a.y && k.right > a.x)
          l2.h(c.x, a.y), m2.h(c.x, (a.y + c.y) / 2), d === 180 ? (l2.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false), m2.x = l2.x, m2.y = c.y) : d === 270 && c.y < a.y || d === 90 && c.y > a.y ? (l2.x = a.x < k.left ? this.computeMidOrthoPosition(a.x, a.y, k.left, c.y, false) : a.x < k.right && (d === 270 && a.y < k.top || d === 90 && a.y > k.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false) : k.right, m2.x = l2.x, m2.y = c.y) : d === 0 && a.x < k.left && a.y > k.top && a.y < k.bottom && (l2.x = a.x, l2.y = a.y < c.y ? Math.min(c.y, k.top) : Math.max(c.y, k.bottom), m2.y = l2.y);
        else {
          l2.h(a.x, c.y);
          m2.h((a.x + c.x) / 2, c.y);
          if (d === 180 || d === 90 && c.y < h.top || d === 270 && c.y > h.bottom)
            d === 180 && (k.$(a) || h.$(c)) ? l2.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true) : c.y < a.y && (d === 180 || d === 90) ? l2.y = this.computeMidOrthoPosition(a.x, h.top, c.x, Math.max(c.y, k.bottom), true) : c.y > a.y && (d === 180 || d === 270) && (l2.y = this.computeMidOrthoPosition(a.x, h.bottom, c.x, Math.min(c.y, k.top), true)), m2.x = c.x, m2.y = l2.y;
          if (l2.y > h.top && l2.y < h.bottom)
            if (c.x >= h.left && c.x <= a.x || a.x <= k.right && a.x >= c.x) {
              if (d === 90 || d === 270)
                l2.h(Math.max((a.x + c.x) / 2, a.x), a.y), m2.h(l2.x, c.y);
            } else
              l2.y = d === 270 || (d === 0 || d === 180) && c.y < a.y ? Math.min(c.y, d === 0 ? h.top : Math.min(h.top, k.top)) : Math.max(c.y, d === 0 ? h.bottom : Math.max(h.bottom, k.bottom)), m2.x = c.x, m2.y = l2.y;
        }
      else if (b === 180)
        if (c.x < a.x || d === 270 && c.y < a.y && k.left < a.x || d === 90 && c.y > a.y && k.left < a.x)
          l2.h(c.x, a.y), m2.h(c.x, (a.y + c.y) / 2), d === 0 ? (l2.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false), m2.x = l2.x, m2.y = c.y) : d === 270 && c.y < a.y || d === 90 && c.y > a.y ? (l2.x = a.x > k.right ? this.computeMidOrthoPosition(a.x, a.y, k.right, c.y, false) : a.x > k.left && (d === 270 && a.y < k.top || d === 90 && a.y > k.bottom) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false) : k.left, m2.x = l2.x, m2.y = c.y) : d === 180 && a.x > k.right && a.y > k.top && a.y < k.bottom && (l2.x = a.x, l2.y = a.y < c.y ? Math.min(c.y, k.top) : Math.max(c.y, k.bottom), m2.y = l2.y);
        else {
          l2.h(a.x, c.y);
          m2.h((a.x + c.x) / 2, c.y);
          if (d === 0 || d === 90 && c.y < h.top || d === 270 && c.y > h.bottom)
            d === 0 && (k.$(a) || h.$(c)) ? l2.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true) : c.y < a.y && (d === 0 || d === 90) ? l2.y = this.computeMidOrthoPosition(a.x, h.top, c.x, Math.max(c.y, k.bottom), true) : c.y > a.y && (d === 0 || d === 270) && (l2.y = this.computeMidOrthoPosition(a.x, h.bottom, c.x, Math.min(c.y, k.top), true)), m2.x = c.x, m2.y = l2.y;
          if (l2.y > h.top && l2.y < h.bottom)
            if (c.x <= h.right && c.x >= a.x || a.x >= k.left && a.x <= c.x) {
              if (d === 90 || d === 270)
                l2.h(Math.min((a.x + c.x) / 2, a.x), a.y), m2.h(l2.x, c.y);
            } else
              l2.y = d === 270 || (d === 0 || d === 180) && c.y < a.y ? Math.min(c.y, d === 180 ? h.top : Math.min(h.top, k.top)) : Math.max(c.y, d === 180 ? h.bottom : Math.max(h.bottom, k.bottom)), m2.x = c.x, m2.y = l2.y;
        }
      else if (b === 90)
        if (c.y > a.y || d === 180 && c.x < a.x && k.bottom > a.y || d === 0 && c.x > a.x && k.bottom > a.y)
          l2.h(a.x, c.y), m2.h((a.x + c.x) / 2, c.y), d === 270 ? (l2.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true), m2.x = c.x, m2.y = l2.y) : d === 180 && c.x < a.x || d === 0 && c.x > a.x ? (l2.y = a.y < k.top ? this.computeMidOrthoPosition(a.x, a.y, c.x, k.top, true) : a.y < k.bottom && (d === 180 && a.x < k.left || d === 0 && a.x > k.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true) : k.bottom, m2.x = c.x, m2.y = l2.y) : d === 90 && a.y < k.top && a.x > k.left && a.x < k.right && (l2.x = a.x < c.x ? Math.min(c.x, k.left) : Math.max(c.x, k.right), l2.y = a.y, m2.x = l2.x);
        else {
          l2.h(c.x, a.y);
          m2.h(c.x, (a.y + c.y) / 2);
          if (d === 270 || d === 0 && c.x < h.left || d === 180 && c.x > h.right)
            d === 270 && (k.$(a) || h.$(c)) ? l2.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false) : c.x < a.x && (d === 270 || d === 0) ? l2.x = this.computeMidOrthoPosition(h.left, a.y, Math.max(c.x, k.right), c.y, false) : c.x > a.x && (d === 270 || d === 180) && (l2.x = this.computeMidOrthoPosition(h.right, a.y, Math.min(c.x, k.left), c.y, false)), m2.x = l2.x, m2.y = c.y;
          if (l2.x > h.left && l2.x < h.right)
            if (c.y >= h.top && c.y <= a.y || a.y <= k.bottom && a.y >= c.y) {
              if (d === 0 || d === 180)
                l2.h(a.x, Math.max((a.y + c.y) / 2, a.y)), m2.h(c.x, l2.y);
            } else
              l2.x = d === 180 || (d === 90 || d === 270) && c.x < a.x ? Math.min(c.x, d === 90 ? h.left : Math.min(h.left, k.left)) : Math.max(c.x, d === 90 ? h.right : Math.max(h.right, k.right)), m2.x = l2.x, m2.y = c.y;
        }
      else if (c.y < a.y || d === 180 && c.x < a.x && k.top < a.y || d === 0 && c.x > a.x && k.top < a.y)
        l2.h(a.x, c.y), m2.h((a.x + c.x) / 2, c.y), d === 90 ? (l2.y = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true), m2.x = c.x, m2.y = l2.y) : d === 180 && c.x < a.x || d === 0 && c.x >= a.x ? (l2.y = a.y > k.bottom ? this.computeMidOrthoPosition(a.x, a.y, c.x, k.bottom, true) : a.y > k.top && (d === 180 && a.x < k.left || d === 0 && a.x > k.right) ? this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, true) : k.top, m2.x = c.x, m2.y = l2.y) : d === 270 && a.y > k.bottom && a.x > k.left && a.x < k.right && (l2.x = a.x < c.x ? Math.min(c.x, k.left) : Math.max(c.x, k.right), l2.y = a.y, m2.x = l2.x);
      else {
        l2.h(c.x, a.y);
        m2.h(c.x, (a.y + c.y) / 2);
        if (d === 90 || d === 0 && c.x < h.left || d === 180 && c.x > h.right)
          d === 90 && (k.$(a) || h.$(c)) ? l2.x = this.computeMidOrthoPosition(a.x, a.y, c.x, c.y, false) : c.x < a.x && (d === 90 || d === 0) ? l2.x = this.computeMidOrthoPosition(h.left, a.y, Math.max(c.x, k.right), c.y, false) : c.x > a.x && (d === 90 || d === 180) && (l2.x = this.computeMidOrthoPosition(h.right, a.y, Math.min(c.x, k.left), c.y, false)), m2.x = l2.x, m2.y = c.y;
        if (l2.x > h.left && l2.x < h.right)
          if (c.y <= h.bottom && c.y >= a.y || a.y >= k.top && a.y <= c.y) {
            if (d === 0 || d === 180)
              l2.h(a.x, Math.min((a.y + c.y) / 2, a.y)), m2.h(c.x, l2.y);
          } else
            l2.x = d === 180 || (d === 90 || d === 270) && c.x < a.x ? Math.min(c.x, d === 270 ? h.left : Math.min(h.left, k.left)) : Math.max(c.x, d === 270 ? h.right : Math.max(h.right, k.right)), m2.x = l2.x, m2.y = c.y;
      }
      var n2 = c;
      if (this.isAvoiding) {
        var p2 = this.diagram;
        if (p2 === null || e === f2 || this.layer.isTemporary || !ik2(p2) || h.$(n2) && !f2.Jd(e) || k.$(a) && !e.Jd(f2))
          b = false;
        else {
          var r2 = jk2(p2, true, this.containingGroup, null);
          if (this.segmentIndex !== 17 && r2.fk(Math.min(a.x, l2.x), Math.min(a.y, l2.y), Math.abs(a.x - l2.x), Math.abs(a.y - l2.y)) && r2.fk(Math.min(l2.x, m2.x), Math.min(l2.y, m2.y), Math.abs(l2.x - m2.x), Math.abs(l2.y - m2.y)) && r2.fk(Math.min(m2.x, n2.x), Math.min(m2.y, n2.y), Math.abs(m2.x - n2.x), Math.abs(m2.y - n2.y)))
            b = false;
          else {
            e = a;
            f2 = n2;
            var q2 = c = null;
            if (p2.isVirtualized) {
              p2 = r2.bounds.copy();
              p2.Jc(-r2.Rp, -r2.Qp);
              var u2 = K2.alloc();
              ok2(r2, a.x, a.y) || (M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, a.x, a.y, l2.x, l2.y, u2) ? (c = a = u2.copy(), b = u2.Pa(l2)) : M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, l2.x, l2.y, m2.x, m2.y, u2) ? (c = a = u2.copy(), b = u2.Pa(m2)) : M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, m2.x, m2.y, n2.x, n2.y, u2) && (c = a = u2.copy(), b = u2.Pa(n2)));
              ok2(r2, n2.x, n2.y) || (M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, n2.x, n2.y, m2.x, m2.y, u2) ? (q2 = n2 = u2.copy(), d = m2.Pa(u2)) : M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, m2.x, m2.y, l2.x, l2.y, u2) ? (q2 = n2 = u2.copy(), d = l2.Pa(u2)) : M2.Cf(p2.x, p2.y, p2.x + p2.width, p2.y + p2.height, l2.x, l2.y, a.x, a.y, u2) && (q2 = n2 = u2.copy(), d = a.Pa(u2)));
              K2.free(u2);
            }
            h = h.copy().Qc(k);
            h.Jc(r2.Rp * r2.Dy, r2.Qp * r2.Dy);
            tp(r2, a, b, n2, d, h, true);
            k = up(r2, n2.x, n2.y);
            !r2.abort && k >= vp && (nk2(r2), h.Jc(r2.Rp * r2.jy, r2.Qp * r2.jy), tp(r2, a, b, n2, d, h, false), k = up(r2, n2.x, n2.y));
            if (!r2.abort && k < vp && up(r2, n2.x, n2.y) !== pk2) {
              wp(this, r2, n2.x, n2.y, d, true, g2);
              h = this.i(2);
              if (4 > this.pointsCount)
                b === 0 || b === 180 ? (h.x = a.x, h.y = n2.y) : (h.x = n2.x, h.y = a.y), this.M(2, h.x, h.y), this.l(3, h.x, h.y);
              else if (g2 = this.i(3), b === 0 || b === 180)
                M2.w(h.x, g2.x) ? (h = b === 0 ? Math.max(h.x, a.x) : Math.min(h.x, a.x), this.M(2, h, a.y), this.M(3, h, g2.y)) : M2.w(h.y, g2.y) ? (Math.abs(a.y - h.y) <= r2.Qp / 2 && (this.M(2, h.x, a.y), this.M(3, g2.x, a.y)), this.l(2, h.x, a.y)) : this.M(2, a.x, h.y);
              else if (b === 90 || b === 270)
                M2.w(h.y, g2.y) ? (h = b === 90 ? Math.max(h.y, a.y) : Math.min(h.y, a.y), this.M(2, a.x, h), this.M(3, g2.x, h)) : M2.w(h.x, g2.x) ? (Math.abs(a.x - h.x) <= r2.Rp / 2 && (this.M(2, a.x, h.y), this.M(3, a.x, g2.y)), this.l(2, a.x, h.y)) : this.M(2, h.x, a.y);
              c !== null && (a = this.i(1), g2 = this.i(2), a.x !== g2.x && a.y !== g2.y ? b === 0 || b === 180 ? this.l(2, a.x, g2.y) : this.l(2, g2.x, a.y) : b === 0 || b === 180 ? this.l(2, e.x, c.y) : this.l(2, c.x, e.y));
              q2 !== null && (d === 0 || d === 180 ? this.tf(f2.x, q2.y) : this.tf(q2.x, f2.y));
              b = true;
            } else
              b = false;
          }
        }
      } else
        b = false;
      b || (this.ee(l2.copy()), this.ee(m2.copy()));
      K2.free(l2);
      K2.free(m2);
    }
  };
  T2.prototype.computeMidOrthoPosition = function(a, b, c, d, e) {
    var f2 = 0;
    !this.hasCurviness() || this.computeSpot(true, this.fromPort).Nc() || this.computeSpot(false, this.toPort).Nc() || (f2 = this.computeCurviness());
    return e ? (b + d) / 2 + f2 : (a + c) / 2 + f2;
  };
  function Gj2(a) {
    if (a.diagram === null || !a.isAvoiding || !ik2(a.diagram))
      return false;
    var b = a.points.m, c = b.length;
    if (4 > c)
      return false;
    a = jk2(a.diagram, true, a.containingGroup, null);
    for (var d = 1; d < c - 2; d++) {
      var e = b[d], f2 = b[d + 1];
      if (!a.fk(Math.min(e.x, f2.x), Math.min(e.y, f2.y), Math.abs(e.x - f2.x), Math.abs(e.y - f2.y)))
        return true;
    }
    return false;
  }
  function wp(a, b, c, d, e, f2, g2) {
    var h = b.Rp, k = b.Qp, l2 = up(b, c, d), m2 = c, n2 = d;
    e === 0 ? m2 += h : e === 90 ? n2 += k : e === 180 ? m2 -= h : n2 -= k;
    e !== g2 && l2 > xp && up(b, m2, n2) !== l2 - 1 && (up(b, c - h, d) === l2 - 1 ? (e = 180, m2 = c - h, n2 = d) : up(b, c + h, d) === l2 - 1 ? (e = 0, m2 = c + h, n2 = d) : up(b, c, d - k) === l2 - 1 ? (e = 270, m2 = c, n2 = d - k) : up(b, c, d + k) === l2 - 1 && (e = 90, m2 = c, n2 = d + k));
    for (; l2 > xp && up(b, m2, n2) === l2 - 1; )
      c = m2, d = n2, e === 0 ? m2 += h : e === 90 ? n2 += k : e === 180 ? m2 -= h : n2 -= k, --l2;
    if (f2) {
      if (l2 > xp) {
        if (e === 180 || e === 0)
          c = Math.floor(c / h) * h + h / 2;
        else if (e === 90 || e === 270)
          d = Math.floor(d / k) * k + k / 2;
      }
    } else
      c = Math.floor(c / h) * h + h / 2, d = Math.floor(d / k) * k + k / 2;
    l2 > xp && (f2 = e, g2 = c, m2 = d, e === 0 ? (f2 = 90, m2 += k) : e === 90 ? (f2 = 180, g2 -= h) : e === 180 ? (f2 = 270, m2 -= k) : e === 270 && (f2 = 0, g2 += h), up(b, g2, m2) === l2 - 1 ? wp(a, b, g2, m2, f2, false, f2) : (g2 = c, m2 = d, e === 0 ? (f2 = 270, m2 -= k) : e === 90 ? (f2 = 0, g2 += h) : e === 180 ? (f2 = 90, m2 += k) : e === 270 && (f2 = 180, g2 -= h), up(b, g2, m2) === l2 - 1 && wp(a, b, g2, m2, f2, false, f2)));
    a.tf(c, d);
  }
  T2.prototype.Dz = function(a) {
    var b = a.x;
    a = a.y;
    for (var c = this.i(0), d = this.i(1), e = vb2(b, a, c.x, c.y, d.x, d.y), f2 = 0, g2 = 1; g2 < this.pointsCount - 1; g2++) {
      c = this.i(g2 + 1);
      var h = vb2(b, a, d.x, d.y, c.x, c.y);
      d = c;
      h < e && (f2 = g2, e = h);
    }
    return f2;
  };
  T2.prototype.gc = function(a) {
    this.Dm = false;
    a && this.s();
  };
  T2.prototype.hk = function(a) {
    if (!a) {
      if (this.td === false)
        return;
      a = this.pb();
      if (this.Dm && (a === null || a.geometry !== null))
        return;
    }
    this.ma = this.makeGeometry();
    a = this.path;
    if (a !== null) {
      a.ma = this.ma;
      for (var b = this.T.m, c = b.length, d = 0; d < c; d++) {
        var e = b[d];
        e !== a && e.isPanelMain && e instanceof xf2 && (e.ma = this.ma);
      }
    }
  };
  T2.prototype.makeGeometry = function() {
    var a = this.ma, b = this.pointsCount;
    if (2 > b)
      return a.type = P2.j, this.Dm = true, a;
    var c = false, d = this.diagram;
    d !== null && cp(this) && d.Xh.contains(this) && (this.yl.width !== 0 || this.yl.height !== 0) && (c = true);
    var e = this.i(0).copy(), f2 = e.copy();
    d = this.Db.m;
    var g2 = this.computeCurve();
    if (g2 === Uf2 && 3 <= b && !M2.aa(this.smoothness, 0))
      if (b === 3) {
        var h = this.i(1);
        d = Math.min(e.x, h.x);
        var k = Math.min(e.y, h.y);
        h = this.i(2);
        d = Math.min(d, h.x);
        k = Math.min(k, h.y);
      } else {
        if (this.isOrthogonal)
          for (k = 0; k < b; k++)
            h = d[k], f2.x = Math.min(h.x, f2.x), f2.y = Math.min(h.y, f2.y);
        else
          for (d = 3; d < b; d += 3)
            d + 3 >= b && (d = b - 1), k = this.i(d), f2.x = Math.min(k.x, f2.x), f2.y = Math.min(k.y, f2.y);
        d = f2.x;
        k = f2.y;
      }
    else {
      for (k = 0; k < b; k++)
        h = d[k], f2.x = Math.min(h.x, f2.x), f2.y = Math.min(h.y, f2.y);
      d = f2.x;
      k = f2.y;
    }
    d -= this.tu.x;
    k -= this.tu.y;
    e.x -= d;
    e.y -= k;
    if (b !== 2 || cp(this)) {
      a.type = P2.o;
      h = td2(a);
      this.computeShortLength(true) !== 0 && (e = yp(this, e, true, f2));
      xd2(h, e.x, e.y, false);
      if (g2 === Uf2 && 3 <= b && !M2.aa(this.smoothness, 0))
        if (b === 3)
          c = this.i(1), b = c.x - d, c = c.y - k, e = this.i(2).copy(), e.x -= d, e.y -= k, this.computeShortLength(false) !== 0 && (e = yp(this, e, false, f2)), yd2(h, b, c, b, c, e.x, e.y);
        else if (this.isOrthogonal) {
          b = K2.allocAt(d, k);
          c = K2.alloc();
          c.assign(this.i(1));
          f2 = K2.allocAt(d, k);
          e = K2.allocAt(d, k);
          g2 = this.i(0);
          for (var l2, m2 = this.smoothness / 3, n2 = 1; n2 < this.pointsCount - 1; n2++) {
            l2 = this.i(n2);
            var p2 = g2, r2 = l2, q2 = this.i(zp(this, l2, n2, false));
            if (!M2.aa(p2.x, r2.x) || !M2.aa(r2.x, q2.x)) {
              if (!M2.aa(p2.y, r2.y) || !M2.aa(r2.y, q2.y)) {
                var u2 = m2;
                isNaN(u2) && (u2 = this.smoothness / 3);
                var w = p2.x;
                p2 = p2.y;
                var v2 = r2.x;
                r2 = r2.y;
                var z2 = q2.x;
                q2 = q2.y;
                var y2 = u2 * Ap(w, p2, v2, r2);
                u2 *= Ap(v2, r2, z2, q2);
                M2.aa(p2, r2) && M2.aa(v2, z2) && (v2 > w ? q2 > r2 ? (f2.x = v2 - y2, f2.y = r2 - y2, e.x = v2 + u2, e.y = r2 + u2) : (f2.x = v2 - y2, f2.y = r2 + y2, e.x = v2 + u2, e.y = r2 - u2) : q2 > r2 ? (f2.x = v2 + y2, f2.y = r2 - y2, e.x = v2 - u2, e.y = r2 + u2) : (f2.x = v2 + y2, f2.y = r2 + y2, e.x = v2 - u2, e.y = r2 - u2));
                M2.aa(w, v2) && M2.aa(r2, q2) && (r2 > p2 ? (z2 > v2 ? (f2.x = v2 - y2, f2.y = r2 - y2, e.x = v2 + u2) : (f2.x = v2 + y2, f2.y = r2 - y2, e.x = v2 - u2), e.y = r2 + u2) : (z2 > v2 ? (f2.x = v2 - y2, f2.y = r2 + y2, e.x = v2 + u2) : (f2.x = v2 + y2, f2.y = r2 + y2, e.x = v2 - u2), e.y = r2 - u2));
                if (M2.aa(w, v2) && M2.aa(v2, z2) || M2.aa(p2, r2) && M2.aa(r2, q2))
                  w = 0.5 * (w + z2), p2 = 0.5 * (p2 + q2), f2.x = w, f2.y = p2, e.x = w, e.y = p2;
                n2 === 1 ? (c.x = 0.5 * (g2.x + l2.x), c.y = 0.5 * (g2.y + l2.y)) : n2 === 2 && M2.aa(g2.x, this.i(0).x) && M2.aa(g2.y, this.i(0).y) && (c.x = 0.5 * (g2.x + l2.x), c.y = 0.5 * (g2.y + l2.y));
                yd2(h, c.x - d, c.y - k, f2.x - d, f2.y - k, l2.x - d, l2.y - k);
                b.set(f2);
                c.set(e);
                g2 = l2;
              }
            }
          }
          l2 = g2.x;
          g2 = g2.y;
          m2 = this.i(this.pointsCount - 1);
          this.computeShortLength(false) !== 0 && (m2 = yp(this, m2.copy(), false, zb2));
          l2 = 0.5 * (l2 + m2.x);
          g2 = 0.5 * (g2 + m2.y);
          yd2(h, e.x - d, e.y - k, l2 - d, g2 - k, m2.x - d, m2.y - k);
          K2.free(b);
          K2.free(c);
          K2.free(f2);
          K2.free(e);
        } else
          for (c = 3; c < b; c += 3)
            f2 = this.i(c - 2), c + 3 >= b && (c = b - 1), e = this.i(c - 1), g2 = this.i(c), c === b - 1 && this.computeShortLength(false) !== 0 && (g2 = yp(this, g2.copy(), false, zb2)), yd2(h, f2.x - d, f2.y - k, e.x - d, e.y - k, g2.x - d, g2.y - k);
      else {
        f2 = K2.alloc();
        f2.assign(this.i(0));
        e = K2.alloc();
        e.assign(f2);
        g2 = this.computeCorner();
        n2 = 1;
        for (l2 = 0; n2 < b; ) {
          n2 = zp(this, f2, n2, 1 < n2);
          m2 = this.i(n2);
          if (n2 >= b - 1) {
            if (!f2.A(m2))
              this.computeShortLength(false) !== 0 && (m2 = yp(this, m2.copy(), false, zb2)), Bp(this, h, -d, -k, f2, m2, c);
            else if (l2 === 0)
              for (n2 = 1; n2 < b; )
                e.assign(f2), m2 = this.i(n2++), Bp(this, h, -d, -k, f2, m2, c), f2.assign(m2);
            break;
          }
          l2 = zp(this, m2, n2 + 1, n2 < b - 3);
          n2 = -d;
          w = -k;
          p2 = m2;
          v2 = this.i(l2);
          u2 = c;
          if (M2.w(f2.y, p2.y) && M2.w(p2.x, v2.x))
            if (q2 = Math.min(g2, Math.abs(p2.x - e.x) / 2), q2 = y2 = Math.min(q2, Math.abs(v2.y - p2.y) / 2), M2.w(q2, 0))
              Bp(this, h, n2, w, f2, p2, u2), f2.assign(p2);
            else {
              var B2 = p2.x, A2 = p2.y;
              r2 = B2;
              z2 = A2;
              p2.x > f2.x ? B2 = p2.x - q2 : B2 = p2.x + q2;
              v2.y > p2.y ? z2 = p2.y + y2 : z2 = p2.y - y2;
              v2 = K2.allocAt(B2, A2);
              Bp(this, h, n2, w, f2, v2, u2);
              K2.free(v2);
              zd2(h, p2.x + n2, p2.y + w, r2 + n2, z2 + w);
              f2.h(r2, z2);
            }
          else
            M2.w(f2.x, p2.x) && M2.w(p2.y, v2.y) ? (q2 = Math.min(g2, Math.abs(p2.y - e.y) / 2), q2 = y2 = Math.min(q2, Math.abs(v2.x - p2.x) / 2), M2.w(y2, 0) ? (Bp(this, h, n2, w, f2, p2, u2), f2.assign(p2)) : (B2 = p2.x, A2 = p2.y, r2 = B2, z2 = A2, p2.y > f2.y ? A2 = p2.y - q2 : A2 = p2.y + q2, v2.x > p2.x ? r2 = p2.x + y2 : r2 = p2.x - y2, v2 = K2.allocAt(B2, A2), Bp(this, h, n2, w, f2, v2, u2), K2.free(v2), zd2(h, p2.x + n2, p2.y + w, r2 + n2, z2 + w), f2.h(r2, z2))) : (Bp(this, h, n2, w, f2, p2, u2), f2.assign(p2));
          e.assign(m2);
          n2 = l2;
        }
        K2.free(f2);
      }
      Cd2 = h;
    } else
      h = this.i(1).copy(), h.x -= d, h.y -= k, this.computeShortLength(true) !== 0 && (e = yp(this, e, true, f2)), this.computeShortLength(false) !== 0 && (h = yp(this, h, false, f2)), a.type = P2.j, a.startX = e.x, a.startY = e.y, a.endX = h.x, a.endY = h.y;
    this.Dm = true;
    return a;
  };
  function Ap(a, b, c, d) {
    a = c - a;
    if (isNaN(a) || a === Infinity || a === -Infinity)
      return NaN;
    0 > a && (a = -a);
    b = d - b;
    if (isNaN(b) || b === Infinity || b === -Infinity)
      return NaN;
    0 > b && (b = -b);
    return M2.aa(a, 0) ? b : M2.aa(b, 0) ? a : Math.sqrt(a * a + b * b);
  }
  function yp(a, b, c, d) {
    var e = a.pointsCount;
    if (2 > e)
      return b;
    if (c) {
      var f2 = a.i(1);
      c = f2.x - d.x;
      f2 = f2.y - d.y;
      d = Ap(b.x, b.y, c, f2);
      if (d === 0)
        return b;
      e = e === 2 ? 0.5 * d : d;
      a = a.computeShortLength(true);
      a > e && (a = e);
      e = a * (f2 - b.y) / d;
      b.x += a * (c - b.x) / d;
      b.y += e;
    } else {
      f2 = a.i(e - 2);
      c = f2.x - d.x;
      f2 = f2.y - d.y;
      d = Ap(b.x, b.y, c, f2);
      if (d === 0)
        return b;
      e = e === 2 ? 0.5 * d : d;
      a = a.computeShortLength(false);
      a > e && (a = e);
      e = a * (b.y - f2) / d;
      b.x -= a * (b.x - c) / d;
      b.y -= e;
    }
    return b;
  }
  function zp(a, b, c, d) {
    for (var e = a.pointsCount, f2 = b; M2.aa(b.x, f2.x) && M2.aa(b.y, f2.y); ) {
      if (c >= e)
        return e - 1;
      f2 = a.i(c++);
    }
    if (!M2.aa(b.x, f2.x) && !M2.aa(b.y, f2.y))
      return c - 1;
    for (var g2 = f2; M2.aa(b.x, f2.x) && M2.aa(f2.x, g2.x) && (!d || (b.y >= f2.y ? f2.y >= g2.y : f2.y <= g2.y)) || M2.aa(b.y, f2.y) && M2.aa(f2.y, g2.y) && (!d || (b.x >= f2.x ? f2.x >= g2.x : f2.x <= g2.x)); ) {
      if (c >= e)
        return e - 1;
      g2 = a.i(c++);
    }
    return c - 2;
  }
  T2.prototype.computeJumpLength = function() {
    return 10;
  };
  function Bp(a, b, c, d, e, f2, g2) {
    if (!g2 && cp(a)) {
      g2 = a.computeJumpLength();
      var h = g2 / 2, k = [], l2 = 0;
      a.isVisible() && (l2 = Cp(a, e, f2, k));
      if (0 < l2) {
        if (M2.w(e.y, f2.y))
          if (e.x < f2.x)
            for (var m2 = 0; m2 < l2; ) {
              var n2 = Math.max(e.x, Math.min(k[m2++] - h, f2.x - g2));
              b.lineTo(n2 + c, f2.y + d);
              var p2 = n2 + c;
              for (var r2 = Math.min(n2 + g2, f2.x); m2 < l2; )
                if (n2 = k[m2], n2 < r2 + g2)
                  m2++, r2 = Math.min(n2 + h, f2.x);
                else
                  break;
              n2 = f2.y - g2 + d;
              r2 += c;
              var q2 = f2.y + d;
              a.curve === Qf2 ? xd2(b, r2, q2, false) : yd2(b, p2, n2, r2, n2, r2, q2);
            }
          else
            for (--l2; 0 <= l2; ) {
              m2 = Math.min(e.x, Math.max(k[l2--] + h, f2.x + g2));
              b.lineTo(m2 + c, f2.y + d);
              p2 = m2 + c;
              for (n2 = Math.max(m2 - g2, f2.x); 0 <= l2; )
                if (m2 = k[l2], m2 > n2 - g2)
                  l2--, n2 = Math.max(m2 - h, f2.x);
                else
                  break;
              m2 = f2.y - g2 + d;
              n2 += c;
              r2 = f2.y + d;
              a.curve === Qf2 ? xd2(b, n2, r2, false) : yd2(b, p2, m2, n2, m2, n2, r2);
            }
        else if (M2.w(e.x, f2.x))
          if (e.y < f2.y)
            for (m2 = 0; m2 < l2; ) {
              n2 = Math.max(e.y, Math.min(k[m2++] - h, f2.y - g2));
              b.lineTo(f2.x + c, n2 + d);
              p2 = n2 + d;
              for (n2 = Math.min(n2 + g2, f2.y); m2 < l2; )
                if (r2 = k[m2], r2 < n2 + g2)
                  m2++, n2 = Math.min(r2 + h, f2.y);
                else
                  break;
              r2 = f2.x - g2 + c;
              q2 = f2.x + c;
              n2 += d;
              a.curve === Qf2 ? xd2(b, q2, n2, false) : yd2(b, r2, p2, r2, n2, q2, n2);
            }
          else
            for (--l2; 0 <= l2; ) {
              m2 = Math.min(e.y, Math.max(k[l2--] + h, f2.y + g2));
              b.lineTo(f2.x + c, m2 + d);
              p2 = m2 + d;
              for (m2 = Math.max(m2 - g2, f2.y); 0 <= l2; )
                if (n2 = k[l2], n2 > m2 - g2)
                  l2--, m2 = Math.max(n2 - h, f2.y);
                else
                  break;
              n2 = f2.x - g2 + c;
              r2 = f2.x + c;
              m2 += d;
              a.curve === Qf2 ? xd2(b, r2, m2, false) : yd2(b, n2, p2, n2, m2, r2, m2);
            }
      }
    }
    b.lineTo(f2.x + c, f2.y + d);
  }
  function Cp(a, b, c, d) {
    var e = a.diagram;
    if (e === null || b.A(c))
      return 0;
    for (e = e.layers; e.next(); ) {
      var f2 = e.value;
      if (f2 !== null && f2.visible) {
        f2 = f2.Ha.m;
        for (var g2 = f2.length, h = 0; h < g2; h++) {
          var k = f2[h];
          if (k instanceof T2) {
            if (k === a)
              return 0 < d.length && d.sort(function(a2, b2) {
                return a2 - b2;
              }), d.length;
            if (k.isVisible() && cp(k)) {
              var l2 = k.routeBounds;
              l2.u() && a.routeBounds.Lc(l2) && !a.usesSamePort(k) && (l2 = k.path, l2 !== null && l2.Ff() && Dp(b, c, d, k));
            }
          }
        }
      }
    }
    0 < d.length && d.sort(function(a2, b2) {
      return a2 - b2;
    });
    return d.length;
  }
  function Dp(a, b, c, d) {
    for (var e = M2.w(a.y, b.y), f2 = d.pointsCount, g2 = d.i(0), h = K2.alloc(), k = 1; k < f2; k++) {
      var l2 = d.i(k);
      if (k < f2 - 1) {
        var m2 = d.i(k + 1);
        if (g2.y === l2.y && l2.y === m2.y) {
          if (l2.x > g2.x && m2.x >= l2.x || l2.x < g2.x && m2.x <= l2.x)
            continue;
        } else if (g2.x === l2.x && l2.x === m2.x && (l2.y > g2.y && m2.y >= l2.y || l2.y < g2.y && m2.y <= l2.y))
          continue;
      }
      a: {
        m2 = a.x;
        var n2 = a.y, p2 = b.x, r2 = b.y, q2 = g2.x;
        g2 = g2.y;
        var u2 = l2.x, w = l2.y;
        if (!M2.w(m2, p2)) {
          if (M2.w(n2, r2) && M2.w(q2, u2) && Math.min(m2, p2) < q2 && Math.max(m2, p2) > q2 && Math.min(g2, w) < n2 && Math.max(g2, w) > n2 && !M2.w(g2, w)) {
            h.x = q2;
            h.y = n2;
            m2 = true;
            break a;
          }
        } else if (!M2.w(n2, r2) && M2.w(g2, w) && Math.min(n2, r2) < g2 && Math.max(n2, r2) > g2 && Math.min(q2, u2) < m2 && Math.max(q2, u2) > m2 && !M2.w(q2, u2)) {
          h.x = m2;
          h.y = g2;
          m2 = true;
          break a;
        }
        h.x = 0;
        h.y = 0;
        m2 = false;
      }
      m2 && (e ? c.push(h.x) : c.push(h.y));
      g2 = l2;
    }
    K2.free(h);
  }
  function cp(a) {
    a = a.curve;
    return a === Pf2 || a === Qf2;
  }
  function gp(a, b) {
    if (b || cp(a))
      b = a.diagram, b === null || b.animationManager.isTicking || b.Xh.contains(a) || a.yl.width === 0 && a.yl.height === 0 || b.Xh.add(a, a.yl.copy());
  }
  T2.prototype.fq = function(a) {
    var b = this.layer;
    if (b !== null && b.visible && !b.isTemporary) {
      var c = b.diagram;
      if (c !== null && !c.animationManager.isTicking) {
        var d = false;
        for (c = c.layers; c.next(); ) {
          var e = c.value;
          if (e.visible) {
            if (e === b) {
              d = true;
              var f2 = false;
              e = e.Ha.m;
              for (var g2 = e.length, h = 0; h < g2; h++) {
                var k = e[h];
                k instanceof T2 && (k === this ? f2 = true : f2 && Ep(this, k, a));
              }
            } else if (d)
              for (f2 = e.Ha.m, e = f2.length, g2 = 0; g2 < e; g2++)
                h = f2[g2], h instanceof T2 && Ep(this, h, a);
          }
        }
      }
    }
  };
  function Ep(a, b, c) {
    if (b !== null && b.Dm && b.td && cp(b)) {
      var d = b.routeBounds;
      d.u() && (a.routeBounds.Lc(d) || c.Lc(d)) && (a.usesSamePort(b) || b.gc(false));
    }
  }
  T2.prototype.usesSamePort = function(a) {
    var b = this.pointsCount, c = a.pointsCount;
    if (0 < b && 0 < c) {
      var d = this.i(0), e = a.i(0);
      if (d.Ua(e))
        return true;
      b = this.i(b - 1);
      a = a.i(c - 1);
      if (b.Ua(a) || d.Ua(a) || b.Ua(e))
        return true;
    } else if (this.fromNode === a.fromNode || this.toNode === a.toNode || this.fromNode === a.toNode || this.toNode === a.fromNode)
      return true;
    return false;
  };
  T2.prototype.isVisible = function() {
    if (!V2.prototype.isVisible.call(this))
      return false;
    var a = this.containingGroup, b = true, c = this.diagram;
    c !== null && (b = c.isTreePathToChildren);
    c = this.fromNode;
    if (c !== null) {
      if (this.isTreeLink && b && !c.isTreeExpanded)
        return false;
      if (c === a)
        return true;
      for (var d = c; d !== null; ) {
        if (d.labeledLink === this)
          return true;
        d = d.containingGroup;
      }
      c = c.findVisibleNode();
      if (c === null || c === a)
        return false;
    }
    c = this.toNode;
    if (c !== null) {
      if (this.isTreeLink && !b && !c.isTreeExpanded)
        return false;
      if (c === a)
        return true;
      for (b = c; b !== null; ) {
        if (b.labeledLink === this)
          return true;
        b = b.containingGroup;
      }
      b = c.findVisibleNode();
      if (b === null || b === a)
        return false;
    }
    return true;
  };
  T2.prototype.Pb = function(a) {
    V2.prototype.Pb.call(this, a);
    this.Mf !== null && this.Mf.em();
    if (this.nd !== null)
      for (var b = this.nd.iterator; b.next(); )
        b.value.Pb(a);
  };
  T2.prototype.computeAdjusting = function() {
    return this.isAvoiding && this.diagram !== null && this.diagram.animationManager.defaultAnimation.isAnimating ? Zo : this.vk;
  };
  function dp(a) {
    var b = a.We;
    if (b !== null) {
      var c = a.pf;
      if (c !== null && isNaN(a.curviness)) {
        for (var d = a.Xe, e = a.qf, f2 = a = null, g2 = b.ab.m, h = g2.length, k = 0; k < h; k++) {
          var l2 = g2[k];
          if (l2.We === b && l2.Xe === d && l2.pf === c && l2.qf === e || l2.We === c && l2.Xe === e && l2.pf === b && l2.qf === d)
            f2 === null ? f2 = l2 : (a === null && (a = [], a.push(f2)), a.push(l2));
        }
        if (a !== null) {
          f2 = Jo(b, c, d, e);
          f2 === null && (f2 = new Fp(b, d, c, e), Io(b, f2), Io(c, f2));
          f2.links = a;
          for (b = 0; b < a.length; b++)
            a[b].Mf = f2;
          f2.em();
        }
      }
    }
  }
  function ep(a) {
    var b = a.Mf;
    b !== null && isNaN(a.curviness) && (a.Mf = null, a = b.links.indexOf(a), 0 <= a && (Da2(b.links, a), b.em()));
  }
  T2.prototype.Hh = function() {
    return true;
  };
  na2.Object.defineProperties(T2.prototype, {
    fromNode: { get: function() {
      return this.We;
    }, set: function(a) {
      var b = this.We;
      if (b !== a) {
        var c = this.fromPort;
        b !== null && (this.pf !== b && No(b, this, c), ep(this), this.B(2));
        this.We = a;
        a !== null && this.Pb(a.isVisible());
        this.Qf = null;
        this.Va();
        var d = this.diagram;
        d !== null && d.Z && d.partManager.setFromNodeForLink(this, a, b);
        var e = this.fromPort, f2 = this.fromPortChanged;
        if (f2 !== null) {
          var g2 = true;
          d !== null && (g2 = d.Z, d.Z = true);
          f2(this, c, e);
          d !== null && (d.Z = g2);
        }
        a !== null && (this.pf !== a && Mo(a, this, e), dp(this), this.B(1));
        this.g("fromNode", b, a);
        Fo(this);
      }
    } },
    fromPortId: { get: function() {
      return this.Xe;
    }, set: function(a) {
      var b = this.Xe;
      if (b !== a) {
        var c = this.fromPort;
        c !== null && Ko(c);
        ep(this);
        this.Xe = a;
        var d = this.fromPort;
        d !== null && Ko(d);
        var e = this.diagram;
        if (e !== null) {
          var f2 = this.data, g2 = e.model;
          f2 !== null && g2.Pi() && g2.Pv(f2, a);
        }
        c !== d && (this.Qf = null, this.Va(), f2 = this.fromPortChanged, f2 !== null && (g2 = true, e !== null && (g2 = e.Z, e.Z = true), f2(this, c, d), e !== null && (e.Z = g2)));
        dp(this);
        this.g("fromPortId", b, a);
      }
    } },
    fromPort: { get: function() {
      var a = this.We;
      return a === null ? null : a.ss(this.Xe);
    } },
    fromPortChanged: { get: function() {
      return this.Dn;
    }, set: function(a) {
      var b = this.Dn;
      b !== a && (this.Dn = a, this.g("fromPortChanged", b, a));
    } },
    toNode: { get: function() {
      return this.pf;
    }, set: function(a) {
      var b = this.pf;
      if (b !== a) {
        var c = this.toPort;
        b !== null && (this.We !== b && No(b, this, c), ep(this), this.B(2));
        this.pf = a;
        a !== null && this.Pb(a.isVisible());
        this.Qf = null;
        this.Va();
        var d = this.diagram;
        d !== null && d.Z && d.partManager.setToNodeForLink(this, a, b);
        var e = this.toPort, f2 = this.toPortChanged;
        if (f2 !== null) {
          var g2 = true;
          d !== null && (g2 = d.Z, d.Z = true);
          f2(this, c, e);
          d !== null && (d.Z = g2);
        }
        a !== null && (this.We !== a && Mo(a, this, e), dp(this), this.B(1));
        this.g("toNode", b, a);
        Fo(this);
      }
    } },
    toPortId: { get: function() {
      return this.qf;
    }, set: function(a) {
      var b = this.qf;
      if (b !== a) {
        var c = this.toPort;
        c !== null && Ko(c);
        ep(this);
        this.qf = a;
        var d = this.toPort;
        d !== null && Ko(d);
        var e = this.diagram;
        if (e !== null) {
          var f2 = this.data, g2 = e.model;
          f2 !== null && g2.Pi() && g2.Tv(f2, a);
        }
        c !== d && (this.Qf = null, this.Va(), f2 = this.toPortChanged, f2 !== null && (g2 = true, e !== null && (g2 = e.Z, e.Z = true), f2(this, c, d), e !== null && (e.Z = g2)));
        dp(this);
        this.g("toPortId", b, a);
      }
    } },
    toPort: { get: function() {
      var a = this.pf;
      return a === null ? null : a.ss(this.qf);
    } },
    toPortChanged: { get: function() {
      return this.Dp;
    }, set: function(a) {
      var b = this.Dp;
      b !== a && (this.Dp = a, this.g("toPortChanged", b, a));
    } },
    fromSpot: { get: function() {
      return this.P !== null ? this.P.Pg : Uc2;
    }, set: function(a) {
      this.Kc();
      var b = this.P.Pg;
      b.A(a) || (a = a.I(), this.P.Pg = a, this.g("fromSpot", b, a), (b.Nc() || a.Nc()) && this.fromNode !== null && Ko(this.fromPort), this.Va());
    } },
    fromEndSegmentLength: { get: function() {
      return this.P !== null ? this.P.Ng : NaN;
    }, set: function(a) {
      this.Kc();
      var b = this.P.Ng;
      b !== a && (0 > a && xa2(a, ">= 0", T2, "fromEndSegmentLength"), this.P.Ng = a, this.g("fromEndSegmentLength", b, a), this.Va());
    } },
    fromShortLength: { get: function() {
      return this.P !== null ? this.P.Og : NaN;
    }, set: function(a) {
      this.Kc();
      var b = this.P.Og;
      b !== a && (this.P.Og = a, this.gc(true), this.g("fromShortLength", b, a));
    } },
    toSpot: { get: function() {
      return this.P !== null ? this.P.th : Uc2;
    }, set: function(a) {
      this.Kc();
      var b = this.P.th;
      b.A(a) || (a = a.I(), this.P.th = a, this.g("toSpot", b, a), (b.Nc() || a.Nc()) && this.toNode !== null && Ko(this.toPort), this.Va());
    } },
    toEndSegmentLength: {
      get: function() {
        return this.P !== null ? this.P.rh : NaN;
      },
      set: function(a) {
        this.Kc();
        var b = this.P.rh;
        b !== a && (0 > a && xa2(a, ">= 0", T2, "toEndSegmentLength"), this.P.rh = a, this.g("toEndSegmentLength", b, a), this.Va());
      }
    },
    toShortLength: { get: function() {
      return this.P !== null ? this.P.sh : NaN;
    }, set: function(a) {
      this.Kc();
      var b = this.P.sh;
      b !== a && (this.P.sh = a, this.gc(true), this.g("toShortLength", b, a));
    } },
    isLabeledLink: { get: function() {
      return this.nd === null ? false : 0 < this.nd.count;
    } },
    labelNodes: { get: function() {
      return this.nd === null ? ab2 : this.nd.iterator;
    } },
    relinkableFrom: { get: function() {
      return (this.Ia & 1) !== 0;
    }, set: function(a) {
      var b = (this.Ia & 1) !== 0;
      b !== a && (this.Ia ^= 1, this.g("relinkableFrom", b, a), this.Mb());
    } },
    relinkableTo: { get: function() {
      return (this.Ia & 2) !== 0;
    }, set: function(a) {
      var b = (this.Ia & 2) !== 0;
      b !== a && (this.Ia ^= 2, this.g("relinkableTo", b, a), this.Mb());
    } },
    resegmentable: {
      get: function() {
        return (this.Ia & 4) !== 0;
      },
      set: function(a) {
        var b = (this.Ia & 4) !== 0;
        b !== a && (this.Ia ^= 4, this.g("resegmentable", b, a), this.Mb());
      }
    },
    isTreeLink: { get: function() {
      return (this.Ia & 8) !== 0;
    }, set: function(a) {
      var b = (this.Ia & 8) !== 0;
      b !== a && (this.Ia ^= 8, this.g("isTreeLink", b, a), this.fromNode !== null && wk2(this.fromNode), this.toNode !== null && wk2(this.toNode));
    } },
    path: { get: function() {
      var a = this.pb();
      return a instanceof xf2 ? a : null;
    } },
    routeBounds: {
      get: function() {
        this.vg();
        var a = this.yl, b = Infinity, c = Infinity, d = this.pointsCount;
        if (d === 0)
          a.h(NaN, NaN, 0, 0);
        else {
          if (d === 1)
            d = this.i(0), b = Math.min(d.x, b), c = Math.min(d.y, c), a.h(d.x, d.y, 0, 0);
          else if (d === 2) {
            d = this.i(0);
            var e = this.i(1);
            b = Math.min(d.x, e.x);
            c = Math.min(d.y, e.y);
            a.h(d.x, d.y, 0, 0);
            a.Oe(e);
          } else if (this.computeCurve() === Uf2 && 3 <= d && !this.isOrthogonal)
            if (e = this.i(0), b = e.x, c = e.y, a.h(b, c, 0, 0), d === 3) {
              d = this.i(1);
              b = Math.min(d.x, b);
              c = Math.min(d.y, c);
              var f2 = this.i(2);
              b = Math.min(f2.x, b);
              c = Math.min(f2.y, c);
              M2.Vl(e.x, e.y, d.x, d.y, d.x, d.y, f2.x, f2.y, 0.5, a);
            } else
              for (f2 = 3; f2 < d; f2 += 3) {
                var g2 = this.i(f2 - 2);
                f2 + 3 >= d && (f2 = d - 1);
                var h = this.i(f2 - 1), k = this.i(f2);
                M2.Vl(e.x, e.y, g2.x, g2.y, h.x, h.y, k.x, k.y, 0.5, a);
                b = Math.min(k.x, b);
                c = Math.min(k.y, c);
                e = k;
              }
          else
            for (e = this.i(0), f2 = this.i(1), b = Math.min(e.x, f2.x), c = Math.min(e.y, f2.y), a.h(e.x, e.y, 0, 0), a.Oe(f2), e = 2; e < d; e++)
              f2 = this.i(e), b = Math.min(f2.x, b), c = Math.min(f2.y, c), a.Oe(f2);
          this.tu.h(b - a.x, c - a.y);
        }
        return a;
      }
    },
    midPoint: { get: function() {
      this.vg();
      return this.computeMidPoint(new K2());
    } },
    midAngle: { get: function() {
      this.vg();
      return this.computeMidAngle();
    } },
    flattenedLengths: { get: function() {
      if (this.dr === null) {
        this.td || fp(this);
        for (var a = this.dr = [], b = this.pointsCount, c = 0; c < b - 1; c++) {
          var d = this.i(c);
          var e = this.i(c + 1);
          M2.aa(d.x, e.x) ? (d = e.y - d.y, 0 > d && (d = -d)) : M2.aa(d.y, e.y) ? (d = e.x - d.x, 0 > d && (d = -d)) : d = Math.sqrt(d.xf(e));
          a.push(d);
        }
      }
      return this.dr;
    } },
    flattenedTotalLength: { get: function() {
      var a = this.Pt;
      if (isNaN(a)) {
        for (var b = this.flattenedLengths, c = b.length, d = a = 0; d < c; d++)
          a += b[d];
        this.Pt = a;
      }
      return a;
    } },
    points: { get: function() {
      return this.Db;
    }, set: function(a) {
      var b = this.Db;
      if (b !== a) {
        var c = null;
        if (Array.isArray(a)) {
          var d = a.length % 2 === 0;
          if (d) {
            for (var e = 0; e < a.length; e++)
              if (typeof a[e] !== "number" || isNaN(a[e])) {
                d = false;
                break;
              }
          }
          if (d)
            for (c = new F2(), d = 0; d < a.length / 2; d++)
              e = new K2(a[2 * d], a[2 * d + 1]).freeze(), c.add(e);
          else {
            d = true;
            for (e = 0; e < a.length; e++) {
              var f2 = a[e];
              if (!za2(f2) || typeof f2.x !== "number" || isNaN(f2.x) || typeof f2.y !== "number" || isNaN(f2.y)) {
                d = false;
                break;
              }
            }
            if (d)
              for (c = new F2(), d = 0; d < a.length; d++)
                e = a[d], c.add(new K2(e.x, e.y).freeze());
          }
        } else if (a instanceof F2)
          for (c = a.copy(), a = c.iterator; a.next(); )
            a.value.freeze();
        else
          C2("Link.points value is not an instance of List or Array: " + a);
        c.freeze();
        this.Db = c;
        this.gc(true);
        fp(this);
        a = this.diagram;
        a !== null && (a.Oi || a.undoManager.isUndoingRedoing || a.Hs.add(this), a.animationManager.tb && (a = a.animationManager, this.gf = c, a.Al.add(this)));
        this.g("points", b, c);
      }
    } },
    pointsCount: {
      get: function() {
        return this.Db.count;
      }
    },
    td: { get: function() {
      return (this.Ia & 16) !== 0;
    }, set: function(a) {
      (this.Ia & 16) !== 0 !== a && (this.Ia ^= 16);
    } },
    suspendsRouting: { get: function() {
      return (this.Ia & 32) !== 0;
    }, set: function(a) {
      (this.Ia & 32) !== 0 !== a && (this.Ia ^= 32);
    } },
    computingPoints: { get: function() {
      return (this.Ia & 64) !== 0;
    }, set: function(a) {
      (this.Ia & 64) !== 0 !== a && (this.Ia ^= 64);
    } },
    defaultFromPoint: {
      get: function() {
        return this.o;
      },
      set: function(a) {
        this.o = a.copy();
      }
    },
    defaultToPoint: { get: function() {
      return this.C;
    }, set: function(a) {
      this.C = a.copy();
    } },
    isOrthogonal: { get: function() {
      return (this.Ej.value & 2) === 2;
    } },
    isAvoiding: { get: function() {
      return (this.Ej.value & 4) === 4;
    } },
    Dm: { get: function() {
      return (this.Ia & 128) !== 0;
    }, set: function(a) {
      (this.Ia & 128) !== 0 !== a && (this.Ia ^= 128);
    } },
    geometry: {
      get: function() {
        this.Dm || (this.vg(), this.ma = this.makeGeometry());
        return this.ma;
      }
    },
    firstPickIndex: { get: function() {
      return 2 >= this.pointsCount ? 0 : this.isOrthogonal || !jp(this.computeSpot(true)) ? 1 : 0;
    } },
    lastPickIndex: { get: function() {
      var a = this.pointsCount;
      return a === 0 ? 0 : 2 >= a ? a - 1 : this.isOrthogonal || !jp(this.computeSpot(false)) ? a - 2 : a - 1;
    } },
    adjusting: { get: function() {
      return this.vk;
    }, set: function(a) {
      var b = this.vk;
      b !== a && (this.vk = a, this.g("adjusting", b, a));
    } },
    corner: { get: function() {
      return this.gn;
    }, set: function(a) {
      var b = this.gn;
      b !== a && (this.gn = a, this.gc(true), this.g("corner", b, a));
    } },
    curve: { get: function() {
      return this.jn;
    }, set: function(a) {
      var b = this.jn;
      b !== a && (this.jn = a, this.Va(), this.gc(true), gp(this, b === Qf2 || b === Pf2 || a === Qf2 || a === Pf2), this.g("curve", b, a));
    } },
    curviness: { get: function() {
      return this.kn;
    }, set: function(a) {
      var b = this.kn;
      b !== a && (this.kn = a, this.Va(), this.gc(false), this.g("curviness", b, a));
    } },
    routing: { get: function() {
      return this.Ej;
    }, set: function(a) {
      var b = this.Ej;
      b !== a && (this.Ej = a, this.Qf = null, this.Va(), gp(this, (b.value & 2) === 2 || (a.value & 2) === 2), this.g("routing", b, a));
    } },
    smoothness: { get: function() {
      return this.rp;
    }, set: function(a) {
      var b = this.rp;
      b !== a && (this.rp = a, this.gc(true), this.g("smoothness", b, a));
    } },
    key: { get: function() {
      var a = this.diagram;
      if (a !== null && a.model.Pi())
        return a.model.qc(this.data);
    } }
  });
  T2.prototype.invalidateOtherJumpOvers = T2.prototype.fq;
  T2.prototype.findClosestSegment = T2.prototype.Dz;
  T2.prototype.updateRoute = T2.prototype.vg;
  T2.prototype.invalidateRoute = T2.prototype.Va;
  T2.prototype.rollbackRoute = T2.prototype.Kv;
  T2.prototype.commitRoute = T2.prototype.vf;
  T2.prototype.startRoute = T2.prototype.Lh;
  T2.prototype.clearPoints = T2.prototype.Rj;
  T2.prototype.removePoint = T2.prototype.Iv;
  T2.prototype.addPointAt = T2.prototype.tf;
  T2.prototype.addPoint = T2.prototype.ee;
  T2.prototype.insertPointAt = T2.prototype.l;
  T2.prototype.insertPoint = T2.prototype.iA;
  T2.prototype.setPointAt = T2.prototype.M;
  T2.prototype.setPoint = T2.prototype.Pc;
  T2.prototype.getPoint = T2.prototype.i;
  T2.prototype.getOtherPort = T2.prototype.$z;
  T2.prototype.getOtherNode = T2.prototype.aq;
  var hp = null, ip = null, Yo = new D2(T2, "Normal", 1), Gp = new D2(T2, "Orthogonal", 2), Hp = new D2(T2, "AvoidsNodes", 6), pp = new D2(T2, "AvoidsNodesStraight", 7), Rf2 = new D2(T2, "None", 0), Uf2 = new D2(T2, "Bezier", 9), Qf2 = new D2(T2, "JumpGap", 10), Pf2 = new D2(T2, "JumpOver", 11), Zo = new D2(T2, "End", 17), $o = new D2(T2, "Scale", 18), ap = new D2(T2, "Stretch", 19), Mm = new D2(T2, "OrientAlong", 21), Fm = new D2(T2, "OrientPlus90", 22), Hm = new D2(T2, "OrientMinus90", 23), bp = new D2(T2, "OrientOpposite", 24), Nm = new D2(T2, "OrientUpright", 25), Gm = new D2(T2, "OrientPlus90Upright", 26), Im = new D2(T2, "OrientMinus90Upright", 27), Jm = new D2(T2, "OrientUpright45", 28), rp = 16, qp = 14, sp = 8;
  T2.className = "Link";
  T2.Normal = Yo;
  T2.Orthogonal = Gp;
  T2.AvoidsNodes = Hp;
  T2.AvoidsNodesStraight = pp;
  T2.None = Rf2;
  T2.Bezier = Uf2;
  T2.JumpGap = Qf2;
  T2.JumpOver = Pf2;
  T2.End = Zo;
  T2.Scale = $o;
  T2.Stretch = ap;
  T2.OrientAlong = Mm;
  T2.OrientPlus90 = Fm;
  T2.OrientMinus90 = Hm;
  T2.OrientOpposite = bp;
  T2.OrientUpright = Nm;
  T2.OrientPlus90Upright = Gm;
  T2.OrientMinus90Upright = Im;
  T2.OrientUpright45 = Jm;
  T2.EndSegmentStep = 8;
  T2.CurvinessStart = rp;
  T2.SpacingMin = qp;
  T2.OrthoShortCut = sp;
  T2.AvoidanceCell = 8;
  T2.AvoidanceLimit = 999;
  function Fp(a, b, c, d) {
    Va2(this);
    this.ue = this.jr = false;
    this.Ks = a;
    this.qy = b;
    this.vv = c;
    this.sy = d;
    this.links = [];
  }
  Fp.prototype.em = function() {
    if (!this.jr) {
      var a = this.links;
      0 < a.length && (a = a[0].diagram, a !== null && (a.Sw.add(this), this.ue = a.undoManager.isUndoingRedoing));
    }
    this.jr = true;
  };
  Fp.prototype.ew = function() {
    if (this.jr) {
      this.jr = false;
      var a = this.links;
      if (0 < a.length) {
        var b = a[0], c = b.diagram;
        c = c === null || c.Oi && !this.ue;
        this.ue = false;
        b.arrangeBundledLinks(a, c);
        a.length === 1 && (b.Mf = null, a.length = 0);
      }
      a.length === 0 && (a = this.Ks, this !== null && a.Te !== null && a.Te.remove(this), a = this.vv, this !== null && a.Te !== null && a.Te.remove(this));
    }
  };
  Fp.className = "LinkBundle";
  function kk2() {
    Va2(this);
    this.Cy = this.group = null;
    this.As = true;
    this.abort = false;
    this.zd = this.yd = 1;
    this.po = this.oo = -1;
    this.ic = this.hc = 8;
    this.Ub = null;
    this.zi = this.yi = 0;
    this.Dy = 11;
    this.jy = 124;
  }
  kk2.prototype.initialize = function(a) {
    if (!(0 >= a.width || 0 >= a.height)) {
      var b = a.y, c = a.x + a.width, d = a.y + a.height;
      this.yd = Math.floor((a.x - this.hc) / this.hc) * this.hc;
      this.zd = Math.floor((b - this.ic) / this.ic) * this.ic;
      this.oo = Math.ceil((c + 2 * this.hc) / this.hc) * this.hc;
      this.po = Math.ceil((d + 2 * this.ic) / this.ic) * this.ic;
      a = 1 + (Math.ceil((this.oo - this.yd) / this.hc) | 0);
      b = 1 + (Math.ceil((this.po - this.zd) / this.ic) | 0);
      if (this.Ub === null || this.yi < a - 1 || this.zi < b - 1) {
        c = [];
        for (d = 0; d <= a; d++)
          c[d] = new Uint32Array(b);
        this.Ub = c;
        this.yi = a - 1;
        this.zi = b - 1;
      }
      a = Ip;
      if (this.Ub !== null)
        for (b = 0; b <= this.yi; b++)
          if (c = this.Ub[b], c.fill)
            c.fill(a);
          else
            for (d = 0; d <= this.zi; d++)
              c[d] = a;
    }
  };
  function ok2(a, b, c) {
    return a.yd <= b && b <= a.oo && a.zd <= c && c <= a.po;
  }
  function up(a, b, c) {
    if (!ok2(a, b, c))
      return Ip;
    b -= a.yd;
    b /= a.hc;
    c -= a.zd;
    c /= a.ic;
    return a.Ub[b | 0][c | 0];
  }
  function nk2(a) {
    if (a.Ub !== null)
      for (var b = 0; b <= a.yi; b++)
        for (var c = a.Ub[b], d = 0; d <= a.zi; d++)
          c[d] >= xp && (c[d] = Ip);
  }
  kk2.prototype.fk = function(a, b, c, d) {
    if (a > this.oo || a + c < this.yd || b > this.po || b + d < this.zd)
      return true;
    a = (a - this.yd) / this.hc | 0;
    b = (b - this.zd) / this.ic | 0;
    c = Math.max(0, c) / this.hc + 1 | 0;
    var e = Math.max(0, d) / this.ic + 1 | 0;
    0 > a && (c += a, a = 0);
    0 > b && (e += b, b = 0);
    if (0 > c || 0 > e)
      return true;
    d = Math.min(a + c - 1, this.yi) | 0;
    for (c = Math.min(b + e - 1, this.zi) | 0; a <= d; a++) {
      e = this.Ub[a];
      for (var f2 = b; f2 <= c; f2++)
        if (e[f2] === pk2)
          return false;
    }
    return true;
  };
  function Jp(a, b, c, d, e, f2, g2, h, k) {
    if (!(b < f2 || b > g2 || c < h || c > k)) {
      var l2 = b | 0;
      var m2 = c | 0;
      var n2 = a.Ub[l2][m2];
      if (n2 >= xp && n2 < vp)
        for (e ? m2 += d : l2 += d, n2 += 1; f2 <= l2 && l2 <= g2 && h <= m2 && m2 <= k && !(n2 >= a.Ub[l2][m2]); )
          a.Ub[l2][m2] = n2, n2 += 1, e ? m2 += d : l2 += d;
      l2 = e ? m2 : l2;
      if (e)
        if (0 < d)
          for (c += d; c < l2; c += d)
            Jp(a, b, c, 1, !e, f2, g2, h, k), Jp(a, b, c, -1, !e, f2, g2, h, k);
        else
          for (c += d; c > l2; c += d)
            Jp(a, b, c, 1, !e, f2, g2, h, k), Jp(a, b, c, -1, !e, f2, g2, h, k);
      else if (0 < d)
        for (b += d; b < l2; b += d)
          Jp(a, b, c, 1, !e, f2, g2, h, k), Jp(a, b, c, -1, !e, f2, g2, h, k);
      else
        for (b += d; b > l2; b += d)
          Jp(a, b, c, 1, !e, f2, g2, h, k), Jp(a, b, c, -1, !e, f2, g2, h, k);
    }
  }
  function Kp(a, b, c, d, e, f2, g2, h, k) {
    b |= 0;
    c |= 0;
    var l2 = pk2, m2 = xp;
    for (a.Ub[b][c] = m2; l2 === pk2 && b > f2 && b < g2 && c > h && c < k; )
      m2 += 1, a.Ub[b][c] = m2, e ? c += d : b += d, l2 = a.Ub[b][c];
  }
  function Lp(a, b, c, d, e, f2, g2, h, k) {
    b |= 0;
    c |= 0;
    var l2 = pk2, m2 = vp;
    for (a.Ub[b][c] = m2; l2 === pk2 && b > f2 && b < g2 && c > h && c < k; )
      a.Ub[b][c] = m2, e ? c += d : b += d, l2 = a.Ub[b][c];
  }
  function tp(a, b, c, d, e, f2, g2) {
    if (a.Ub !== null) {
      a.abort = false;
      var h = b.x, k = b.y;
      if (ok2(a, h, k)) {
        h -= a.yd;
        h /= a.hc;
        k -= a.zd;
        k /= a.ic;
        var l2 = d.x, m2 = d.y;
        if (ok2(a, l2, m2))
          if (l2 -= a.yd, l2 /= a.hc, m2 -= a.zd, m2 /= a.ic, 1 >= Math.abs(h - l2) && 1 >= Math.abs(k - m2))
            a.abort = true;
          else {
            var n2 = f2.x;
            d = f2.y;
            b = f2.x + f2.width;
            var p2 = f2.y + f2.height;
            n2 -= a.yd;
            n2 /= a.hc;
            d -= a.zd;
            d /= a.ic;
            b -= a.yd;
            b /= a.hc;
            p2 -= a.zd;
            p2 /= a.ic;
            f2 = Math.max(0, Math.min(a.yi, n2 | 0));
            b = Math.min(a.yi, Math.max(0, b | 0));
            n2 = Math.max(0, Math.min(a.zi, d | 0));
            p2 = Math.min(a.zi, Math.max(0, p2 | 0));
            d = a.Ub;
            h |= 0;
            k |= 0;
            l2 |= 0;
            m2 |= 0;
            var r2 = c === 0 || c === 90 ? 1 : -1;
            c = c === 90 || c === 270;
            d[h][k] === pk2 ? (Kp(a, h, k, r2, c, f2, b, n2, p2), Kp(a, h, k, 1, !c, f2, b, n2, p2), Kp(a, h, k, -1, !c, f2, b, n2, p2)) : Kp(a, h, k, r2, c, h, k, h, k);
            d[l2][m2] === pk2 ? (Lp(a, l2, m2, e === 0 || e === 90 ? 1 : -1, e === 90 || e === 270, f2, b, n2, p2), Lp(a, l2, m2, 1, !(e === 90 || e === 270), f2, b, n2, p2), Lp(a, l2, m2, -1, !(e === 90 || e === 270), f2, b, n2, p2)) : Lp(a, l2, m2, r2, c, l2, m2, l2, m2);
            c = Ea2();
            if (g2 && Mp(a, l2, m2, e, h, k, c)) {
              if (c[0] !== l2 || c[1] !== m2)
                c.unshift(m2), c.unshift(l2);
              if (c[c.length - 2] !== h || c[c.length - 1] !== k)
                c.push(h), c.push(k);
              a = xp;
              e = c[c.length - 2];
              g2 = c[c.length - 1];
              d[e][g2] = a++;
              for (f2 = c.length - 4; 0 <= f2; f2 -= 2)
                for (e = c[f2 + 2], g2 = c[f2 + 3], b = c[f2], l2 = c[f2 + 1]; b > e ? e++ : b < e ? e-- : l2 > g2 ? g2++ : l2 < g2 && g2--, d[e][g2] = a++, e !== b || g2 !== l2; )
                  ;
            } else
              Jp(a, h, k, 1, false, f2, b, n2, p2), Jp(a, h, k, -1, false, f2, b, n2, p2), Jp(a, h, k, 1, true, f2, b, n2, p2), Jp(a, h, k, -1, true, f2, b, n2, p2);
            Ia2(c);
          }
      }
    }
  }
  function Mp(a, b, c, d, e, f2, g2) {
    for (var h = a.Ub, k = b, l2 = c; ; ) {
      if (k === e && l2 === f2)
        return true;
      var m2 = k, n2 = l2;
      if (d === 0)
        if (m2 < e)
          m2++;
        else
          break;
      else if (d === 90)
        if (n2 < f2)
          n2++;
        else
          break;
      else if (d === 180)
        if (m2 > e)
          m2--;
        else
          break;
      else if (n2 > f2)
        n2--;
      else
        break;
      var p2 = h[m2][n2];
      if (p2 === 0 || p2 === Np)
        break;
      k = m2;
      l2 = n2;
    }
    for (; ; ) {
      m2 = d;
      n2 = k;
      p2 = l2;
      d === 0 ? p2 < f2 ? (m2 = 90, p2++) : p2 > f2 && (m2 = 270, p2--) : d === 90 ? n2 < e ? (m2 = 0, n2++) : n2 > e && (m2 = 180, n2--) : d === 180 ? p2 < f2 ? (m2 = 90, p2++) : p2 > f2 && (m2 = 270, p2--) : n2 < e ? (m2 = 0, n2++) : n2 > e && (m2 = 180, n2--);
      n2 = h[n2][p2];
      if (m2 !== d && n2 !== 0 && n2 !== Np) {
        g2.push(k);
        g2.push(l2);
        if (Mp(a, k, l2, m2, e, f2, g2))
          return true;
        g2.pop();
        g2.pop();
      }
      h[k][l2] = Np;
      if (d === 0) {
        if (k === b)
          return false;
        k--;
      } else if (d === 90) {
        if (l2 === c)
          return false;
        l2--;
      } else if (d === 180) {
        if (k === b)
          return false;
        k++;
      } else {
        if (l2 === c)
          return false;
        l2++;
      }
    }
  }
  na2.Object.defineProperties(kk2.prototype, { bounds: { get: function() {
    return new N2(this.yd, this.zd, this.oo - this.yd, this.po - this.zd);
  } }, Rp: { get: function() {
    return this.hc;
  }, set: function(a) {
    0 < a && a !== this.hc && (this.hc = a, this.initialize(this.bounds));
  } }, Qp: { get: function() {
    return this.ic;
  }, set: function(a) {
    0 < a && a !== this.ic && (this.ic = a, this.initialize(this.bounds));
  } } });
  var pk2 = 0, xp = 1, vp = 999999, Ip = vp + 1, Np = vp + 2;
  kk2.className = "PositionArray";
  function np() {
    Va2(this);
    this.port = this.node = null;
    this.ge = [];
    this.iq = false;
  }
  np.prototype.toString = function() {
    for (var a = this.ge, b = this.node.toString() + " " + a.length.toString() + ":", c = 0; c < a.length; c++) {
      var d = a[c];
      d !== null && (b += "\n  " + d.toString());
    }
    return b;
  };
  function Op(a, b, c, d) {
    b = b.offsetY;
    switch (b) {
      case 8:
        return 90;
      case 2:
        return 180;
      case 1:
        return 270;
      case 4:
        return 0;
    }
    switch (b) {
      case 9:
        return 180 < c ? 270 : 90;
      case 6:
        return 90 < c && 270 >= c ? 180 : 0;
    }
    a = 180 * Math.atan2(a.height, a.width) / Math.PI;
    switch (b) {
      case 3:
        return c > a && c <= 180 + a ? 180 : 270;
      case 5:
        return c > 180 - a && c <= 360 - a ? 270 : 0;
      case 12:
        return c > a && c <= 180 + a ? 90 : 0;
      case 10:
        return c > 180 - a && c <= 360 - a ? 180 : 90;
      case 7:
        return 90 < c && c <= 180 + a ? 180 : c > 180 + a && c <= 360 - a ? 270 : 0;
      case 13:
        return 180 < c && c <= 360 - a ? 270 : c > a && 180 >= c ? 90 : 0;
      case 14:
        return c > a && c <= 180 - a ? 90 : c > 180 - a && 270 >= c ? 180 : 0;
      case 11:
        return c > 180 - a && c <= 180 + a ? 180 : c > 180 + a ? 270 : 90;
    }
    d && b !== 15 && (c -= 15, 0 > c && (c += 360));
    return c > a && c < 180 - a ? 90 : c >= 180 - a && c <= 180 + a ? 180 : c > 180 + a && c < 360 - a ? 270 : 0;
  }
  np.prototype.em = function() {
    this.ge.length = 0;
  };
  function op(a, b) {
    var c = a.ge;
    if (c.length === 0) {
      a:
        if (!a.iq) {
          c = a.iq;
          a.iq = true;
          var d = null, e = a.node, f2 = e instanceof U2 ? e : null;
          if (f2 === null || f2.isSubGraphExpanded)
            var g2 = e.isTreeExpanded ? e.findLinksConnected(a.port.portId) : e.Qx();
          else {
            if (!f2.actualBounds.u()) {
              a.iq = c;
              break a;
            }
            d = f2;
            g2 = d.Uu();
          }
          f2 = a.ge.length = 0;
          var h = a.port.da(uc2, K2.alloc()), k = a.port.da(Cc2, K2.alloc());
          e = N2.allocAt(h.x, h.y, 0, 0);
          e.Oe(k);
          K2.free(h);
          K2.free(k);
          h = K2.allocAt(e.x + e.width / 2, e.y + e.height / 2);
          k = a.port.Ki();
          for (g2 = g2.iterator; g2.next(); ) {
            var l2 = g2.value;
            if (l2.isVisible() && l2.fromPort !== l2.toPort) {
              var m2 = l2.fromPort === a.port || l2.fromNode !== null && l2.fromNode.Jd(d), n2 = l2.computeSpot(m2, a.port);
              if (n2.Nc()) {
                var p2 = m2 ? l2.toPort : l2.fromPort;
                if (p2 !== null && (m2 = p2.part, m2 !== null)) {
                  var r2 = m2.findVisibleNode();
                  r2 !== null && r2 !== m2 && (m2 = r2, p2 = m2.port);
                  m2 = l2.computeOtherPoint(m2, p2);
                  p2 = h.Pa(p2.da(yc2));
                  p2 += (h.Pa(m2) - p2) / 360;
                  p2 -= k;
                  0 > p2 ? p2 += 360 : 360 <= p2 && (p2 -= 360);
                  n2 = Op(e, n2, p2, l2.isOrthogonal);
                  n2 === 0 ? (n2 = 4, 180 < p2 && (p2 -= 360)) : n2 === 90 ? (n2 = 8, 270 < p2 && (p2 -= 360)) : n2 === 180 ? n2 = 2 : (n2 = 1, 90 > p2 && (p2 += 360));
                  r2 = a.ge[f2];
                  r2 === void 0 ? (r2 = new Pp(l2, p2, n2), a.ge[f2] = r2) : (r2.link = l2, r2.angle = p2, r2.Cc = n2);
                  r2.yv.set(m2);
                  f2++;
                }
              }
            }
          }
          K2.free(h);
          a.ge.sort(np.prototype.j);
          k = a.ge.length;
          d = -1;
          for (f2 = h = 0; f2 < k; f2++)
            g2 = a.ge[f2], g2 !== void 0 && (g2.Cc !== d && (d = g2.Cc, h = 0), g2.bq = h, h++);
          d = -1;
          h = 0;
          for (f2 = k - 1; 0 <= f2; f2--)
            k = a.ge[f2], k !== void 0 && (k.Cc !== d && (d = k.Cc, h = k.bq + 1), k.Yl = h);
          f2 = a.ge;
          n2 = a.port;
          d = a.node.portSpreading;
          h = K2.alloc();
          k = K2.alloc();
          g2 = K2.alloc();
          l2 = K2.alloc();
          n2.da(uc2, h);
          n2.da(wc2, k);
          n2.da(Cc2, g2);
          n2.da(Ac2, l2);
          r2 = p2 = m2 = n2 = 0;
          if (d === Vo)
            for (var q2 = 0; q2 < f2.length; q2++) {
              var u2 = f2[q2];
              if (u2 !== null) {
                var w = u2.link.computeThickness();
                switch (u2.Cc) {
                  case 8:
                    p2 += w;
                    break;
                  case 2:
                    r2 += w;
                    break;
                  case 1:
                    n2 += w;
                    break;
                  default:
                  case 4:
                    m2 += w;
                }
              }
            }
          var v2 = q2 = 0, z2 = 1, y2 = u2 = 0;
          for (w = 0; w < f2.length; w++) {
            var B2 = f2[w];
            if (B2 !== null) {
              if (q2 !== B2.Cc) {
                q2 = B2.Cc;
                switch (q2) {
                  case 8:
                    var A2 = g2;
                    v2 = l2;
                    break;
                  case 2:
                    A2 = l2;
                    v2 = h;
                    break;
                  case 1:
                    A2 = h;
                    v2 = k;
                    break;
                  default:
                  case 4:
                    A2 = k, v2 = g2;
                }
                u2 = v2.x - A2.x;
                y2 = v2.y - A2.y;
                switch (q2) {
                  case 8:
                    p2 > Math.abs(u2) ? (z2 = Math.abs(u2) / p2, p2 = Math.abs(u2)) : z2 = 1;
                    break;
                  case 2:
                    r2 > Math.abs(y2) ? (z2 = Math.abs(y2) / r2, r2 = Math.abs(y2)) : z2 = 1;
                    break;
                  case 1:
                    n2 > Math.abs(u2) ? (z2 = Math.abs(u2) / n2, n2 = Math.abs(u2)) : z2 = 1;
                    break;
                  default:
                  case 4:
                    m2 > Math.abs(y2) ? (z2 = Math.abs(y2) / m2, m2 = Math.abs(y2)) : z2 = 1;
                }
                v2 = 0;
              }
              var E = B2.hq;
              if (d === Vo) {
                B2 = B2.link.computeThickness();
                B2 *= z2;
                E.set(A2);
                switch (q2) {
                  case 8:
                    E.x = A2.x + u2 / 2 + p2 / 2 - v2 - B2 / 2;
                    break;
                  case 2:
                    E.y = A2.y + y2 / 2 + r2 / 2 - v2 - B2 / 2;
                    break;
                  case 1:
                    E.x = A2.x + u2 / 2 - n2 / 2 + v2 + B2 / 2;
                    break;
                  default:
                  case 4:
                    E.y = A2.y + y2 / 2 - m2 / 2 + v2 + B2 / 2;
                }
                v2 += B2;
              } else {
                var Q2 = 0.5;
                d === Ho && (Q2 = (B2.bq + 1) / (B2.Yl + 1));
                E.x = A2.x + u2 * Q2;
                E.y = A2.y + y2 * Q2;
              }
            }
          }
          K2.free(h);
          K2.free(k);
          K2.free(g2);
          K2.free(l2);
          A2 = a.ge;
          for (f2 = 0; f2 < A2.length; f2++)
            d = A2[f2], d !== null && (d.Ru = a.computeEndSegmentLength(d));
          a.iq = c;
          N2.free(e);
        }
      c = a.ge;
    }
    for (a = 0; a < c.length; a++)
      if (e = c[a], e !== null && e.link === b)
        return e;
    return null;
  }
  np.prototype.j = function(a, b) {
    return a === b ? 0 : a === null ? -1 : b === null ? 1 : a.Cc < b.Cc ? -1 : a.Cc > b.Cc ? 1 : a.angle < b.angle ? -1 : a.angle > b.angle ? 1 : 0;
  };
  np.prototype.computeEndSegmentLength = function(a) {
    var b = a.link, c = b.computeEndSegmentLength(this.node, this.port, rc2, b.fromPort === this.port), d = a.bq;
    if (0 > d)
      return c;
    var e = a.Yl;
    if (1 >= e || !b.isOrthogonal)
      return c;
    b = a.yv;
    var f2 = a.hq;
    if (a.Cc === 2 || a.Cc === 8)
      d = e - 1 - d;
    return ((a = a.Cc === 2 || a.Cc === 4) ? b.y < f2.y : b.x < f2.x) ? c + 8 * d : (a ? b.y === f2.y : b.x === f2.x) ? c : c + 8 * (e - 1 - d);
  };
  np.className = "Knot";
  function Pp(a, b, c) {
    this.link = a;
    this.angle = b;
    this.Cc = c;
    this.yv = new K2();
    this.Yl = this.bq = 0;
    this.hq = new K2();
    this.Ru = 0;
  }
  Pp.prototype.toString = function() {
    return this.link.toString() + " " + this.angle.toString() + " " + this.Cc.toString() + ":" + this.bq.toString() + "/" + this.Yl.toString() + " " + this.hq.toString() + " " + this.Ru.toString() + " " + this.yv.toString();
  };
  Pp.className = "LinkInfo";
  function Yk() {
    this.th = this.Pg = Uc2;
    this.sh = this.Og = this.rh = this.Ng = NaN;
    this.Bp = this.Bn = null;
    this.Cp = this.Cn = Infinity;
  }
  Yk.prototype.copy = function() {
    var a = new Yk();
    a.Pg = this.Pg.I();
    a.th = this.th.I();
    a.Ng = this.Ng;
    a.rh = this.rh;
    a.Og = this.Og;
    a.sh = this.sh;
    a.Bn = this.Bn;
    a.Bp = this.Bp;
    a.Cn = this.Cn;
    a.Cp = this.Cp;
    return a;
  };
  Yk.className = "LinkSettings";
  function ni2(a) {
    Va2(this);
    this.o = this.D = null;
    this.$h = this.Un = true;
    this.$n = false;
    this.Rm = new K2(0, 0).freeze();
    this.Xn = true;
    this.Vm = this.Wn = null;
    this.Zn = false;
    this.j = null;
    this.C = 0;
    this.qo = this.Ip = null;
    this.hs = false;
    this.lg = this.Gj = null;
    this.Yr = false;
    a && Object.assign(this, a);
  }
  ni2.prototype.cloneProtected = function(a) {
    a.Un = this.Un;
    a.$h = this.$h;
    a.$n = this.$n;
    a.Rm.assign(this.Rm);
    a.Xn = this.Xn;
    a.Wn = this.Wn;
    a.Vm = this.Vm;
    a.Zn = true;
    a.qo = this.qo;
    a.Ip = this.Ip;
  };
  ni2.prototype.copy = function() {
    var a = new this.constructor();
    this.cloneProtected(a);
    return a;
  };
  ni2.prototype.serializeLayoutProperties = function(a) {
    a.arrangementOrigin = { x: this.arrangementOrigin.x, y: this.arrangementOrigin.y };
    a.isRouting = this.isRouting;
  };
  ni2.prototype.deserializeLayoutProperties = function(a) {
    a !== null && (this.arrangementOrigin = new K2(a.arrangementOrigin.x, a.arrangementOrigin.y), this.isRouting = a.isRouting);
  };
  ni2.prototype.gb = function() {
  };
  ni2.prototype.toString = function() {
    var a = Ja2(this.constructor);
    a += "(";
    this.group !== null && (a += " in " + this.group);
    this.diagram !== null && (a += " for " + this.diagram);
    return a + ")";
  };
  ni2.prototype.B = function() {
    if (this.isValidLayout) {
      var a = this.diagram;
      if (a !== null && !a.undoManager.isUndoingRedoing) {
        var b = a.animationManager;
        !b.isTicking && (b.defaultAnimation.isAnimating && b.rc(), this.isOngoing && a.Oi || this.isInitial && !a.Oi) && (this.isValidLayout = false, a.Gb());
      }
    }
  };
  ni2.prototype.createNetwork = function() {
    return new Qp(this);
  };
  ni2.prototype.makeNetwork = function(a) {
    var b = this.createNetwork();
    a instanceof R2 ? (b.ng(a.nodes, true), b.ng(a.links, true)) : a instanceof U2 ? b.ng(a.memberParts) : b.ng(a.iterator);
    return b;
  };
  ni2.prototype.updateParts = function() {
    this.isValidLayout = true;
    if (!this.workerLayout()) {
      var a = this.diagram;
      if (a === null && this.network !== null)
        for (var b = this.network.vertexes.iterator; b.next(); ) {
          var c = b.value.node;
          if (c !== null && (a = c.diagram, a !== null))
            break;
        }
      try {
        a !== null && a.xa("Layout"), this.commitLayout();
      } finally {
        a !== null && a.Xa("Layout");
      }
    }
  };
  ni2.prototype.commitLayout = function() {
    if (this.network !== null) {
      for (var a = this.network.vertexes.iterator; a.next(); )
        a.value.commit();
      if (this.isRouting)
        for (a = this.network.edges.iterator; a.next(); )
          a.value.commit();
    }
  };
  ni2.prototype.doLayout = function(a) {
    var b = new G2();
    a instanceof R2 ? (Rp(this, b, a.nodes, true, this.Jh, true, false, true), Rp(this, b, a.parts, true, this.Jh, true, false, true)) : a instanceof U2 ? Rp(this, b, a.memberParts, false, this.Jh, true, false, true) : b.addAll(a.iterator);
    0 < b.count && (a = this.diagram, a !== null && a.xa("Layout"), this.doMinimalNoNetworkLayout(b), a !== null && a.Xa("Layout"));
    this.isValidLayout = true;
  };
  ni2.prototype.doMinimalNoNetworkLayout = function(a) {
    var b = Math.ceil(Math.sqrt(a.count));
    this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
    var c = this.arrangementOrigin.x, d = c, e = this.arrangementOrigin.y, f2 = 0, g2 = 0;
    for (a = a.iterator; a.next(); ) {
      var h = a.value;
      Sp(h);
      var k = h.measuredBounds, l2 = k.width;
      k = k.height;
      h.moveTo(d, e);
      h instanceof U2 && (h.Jh = false);
      d += Math.max(l2, 50) + 20;
      g2 = Math.max(g2, Math.max(k, 50));
      f2 >= b - 1 ? (f2 = 0, d = c, e += g2 + 20, g2 = 0) : f2++;
    }
  };
  ni2.prototype.doMinimalNetworkLayout = function() {
    var a = Math.ceil(Math.sqrt(this.network.vertexes.count));
    this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
    for (var b = this.arrangementOrigin.x, c = b, d = this.arrangementOrigin.y, e = 0, f2 = 0, g2 = this.network.vertexes.iterator; g2.next(); ) {
      var h = g2.value.node;
      if (!(h === null || h instanceof T2) && (Sp(h), this.Jh(h))) {
        var k = h.measuredBounds, l2 = k.width;
        k = k.height;
        h.moveTo(c, d);
        h instanceof U2 && (h.Jh = false);
        c += Math.max(l2, 50) + 20;
        f2 = Math.max(f2, Math.max(k, 50));
        e >= a - 1 ? (e = 0, c = b, d += f2 + 20, f2 = 0) : e++;
      }
    }
  };
  ni2.prototype.Jh = function(a) {
    return !a.location.u() || a instanceof U2 && a.Jh ? true : false;
  };
  function Rp(a, b, c, d, e, f2, g2, h) {
    for (c = c.iterator; c.next(); ) {
      var k = c.value;
      d && !k.isTopLevel || e !== null && !e(k) || !k.canLayout() || (f2 && k instanceof W2 ? k.isLinkLabel || (k instanceof U2 ? k.layout === null ? Rp(a, b, k.memberParts, false, e, f2, g2, h) : (Sp(k), b.add(k)) : (Sp(k), b.add(k))) : g2 && k instanceof T2 ? b.add(k) : !h || !k.Mc() || k instanceof W2 || (Sp(k), b.add(k)));
    }
  }
  function Sp(a) {
    var b = a.actualBounds;
    (b.width === 0 || b.height === 0 || isNaN(b.width) || isNaN(b.height)) && a.Ta();
  }
  ni2.prototype.Mi = function(a, b) {
    var c = this.boundsComputation;
    if (c !== null)
      return b || (b = new N2()), c(a, this, b);
    if (!b)
      return a.actualBounds;
    b.set(a.actualBounds);
    return b;
  };
  ni2.prototype.Fx = function(a) {
    var b = new G2();
    a instanceof R2 ? (Rp(this, b, a.nodes, true, null, true, true, true), Rp(this, b, a.links, true, null, true, true, true), Rp(this, b, a.parts, true, null, true, true, true)) : a instanceof U2 ? Rp(this, b, a.memberParts, false, null, true, true, true) : Rp(this, b, a.iterator, false, null, true, true, true);
    return b;
  };
  ni2.prototype.initialOrigin = function(a) {
    var b = this.group;
    if (b !== null) {
      var c = b.position.copy();
      (isNaN(c.x) || isNaN(c.y)) && c.set(a);
      b = b.placeholder;
      b !== null && (c = b.da(uc2), (isNaN(c.x) || isNaN(c.y)) && c.set(a), a = b.padding, c.x += a.left, c.y += a.top);
      return c;
    }
    return a;
  };
  ni2.prototype.mayUseWorker = function() {
    return this.mayUseWorkerFunction ? this.mayUseWorkerFunction(this) : false;
  };
  ni2.prototype.workerLayout = function() {
    return false;
  };
  function Tp(a, b) {
    if (a.workerStateChanged !== null) {
      var c = { key: a.group ? a.group.key : null };
      b !== void 0 && (c.time = b);
      a.Gj !== null && (c.running = Up(a.Gj));
      a.lg !== null && (c.waiting = Up(a.lg));
      a.workerStateChanged(c, a);
    }
  }
  function Up(a) {
    return { vertexes: a.vertexes.count, edges: a.edges.count };
  }
  ni2.prototype.jz = function() {
    var a = Vp(this.constructor);
    a && (a.Pe !== null && a.Pe.terminate(), a.Pe = null, a.gm.iteratorValues.each(function(a2) {
      a2.hs = false;
      a2.Gj = null;
      a2.lg = null;
      a2.Yr = false;
      Tp(a2);
    }), a.gm.clear());
  };
  function Wp(a, b) {
    var c = Vp(a);
    if (c) {
      if (b)
        for (var d in b)
          c[d] = b[d];
    } else
      throw Error("Unknown Layout class: " + a);
  }
  function Vp(a) {
    var b = null;
    if (typeof a === "function") {
      if (b = Xp.get(a), !b) {
        var c = Ja2(a);
        b = Xp.get(c);
        b || (b = new Yp(), b.Mu = a, b.name = c, b.j = a.name, b.by = Zp, Xp.set(c, b), Xp.set(a, b), Xp.set(a.name, b));
      }
    } else
      typeof a === "string" && (b = Xp.get(a));
    return b;
  }
  ni2.prototype.dw = function() {
    if (typeof Worker === "undefined" || !$p || typeof self === "undefined" || typeof self.DedicatedWorkerGlobalScope !== "undefined")
      return false;
    if (!this.mayUseWorker())
      return this.hs && (this.Yr = true, this.lg = this.Gj = null, Tp(this)), false;
    var a = Vp(this.constructor);
    if (a === null)
      return false;
    a.Pe === null && (a.Pe = new Worker($p), a.Pe.onerror = function(a2) {
      a2.preventDefault();
      ya2("Worker Error at: " + a2.filename + " " + a2.lineno + " " + a2.colno + "\n  " + a2.message);
    }, a.Pe.j = function(a2) {
      ya2("Worker serialization error: " + a2);
    }, a.Pe.onmessage = function(b) {
      var c = b.data;
      if (c._GoJS === "_GoJS") {
        if (c.version && R2.version && c.version !== R2.version)
          ya2("Failure: GoJS v" + R2.version + "  Worker v" + c.version);
        else if (b = a.gm.get(c.id)) {
          a.gm.remove(c.id);
          b.hs = false;
          b.Gj = null;
          if (b.Yr)
            b.Yr = false, b.lg = null;
          else {
            var d = aq(b, c, false);
            b.network = d;
            b.updateParts();
            b.network = null;
            b.isValidLayout = true;
          }
          Tp(b, c.time);
          c = b.lg;
          if (c !== null)
            b.lg = null;
          else
            for (d = a.gm.iteratorValues; d.next(); ) {
              var e = d.value;
              c = e.lg;
              if (c !== null) {
                e.lg = null;
                break;
              }
            }
          c !== null && bq(b, c);
        }
      }
    }, a.Pe.postMessage({
      _GoJS: "_GoJS",
      url: a.by
    }), Array.isArray(a.scripts) && a.scripts.forEach(function(b) {
      a.Pe.postMessage({ _GoJS: "_GoJS", url: b });
    }), a.Pe.postMessage({ _GoJS: "_GoJS", version: -1 }));
    this.Gj !== null ? this.lg = this.network : bq(this, this.network);
    Tp(this);
    this.doMinimalNetworkLayout();
    this.network = null;
    return this.isValidLayout = true;
  };
  function bq(a, b) {
    a.hs = true;
    var c = Vp(a.constructor), d = cq(a, b, true);
    d._GoJS = "_GoJS";
    c.Pe.postMessage(d);
    c.gm.set(ib2(a), a);
    a.Gj = b;
  }
  function cq(a, b, c) {
    a.onNetworkSerialization(1, c, b, null);
    var d = {};
    a.serializeLayoutProperties(d, c);
    var e = [];
    b.vertexes.each(function(a2) {
      var b2 = {};
      a2.serializeVertexProperties(b2, c);
      e.push(b2);
    });
    var f2 = [];
    b.edges.each(function(a2) {
      var b2 = {};
      a2.serializeEdgeProperties(b2, c);
      f2.push(b2);
    });
    d = { id: c ? ib2(a) : a.id, layout: Ja2(a.constructor), p: d, XA: e, Bz: f2 };
    a.onNetworkSerialization(2, c, b, d);
    return d;
  }
  function aq(a, b, c) {
    c && (a.id = b.id);
    var d = a.diagram, e = a.createNetwork();
    a.onNetworkSerialization(3, c, e, b);
    var f2 = b.XA, g2 = new H2();
    f2 && f2.forEach(function(a2) {
      var b2 = null;
      a2.key === null || d === null || c || (b2 = d.Fb(a2.key));
      b2 !== null ? b2 = e.Pj(b2) : (b2 = e.createVertex(), e.og(b2));
      c && a2.key !== null && (b2.data = { di: a2.key });
      g2.set(a2.id, b2);
    });
    var h = b.Bz, k = new H2();
    h && h.forEach(function(a2) {
      var b2 = null;
      a2.key === null || d === null || c || (b2 = d.findLinkForKey(a2.key));
      var f3 = e.createEdge();
      e.Tl(f3);
      f3.link = b2;
      c && a2.key !== null && (f3.data = { di: a2.key });
      k.set(a2.id, f3);
    });
    f2 && f2.forEach(function(a2) {
      var b2 = g2.get(a2.id);
      b2 && b2.deserializeVertexProperties(a2, g2, k, c);
    });
    h && h.forEach(function(a2) {
      var b2 = k.get(a2.id);
      b2 && b2.deserializeEdgeProperties(a2, g2, k, c);
    });
    a.deserializeLayoutProperties(b.p, g2, k, c, e);
    a.onNetworkSerialization(4, c, e, b);
    return e;
  }
  ni2.prototype.onNetworkSerialization = function() {
  };
  na2.Object.defineProperties(ni2.prototype, {
    diagram: { get: function() {
      return this.D;
    }, set: function(a) {
      this.D = a;
    } },
    group: { get: function() {
      return this.o;
    }, set: function(a) {
      this.o !== a && (this.o = a, a !== null && (this.D = a.diagram));
    } },
    isOngoing: { get: function() {
      return this.Un;
    }, set: function(a) {
      this.Un !== a && (this.Un = a);
    } },
    isInitial: { get: function() {
      return this.$h;
    }, set: function(a) {
      this.$h = a;
      a || (this.Zn = true);
    } },
    isViewportSized: { get: function() {
      return this.$n;
    }, set: function(a) {
      this.$n !== a && (this.$n = a) && this.B();
    } },
    isRouting: { get: function() {
      return this.Xn;
    }, set: function(a) {
      this.Xn !== a && (this.Xn = a);
    } },
    isRealtime: { get: function() {
      return this.Wn;
    }, set: function(a) {
      this.Wn !== a && (this.Wn = a);
    } },
    isValidLayout: { get: function() {
      return this.Zn;
    }, set: function(a) {
      this.Zn !== a && (this.Zn = a, a || (a = this.diagram, a !== null && (a.Oh = true)));
    } },
    network: { get: function() {
      return this.j;
    }, set: function(a) {
      this.j !== a && (this.j = a, a !== null && (a.layout = this));
    } },
    boundsComputation: { get: function() {
      return this.Vm;
    }, set: function(a) {
      this.Vm !== a && (this.Vm = a, this.B());
    } },
    arrangementOrigin: { get: function() {
      return this.Rm;
    }, set: function(a) {
      this.Rm.A(a) || (this.Rm.assign(a), this.B());
    } },
    id: { get: function() {
      return this.C;
    }, set: function(a) {
      this.C = a;
    } },
    mayUseWorkerFunction: { get: function() {
      return this.qo;
    }, set: function(a) {
      this.qo !== a && (this.qo = a);
    } },
    workerStateChanged: { get: function() {
      return this.Ip;
    }, set: function(a) {
      this.Ip !== a && (this.Ip = a);
    } }
  });
  ni2.prototype.useWorker = ni2.prototype.dw;
  ni2.declareWorkerLayout = Wp;
  ni2.prototype.cancelWorker = ni2.prototype.jz;
  ni2.prototype.collectParts = ni2.prototype.Fx;
  ni2.prototype.getLayoutBounds = ni2.prototype.Mi;
  ni2.prototype.invalidateLayout = ni2.prototype.B;
  var Xp = new H2(), Zp = typeof x2.document === "object" && x2.document.currentScript ? x2.document.currentScript.src : "", $p = typeof URL !== "undefined" && typeof URL.createObjectURL === "function" && typeof Blob === "function" ? URL.createObjectURL(new Blob(["self.onmessage=function(e){if(e.data.url){\nimportScripts(e.data.url);}}"], { type: "text/javascript" })) : "";
  ni2.className = "Layout";
  ni2.GoJSScriptURL = Zp;
  ni2.declareWorkerLayout = Wp;
  typeof self !== "undefined" && typeof self.DedicatedWorkerGlobalScope !== "undefined" && typeof self !== "undefined" && typeof self.DedicatedWorkerGlobalScope !== "undefined" && (self.onmessage = function(a) {
    a = a.data;
    if (a._GoJS === "_GoJS")
      if (a.url)
        importScripts(a.url);
      else if (a.version)
        self.postMessage({ _GoJS: "_GoJS", version: R2.version }, void 0);
      else {
        var b = performance.now(), c = null;
        a.layout && (c = Vp(a.layout));
        var d = null;
        c && c.Mu && (d = new c.Mu());
        if (!d)
          throw Error("no registered Worker Layout: " + a.layout);
        d.network = aq(d, a, true);
        d.workerLayout = function() {
          var a2 = cq(d, d.network, false);
          a2._GoJS = "_GoJS";
          a2.time = performance.now() - b;
          self.postMessage(a2, void 0);
          return true;
        };
        d.doLayout(new F2());
      }
  });
  function Yp() {
    this.Mu = null;
    this.by = this.j = this.name = "";
    this.scripts = [];
    this.Pe = null;
    this.gm = new H2();
  }
  function Qp(a) {
    Va2(this);
    this.uc = a;
    this.rf = new G2();
    this.oe = new G2();
    this.Ls = new H2();
    this.Gs = new H2();
  }
  Qp.prototype.clear = function() {
    if (this.rf)
      for (var a = this.rf.iterator; a.next(); )
        a.value.clear();
    if (this.oe)
      for (a = this.oe.iterator; a.next(); )
        a.value.clear();
    this.rf = new G2();
    this.oe = new G2();
    this.Ls = new H2();
    this.Gs = new H2();
  };
  Qp.prototype.toString = function(a) {
    a === void 0 && (a = 0);
    var b = "LayoutNetwork" + (this.layout !== null ? "(" + this.layout.toString() + ")" : "");
    if (0 >= a)
      return b;
    b += " vertexes: " + this.rf.count + " edges: " + this.oe.count;
    if (1 < a) {
      for (var c = this.rf.iterator; c.next(); )
        b += "\n    " + c.value.toString(a - 1);
      for (c = this.oe.iterator; c.next(); )
        b += "\n    " + c.value.toString(a - 1);
    }
    return b;
  };
  Qp.prototype.createVertex = function() {
    return new dq(this);
  };
  Qp.prototype.createEdge = function() {
    return new eq(this);
  };
  Qp.prototype.ng = function(a, b, c) {
    if (a !== null) {
      b === void 0 && (b = false);
      c === void 0 && (c = null);
      c === null && (c = function(a2) {
        if (a2 instanceof W2)
          return !a2.isLinkLabel;
        if (a2 instanceof T2) {
          var b2 = a2.fromNode;
          if (b2 === null || b2.isLinkLabel)
            return false;
          a2 = a2.toNode;
          return a2 === null || a2.isLinkLabel ? false : true;
        }
        return false;
      });
      for (a = a.iterator; a.next(); ) {
        var d = a.value;
        if (d instanceof W2 && (!b || d.isTopLevel) && d.canLayout() && c(d)) {
          if (d instanceof U2 && d.layout === null)
            this.ng(d.memberParts, false);
          else if (this.Ji(d) === null) {
            var e = this.createVertex();
            e.node = d;
            this.og(e);
          }
        }
      }
      for (a.reset(); a.next(); )
        if (d = a.value, d instanceof T2 && (!b || d.isTopLevel) && d.canLayout() && c(d) && this.Vp(d) === null) {
          var f2 = d.fromNode;
          e = d.toNode;
          f2 !== null && e !== null && f2 !== e && (f2 = this.findGroupVertex(f2), e = this.findGroupVertex(e), f2 !== null && e !== null && this.gk(f2, e, d));
        }
    }
  };
  Qp.prototype.findGroupVertex = function(a) {
    if (a === null)
      return null;
    var b = a.findVisibleNode();
    if (b === null)
      return null;
    a = this.Ji(b);
    if (a !== null)
      return a;
    for (b = b.containingGroup; b !== null; ) {
      a = this.Ji(b);
      if (a !== null)
        return a;
      b = b.containingGroup;
    }
    return null;
  };
  t2 = Qp.prototype;
  t2.og = function(a) {
    if (a !== null) {
      this.rf.add(a);
      var b = a.node;
      b !== null && this.Ls.add(b, a);
      a.network = this;
    }
  };
  t2.Pj = function(a) {
    if (a === null)
      return null;
    var b = this.Ji(a);
    b === null && (b = this.createVertex(), b.node = a, this.og(b));
    return b;
  };
  t2.Qu = function(a) {
    if (a !== null && fq(this, a)) {
      for (var b = a.sd, c = b.count - 1; 0 <= c; c--) {
        var d = b.J(c);
        this.Xj(d);
      }
      b = a.Fd;
      for (a = b.count - 1; 0 <= a; a--)
        c = b.J(a), this.Xj(c);
    }
  };
  function fq(a, b) {
    if (b === null)
      return false;
    var c = a.rf.remove(b);
    c && (b = b.node, b !== null && a.Ls.remove(b));
    return c;
  }
  t2.wz = function(a) {
    a !== null && (a = this.Ji(a), a !== null && this.Qu(a));
  };
  t2.Ji = function(a) {
    return a === null ? null : this.Ls.H(a);
  };
  t2.Tl = function(a) {
    if (a !== null) {
      gq(this, a);
      var b = a.toVertex;
      b !== null && b.Cu(a);
      b = a.fromVertex;
      b !== null && b.Au(a);
    }
  };
  function gq(a, b) {
    if (b !== null) {
      a.oe.add(b);
      var c = b.link;
      c !== null && a.Vp(c) === null && a.Gs.add(c, b);
      b.network = a;
    }
  }
  t2.$y = function(a) {
    if (a === null)
      return null;
    var b = a.fromNode, c = a.toNode, d = this.Vp(a);
    d === null ? (d = this.createEdge(), d.link = a, b !== null && (d.fromVertex = this.Pj(b)), c !== null && (d.toVertex = this.Pj(c)), this.Tl(d)) : (b !== null ? d.fromVertex = this.Pj(b) : d.fromVertex = null, c !== null ? d.toVertex = this.Pj(c) : d.toVertex = null);
    return d;
  };
  t2.Xj = function(a) {
    if (a !== null) {
      var b = a.toVertex;
      b !== null && b.Pu(a);
      b = a.fromVertex;
      b !== null && b.Ou(a);
      hq(this, a);
    }
  };
  function hq(a, b) {
    b !== null && a.oe.remove(b) && (b = b.link, b !== null && a.Gs.remove(b));
  }
  t2.vz = function(a) {
    a !== null && (a = this.Vp(a), a !== null && this.Xj(a));
  };
  t2.Vp = function(a) {
    return a === null ? null : this.Gs.H(a);
  };
  t2.gk = function(a, b, c) {
    if (a === null || b === null)
      return null;
    if (a.network === this && b.network === this) {
      var d = this.createEdge();
      d.link = c;
      d.fromVertex = a;
      d.toVertex = b;
      this.Tl(d);
      return d;
    }
    return null;
  };
  t2.sm = function(a) {
    if (a !== null) {
      var b = a.fromVertex, c = a.toVertex;
      b !== null && c !== null && (b.Ou(a), c.Pu(a), a.sm(), b.Cu(a), c.Au(a));
    }
  };
  t2.Tp = function() {
    for (var a = Ea2(), b = this.oe.iterator; b.next(); ) {
      var c = b.value;
      c.fromVertex === c.toVertex && a.push(c);
    }
    b = a.length;
    for (c = 0; c < b; c++)
      this.Xj(a[c]);
    Ia2(a);
  };
  Qp.prototype.deleteArtificialVertexes = function() {
    for (var a = Ea2(), b = this.rf.iterator; b.next(); ) {
      var c = b.value;
      c.node === null && c.data === null && a.push(c);
    }
    c = a.length;
    for (b = 0; b < c; b++)
      this.Qu(a[b]);
    b = Ea2();
    for (c = this.oe.iterator; c.next(); ) {
      var d = c.value;
      d.link === null && d.data === null && b.push(d);
    }
    c = b.length;
    for (d = 0; d < c; d++)
      this.Xj(b[d]);
    Ia2(a);
    Ia2(b);
  };
  function iq(a) {
    for (var b = Ea2(), c = a.oe.iterator; c.next(); ) {
      var d = c.value;
      d.fromVertex !== null && d.toVertex !== null || b.push(d);
    }
    c = b.length;
    for (d = 0; d < c; d++)
      a.Xj(b[d]);
    Ia2(b);
  }
  Qp.prototype.Ey = function(a) {
    a === void 0 && (a = true);
    a && (this.deleteArtificialVertexes(), iq(this), this.Tp());
    a = new F2();
    for (var b = true; b; ) {
      b = false;
      for (var c = this.rf.iterator; c.next(); ) {
        var d = c.value;
        if (0 < d.sd.count || 0 < d.Fd.count) {
          b = this.layout.createNetwork();
          a.add(b);
          jq(this, b, d);
          b = true;
          break;
        }
      }
    }
    a.sort(function(a2, b2) {
      return a2 === null || b2 === null || a2 === b2 ? 0 : b2.vertexes.count - a2.vertexes.count;
    });
    return a;
  };
  function jq(a, b, c) {
    if (c !== null && c.network !== b) {
      fq(a, c);
      b.og(c);
      for (var d = c.sourceEdges; d.next(); ) {
        var e = d.value;
        e.network !== b && (hq(a, e), gq(b, e), jq(a, b, e.fromVertex));
      }
      for (d = c.destinationEdges; d.next(); )
        c = d.value, c.network !== b && (hq(a, c), gq(b, c), jq(a, b, c.toVertex));
    }
  }
  Qp.prototype.Cz = function() {
    for (var a = new G2(), b = this.rf.iterator; b.next(); )
      a.add(b.value.node);
    for (b = this.oe.iterator; b.next(); )
      a.add(b.value.link);
    return a;
  };
  na2.Object.defineProperties(Qp.prototype, { layout: { get: function() {
    return this.uc;
  }, set: function(a) {
    a !== null && (this.uc = a);
  } }, vertexes: { get: function() {
    return this.rf;
  } }, edges: { get: function() {
    return this.oe;
  } } });
  Qp.prototype.findAllParts = Qp.prototype.Cz;
  Qp.prototype.splitIntoSubNetworks = Qp.prototype.Ey;
  Qp.prototype.deleteSelfEdges = Qp.prototype.Tp;
  Qp.prototype.reverseEdge = Qp.prototype.sm;
  Qp.prototype.linkVertexes = Qp.prototype.gk;
  Qp.prototype.findEdge = Qp.prototype.Vp;
  Qp.prototype.deleteLink = Qp.prototype.vz;
  Qp.prototype.deleteEdge = Qp.prototype.Xj;
  Qp.prototype.addLink = Qp.prototype.$y;
  Qp.prototype.addEdge = Qp.prototype.Tl;
  Qp.prototype.findVertex = Qp.prototype.Ji;
  Qp.prototype.deleteNode = Qp.prototype.wz;
  Qp.prototype.deleteVertex = Qp.prototype.Qu;
  Qp.prototype.addNode = Qp.prototype.Pj;
  Qp.prototype.addVertex = Qp.prototype.og;
  Qp.prototype.addParts = Qp.prototype.ng;
  Qp.className = "LayoutNetwork";
  function dq(a) {
    Va2(this);
    this.Sb = a;
    this.j = new N2(0, 0, 10, 10).freeze();
    this.o = new K2(5, 5).freeze();
    this.mi = this.jb = null;
    this.sd = new F2();
    this.Fd = new F2();
  }
  dq.prototype.serializeVertexProperties = function(a) {
    a.id = ib2(this);
    a.key = this.node ? this.node.key : this.data ? this.data.di : void 0;
    a.key === void 0 && (a.key = null);
    a.x = this.bounds.x;
    a.y = this.bounds.y;
    a.YA = this.bounds.width;
    a.fA = this.bounds.height;
    a.fx = this.focus.x;
    a.fy = this.focus.y;
    var b = [];
    this.sd.each(function(a2) {
      b.push(ib2(a2));
    });
    a.By = b;
    var c = [];
    this.Fd.each(function(a2) {
      c.push(ib2(a2));
    });
    a.Lx = c;
  };
  dq.prototype.deserializeVertexProperties = function(a, b, c) {
    if (a !== null) {
      this.x = a.x;
      this.y = a.y;
      this.width = a.YA;
      this.height = a.fA;
      this.focusX = a.fx;
      this.focusY = a.fy;
      var d = this;
      a.By && a.By.forEach(function(a2) {
        (a2 = c.get(a2)) && d.sd.add(a2);
      });
      a.Lx && a.Lx.forEach(function(a2) {
        (a2 = c.get(a2)) && d.Fd.add(a2);
      });
    }
  };
  dq.prototype.clear = function() {
    this.mi = this.jb = null;
    this.sd = new F2();
    this.Fd = new F2();
  };
  dq.prototype.toString = function(a) {
    a === void 0 && (a = 0);
    var b = "LayoutVertex#" + ib2(this);
    if (0 < a && (b += this.node !== null ? "(" + this.node.toString() + ")" : "", 1 < a)) {
      a = "";
      for (var c = true, d = this.sd.iterator; d.next(); ) {
        var e = d.value;
        c ? c = false : a += ",";
        a += e.toString(0);
      }
      e = "";
      c = true;
      for (d = this.Fd.iterator; d.next(); ) {
        var f2 = d.value;
        c ? c = false : e += ",";
        e += f2.toString(0);
      }
      b += " sources: " + a + " destinations: " + e;
    }
    return b;
  };
  dq.prototype.commit = function() {
    var a = this.jb;
    if (a !== null) {
      var b = this.bounds, c = a.bounds;
      za2(c) ? (c.x = b.x, c.y = b.y, c.width = b.width, c.height = b.height) : a.bounds = b.copy();
    } else if (a = this.node, a !== null) {
      b = this.bounds;
      if (!(a instanceof U2)) {
        c = N2.alloc();
        var d = this.network.layout.Mi(a, c), e = a.locationObject.da(yc2);
        if (d.u() && e.u()) {
          a.moveTo(b.x + this.focusX - (e.x - d.x), b.y + this.focusY - (e.y - d.y));
          N2.free(c);
          return;
        }
        N2.free(c);
      }
      a.moveTo(b.x, b.y);
    }
  };
  dq.prototype.Cu = function(a) {
    a !== null && (this.sd.contains(a) || this.sd.add(a));
  };
  dq.prototype.Pu = function(a) {
    a !== null && this.sd.remove(a);
  };
  dq.prototype.Au = function(a) {
    a !== null && (this.Fd.contains(a) || this.Fd.add(a));
  };
  dq.prototype.Ou = function(a) {
    a !== null && this.Fd.remove(a);
  };
  function kq(a, b) {
    a = a.mi;
    b = b.mi;
    return a ? b ? (a = a.text, b = b.text, a < b ? -1 : a > b ? 1 : 0) : 1 : b !== null ? -1 : 0;
  }
  na2.Object.defineProperties(dq.prototype, { sourceEdgesArrayAccess: { get: function() {
    return this.sd._dataArray;
  } }, destinationEdgesArrayAccess: { get: function() {
    return this.Fd._dataArray;
  } }, data: { get: function() {
    return this.jb;
  }, set: function(a) {
    this.jb = a;
    if (a !== null && a.bounds) {
      var b = a.bounds;
      a = b.x;
      var c = b.y, d = b.width;
      b = b.height;
      this.o.h(d / 2, b / 2);
      this.j.h(a, c, d, b);
    }
  } }, node: {
    get: function() {
      return this.mi;
    },
    set: function(a) {
      if (this.mi !== a) {
        this.mi = a;
        a.Ta();
        var b = this.network.layout, c = N2.alloc(), d = b.Mi(a, c);
        b = d.x;
        var e = d.y, f2 = d.width;
        d = d.height;
        isNaN(b) && (b = 0);
        isNaN(e) && (e = 0);
        this.j.h(b, e, f2, d);
        N2.free(c);
        if (!(a instanceof U2) && (a = a.locationObject.da(yc2), a.u())) {
          this.o.h(a.x - b, a.y - e);
          return;
        }
        this.o.h(f2 / 2, d / 2);
      }
    }
  }, bounds: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j.A(a) || this.j.assign(a);
  } }, focus: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o.A(a) || this.o.assign(a);
  } }, centerX: { get: function() {
    return this.j.x + this.o.x;
  }, set: function(a) {
    var b = this.j;
    b.x + this.o.x !== a && (b.ea(), b.x = a - this.o.x, b.freeze());
  } }, centerY: { get: function() {
    return this.j.y + this.o.y;
  }, set: function(a) {
    var b = this.j;
    b.y + this.o.y !== a && (b.ea(), b.y = a - this.o.y, b.freeze());
  } }, focusX: { get: function() {
    return this.o.x;
  }, set: function(a) {
    var b = this.o;
    b.x !== a && (b.ea(), b.x = a, b.freeze());
  } }, focusY: {
    get: function() {
      return this.o.y;
    },
    set: function(a) {
      var b = this.o;
      b.y !== a && (b.ea(), b.y = a, b.freeze());
    }
  }, x: { get: function() {
    return this.j.x;
  }, set: function(a) {
    var b = this.j;
    b.x !== a && (b.ea(), b.x = a, b.freeze());
  } }, y: { get: function() {
    return this.j.y;
  }, set: function(a) {
    var b = this.j;
    b.y !== a && (b.ea(), b.y = a, b.freeze());
  } }, width: { get: function() {
    return this.j.width;
  }, set: function(a) {
    var b = this.j;
    b.width !== a && (b.ea(), b.width = a, b.freeze());
  } }, height: { get: function() {
    return this.j.height;
  }, set: function(a) {
    var b = this.j;
    b.height !== a && (b.ea(), b.height = a, b.freeze());
  } }, network: { get: function() {
    return this.Sb;
  }, set: function(a) {
    this.Sb = a;
  } }, sourceVertexes: { get: function() {
    for (var a = new G2(), b = this.sourceEdges; b.next(); )
      a.add(b.value.fromVertex);
    return a.iterator;
  } }, destinationVertexes: { get: function() {
    for (var a = new G2(), b = this.destinationEdges; b.next(); )
      a.add(b.value.toVertex);
    return a.iterator;
  } }, vertexes: { get: function() {
    for (var a = new G2(), b = this.sourceEdges; b.next(); )
      a.add(b.value.fromVertex);
    for (b = this.destinationEdges; b.next(); )
      a.add(b.value.toVertex);
    return a.iterator;
  } }, sourceEdges: { get: function() {
    return this.sd.iterator;
  } }, destinationEdges: { get: function() {
    return this.Fd.iterator;
  } }, edges: { get: function() {
    for (var a = new F2(), b = this.sourceEdges; b.next(); )
      a.add(b.value);
    for (b = this.destinationEdges; b.next(); )
      a.add(b.value);
    return a.iterator;
  } }, edgesCount: { get: function() {
    return this.sd.count + this.Fd.count;
  } } });
  dq.prototype.deleteDestinationEdge = dq.prototype.Ou;
  dq.prototype.addDestinationEdge = dq.prototype.Au;
  dq.prototype.deleteSourceEdge = dq.prototype.Pu;
  dq.prototype.addSourceEdge = dq.prototype.Cu;
  dq.className = "LayoutVertex";
  dq.standardComparer = kq;
  dq.smartComparer = function(a, b) {
    if (a !== null) {
      if (b !== null) {
        a = a.mi;
        var c = b.mi;
        if (a !== null) {
          if (c !== null) {
            b = a.text.toLocaleLowerCase().split(/([+-]?[.]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)/);
            a = c.text.toLocaleLowerCase().split(/([+-]?[.]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)/);
            for (c = 0; c < b.length; c++)
              if (a[c] !== "" && a[c] !== void 0) {
                var d = parseFloat(b[c]), e = parseFloat(a[c]);
                if (isNaN(d))
                  if (isNaN(e)) {
                    if (b[c].localeCompare(a[c]) !== 0)
                      return b[c].localeCompare(a[c]);
                  } else
                    return 1;
                else {
                  if (isNaN(e))
                    return -1;
                  if (d - e !== 0)
                    return d - e;
                }
              } else if (b[c] !== "")
                return 1;
            return a[c] !== "" && a[c] !== void 0 ? -1 : 0;
          }
          return 1;
        }
        return c !== null ? -1 : 0;
      }
      return 1;
    }
    return b !== null ? -1 : 0;
  };
  function eq(a) {
    Va2(this);
    this.Rb = a;
    this.cd = this.Uc = this.ll = this.jb = null;
  }
  eq.prototype.clear = function() {
    this.cd = this.Uc = this.ll = this.jb = null;
  };
  eq.prototype.serializeEdgeProperties = function(a) {
    a.id = ib2(this);
    a.key = this.link ? this.link.key : this.data ? this.data.di : void 0;
    a.key === void 0 && (a.key = null);
    a.from = this.fromVertex ? ib2(this.fromVertex) : null;
    a.TA = this.toVertex ? ib2(this.toVertex) : null;
  };
  eq.prototype.deserializeEdgeProperties = function(a, b) {
    if (a !== null) {
      var c = b.get(a.from);
      c && (this.fromVertex = c);
      if (a = b.get(a.TA))
        this.toVertex = a;
    }
  };
  eq.prototype.toString = function(a) {
    a === void 0 && (a = 0);
    var b = "LayoutEdge#" + ib2(this);
    0 < a && (b += this.ll !== null ? "(" + this.ll.toString() + ")" : "", 1 < a && (b += " " + (this.Uc ? this.Uc.toString() : "null") + " --> " + (this.cd ? this.cd.toString() : "null")));
    return b;
  };
  eq.prototype.sm = function() {
    var a = this.Uc;
    this.Uc = this.cd;
    this.cd = a;
  };
  eq.prototype.commit = function() {
  };
  eq.prototype.Zx = function(a) {
    return this.cd === a ? this.Uc : this.Uc === a ? this.cd : null;
  };
  na2.Object.defineProperties(eq.prototype, { network: { get: function() {
    return this.Rb;
  }, set: function(a) {
    this.Rb = a;
  } }, data: { get: function() {
    return this.jb;
  }, set: function(a) {
    this.jb !== a && (this.jb = a);
  } }, link: { get: function() {
    return this.ll;
  }, set: function(a) {
    this.ll !== a && (this.ll = a);
  } }, fromVertex: { get: function() {
    return this.Uc;
  }, set: function(a) {
    this.Uc !== a && (this.Uc = a);
  } }, toVertex: {
    get: function() {
      return this.cd;
    },
    set: function(a) {
      this.cd !== a && (this.cd = a);
    }
  } });
  eq.prototype.getOtherVertex = eq.prototype.Zx;
  eq.className = "LayoutEdge";
  function Gk(a) {
    ni2.call(this);
    this.isViewportSized = true;
    this.Jp = this.Kp = NaN;
    this.zg = new Gb2(NaN, NaN).freeze();
    this.jf = new Gb2(10, 10).freeze();
    this.yb = lq;
    this.Ib = mq;
    this.$c = nq;
    this.Sc = oq;
    a && Object.assign(this, a);
  }
  ma2(Gk, ni2);
  Gk.prototype.cloneProtected = function(a) {
    ni2.prototype.cloneProtected.call(this, a);
    a.Kp = this.Kp;
    a.Jp = this.Jp;
    a.zg.assign(this.zg);
    a.jf.assign(this.jf);
    a.yb = this.yb;
    a.Ib = this.Ib;
    a.$c = this.$c;
    a.Sc = this.Sc;
  };
  Gk.prototype.gb = function(a) {
    a.classType === Gk ? a === nq || a === pq || a === qq || a === rq ? this.sorting = a : a === mq || a === sq ? this.arrangement = a : a === lq || a === tq ? this.alignment = a : C2("Unknown enum value: " + a) : ni2.prototype.gb.call(this, a);
  };
  Gk.prototype.doLayout = function(a) {
    this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
    var b = this.Fx(a);
    a = this.diagram;
    for (var c = b.copy().iterator; c.next(); ) {
      var d = c.value;
      if (!d.Hh() || d.fromNode === null && d.toNode === null) {
        if (d.Ta(), d instanceof U2)
          for (d = d.memberParts; d.next(); )
            b.remove(d.value);
      } else
        b.remove(d);
    }
    var e = b.ya();
    if (e.length !== 0) {
      switch (this.sorting) {
        case rq:
          e.reverse();
          break;
        case nq:
          e.sort(this.comparer);
          break;
        case pq:
          e.sort(this.comparer), e.reverse();
      }
      var f2 = this.wrappingColumn;
      isNaN(f2) && (f2 = 0);
      var g2 = this.wrappingWidth;
      isNaN(g2) && a !== null ? (b = a.padding, g2 = Math.max(a.viewportBounds.width - b.left - b.right, 0)) : g2 = Math.max(this.wrappingWidth, 0);
      0 >= f2 && 0 >= g2 && (f2 = 1);
      b = this.spacing.width;
      isFinite(b) || (b = 0);
      c = this.spacing.height;
      isFinite(c) || (c = 0);
      a !== null && a.xa("Layout");
      d = [];
      switch (this.alignment) {
        case tq:
          var h = b, k = c, l2 = N2.alloc(), m2 = Math.max(this.cellSize.width, 1);
          if (!isFinite(m2))
            for (var n2 = m2 = 0; n2 < e.length; n2++) {
              var p2 = this.Mi(e[n2], l2);
              m2 = Math.max(m2, p2.width);
            }
          m2 = Math.max(m2 + h, 1);
          n2 = Math.max(this.cellSize.height, 1);
          if (!isFinite(n2))
            for (p2 = n2 = 0; p2 < e.length; p2++) {
              var r2 = this.Mi(e[p2], l2);
              n2 = Math.max(n2, r2.height);
            }
          n2 = Math.max(n2 + k, 1);
          p2 = this.arrangement;
          for (var q2 = r2 = this.arrangementOrigin.x, u2 = this.arrangementOrigin.y, w = 0, v2 = 0, z2 = 0; z2 < e.length; z2++) {
            var y2 = e[z2], B2 = this.Mi(y2, l2), A2 = Math.ceil((B2.width + h) / m2) * m2, E = Math.ceil((B2.height + k) / n2) * n2;
            switch (p2) {
              case sq:
                var Q2 = Math.abs(q2 - B2.width);
                break;
              default:
                Q2 = q2 + B2.width;
            }
            if (0 < f2 && w > f2 - 1 || 0 < g2 && 0 < w && Q2 - r2 > g2)
              d.push(new N2(0, u2, g2 + h, v2)), w = 0, q2 = r2, u2 += v2, v2 = 0;
            v2 = Math.max(v2, E);
            switch (p2) {
              case sq:
                B2 = -B2.width;
                break;
              default:
                B2 = 0;
            }
            y2.moveTo(q2 + B2, u2);
            switch (p2) {
              case sq:
                q2 -= A2;
                break;
              default:
                q2 += A2;
            }
            w++;
          }
          d.push(new N2(0, u2, g2 + h, v2));
          N2.free(l2);
          break;
        case lq:
          k = g2;
          m2 = f2;
          n2 = b;
          p2 = c;
          g2 = N2.alloc();
          r2 = Math.max(this.cellSize.width, 1);
          f2 = u2 = l2 = 0;
          h = K2.alloc();
          for (q2 = 0; q2 < e.length; q2++)
            v2 = e[q2], w = this.Mi(v2, g2), v2 = so(v2, v2.locationObject, v2.locationSpot, h), l2 = Math.max(l2, v2.x), u2 = Math.max(u2, w.width - v2.x), f2 = Math.max(f2, v2.y);
          q2 = this.arrangement;
          switch (q2) {
            case sq:
              l2 += n2;
              break;
            default:
              u2 += n2;
          }
          r2 = isFinite(r2) ? Math.max(r2 + n2, 1) : Math.max(l2 + u2, 1);
          var J2 = v2 = this.arrangementOrigin.x;
          z2 = this.arrangementOrigin.y;
          u2 = 0;
          k >= l2 && (k -= l2);
          l2 = y2 = 0;
          A2 = Math.max(this.cellSize.height, 1);
          B2 = f2 = 0;
          E = true;
          w = K2.alloc();
          for (Q2 = 0; Q2 < e.length; Q2++) {
            var S2 = e[Q2], L2 = this.Mi(S2, g2), I2 = so(S2, S2.locationObject, S2.locationSpot, h);
            if (0 < u2)
              switch (q2) {
                case sq:
                  J2 = (J2 - v2 - (L2.width - I2.x)) / r2;
                  J2 = M2.aa(Math.round(J2), J2) ? Math.round(J2) : Math.floor(J2);
                  J2 = J2 * r2 + v2;
                  break;
                default:
                  J2 = (J2 - v2 + I2.x) / r2, J2 = M2.aa(Math.round(J2), J2) ? Math.round(J2) : Math.ceil(J2), J2 = J2 * r2 + v2;
              }
            else
              switch (q2) {
                case sq:
                  y2 = J2 + I2.x + L2.width;
                  break;
                default:
                  y2 = J2 - I2.x;
              }
            switch (q2) {
              case sq:
                var ja2 = -(J2 + I2.x) + y2;
                break;
              default:
                ja2 = J2 + L2.width - I2.x - y2;
            }
            if (0 < m2 && u2 > m2 - 1 || 0 < k && 0 < u2 && ja2 > k) {
              d.push(new N2(0, E ? z2 - f2 : z2, k + n2, B2 + f2 + p2));
              for (J2 = 0; J2 < u2 && Q2 !== u2; J2++) {
                ja2 = e[Q2 - u2 + J2];
                var ca2 = so(ja2, ja2.locationObject, ja2.locationSpot, w);
                ja2.moveTo(ja2.position.x, ja2.position.y + f2 - ca2.y);
              }
              B2 += p2;
              z2 = E ? z2 + B2 : z2 + (B2 + f2);
              u2 = B2 = f2 = 0;
              J2 = v2;
              E = false;
            }
            J2 === v2 && (l2 = q2 === sq ? Math.max(l2, L2.width - I2.x) : Math.min(l2, -I2.x));
            f2 = Math.max(f2, I2.y);
            B2 = Math.max(B2, L2.height - I2.y);
            isFinite(A2) && (B2 = Math.max(B2, Math.max(L2.height, A2) - I2.y));
            E ? S2.moveTo(J2 - I2.x, z2 - I2.y) : S2.moveTo(J2 - I2.x, z2);
            switch (q2) {
              case sq:
                J2 -= I2.x + n2;
                break;
              default:
                J2 += L2.width - I2.x + n2;
            }
            u2++;
          }
          d.push(new N2(0, z2, k + n2, (E ? B2 : B2 + f2) + p2));
          if (e.length !== u2)
            for (k = 0; k < u2; k++)
              m2 = e[e.length - u2 + k], n2 = so(m2, m2.locationObject, m2.locationSpot, h), m2.moveTo(m2.position.x, m2.position.y + f2 - n2.y);
          K2.free(h);
          K2.free(w);
          if (q2 === sq)
            for (e = 0; e < d.length; e++)
              f2 = d[e], f2.width += l2, f2.x -= l2;
          else
            for (e = 0; e < d.length; e++)
              f2 = d[e], f2.x > l2 && (f2.width += f2.x - l2, f2.x = l2);
          N2.free(g2);
      }
      for (h = f2 = g2 = e = 0; h < d.length; h++)
        k = d[h], e = Math.min(e, k.x), g2 = Math.min(g2, k.y), f2 = Math.max(f2, k.x + k.width);
      this.arrangement === sq ? this.commitLayers(d, new K2(e + b / 2 - (f2 + e), g2 - c / 2)) : this.commitLayers(d, new K2(e - b / 2, g2 - c / 2));
      a !== null && a.Xa("Layout");
      this.isValidLayout = true;
    }
  };
  Gk.prototype.commitLayers = function() {
  };
  function oq(a, b) {
    a = a.text;
    b = b.text;
    return a < b ? -1 : a > b ? 1 : 0;
  }
  na2.Object.defineProperties(Gk.prototype, { wrappingWidth: { get: function() {
    return this.Kp;
  }, set: function(a) {
    this.Kp !== a && (0 < a || isNaN(a)) && (this.Kp = a, this.isViewportSized = isNaN(a), this.B());
  } }, wrappingColumn: { get: function() {
    return this.Jp;
  }, set: function(a) {
    this.Jp !== a && (0 < a || isNaN(a)) && (this.Jp = a, this.B());
  } }, cellSize: { get: function() {
    return this.zg;
  }, set: function(a) {
    this.zg.A(a) || (this.zg.assign(a), this.B());
  } }, spacing: {
    get: function() {
      return this.jf;
    },
    set: function(a) {
      this.jf.A(a) || (this.jf.assign(a), this.B());
    }
  }, alignment: { get: function() {
    return this.yb;
  }, set: function(a) {
    this.yb === a || a !== lq && a !== tq || (this.yb = a, this.B());
  } }, arrangement: { get: function() {
    return this.Ib;
  }, set: function(a) {
    this.Ib === a || a !== mq && a !== sq || (this.Ib = a, this.B());
  } }, sorting: { get: function() {
    return this.$c;
  }, set: function(a) {
    this.$c === a || a !== qq && a !== rq && a !== nq && a !== pq || (this.$c = a, this.B());
  } }, comparer: { get: function() {
    return this.Sc;
  }, set: function(a) {
    this.Sc !== a && (this.Sc = a, this.B());
  } } });
  var tq = new D2(Gk, "Position", 0), lq = new D2(Gk, "Location", 1), mq = new D2(Gk, "LeftToRight", 2), sq = new D2(Gk, "RightToLeft", 3), qq = new D2(Gk, "Forward", 4), rq = new D2(Gk, "Reverse", 5), nq = new D2(Gk, "Ascending", 6), pq = new D2(Gk, "Descending", 7);
  Gk.className = "GridLayout";
  Gk.standardComparer = oq;
  Gk.smartComparer = function(a, b) {
    if (a !== null) {
      if (b !== null) {
        a = a.text.toLocaleLowerCase().split(/([+-]?[.]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)/);
        b = b.text.toLocaleLowerCase().split(/([+-]?[.]?\d+(?:\.\d*)?(?:e[+-]?\d+)?)/);
        for (var c = 0; c < a.length; c++)
          if (b[c] !== "" && b[c] !== void 0) {
            var d = parseFloat(a[c]), e = parseFloat(b[c]);
            if (isNaN(d))
              if (isNaN(e)) {
                if (a[c].localeCompare(b[c]) !== 0)
                  return a[c].localeCompare(b[c]);
              } else
                return 1;
            else {
              if (isNaN(e))
                return -1;
              if (d - e !== 0)
                return d - e;
            }
          } else if (a[c] !== "")
            return 1;
        return b[c] !== "" && b[c] !== void 0 ? -1 : 0;
      }
      return 1;
    }
    return b !== null ? -1 : 0;
  };
  Gk.Position = tq;
  Gk.Location = lq;
  Gk.LeftToRight = mq;
  Gk.RightToLeft = sq;
  Gk.Forward = qq;
  Gk.Reverse = rq;
  Gk.Ascending = nq;
  Gk.Descending = pq;
  function ji2() {
    this.Do = new G2();
    this.ko = new G2();
    this.Ha = new G2();
    this.Ve = new H2();
    this.Ue = new H2();
    this.rj = new H2();
    this.D = null;
    this.Bq = false;
  }
  t2 = ji2.prototype;
  t2.clear = function() {
    this.Do.clear();
    this.ko.clear();
    this.Ha.clear();
    this.Ve.clear();
    this.Ue.clear();
    this.rj.clear();
  };
  t2.Ne = function(a) {
    this.D = a;
  };
  t2.Ni = function(a) {
    if (a instanceof W2) {
      if (this.Do.add(a), a instanceof U2) {
        var b = a.containingGroup;
        b === null ? this.D.wi.add(a) : b.rl.add(a);
        b = a.layout;
        b !== null && (b.diagram = this.D);
      }
    } else
      a instanceof T2 ? this.ko.add(a) : a instanceof ze || this.Ha.add(a);
    b = a.data;
    b === null || a instanceof ze || (a instanceof T2 ? this.Ue.add(b, a) : this.Ve.add(b, a));
  };
  t2.fc = function(a) {
    a.Qj();
    if (a instanceof W2) {
      if (this.Do.remove(a), a instanceof U2) {
        var b = a.containingGroup;
        b === null ? this.D.wi.remove(a) : b.rl.remove(a);
        b = a.layout;
        b !== null && (b.diagram = null);
      }
    } else
      a instanceof T2 ? this.ko.remove(a) : a instanceof ze || this.Ha.remove(a);
    b = a.data;
    b === null || a instanceof ze || (a instanceof T2 ? this.Ue.remove(b) : this.Ve.remove(b));
  };
  t2.Ld = function() {
    for (var a = this.D.nodeTemplateMap.iterator; a.next(); ) {
      var b = a.value, c = a.key;
      (!b.Mc() || b instanceof U2) && C2('Invalid node template in Diagram.nodeTemplateMap: template for "' + c + '" must be a Node or a simple Part, not a Group or Link: ' + b);
    }
    for (a = this.D.groupTemplateMap.iterator; a.next(); )
      b = a.value, c = a.key, b instanceof U2 || C2('Invalid group template in Diagram.groupTemplateMap: template for "' + c + '" must be a Group, not a normal Node or Link: ' + b);
    for (a = this.D.linkTemplateMap.iterator; a.next(); )
      b = a.value, c = a.key, b instanceof T2 || C2('Invalid link template in Diagram.linkTemplateMap: template for "' + c + '" must be a Link, not a normal Node or simple Part: ' + b);
    a = Ea2();
    for (b = this.D.selection.iterator; b.next(); )
      (c = b.value.data) && a.push(c);
    b = Ea2();
    for (c = this.D.highlighteds.iterator; c.next(); ) {
      var d = c.value.data;
      d && b.push(d);
    }
    c = Ea2();
    for (d = this.nodes.iterator; d.next(); ) {
      var e = d.value;
      e.data !== null && (c.push(e.data), c.push(e.location));
    }
    for (d = this.links.iterator; d.next(); )
      e = d.value, e.data !== null && (c.push(e.data), c.push(e.location));
    for (d = this.parts.iterator; d.next(); )
      e = d.value, e.data !== null && (c.push(e.data), c.push(e.location));
    this.removeAllModeledParts();
    this.addAllModeledParts();
    for (d = 0; d < a.length; d++)
      e = this.Ac(a[d]), e !== null && (e.isSelected = true);
    for (d = 0; d < b.length; d++)
      e = this.Ac(b[d]), e !== null && (e.isHighlighted = true);
    for (d = 0; d < c.length; d += 2)
      e = this.Ac(c[d]), e !== null && (e.location = c[d + 1]);
    Ia2(a);
    Ia2(b);
    Ia2(c);
  };
  ji2.prototype.addAllModeledParts = function() {
    this.addModeledParts(this.diagram.model.nodeDataArray);
  };
  ji2.prototype.addModeledParts = function(a, b) {
    var c = this, d = this.diagram.model;
    a.forEach(function(a2) {
      d.cb(a2) && uq(c, a2, false);
    });
    a.forEach(function(a2) {
      d.cb(a2) && c.resolveReferencesForData(a2);
    });
    b !== false && Uj2(this.diagram, false);
  };
  function uq(a, b, c) {
    if (b !== void 0 && b !== null && !a.diagram.undoManager.isUndoingRedoing && !a.Ve.contains(b)) {
      c === void 0 && (c = true);
      a: {
        if (b !== void 0 && b !== null && !a.D.undoManager.isUndoingRedoing && !a.Ve.contains(b)) {
          var d = a.Zp(b);
          var e = Eo(a, b, d);
          if (e !== null && (og2(e), e = e.copy(), e !== null)) {
            var f2 = a.diagram.skipsModelSourceBindings;
            a.diagram.skipsModelSourceBindings = true;
            e.Nf = d;
            e.jb = b;
            a.Bq && (e.Ug = "Tool");
            a.diagram.add(e);
            e.jb = null;
            e.data = b;
            a.diagram.skipsModelSourceBindings = f2;
            d = e;
            break a;
          }
        }
        d = null;
      }
      d !== null && c && a.resolveReferencesForData(b);
    }
  }
  ji2.prototype.insertLink = function() {
    return null;
  };
  ji2.prototype.resolveReferencesForData = function() {
  };
  ji2.prototype.Zp = function(a) {
    return this.D.model.Zp(a);
  };
  function Eo(a, b, c) {
    a = a.D;
    var d = a.model;
    d.ek() && d.lv(b) ? (b = a.groupTemplateMap.H(c), b === null && (b = a.groupTemplateMap.H(""), b === null && (vq || (vq = true, ya2('No Group template found for category "' + c + '"'), ya2("  Using default group template")), b = a.Jw))) : (b = a.nodeTemplateMap.H(c), b === null && (b = a.nodeTemplateMap.H(""), b === null && (wq || (wq = true, ya2('No Node template found for category "' + c + '"'), ya2("  Using default node template")), b = a.Lw)));
    return b;
  }
  ji2.prototype.getLinkCategoryForData = function() {
    return "";
  };
  ji2.prototype.setLinkCategoryForData = function() {
  };
  ji2.prototype.setFromNodeForLink = function() {
  };
  ji2.prototype.setToNodeForLink = function() {
  };
  ji2.prototype.findLinkTemplateForCategory = function(a) {
    var b = this.D.linkTemplateMap.H(a);
    b === null && (b = this.D.linkTemplateMap.H(""), b === null && (xq || (xq = true, ya2('No Link template found for category "' + a + '"'), ya2("  Using default link template")), b = this.D.Kw));
    return b;
  };
  ji2.prototype.removeAllModeledParts = function() {
    this.Ps(this.diagram.model.nodeDataArray);
  };
  ji2.prototype.Ps = function(a) {
    var b = this;
    a.forEach(function(a2) {
      b.qq(a2);
    });
  };
  ji2.prototype.qq = function(a) {
    a = this.Ac(a);
    a !== null && (Bj2(this.diagram, a, false), this.unresolveReferencesForPart(a));
  };
  ji2.prototype.unresolveReferencesForPart = function() {
  };
  ji2.prototype.removeDataForLink = function() {
  };
  ji2.prototype.findPartForKey = function(a) {
    if (a === null || a === void 0)
      return null;
    a = this.D.model.Yb(a);
    return a !== null ? this.Ve.H(a) : null;
  };
  ji2.prototype.Fb = function(a) {
    if (a === null || a === void 0)
      return null;
    a = this.D.model.Yb(a);
    if (a === null)
      return null;
    a = this.Ve.H(a);
    return a instanceof W2 ? a : null;
  };
  ji2.prototype.findLinkForKey = function() {
    return null;
  };
  t2 = ji2.prototype;
  t2.Ac = function(a) {
    if (a === null)
      return null;
    var b = this.Ve.H(a);
    return b !== null ? b : b = this.Ue.H(a);
  };
  t2.Gi = function(a) {
    if (a === null)
      return null;
    a = this.Ve.H(a);
    return a instanceof W2 ? a : null;
  };
  t2.zc = function(a) {
    return a === null ? null : this.Ue.H(a);
  };
  t2.rs = function(a) {
    for (var b = 0; b < arguments.length; ++b)
      ;
    b = new G2();
    for (var c = this.Do.iterator; c.next(); ) {
      var d = c.value, e = d.data;
      if (e !== null)
        for (var f2 = 0; f2 < arguments.length; f2++) {
          var g2 = arguments[f2];
          if (za2(g2) && yq(this, e, g2)) {
            b.add(d);
            break;
          }
        }
    }
    return b.iterator;
  };
  t2.qs = function(a) {
    for (var b = 0; b < arguments.length; ++b)
      ;
    b = new G2();
    for (var c = this.ko.iterator; c.next(); ) {
      var d = c.value, e = d.data;
      if (e !== null)
        for (var f2 = 0; f2 < arguments.length; f2++) {
          var g2 = arguments[f2];
          if (za2(g2) && yq(this, e, g2)) {
            b.add(d);
            break;
          }
        }
    }
    return b.iterator;
  };
  function yq(a, b, c) {
    for (var d in c) {
      var e = b[d], f2 = c[d];
      if (Aa2(f2)) {
        if (!Aa2(e) || e.length < f2.length)
          return false;
        for (var g2 = 0; g2 < e.length; g2++) {
          var h = f2[g2];
          if (h !== void 0 && !zq(a, e[g2], h))
            return false;
        }
      } else if (!zq(a, e, f2))
        return false;
    }
    return true;
  }
  function zq(a, b, c) {
    if (typeof c === "function") {
      if (!c(b))
        return false;
    } else if (c instanceof RegExp) {
      if (!b || !c.test(b.toString()))
        return false;
    } else if (za2(b) && za2(c)) {
      if (!yq(a, b, c))
        return false;
    } else if (b !== c)
      return false;
    return true;
  }
  ji2.prototype.doModelChanged = function(a) {
    if (this.D) {
      var b = this.D;
      if (a.model === b.model) {
        var c = a.change;
        b.doModelChanged(a);
        if (b.Z) {
          b.Z = false;
          try {
            var d = a.modelChange;
            if (d !== "")
              if (c === ge2) {
                if (d === "nodeCategory") {
                  var e = this.Ac(a.object), f2 = a.newValue;
                  e !== null && typeof f2 === "string" && (e.category = f2);
                } else
                  d === "nodeDataArray" && (this.Ps(a.oldValue), this.addModeledParts(a.newValue));
                b.isModified = true;
              } else if (c === pe2) {
                var g2 = a.newValue;
                d === "nodeDataArray" && za2(g2) && uq(this, g2);
                b.isModified = true;
              } else if (c === qe2) {
                var h = a.oldValue;
                d === "nodeDataArray" && za2(h) && this.qq(h);
                b.isModified = true;
              } else
                c === oe2 && (d === "SourceChanged" ? a.object !== null ? this.updateDataBindings(a.object, a.propertyName) : (this.zq(), this.updateAllTargetBindings()) : d === "ModelDisplaced" && this.Ld());
            else if (c === ge2) {
              var k = a.propertyName, l2 = a.object;
              if (l2 === b.model) {
                if (k === "nodeKeyProperty" || k === "nodeCategoryProperty")
                  b.undoManager.isUndoingRedoing || this.Ld();
              } else
                this.updateDataBindings(l2, k);
              b.isModified = true;
            } else if (c === pe2 || c === qe2) {
              var m2 = a.change === pe2, n2 = m2 ? a.newParam : a.oldParam, p2 = m2 ? a.newValue : a.oldValue, r2 = this.rj.H(a.object);
              if (Array.isArray(r2))
                for (a = 0; a < r2.length; a++) {
                  var q2 = r2[a];
                  if (m2)
                    dn(q2, p2, n2, true);
                  else if (!(0 > n2)) {
                    var u2 = n2 + Wm(q2);
                    q2.fc(u2, true);
                    gn(q2, u2, n2);
                  }
                }
              b.isModified = true;
            }
          } finally {
            b.Z = true;
          }
        }
      }
    }
  };
  ji2.prototype.updateAllTargetBindings = function(a) {
    a === void 0 && (a = "");
    for (var b = this.parts.iterator; b.next(); )
      b.value.Fa(a);
    for (b = this.nodes.iterator; b.next(); )
      b.value.Fa(a);
    for (b = this.links.iterator; b.next(); )
      b.value.Fa(a);
  };
  ji2.prototype.zq = function() {
    for (var a = this.D.model, b = new G2(), c = a.nodeDataArray, d = 0; d < c.length; d++)
      b.add(c[d]);
    var e = [];
    this.nodes.each(function(a2) {
      a2.data === null || b.contains(a2.data) || e.push(a2.data);
    });
    this.parts.each(function(a2) {
      a2.data === null || b.contains(a2.data) || e.push(a2.data);
    });
    e.forEach(function(b2) {
      Aq(a, b2, false);
    });
    for (d = 0; d < c.length; d++) {
      var f2 = c[d];
      this.Ac(f2) === null && Bq(a, f2, false);
    }
    this.refreshDataBoundLinks();
    for (c = this.parts.iterator; c.next(); )
      c.value.updateRelationshipsFromData();
    for (c = this.nodes.iterator; c.next(); )
      c.value.updateRelationshipsFromData();
    for (c = this.links.iterator; c.next(); )
      c.value.updateRelationshipsFromData();
  };
  ji2.prototype.refreshDataBoundLinks = function() {
  };
  ji2.prototype.updateRelationshipsFromData = function() {
  };
  ji2.prototype.updateDataBindings = function(a, b) {
    if (typeof b === "string") {
      var c = this.Ac(a);
      if (c !== null)
        c.Fa(b);
      else {
        c = null;
        for (var d = this.rj.iterator; d.next(); ) {
          for (var e = d.value, f2 = 0; f2 < e.length; f2++) {
            var g2 = e[f2].Rx(a);
            g2 !== null && (c === null && (c = Ea2()), c.push(g2));
          }
          if (c !== null)
            break;
        }
        if (c !== null) {
          for (d = 0; d < c.length; d++)
            c[d].Fa(b);
          Ia2(c);
        }
      }
      a === this.diagram.model.modelData && this.updateAllTargetBindings(b);
    }
  };
  function xj2(a, b) {
    var c = b.ci;
    if (Aa2(c)) {
      var d = a.rj.H(c);
      if (d === null)
        d = [], d.push(b), a.rj.add(c, d);
      else {
        for (a = 0; a < d.length; a++)
          if (d[a] === b)
            return;
        d.push(b);
      }
    }
  }
  function Aj2(a, b, c) {
    vj2(b, function(a2) {
      a2 = a2.T.m;
      for (var b2 = a2.length, d2 = 0; d2 < b2; d2++)
        Sj2(c, a2[d2]);
    });
    var d = b.ci;
    if (Aa2(d)) {
      var e = a.rj.H(d);
      if (e !== null) {
        for (var f2 = 0; f2 < e.length; f2++)
          if (e[f2] === b) {
            e.splice(f2, 1);
            e.length === 0 && a.rj.remove(d);
            break;
          }
      }
    }
  }
  ji2.prototype.Vj = function(a, b, c) {
    c === void 0 && (c = false);
    var d = new H2();
    if (Aa2(a))
      for (var e = 0; e < a.length; e++)
        Cq(this, a[e], b, d, c);
    else
      for (a = a.iterator; a.next(); )
        Cq(this, a.value, b, d, c);
    if (b !== null) {
      c = b.model;
      a = b.toolManager.findTool("Dragging");
      a = a !== null ? a.dragOptions.dragsLink : b.pn.dragsLink;
      e = new G2();
      for (var f2 = new H2(), g2 = d.iterator; g2.next(); ) {
        var h = g2.value;
        if (h instanceof T2)
          a || h.fromNode !== null && h.toNode !== null || e.add(h);
        else if (h instanceof W2 && h.data !== null && c.fm()) {
          var k = h;
          h = g2.key;
          var l2 = h.rg();
          l2 !== null && (l2 = d.H(l2), l2 !== null ? (c.he(k.data, c.pa(l2.data)), k = b.zc(k.data), h = h.Ii(), h !== null && k !== null && f2.add(h, k)) : c.he(k.data, void 0));
        }
      }
      0 < e.count && b.Qs(e, false);
      if (0 < f2.count)
        for (c = f2.iterator; c.next(); )
          d.add(c.key, c.value);
    }
    if (b !== null && this.D !== null && (b = b.model, c = b.afterCopyFunction, c !== null)) {
      var m2 = new H2();
      d.each(function(a2) {
        a2.key.data !== null && m2.add(a2.key.data, a2.value.data);
      });
      c(m2, b, this.D.model);
    }
    for (b = d.iterator; b.next(); )
      b.value.Fa();
    return d;
  };
  function Cq(a, b, c, d, e) {
    if (b === null || e && !b.canCopy())
      return null;
    if (d.contains(b))
      return d.H(b);
    var f2 = a.copyPartData(b, c);
    if (!(f2 instanceof V2))
      return null;
    f2.isSelected = false;
    f2.isHighlighted = false;
    d.add(b, f2);
    if (b instanceof W2) {
      for (var g2 = b.linksConnected; g2.next(); ) {
        var h = g2.value;
        if (h.fromNode === b) {
          var k = d.H(h);
          k !== null && (k.fromNode = f2);
        }
        h.toNode === b && (h = d.H(h), h !== null && (h.toNode = f2));
      }
      if (b instanceof U2 && f2 instanceof U2)
        for (b = b.memberParts; b.next(); )
          g2 = Cq(a, b.value, c, d, e), g2 instanceof T2 || g2 === null || (g2.containingGroup = f2);
    } else if (b instanceof T2 && f2 instanceof T2)
      for (g2 = b.fromNode, g2 !== null && (g2 = d.H(g2), g2 !== null && (f2.fromNode = g2)), g2 = b.toNode, g2 !== null && (g2 = d.H(g2), g2 !== null && (f2.toNode = g2)), b = b.labelNodes; b.next(); )
        g2 = Cq(a, b.value, c, d, e), g2 !== null && g2 instanceof W2 && (g2.labeledLink = f2);
    return f2;
  }
  ji2.prototype.copyPartData = function(a, b) {
    var c = null, d = a.data;
    if (d !== null && b !== null) {
      var e = b.model;
      a instanceof T2 || (d = e.copyNodeData(d), za2(d) && (e.sf(d), c = b.Ac(d)));
    } else
      og2(a), c = a.copy(), c !== null && (e = this.D, b !== null ? b.add(c) : d !== null && e !== null && e.commandHandler !== null && e.commandHandler.copiesClipboardData && (b = e.model, e = null, c instanceof T2 || (e = b.copyNodeData(d)), za2(e) && (c.data = e)));
    return c;
  };
  na2.Object.defineProperties(ji2.prototype, { nodes: { get: function() {
    return this.Do;
  } }, links: { get: function() {
    return this.ko;
  } }, parts: { get: function() {
    return this.Ha;
  } }, diagram: { get: function() {
    return this.D;
  } }, addsToTemporaryLayer: { get: function() {
    return this.Bq;
  }, set: function(a) {
    this.Bq = a;
  } } });
  ji2.prototype.updateAllRelationshipsFromData = ji2.prototype.zq;
  ji2.prototype.findLinksByExample = ji2.prototype.qs;
  ji2.prototype.findNodesByExample = ji2.prototype.rs;
  ji2.prototype.findLinkForData = ji2.prototype.zc;
  ji2.prototype.findNodeForData = ji2.prototype.Gi;
  ji2.prototype.findPartForData = ji2.prototype.Ac;
  ji2.prototype.findNodeForKey = ji2.prototype.Fb;
  ji2.prototype.removeModeledPart = ji2.prototype.qq;
  ji2.prototype.removeModeledParts = ji2.prototype.Ps;
  ji2.prototype.rebuildParts = ji2.prototype.Ld;
  var wq = false, vq = false, xq = false;
  ji2.className = "PartManager";
  function Dq(a) {
    ji2.apply(this, arguments);
  }
  ma2(Dq, ji2);
  Dq.prototype.addAllModeledParts = function() {
    var a = this.diagram.model;
    this.addModeledParts(a.nodeDataArray);
    Eq(this, a.linkDataArray);
  };
  Dq.prototype.addModeledParts = function(a) {
    ji2.prototype.addModeledParts.call(this, a, false);
    for (a = this.links.iterator; a.next(); )
      Fo(a.value);
    Uj2(this.diagram, false);
  };
  function Eq(a, b) {
    b.forEach(function(b2) {
      Fq(a, b2);
    });
    Uj2(a.diagram, false);
  }
  function Fq(a, b) {
    if (b !== void 0 && b !== null && !a.diagram.undoManager.isUndoingRedoing && !a.Ue.contains(b)) {
      var c = a.getLinkCategoryForData(b), d = a.findLinkTemplateForCategory(c);
      if (d !== null) {
        og2(d);
        var e = d.copy();
        if (e !== null) {
          d = a.diagram.skipsModelSourceBindings;
          a.diagram.skipsModelSourceBindings = true;
          e.Nf = c;
          e.jb = b;
          c = a.diagram.model;
          var f2 = Gq(c, b, true);
          f2 !== "" && (e.fromPortId = f2);
          f2 = Hq(c, b, true);
          f2 !== void 0 && (f2 = a.Fb(f2), f2 instanceof W2 && (e.fromNode = f2));
          f2 = Gq(c, b, false);
          f2 !== "" && (e.toPortId = f2);
          f2 = Hq(c, b, false);
          f2 !== void 0 && (f2 = a.Fb(f2), f2 instanceof W2 && (e.toNode = f2));
          c = c.Bf(b);
          Array.isArray(c) && c.forEach(function(b2) {
            b2 = a.Fb(b2);
            b2 !== null && (b2.labeledLink = e);
          });
          a.Bq && (e.Ug = "Tool");
          a.diagram.add(e);
          e.jb = null;
          e.data = b;
          a.diagram.skipsModelSourceBindings = d;
        }
      }
    }
  }
  Dq.prototype.removeAllModeledParts = function() {
    var a = this.diagram.model;
    Iq(this, a.linkDataArray);
    this.Ps(a.nodeDataArray);
  };
  function Iq(a, b) {
    b.forEach(function(b2) {
      a.qq(b2);
    });
  }
  Dq.prototype.getLinkCategoryForData = function(a) {
    return this.diagram.model.us(a);
  };
  Dq.prototype.setLinkCategoryForData = function(a, b) {
    return this.diagram.model.tq(a, b);
  };
  Dq.prototype.setFromNodeForLink = function(a, b) {
    var c = this.diagram.model;
    c.Ov(a.data, c.pa(b !== null ? b.data : null));
  };
  Dq.prototype.setToNodeForLink = function(a, b) {
    var c = this.diagram.model;
    c.Sv(a.data, c.pa(b !== null ? b.data : null));
  };
  Dq.prototype.removeDataForLink = function(a) {
    this.diagram.model.nm(a.data);
  };
  Dq.prototype.findPartForKey = function(a) {
    var b = ji2.prototype.findPartForKey.call(this, a);
    return b === null && (a = this.diagram.model.Dh(a), a !== null) ? this.Ue.H(a) : b;
  };
  Dq.prototype.findLinkForKey = function(a) {
    if (a === null || a === void 0)
      return null;
    a = this.diagram.model.Dh(a);
    return a !== null ? this.Ue.H(a) : null;
  };
  Dq.prototype.doModelChanged = function(a) {
    var b = this;
    ji2.prototype.doModelChanged.call(this, a);
    if (this.diagram) {
      var c = this.diagram;
      if (a.model === c.model) {
        var d = a.change;
        if (c.Z) {
          c.Z = false;
          try {
            var e = a.modelChange;
            if (e !== "")
              if (d === ge2) {
                if (e === "linkFromKey") {
                  var f2 = this.zc(a.object);
                  if (f2 !== null) {
                    var g2 = this.Fb(a.newValue);
                    f2.fromNode = g2;
                  }
                } else if (e === "linkToKey") {
                  var h = this.zc(a.object);
                  if (h !== null) {
                    var k = this.Fb(a.newValue);
                    h.toNode = k;
                  }
                } else if (e === "linkFromPortId") {
                  var l2 = this.zc(a.object);
                  if (l2 !== null) {
                    var m2 = a.newValue;
                    typeof m2 === "string" && (l2.fromPortId = m2);
                  }
                } else if (e === "linkToPortId") {
                  var n2 = this.zc(a.object);
                  if (n2 !== null) {
                    var p2 = a.newValue;
                    typeof p2 === "string" && (n2.toPortId = p2);
                  }
                } else if (e === "nodeGroupKey") {
                  var r2 = this.Ac(a.object);
                  if (r2 !== null) {
                    var q2 = a.newValue;
                    if (q2 !== void 0) {
                      var u2 = this.Fb(q2);
                      u2 instanceof U2 ? r2.containingGroup = u2 : r2.containingGroup = null;
                    } else
                      r2.containingGroup = null;
                  }
                } else if (e === "linkLabelKeys") {
                  var w = this.zc(a.object);
                  if (w !== null) {
                    var v2 = a.oldValue, z2 = a.newValue;
                    Array.isArray(v2) && v2.forEach(function(a2) {
                      0 <= z2.indexOf(a2) || (a2 = b.Fb(a2), a2 !== null && (a2.labeledLink = null));
                    });
                    Array.isArray(z2) && z2.forEach(function(a2) {
                      a2 = b.Fb(a2);
                      a2 !== null && (a2.labeledLink = w);
                    });
                  }
                } else if (e === "linkCategory") {
                  var y2 = this.zc(a.object), B2 = a.newValue;
                  y2 !== null && typeof B2 === "string" && (y2.category = B2);
                } else
                  e === "linkDataArray" && (Iq(this, a.oldValue), Eq(this, a.newValue));
                c.isModified = true;
              } else if (d === pe2) {
                var A2 = a.newValue;
                if (e === "linkDataArray" && typeof A2 === "object" && A2 !== null)
                  Fq(this, A2);
                else if (e === "linkLabelKeys" && Jq(A2)) {
                  var E = this.zc(a.object), Q2 = this.Fb(A2);
                  E !== null && Q2 !== null && (Q2.labeledLink = E);
                }
                c.isModified = true;
              } else {
                if (d === qe2) {
                  var J2 = a.oldValue;
                  if (e === "linkDataArray" && typeof J2 === "object" && J2 !== null)
                    this.qq(J2);
                  else if (e === "linkLabelKeys" && Jq(J2)) {
                    var S2 = this.Fb(J2);
                    S2 !== null && (S2.labeledLink = null);
                  }
                  c.isModified = true;
                }
              }
            else if (d === ge2) {
              var L2 = a.propertyName;
              a.object !== c.model || L2 !== "linkFromKeyProperty" && L2 !== "linkToKeyProperty" && L2 !== "linkFromPortIdProperty" && L2 !== "linkToPortIdProperty" && L2 !== "linkLabelKeysProperty" && L2 !== "nodeIsGroupProperty" && L2 !== "nodeGroupKeyProperty" && L2 !== "linkCategoryProperty" || c.undoManager.isUndoingRedoing || this.Ld();
              c.isModified = true;
            }
          } finally {
            c.Z = true;
          }
        }
      }
    }
  };
  Dq.prototype.refreshDataBoundLinks = function() {
    var a = this, b = this.diagram.model, c = new G2(), d = b.linkDataArray;
    d.forEach(function(a2) {
      c.add(a2);
    });
    var e = [];
    this.links.each(function(a2) {
      a2.data === null || c.contains(a2.data) || e.push(a2.data);
    });
    e.forEach(function(a2) {
      Kq(b, a2, false);
    });
    d.forEach(function(c2) {
      a.zc(c2) === null && Lq(b, c2, false);
    });
  };
  Dq.prototype.updateRelationshipsFromData = function(a) {
    var b = a.data;
    if (b !== null) {
      var c = a.diagram;
      if (c !== null) {
        var d = c.model;
        if (a instanceof T2) {
          var e = Hq(d, b, true);
          e = c.Fb(e);
          a.fromNode = e;
          e = Hq(d, b, false);
          e = c.Fb(e);
          a.toNode = e;
          b = d.Bf(b);
          if (0 < b.length || 0 < a.labelNodes.count) {
            if (b.length === 1 && a.labelNodes.count === 1) {
              e = b[0];
              var f2 = a.labelNodes.first();
              if (d.pa(f2.data) === e)
                return;
            }
            e = new G2().addAll(b);
            var g2 = new G2();
            a.labelNodes.each(function(a2) {
              a2.data !== null && (a2 = d.pa(a2.data), a2 !== void 0 && g2.add(a2));
            });
            b = g2.copy();
            b.pq(e);
            e = e.copy();
            e.pq(g2);
            if (0 < b.count || 0 < e.count)
              b.each(function(b2) {
                b2 = c.Fb(b2);
                b2 !== null && b2.labeledLink === a && (b2.labeledLink = null);
              }), e.each(function(b2) {
                b2 = c.Fb(b2);
                b2 !== null && b2.labeledLink !== a && (b2.labeledLink = a);
              });
          }
        } else
          !(a instanceof ze) && (b = d.Eh(b), b = c.findPartForKey(b), b === null || b instanceof U2) && (a.containingGroup = b);
      }
    }
  };
  Dq.prototype.resolveReferencesForData = function(a) {
    var b = this.diagram.model, c = b.pa(a);
    if (c !== void 0) {
      var d = Mq(b, c), e = this.Ac(a);
      if (d !== null && e !== null) {
        d = d.iterator;
        for (var f2 = {}; d.next(); ) {
          var g2 = d.value;
          b.cb(g2) ? e instanceof U2 && b.Eh(g2) === c && (g2 = this.Ac(g2), g2 !== null && (g2.containingGroup = e)) : (f2.link = this.zc(g2), f2.link !== null && e instanceof W2 && (Hq(b, g2, true) === c && (f2.link.fromNode = e), Hq(b, g2, false) === c && (f2.link.toNode = e), g2 = b.Bf(g2), Array.isArray(g2) && g2.some(function(a2) {
            return function(b2) {
              return b2 === c ? (e.labeledLink = a2.link, true) : false;
            };
          }(f2))));
          f2 = { link: f2.link };
        }
        Nq(b, c);
      }
      a = b.Eh(a);
      a !== void 0 && (a = this.Fb(a), a instanceof U2 && (e.containingGroup = a));
    }
  };
  Dq.prototype.unresolveReferencesForPart = function(a) {
    var b = this.diagram.model;
    if (a instanceof W2) {
      var c = b.pa(a.data);
      if (c !== void 0) {
        for (var d = a.linksConnected; d.next(); )
          Oq(b, c, d.value.data);
        a.isLinkLabel && (d = a.labeledLink, d !== null && Oq(b, c, d.data));
        if (a instanceof U2)
          for (a = a.memberParts; a.next(); )
            d = a.value.data, b.cb(d) && Oq(b, c, d);
      }
    }
  };
  Dq.prototype.copyPartData = function(a, b) {
    var c = ji2.prototype.copyPartData.call(this, a, b);
    if (a instanceof T2)
      if (a = a.data, a !== null && b !== null) {
        var d = b.model;
        a = d.Sp(a);
        typeof a === "object" && a !== null && (d.Bi(a), c = b.zc(a));
      } else
        c !== null && (b = this.diagram, a !== null && b !== null && b.commandHandler !== null && b.commandHandler.copiesClipboardData && (b = b.model.Sp(a), typeof b === "object" && b !== null && (c.data = b)));
    return c;
  };
  Dq.prototype.insertLink = function(a, b, c, d) {
    var e = this.diagram, f2 = e.model, g2 = e.toolManager.findTool("Linking"), h = "";
    a !== null && (b === null && (b = a), h = b.portId, h === null && (h = ""));
    b = "";
    c !== null && (d === null && (d = c), b = d.portId, b === null && (b = ""));
    d = g2.archetypeLinkData;
    if (d instanceof T2) {
      if (og2(d), f2 = d.copy(), f2 !== null)
        return f2.fromNode = a, f2.fromPortId = h, f2.toNode = c, f2.toPortId = b, e.add(f2), a = g2.archetypeLabelNodeData, a instanceof W2 && (og2(a), a = a.copy(), a !== null && (a.labeledLink = f2, e.add(a))), f2;
    } else if (d !== null && (d = f2.Sp(d), typeof d === "object" && d !== null))
      return a !== null && Pq(f2, d, f2.pa(a.data), true), Qq(f2, d, h, true), c !== null && Pq(f2, d, f2.pa(c.data), false), Qq(f2, d, b, false), f2.Bi(d), a = g2.archetypeLabelNodeData, a === null || a instanceof W2 || (a = f2.copyNodeData(a), typeof a === "object" && a !== null && (f2.sf(a), a = f2.pa(a), a !== void 0 && f2.Bu(d, a))), e.zc(d);
    return null;
  };
  Dq.prototype.findLinkForKey = Dq.prototype.findLinkForKey;
  Dq.prototype.findPartForKey = Dq.prototype.findPartForKey;
  Dq.prototype.removeAllModeledParts = Dq.prototype.removeAllModeledParts;
  Dq.prototype.addModeledParts = Dq.prototype.addModeledParts;
  Dq.prototype.addAllModeledParts = Dq.prototype.addAllModeledParts;
  Dq.className = "GraphLinksPartManager";
  function Rq() {
    ji2.apply(this, arguments);
    this.ih = null;
  }
  ma2(Rq, ji2);
  function Sq(a, b, c) {
    if (b !== null && c !== null) {
      var d = a.diagram.toolManager.findTool("Linking"), e = b, f2 = c;
      if (a.diagram.isTreePathToChildren)
        for (b = f2.linksConnected; b.next(); ) {
          if (b.value.toNode === f2)
            return;
        }
      else
        for (e = c, f2 = b, b = e.linksConnected; b.next(); )
          if (b.value.fromNode === e)
            return;
      if (d === null || !Ef2(d, e, f2, null, true)) {
        if (d = a.getLinkCategoryForData(c.data), b = a.findLinkTemplateForCategory(d), b !== null && (og2(b), b = b.copy(), b !== null)) {
          var g2 = a.diagram.skipsModelSourceBindings;
          a.diagram.skipsModelSourceBindings = true;
          b.Nf = d;
          b.jb = c.data;
          b.fromNode = e;
          b.toNode = f2;
          a.diagram.add(b);
          b.jb = null;
          b.data = c.data;
          a.diagram.skipsModelSourceBindings = g2;
        }
      }
    }
  }
  Rq.prototype.getLinkCategoryForData = function(a) {
    return this.diagram.model.xs(a);
  };
  Rq.prototype.setLinkCategoryForData = function(a, b) {
    this.diagram.model.Us(a, b);
  };
  Rq.prototype.setFromNodeForLink = function(a, b, c) {
    var d = this.diagram.model;
    c === void 0 && (c = null);
    b = b !== null ? b.data : null;
    if (this.diagram.isTreePathToChildren)
      d.he(a.data, d.pa(b));
    else {
      var e = this.ih;
      this.ih = a;
      c !== null && d.he(c.data, void 0);
      d.he(b, d.pa(a.toNode !== null ? a.toNode.data : null));
      this.ih = e;
    }
  };
  Rq.prototype.setToNodeForLink = function(a, b, c) {
    var d = this.diagram.model;
    c === void 0 && (c = null);
    b = b !== null ? b.data : null;
    if (this.diagram.isTreePathToChildren) {
      var e = this.ih;
      this.ih = a;
      c !== null && d.he(c.data, void 0);
      d.he(b, d.pa(a.fromNode !== null ? a.fromNode.data : null));
      this.ih = e;
    } else
      d.he(a.data, d.pa(b));
  };
  Rq.prototype.removeDataForLink = function(a) {
    this.diagram.model.he(a.data, void 0);
  };
  Rq.prototype.findLinkForKey = function(a) {
    if (a === null || a === void 0)
      return null;
    a = this.diagram.model.Yb(a);
    return a !== null ? this.Ue.H(a) : null;
  };
  Rq.prototype.doModelChanged = function(a) {
    ji2.prototype.doModelChanged.call(this, a);
    if (this.diagram) {
      var b = this.diagram;
      if (a.model === b.model) {
        var c = a.change;
        if (b.Z) {
          b.Z = false;
          try {
            var d = a.modelChange;
            if (d !== "") {
              if (c === ge2) {
                if (d === "nodeParentKey") {
                  var e = a.object, f2 = this.Fb(a.newValue), g2 = this.Gi(e);
                  if (this.ih !== null)
                    f2 !== null && (this.ih.data = e, this.ih.category = this.getLinkCategoryForData(e));
                  else if (g2 !== null) {
                    var h = g2.Ii();
                    h !== null ? f2 === null ? b.remove(h) : b.isTreePathToChildren ? h.fromNode = f2 : h.toNode = f2 : Sq(this, f2, g2);
                  }
                } else if (d === "parentLinkCategory") {
                  var k = this.Gi(a.object), l2 = a.newValue;
                  if (k !== null && typeof l2 === "string") {
                    var m2 = k.Ii();
                    m2 !== null && (m2.category = l2);
                  }
                }
                b.isModified = true;
              }
            } else if (c === ge2) {
              var n2 = a.propertyName;
              a.object === b.model && n2 === "nodeParentKeyProperty" && (b.undoManager.isUndoingRedoing || this.Ld());
              b.isModified = true;
            }
          } finally {
            b.Z = true;
          }
        }
      }
    }
  };
  Rq.prototype.updateRelationshipsFromData = function(a) {
    var b = a.data;
    if (b !== null) {
      var c = a.diagram;
      if (c !== null) {
        var d = c.model;
        a instanceof W2 && (b = d.Fh(b), b = c.Fb(b), d = a.rg(), b !== d && (d = a.Ii(), b !== null ? d !== null ? c.isTreePathToChildren ? d.fromNode = b : d.toNode = b : Sq(this, b, a) : d !== null && Bj2(c, d, false)));
      }
    }
  };
  Rq.prototype.updateDataBindings = function(a, b) {
    ji2.prototype.updateDataBindings.call(this, a, b);
    typeof b === "string" && this.Ac(a) !== null && (a = this.zc(a), a !== null && a.Fa(b));
  };
  Rq.prototype.resolveReferencesForData = function(a) {
    var b = this.diagram.model, c = b.pa(a);
    if (c !== void 0) {
      var d = Mq(b, c), e = this.Ac(a);
      if (d !== null && e !== null) {
        for (d = d.iterator; d.next(); ) {
          var f2 = d.value;
          b.cb(f2) && e instanceof W2 && b.Fh(f2) === c && Sq(this, e, this.Gi(f2));
        }
        Nq(b, c);
      }
      a = b.Fh(a);
      a !== void 0 && e instanceof W2 && (a = this.Fb(a), Sq(this, a, e));
    }
  };
  Rq.prototype.unresolveReferencesForPart = function(a) {
    var b = this.diagram.model;
    if (a instanceof W2) {
      var c = b.pa(a.data), d = this.zc(a.data);
      if (d !== null) {
        d.isSelected = false;
        d.isHighlighted = false;
        var e = d.layer;
        if (e !== null) {
          var f2 = e.fc(-1, d, false);
          0 <= f2 && this.diagram.Wa(qe2, "parts", e, d, null, f2, null);
          f2 = d.layerChanged;
          f2 !== null && f2(d, e, null);
        }
      }
      d = this.diagram.isTreePathToChildren;
      for (a = a.linksConnected; a.next(); )
        e = a.value, e = (d ? e.toNode : e.fromNode).data, b.cb(e) && Oq(b, c, e);
    }
  };
  Rq.prototype.insertLink = function(a, b, c) {
    b = this.diagram.model;
    var d = a, e = c;
    this.diagram.isTreePathToChildren || (d = c, e = a);
    return d !== null && e !== null ? (b.he(e.data, b.pa(d.data)), e.Ii()) : null;
  };
  Rq.prototype.findLinkForKey = Rq.prototype.findLinkForKey;
  Rq.className = "TreePartManager";
  function Z2(a, b) {
    this.vl = new G2();
    this.tl = new G2();
    this.zw = ',\n  "insertedNodeKeys": ';
    this.My = ',\n  "modifiedNodeData": ';
    this.Bw = ',\n  "removedNodeKeys": ';
    this.Mh = null;
    Va2(this);
    this.ln = this.na = "";
    this.Sg = false;
    this.j = {};
    this.Fc = [];
    this.bb = new H2();
    this.ni = "key";
    this.Jk = this.nl = null;
    this.bn = this.cn = false;
    this.en = true;
    this.Om = null;
    this.Aj = "category";
    this.Pf = new H2();
    this.Xt = new F2();
    this.kh = false;
    this.o = null;
    this.undoManager = new se2();
    a !== void 0 && (Aa2(a) ? this.nodeDataArray = a : Object.assign(this, a));
    b && Object.assign(this, b);
  }
  Z2.prototype.cloneProtected = function(a) {
    a.na = this.na;
    a.ln = this.ln;
    a.Sg = this.Sg;
    a.ni = this.ni;
    a.nl = this.nl;
    a.Jk = this.Jk;
    a.cn = this.cn;
    a.bn = this.bn;
    a.en = this.en;
    a.Om = this.Om;
    a.Aj = this.Aj;
  };
  Z2.prototype.copy = function() {
    var a = new this.constructor();
    this.cloneProtected(a);
    return a;
  };
  Z2.prototype.clear = function() {
    this.Fc = [];
    this.bb.clear();
    this.Pf.clear();
    this.undoManager.clear();
  };
  Z2.prototype.toString = function(a) {
    a === void 0 && (a = 0);
    if (1 < a)
      return this.vq();
    var b = (this.name !== "" ? this.name : "") + " Model";
    if (0 < a) {
      b += "\n node data:";
      a = this.nodeDataArray;
      for (var c = a.length, d = 0; d < c; d++) {
        var e = a[d];
        b += " " + this.pa(e) + ":" + Ka2(e);
      }
    }
    return b;
  };
  Z2.prototype.UA = function(a) {
    a.change !== oe2 && C2("Model.toIncrementalData argument is not a Transaction ChangedEvent:" + a.toString());
    var b = a.object;
    if (!(a.isTransactionFinished && b instanceof re2))
      return null;
    Tq(this, b);
    a = this.iw(b, a.propertyName === "FinishedUndo");
    this.Mh = null;
    return a;
  };
  Z2.prototype.iw = function(a, b) {
    var c = this, d = false, e = new G2(), f2 = new G2(), g2 = new G2(), h = this.Mh;
    a.changes.each(function(a2) {
      a2.model === c && (a2.modelChange === "nodeDataArray" ? a2.change === pe2 ? e.add(a2.newValue) : a2.change === qe2 && g2.add(a2.oldValue) : c.cb(a2.object) ? f2.add(a2.object) : a2.change !== ge2 || c.modelData !== a2.object && a2.propertyName !== "modelData" ? a2.object !== null && (h && h.contains(a2.object) ? h.get(a2.object).each(function(a3) {
        c.cb(a3) && f2.add(a3);
      }) : a2.object instanceof Z2 || c.Pi() && c.yc(a2.object) || Uq(c, a2.object).each(function(a3) {
        f2.add(a3);
      })) : d = true);
    });
    var k = this.tl;
    k.clear();
    e.each(function(a2) {
      k.add(c.pa(a2));
      b || f2.add(a2);
    });
    var l2 = this.vl;
    l2.clear();
    g2.each(function(a2) {
      l2.add(c.pa(a2));
      b && f2.add(a2);
    });
    a = c.cloneDeep(f2.ya());
    var m2 = null;
    d && (m2 === null && (m2 = {}), m2.modelData = this.cloneDeep(this.modelData));
    0 < k.count && (m2 === null && (m2 = {}), b ? m2.removedNodeKeys = k.ya() : m2.insertedNodeKeys = k.ya());
    0 < a.length && (m2 === null && (m2 = {}), m2.modifiedNodeData = a);
    0 < l2.count && (m2 === null && (m2 = {}), b ? m2.insertedNodeKeys = l2.ya() : m2.removedNodeKeys = l2.ya());
    l2.clear();
    k.clear();
    return m2;
  };
  Z2.prototype.cloneDeep = function(a) {
    return Vq(this, a, true);
  };
  function Vq(a, b, c, d, e, f2) {
    function g2(a2, c2) {
      h ? (a2.__gohashid === void 0 && f2.push(a2), d.set(a2, c2)) : (a2 = mb2++, d.set(a2, c2), e.set(a2, b));
    }
    if (!za2(b))
      return b;
    f2 || (f2 = []);
    var h = Object.isExtensible(b);
    d || (d = new H2());
    if (h) {
      var k = d.get(b);
      if (k)
        return k;
    } else
      for (e || (e = new H2()), k = e.iterator; k.next(); ) {
        var l2 = k.key;
        if (k.value === b && (l2 = d.get(l2)))
          return l2;
      }
    if (Array.isArray(b)) {
      k = [];
      g2(b, k);
      for (var m2 = 0; m2 < b.length; m2++)
        k.push(Vq(a, b[m2], false, d, e, f2));
    } else if (b instanceof K2 || b instanceof Gb2 || b instanceof N2 || b instanceof lc2 || b instanceof O2)
      k = b.copy(), g2(b, k);
    else {
      if (b instanceof hl || b instanceof P2 || b instanceof D2)
        return b;
      if (b instanceof F2)
        k = new F2().addAll(Vq(a, b.ya(), false, d, e, f2)), g2(b, k);
      else if (b instanceof G2)
        k = new G2().addAll(Vq(a, b.ya(), false, d, e, f2)), g2(b, k);
      else if (b instanceof H2)
        k = new H2().addAll(Vq(a, b.ya(), false, d, e, f2)), g2(b, k);
      else if (b instanceof Date)
        k = new Date(b.getTime()), g2(b, k);
      else if (b instanceof RegExp)
        k = new RegExp(b), g2(b, k), k.lastIndex = b.lastIndex;
      else if (typeof b.copy === "function")
        k = b.copy(), g2(b, k);
      else
        for (m2 in k = {}, g2(b, k), b)
          m2 !== "__gohashid" && (k[m2] = Vq(a, b[m2], false, d, e, f2));
    }
    c && f2.forEach(function(a2) {
      delete a2.__gohashid;
    });
    return k;
  }
  t2 = Z2.prototype;
  t2.quote = function(a) {
    return JSON.stringify(a).replace(/[\u007F-\uFFFF]/g, function(a2) {
      return "\\u" + ("0000" + a2.charCodeAt(0).toString(16)).substr(-4);
    });
  };
  t2.Fm = function() {
    var a = "";
    this.name !== "" && (a += ',\n  "name": ' + this.quote(this.name));
    this.dataFormat !== "" && (a += ',\n  "dataFormat": ' + this.quote(this.dataFormat));
    this.isReadOnly && (a += ',\n  "isReadOnly": ' + this.isReadOnly);
    this.nodeKeyProperty !== "key" && typeof this.nodeKeyProperty === "string" && (a += ',\n  "nodeKeyProperty": ' + this.quote(this.nodeKeyProperty));
    this.copiesArrays && (a += ',\n  "copiesArrays": true');
    this.copiesArrayObjects && (a += ',\n  "copiesArrayObjects": true');
    this.copiesKey || (a += ',\n  "copiesKey": false');
    this.nodeCategoryProperty !== "category" && typeof this.nodeCategoryProperty === "string" && (a += ',\n  "nodeCategoryProperty": ' + this.quote(this.nodeCategoryProperty));
    return a;
  };
  t2.nq = function(a) {
    a.name && (this.name = a.name);
    a.dataFormat && (this.dataFormat = a.dataFormat);
    a.isReadOnly && (this.isReadOnly = true);
    a.nodeKeyProperty && (this.nodeKeyProperty = a.nodeKeyProperty);
    a.copiesArrays && (this.copiesArrays = true);
    a.copiesArrayObjects && (this.copiesArrayObjects = true);
    a.copiesKey === false && (this.copiesKey = false);
    a.nodeCategoryProperty && (this.nodeCategoryProperty = a.nodeCategoryProperty);
  };
  function Wq(a, b) {
    b = b.modelData;
    za2(b) && (a.pm(b), a.modelData = b);
  }
  t2.jw = function() {
    var a = this.modelData, b = false, c;
    for (c in a)
      if (!Xq(c, a[c])) {
        b = true;
        break;
      }
    a = "";
    b && (a = ',\n  "modelData": ' + Yq(this, this.modelData));
    return a + ',\n  "nodeDataArray": ' + Zq(this, this.nodeDataArray, true);
  };
  t2.Ev = function(a) {
    Wq(this, a);
    a = a.nodeDataArray;
    Aa2(a) && (this.pm(a), this.nodeDataArray = a);
  };
  function Tq(a, b) {
    function c(a2, b2) {
      if (b2 = b2.part) {
        if (b2 = b2.data, a2 !== b2) {
          var c2 = d.get(a2);
          c2 === null ? (c2 = new G2(), c2.add(b2), d.add(a2, c2)) : c2.add(b2);
        }
      }
    }
    var d = a.Mh;
    d === null && (d = new H2(), b.changes.each(function(a2) {
      if (a2.diagram !== null) {
        var b2 = a2.change;
        if (b2 === ge2)
          (a2 = a2.object.panel) && (b2 = a2.data) && c(b2, a2);
        else if (b2 === pe2 || b2 === qe2)
          a2 = a2.object, (b2 = a2.itemArray) && c(b2, a2);
      }
    }), a.Mh = d);
  }
  function Uq(a, b) {
    for (var c = new G2(), d = 0; d < a.nodeDataArray.length; d++) {
      var e = a.nodeDataArray[d];
      $q(a, b, e, e, c);
    }
    return c;
  }
  function $q(a, b, c, d, e) {
    if (Array.isArray(c))
      for (var f2 = 0; f2 < c.length; f2++) {
        var g2 = c[f2];
        if (g2 === b)
          return e.add(d), true;
        if ($q(a, b, g2, d, e))
          return true;
      }
    else if (za2(c) && Object.getPrototypeOf(c) === Object.prototype)
      for (f2 in c) {
        g2 = c[f2];
        if (g2 === b)
          return e.add(d), true;
        if ($q(a, b, g2, d, e))
          return true;
      }
    return false;
  }
  t2.hw = function(a, b) {
    var c = this, d = false, e = new G2(), f2 = new G2(), g2 = new G2(), h = this.Mh;
    a.changes.each(function(a2) {
      a2.model === c && (a2.modelChange === "nodeDataArray" ? a2.change === pe2 ? e.add(a2.newValue) : a2.change === qe2 && g2.add(a2.oldValue) : c.cb(a2.object) ? f2.add(a2.object) : a2.change !== ge2 || c.modelData !== a2.object && a2.propertyName !== "modelData" ? a2.object !== null && (h && h.contains(a2.object) ? h.get(a2.object).each(function(a3) {
        c.cb(a3) && f2.add(a3);
      }) : a2.object instanceof Z2 || c.Pi() && c.yc(a2.object) || Uq(c, a2.object).each(function(a3) {
        f2.add(a3);
      })) : d = true);
    });
    var k = this.tl;
    k.clear();
    e.each(function(a2) {
      k.add(c.pa(a2));
      b || f2.add(a2);
    });
    var l2 = this.vl;
    l2.clear();
    g2.each(function(a2) {
      l2.add(c.pa(a2));
      b && f2.add(a2);
    });
    a = "";
    d && (a += ',\n  "modelData": ' + Yq(this, this.modelData));
    0 < k.count && (a += (b ? this.Bw : this.zw) + Zq(this, k.ya(), true));
    0 < f2.count && (a += this.My + Zq(this, f2.ya(), true));
    0 < l2.count && (a += (b ? this.zw : this.Bw) + Zq(this, l2.ya(), true));
    l2.clear();
    k.clear();
    return a;
  };
  t2.mq = function(a) {
    (a.name !== void 0 && a.name !== this.name || a.dataFormat !== void 0 && a.dataFormat !== this.dataFormat || a.isReadOnly !== void 0 && a.isReadOnly !== this.isReadOnly || a.nodeKeyProperty !== void 0 && a.nodeKeyProperty !== this.nodeKeyProperty || a.copiesArrays !== void 0 && a.copiesArrays !== this.copiesArrays || a.copiesArrayObjects !== void 0 && a.copiesArrayObjects !== this.copiesArrayObjects || a.copiesKey !== void 0 && a.copiesKey !== this.copiesKey || a.nodeCategoryProperty !== void 0 && a.nodeCategoryProperty !== this.nodeCategoryProperty) && C2("applyIncrementalJson cannot change Model properties");
    Wq(this, a);
    var b = a.insertedNodeKeys, c = a.modifiedNodeData, d = new H2();
    if (Array.isArray(c))
      for (var e = 0; e < c.length; e++) {
        var f2 = c[e], g2 = this.pa(f2);
        g2 !== void 0 && g2 !== null && d.set(g2, f2);
      }
    if (Array.isArray(b))
      for (e = b.length, f2 = 0; f2 < e; f2++) {
        g2 = b[f2];
        var h = this.Yb(g2);
        h === null && (h = (h = d.get(g2)) ? h : this.copyNodeData({}), this.wm(h, g2), this.sf(h));
      }
    if (Array.isArray(c)) {
      for (b = c.length, d = 0; d < b; d++)
        if (e = c[d], f2 = this.pa(e), f2 = this.Yb(f2), f2 !== null) {
          for (var k in e)
            k === "__gohashid" || k === this.nodeKeyProperty || this.dk() && k === this.nodeIsGroupProperty || this.setDataProperty(f2, k, e[k]);
          this.xm(e, f2);
        }
    }
    a = a.removedNodeKeys;
    if (Array.isArray(a))
      for (c = a.length, k = 0; k < c; k++)
        b = this.Yb(a[k]), b !== null && this.om(b);
  };
  t2.Fy = function(a, b) {
    a.change !== oe2 && C2("Model.toIncrementalJson argument is not a Transaction ChangedEvent:" + a.toString());
    var c = a.object;
    if (!(a.isTransactionFinished && c instanceof re2))
      return '{ "incremental": 0 }';
    b === void 0 && (b = ar(this, this));
    Tq(this, c);
    a = this.hw(c, a.propertyName === "FinishedUndo");
    this.Mh = null;
    return b === "2" ? '{ "incremental": 2' + a + "}" : '{ "class": ' + this.quote(b) + ', "incremental": 1' + this.Fm() + a + "}";
  };
  t2.VA = function(a, b) {
    return this.Fy(a, b);
  };
  t2.vq = function(a) {
    a === void 0 && (a = ar(this, this));
    return '{ "class": ' + this.quote(a) + this.Fm() + this.jw() + "}";
  };
  t2.toJSON = function(a) {
    return this.vq(a);
  };
  t2.Ax = function(a) {
    var b = null;
    if (typeof a === "string")
      try {
        b = x2.JSON.parse(a);
      } catch (d) {
      }
    else
      typeof a === "object" ? b = a : C2("Unable to modify a Model from: " + a);
    var c = b.incremental;
    typeof c !== "number" && C2("Unable to apply non-incremental changes to Model: " + a);
    c !== 0 && (this.xa("applyIncrementalJson"), this.mq(b), this.Xa("applyIncrementalJson"));
  };
  t2.fz = function(a) {
    return this.Ax(a);
  };
  Z2.constructGraphLinksModel = function() {
    return new Z2();
  };
  t2 = Z2.prototype;
  t2.pm = function(a) {
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++) {
        var d = a[c];
        if (za2(d)) {
          var e = c;
          d = this.pm(d);
          Array.isArray(a) ? a[e] = d : C2("Cannot replace an object in an HTMLCollection or NodeList at " + e);
        }
      }
    else if (za2(a)) {
      for (b in a)
        if (c = a[b], za2(c) && (c = this.pm(c), a[b] = c, b === "points" && Array.isArray(c))) {
          e = c.length % 2 === 0;
          for (d = 0; d < c.length; d++)
            if (typeof c[d] !== "number") {
              e = false;
              break;
            }
          if (e) {
            e = new F2();
            for (d = 0; d < c.length / 2; d++)
              e.add(new K2(c[2 * d], c[2 * d + 1]));
            e.freeze();
            a[b] = e;
          }
        }
      return br(a);
    }
    return a;
  };
  t2.Gm = function(a) {
    return a === void 0 ? "undefined" : a === null ? "null" : a === true ? "true" : a === false ? "false" : typeof a === "string" ? this.quote(a) : typeof a === "number" ? a === Infinity ? "9e9999" : a === -Infinity ? "-9e9999" : isNaN(a) ? '{"class":"NaN"}' : a.toString() : a instanceof Date ? '{"class":"Date", "value":"' + a.toJSON() + '"}' : a instanceof Number ? this.Gm(a.valueOf()) : Aa2(a) ? Zq(this, a) : za2(a) ? Yq(this, a) : typeof a === "function" ? "null" : a.toString();
  };
  function Zq(a, b, c) {
    c === void 0 && (c = false);
    var d = b.length;
    if (0 >= d)
      return "[]";
    var e = new Xa2();
    e.add("[");
    c && 1 < d && e.add("\n");
    for (var f2 = 0; f2 < d; f2++) {
      var g2 = b[f2];
      g2 !== void 0 && (0 < f2 && (e.add(","), c && e.add("\n")), e.add(a.Gm(g2)));
    }
    c && 1 < d && e.add("\n");
    e.add("]");
    return e.toString();
  }
  function Xq(a, b) {
    return b === void 0 || a === "__gohashid" || a[0] === "_" || typeof b === "function" ? true : false;
  }
  function cr(a) {
    return isNaN(a) ? "NaN" : a === Infinity ? "9e9999" : a === -Infinity ? "-9e9999" : a;
  }
  function Yq(a, b) {
    var c = b;
    if (c instanceof K2)
      b = { "class": "go.Point", x: cr(c.x), y: cr(c.y) };
    else if (c instanceof Gb2)
      b = { "class": "go.Size", width: cr(c.width), height: cr(c.height) };
    else if (c instanceof N2)
      b = { "class": "go.Rect", x: cr(c.x), y: cr(c.y), width: cr(c.width), height: cr(c.height) };
    else if (c instanceof lc2)
      b = { "class": "go.Margin", top: cr(c.top), right: cr(c.right), bottom: cr(c.bottom), left: cr(c.left) };
    else if (c instanceof O2)
      c.hb() ? b = { "class": "go.Spot", x: cr(c.x), y: cr(c.y), offsetX: cr(c.offsetX), offsetY: cr(c.offsetY) } : b = { "class": "go.Spot", "enum": c.toString() };
    else if (c instanceof hl) {
      b = { "class": "go.Brush", type: c.type.name };
      if (c.type === ol)
        b.color = c.color;
      else if (c.type === rl || c.type === il)
        b.start = c.start, b.end = c.end, c.type === il && (c.startRadius !== 0 && (b.startRadius = cr(c.startRadius)), isNaN(c.endRadius) || (b.endRadius = cr(c.endRadius)));
      if (c.colorStops !== null) {
        var d = {};
        for (c = c.colorStops.iterator; c.next(); )
          d[c.key] = c.value;
        b.colorStops = d;
      }
    } else
      c instanceof P2 ? (b = { "class": "go.Geometry", type: c.type.name }, c.startX !== 0 && (b.startX = cr(c.startX)), c.startY !== 0 && (b.startY = cr(c.startY)), c.endX !== 0 && (b.endX = cr(c.endX)), c.endY !== 0 && (b.endY = cr(c.endY)), c.spot1.A(uc2) || (b.spot1 = c.spot1), c.spot2.A(Cc2) || (b.spot2 = c.spot2), c.type === P2.o && (b.path = P2.wa(c))) : c instanceof D2 && (b = { "class": "go.EnumValue", classType: ar(a, c.classType), name: c.name });
    d = "{";
    c = true;
    for (var e in b) {
      var f2 = hn(b, e);
      if (!Xq(e, f2))
        if (c ? c = false : d += ",", d += a.quote(e) + ":", e === "points" && f2 instanceof F2) {
          var g2 = "[";
          for (f2 = f2.iterator; f2.next(); ) {
            var h = f2.value;
            1 < g2.length && (g2 += ",");
            g2 += a.Gm(h.x);
            g2 += ",";
            g2 += a.Gm(h.y);
          }
          g2 += "]";
          d += g2;
        } else
          d += a.Gm(f2);
    }
    return d + "}";
  }
  function er(a) {
    return typeof a === "number" ? a : a === "NaN" ? NaN : a === "9e9999" ? Infinity : a === "-9e9999" ? -Infinity : parseFloat(a);
  }
  function br(a) {
    if (typeof a !== "object")
      return a;
    var b = a["class"] || "";
    if (b === "NaN")
      return NaN;
    if (b === "Date")
      return new Date(a.value);
    if (b.indexOf("go.") !== 0)
      return a;
    b = b.substr(3);
    var c = a;
    if (b === "Point")
      c = new K2(er(a.x), er(a.y));
    else if (b === "Size")
      c = new Gb2(er(a.width), er(a.height));
    else if (b === "Rect")
      c = new N2(er(a.x), er(a.y), er(a.width), er(a.height));
    else if (b === "Margin")
      c = new lc2(er(a.top), er(a.right), er(a.bottom), er(a.left));
    else if (b === "Spot")
      typeof a["enum"] === "string" ? c = ld2(a["enum"]) : c = new O2(er(a.x), er(a.y), er(a.offsetX), er(a.offsetY));
    else if (b === "Brush") {
      if (c = new hl(), c.type = Wa2(hl, a.type), typeof a.color === "string" && (c.color = a.color), a.start instanceof O2 && (c.start = a.start), a.end instanceof O2 && (c.end = a.end), typeof a.startRadius === "number" && (c.startRadius = er(a.startRadius)), typeof a.endRadius === "number" && (c.endRadius = er(a.endRadius)), a = a.colorStops, za2(a))
        for (var d in a)
          c.addColorStop(parseFloat(d), a[d]);
    } else
      b === "Geometry" ? (c = null, typeof a.path === "string" ? c = P2.parse(a.path) : c = new P2(), c.type = Wa2(P2, a.type), typeof a.startX === "number" && (c.startX = er(a.startX)), typeof a.startY === "number" && (c.startY = er(a.startY)), typeof a.endX === "number" && (c.endX = er(a.endX)), typeof a.endY === "number" && (c.endY = er(a.endY)), a.spot1 instanceof O2 && (c.spot1 = a.spot1), a.spot2 instanceof O2 && (c.spot2 = a.spot2)) : b === "EnumValue" && (d = a.classType, d.indexOf("go.") === 0 && (d = d.substr(3)), d = fr(d), typeof d === "function" && (c = Wa2(d, a.name)));
    return c;
  }
  t2.yh = function(a) {
    this.Xt.add(a);
    return this;
  };
  t2.rk = function(a) {
    this.Xt.remove(a);
  };
  t2.ks = function(a) {
    this.skipsUndoManager || this.undoManager.fv(a);
    for (var b = this.Xt, c = b.length, d = 0; d < c; d++)
      b.J(d)(a);
  };
  t2.Wa = function(a, b, c, d, e, f2, g2) {
    gr(this, "", a, b, c, d, e, f2, g2);
  };
  t2.g = function(a, b, c, d, e) {
    gr(this, "", ge2, a, this, b, c, d, e);
  };
  t2.Os = function(a, b, c, d, e, f2) {
    gr(this, "", ge2, b, a, c, d, e, f2);
  };
  function gr(a, b, c, d, e, f2, g2, h, k) {
    h === void 0 && (h = null);
    k === void 0 && (k = null);
    var l2 = new fe2();
    l2.model = a;
    l2.change = c;
    l2.modelChange = b;
    l2.propertyName = d;
    l2.object = e;
    l2.oldValue = f2;
    l2.oldParam = h;
    l2.newValue = g2;
    l2.newParam = k;
    a.ks(l2);
  }
  Z2.prototype.changeState = function(a, b) {
    if (a !== null && a.model === this)
      if (a.change === ge2) {
        var c = a.object, d = a.propertyName, e = a.H(b);
        d === this.nodeKeyProperty && this.cb(c) && (b = a.H(!b), b !== void 0 && this.bb.remove(b), e !== void 0 && this.bb.add(e, c));
        Ij2(c, d, e);
      } else
        a.change === pe2 ? (c = a.newParam, a.modelChange === "nodeDataArray" ? (a = a.newValue, za2(a) && typeof c === "number" && (d = this.pa(a), b ? (this.Fc[c] === a && Da2(this.Fc, c), d !== void 0 && this.bb.remove(d)) : (this.Fc[c] !== a && Ca2(this.Fc, c, a), d !== void 0 && this.bb.add(d, a)))) : a.modelChange === "" ? ((d = a.object) && !Aa2(d) && a.propertyName && (d = hn(a.object, a.propertyName)), Aa2(d) && typeof c === "number" && (a = a.newValue, b ? Da2(d, c) : Ca2(d, c, a))) : C2("unknown ChangedEvent.Insert modelChange: " + a.toString())) : a.change === qe2 ? (c = a.oldParam, a.modelChange === "nodeDataArray" ? (a = a.oldValue, za2(a) && typeof c === "number" && (d = this.pa(a), b ? (this.Fc[c] !== a && Ca2(this.Fc, c, a), d !== void 0 && this.bb.add(d, a)) : (this.Fc[c] === a && Da2(this.Fc, c), d !== void 0 && this.bb.remove(d)))) : a.modelChange === "" ? ((d = a.object) && !Aa2(d) && a.propertyName && (d = hn(a.object, a.propertyName)), Aa2(d) && typeof c === "number" && (a = a.oldValue, b ? Ca2(d, c, a) : Da2(d, c))) : C2("unknown ChangedEvent.Remove modelChange: " + a.toString())) : a.change !== oe2 && C2("unknown ChangedEvent: " + a.toString());
  };
  Z2.prototype.xa = function(a) {
    return this.undoManager.xa(a);
  };
  Z2.prototype.Xa = function(a) {
    return this.undoManager.Xa(a);
  };
  Z2.prototype.Hf = function() {
    return this.undoManager.Hf();
  };
  Z2.prototype.commit = function(a, b) {
    b === void 0 && (b = "");
    var c = this.skipsUndoManager;
    b === null && (this.skipsUndoManager = true, b = "");
    this.undoManager.xa(b);
    var d = false;
    try {
      a(this), d = true;
    } finally {
      d ? this.undoManager.Xa(b) : this.undoManager.Hf(), this.skipsUndoManager = c;
    }
  };
  t2 = Z2.prototype;
  t2.Fa = function(a, b) {
    b === void 0 && (b = "");
    gr(this, "SourceChanged", oe2, b, a, null, null);
  };
  t2.pa = function(a) {
    if (a !== null) {
      var b = this.ni;
      if (b !== "" && (b = hn(a, b), b !== void 0)) {
        if (Jq(b))
          return b;
        C2("Key value for node data " + a + " is not a number or a string: " + b);
      }
    }
  };
  t2.wm = function(a, b) {
    if (a !== null) {
      var c = this.ni;
      if (c !== "")
        if (this.cb(a)) {
          var d = hn(a, c);
          d !== b && this.Yb(b) === null && (Ij2(a, c, b), d !== void 0 && this.bb.remove(d), this.bb.add(b, a), gr(this, "nodeKey", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c), this.rq(d, b));
        } else
          Ij2(a, c, b);
    }
  };
  function Jq(a) {
    return typeof a === "number" || typeof a === "string";
  }
  t2.cb = function(a) {
    var b = this.pa(a);
    return b === void 0 ? false : this.bb.H(b) === a;
  };
  t2.Yb = function(a) {
    a === null && C2("Model.findNodeDataForKey:key must not be null");
    return a !== void 0 && Jq(a) ? this.bb.H(a) : null;
  };
  t2.rv = function(a) {
    if (a !== null) {
      var b = this.ni;
      if (b !== "") {
        var c = this.pa(a);
        if (c === void 0 || this.bb.contains(c)) {
          var d = this.nl;
          if (d !== null && (c = d(this, a), c !== void 0 && c !== null && !this.bb.contains(c))) {
            Ij2(a, b, c);
            return;
          }
          if (typeof c === "string") {
            for (d = 2; this.bb.contains(c + d); )
              d++;
            Ij2(a, b, c + d);
          } else if (c === void 0 || typeof c === "number") {
            for (c = -this.bb.count - 1; this.bb.contains(c); )
              c--;
            Ij2(a, b, c);
          }
        }
      }
    }
  };
  t2.sf = function(a) {
    a !== null && (kb2(a), this.cb(a) || Bq(this, a, true));
  };
  function Bq(a, b, c) {
    var d = a.pa(b);
    if (d === void 0 || a.bb.H(d) !== b)
      a.rv(b), d = a.pa(b), d === void 0 && C2("Model.makeNodeDataKeyUnique failed on " + b + ".  Data not added to Model."), a.bb.add(d, b), d = null, c && (d = a.Fc.length, Ca2(a.Fc, d, b)), gr(a, "nodeDataArray", pe2, "nodeDataArray", a, null, b, null, d), a.rm(b), a.qm(b);
  }
  t2.bz = function(a) {
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.sf(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.sf(a.value);
  };
  t2.om = function(a) {
    a !== null && Aq(this, a, true);
  };
  function Aq(a, b, c) {
    var d = a.pa(b);
    d !== void 0 && a.bb.remove(d);
    d = null;
    if (c) {
      a:
        if (c = a.Fc, Array.isArray(c))
          d = c.indexOf(b);
        else {
          d = c.length;
          for (var e = 0; e < d; e++)
            if (c[e] === b) {
              d = e;
              break a;
            }
          d = -1;
        }
      if (0 > d)
        return;
      Da2(a.Fc, d);
    }
    gr(a, "nodeDataArray", qe2, "nodeDataArray", a, b, null, d, null);
    a.yq(b);
  }
  t2.JA = function(a) {
    if (Aa2(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.om(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.om(a.value);
  };
  t2.wA = function(a) {
    if (a !== this.nodeDataArray && Aa2(a)) {
      var b = this.vl;
      b.clear();
      b.addAll(this.bb.iteratorKeys);
      var c = this.tl;
      c.clear();
      for (var d = a.length, e = 0; e < d; e++) {
        var f2 = a[e], g2 = this.pa(f2);
        if (g2 !== void 0) {
          c.add(g2);
          var h = this.Yb(g2);
          h !== f2 && (h !== null ? (this.Np(h, f2), this.xm(f2, h)) : (f2 = this.cloneDeep(f2), this.wm(f2, g2), this.sf(f2)));
        } else
          g2 = this.cloneDeep(f2), this.sf(g2), c.add(this.pa(g2));
      }
      for (a = b.iterator; a.next(); )
        d = a.value, c.contains(d) || (d = this.Yb(d)) && this.om(d);
      b.clear();
      c.clear();
    }
  };
  t2.rq = function(a, b) {
    b !== void 0 && (a = Mq(this, a), a instanceof G2 && this.Pf.add(b, a));
  };
  t2.bw = function() {
  };
  t2.rm = function() {
  };
  t2.qm = function() {
  };
  t2.yq = function() {
  };
  function Oq(a, b, c) {
    if (b !== void 0) {
      var d = a.Pf.H(b);
      d === null && (d = new G2(), a.Pf.add(b, d));
      d.add(c);
    }
  }
  function Nq(a, b, c) {
    if (b !== void 0) {
      var d = a.Pf.H(b);
      d instanceof G2 && (c === void 0 || c === null ? a.Pf.remove(b) : (d.remove(c), d.count === 0 && a.Pf.remove(b)));
    }
  }
  function Mq(a, b) {
    if (b === void 0)
      return null;
    a = a.Pf.H(b);
    return a instanceof G2 ? a : null;
  }
  t2.mz = function(a) {
    a === void 0 ? this.Pf.clear() : this.Pf.remove(a);
  };
  Z2.prototype.copyNodeData = function(a) {
    if (a === null)
      return null;
    var b = this.Jk;
    a = b !== null ? b(a, this) : hr(this, a, true);
    za2(a) && Va2(a);
    return a;
  };
  function hr(a, b, c) {
    if (a.copiesArrays && Array.isArray(b)) {
      var d = [];
      for (c = 0; c < b.length; c++) {
        var e = hr(a, b[c], a.copiesArrayObjects);
        d.push(e);
      }
      Va2(d);
      return d;
    }
    if (c && za2(b)) {
      c = (c = b.constructor) ? new c() : {};
      e = a.copiesKey || typeof a.nodeKeyProperty !== "string" ? null : a.nodeKeyProperty;
      for (d in b)
        if (d === "__gohashid")
          c.__gohashid = void 0;
        else if (d === e)
          c[e] = void 0;
        else {
          var f2 = hn(b, d), g2 = ar(a, f2);
          g2 === "GraphObject" || g2 === "Diagram" || g2 === "Layer" || g2 === "RowColumnDefinition" || g2 === "AnimationManager" || g2 === "Tool" || g2 === "CommandHandler" || g2 === "Layout" || g2 === "InputEvent" || g2 === "DiagramEvent" || f2 instanceof Z2 || f2 instanceof se2 || f2 instanceof re2 || f2 instanceof fe2 ? Ij2(c, d, f2) : (f2 = hr(a, f2, false), Ij2(c, d, f2));
        }
      Va2(c);
      return c;
    }
    return b instanceof K2 ? b.copy() : b instanceof Gb2 ? b.copy() : b instanceof N2 ? b.copy() : b instanceof O2 ? b.copy() : b instanceof lc2 ? b.copy() : b;
  }
  Z2.prototype.setDataProperty = function(a, b, c) {
    if (this.cb(a)) {
      if (b === this.nodeKeyProperty) {
        this.wm(a, c);
        return;
      }
      if (b === this.nodeCategoryProperty) {
        this.vm(a, c);
        return;
      }
    } else
      !ir && a instanceof Y2 && (ir = true, ya2('Model.setDataProperty is modifying a GraphObject, "' + a.toString() + '"'), ya2("  Is that really your intent?"));
    var d = hn(a, b);
    d !== c && (Ij2(a, b, c), this.Os(a, b, d, c));
  };
  t2 = Z2.prototype;
  t2.set = function(a, b, c) {
    this.setDataProperty(a, b, c);
  };
  t2.Np = function(a, b) {
    if (b) {
      var c = this.cb(a), d;
      for (d in b)
        d === "__gohashid" || c && d === this.nodeKeyProperty || this.setDataProperty(a, d, b[d]);
    }
  };
  t2.Yy = function(a, b) {
    this.ys(a, -1, b);
  };
  t2.ys = function(a, b, c) {
    0 > b && (b = a.length);
    Ca2(a, b, c);
    gr(this, "", pe2, "", a, null, c, null, b);
  };
  t2.Hv = function(a, b) {
    b === void 0 && (b = -1);
    a === this.Fc && C2("Model.removeArrayItem should not be called on the Model.nodeDataArray");
    b === -1 && (b = a.length - 1);
    var c = a[b];
    Da2(a, b);
    gr(this, "", qe2, "", a, c, null, b, null);
  };
  t2.Zp = function(a) {
    if (a === null)
      return "";
    var b = this.Aj;
    if (b === "")
      return "";
    b = hn(a, b);
    if (b === void 0)
      return "";
    if (typeof b === "string")
      return b;
    C2("getCategoryForNodeData found a non-string category for " + a + ": " + b);
  };
  t2.vm = function(a, b) {
    if (a !== null) {
      var c = this.Aj;
      if (c !== "")
        if (this.cb(a)) {
          var d = hn(a, c);
          d === void 0 && (d = "");
          d !== b && (Ij2(a, c, b), gr(this, "nodeCategory", ge2, c, a, d, b));
        } else
          Ij2(a, c, b);
    }
  };
  t2.xm = function(a, b) {
    this.vm(b, this.Zp(a));
  };
  t2.fm = function() {
    return false;
  };
  t2.dk = function() {
    return false;
  };
  t2.Pi = function() {
    return false;
  };
  t2.Ds = function() {
    return false;
  };
  t2.ek = function() {
    return false;
  };
  function li2() {
    return new Z2();
  }
  function ar(a, b) {
    if (typeof b === "function") {
      if (b.className)
        return b.className;
      if (b.name)
        return b.name;
    } else if (typeof b === "object" && b !== null && b.constructor)
      return ar(a, b.constructor);
    return typeof b;
  }
  function fr(a) {
    return jr[a] ? jr[a] : x2.go !== void 0 && x2.go[a] ? x2.go[a] : null;
  }
  function hn(a, b) {
    if (!a || !b)
      return null;
    try {
      if (typeof b === "function")
        var c = b(a);
      else
        typeof a.getAttribute === "function" ? (c = a.getAttribute(b), c === null && (c = void 0)) : c = a[b];
    } catch (d) {
    }
    return c;
  }
  function Ij2(a, b, c) {
    if (a && b)
      try {
        typeof b === "function" ? b(a, c) : typeof a.setAttribute === "function" ? a.setAttribute(b, c) : a[b] = c;
      } catch (d) {
      }
  }
  na2.Object.defineProperties(Z2.prototype, { name: { get: function() {
    return this.na;
  }, set: function(a) {
    var b = this.na;
    b !== a && (this.na = a, this.g("name", b, a));
  } }, dataFormat: { get: function() {
    return this.ln;
  }, set: function(a) {
    var b = this.ln;
    b !== a && (this.ln = a, this.g("dataFormat", b, a));
  } }, isReadOnly: { get: function() {
    return this.Sg;
  }, set: function(a) {
    var b = this.Sg;
    b !== a && (this.Sg = a, this.g("isReadOnly", b, a));
  } }, modelData: {
    get: function() {
      return this.j;
    },
    set: function(a) {
      var b = this.j;
      b !== a && (this.j = a, this.g("modelData", b, a), this.Fa(a));
    }
  }, undoManager: { get: function() {
    return this.o;
  }, set: function(a) {
    var b = this.o;
    b !== a && (b !== null && b.uy(this), this.o = a, a !== null && a.yx(this));
  } }, skipsUndoManager: { get: function() {
    return this.kh;
  }, set: function(a) {
    this.kh = a;
  } }, nodeKeyProperty: { get: function() {
    return this.ni;
  }, set: function(a) {
    var b = this.ni;
    b !== a && (a === "" && C2("Model.nodeKeyProperty may not be the empty string"), 0 < this.bb.count && C2("Cannot set Model.nodeKeyProperty when there is existing node data"), this.ni = a, this.g("nodeKeyProperty", b, a));
  } }, makeUniqueKeyFunction: { get: function() {
    return this.nl;
  }, set: function(a) {
    var b = this.nl;
    b !== a && (this.nl = a, this.g("makeUniqueKeyFunction", b, a));
  } }, nodeDataArray: { get: function() {
    return this.Fc;
  }, set: function(a) {
    var b = this.Fc;
    if (b !== a) {
      this.bb.clear();
      this.bw();
      for (var c = a.length, d = 0; d < c; d++) {
        var e = a[d];
        za2(e) || C2("Model.nodeDataArray must only contain Objects, not: " + e);
        kb2(e);
      }
      this.Fc = a;
      d = new F2();
      for (e = 0; e < c; e++) {
        var f2 = a[e], g2 = this.pa(f2);
        g2 === void 0 ? d.add(f2) : this.bb.H(g2) !== null ? d.add(f2) : this.bb.add(g2, f2);
      }
      for (d = d.iterator; d.next(); )
        e = d.value, this.rv(e), f2 = this.pa(e), f2 !== void 0 && this.bb.add(f2, e);
      gr(this, "nodeDataArray", ge2, "nodeDataArray", this, b, a);
      for (b = 0; b < c; b++)
        d = a[b], this.rm(d), this.qm(d);
      Array.isArray(a) || (this.isReadOnly = true);
    }
  } }, copyNodeDataFunction: {
    get: function() {
      return this.Jk;
    },
    set: function(a) {
      var b = this.Jk;
      b !== a && (this.Jk = a, this.g("copyNodeDataFunction", b, a));
    }
  }, copiesArrays: { get: function() {
    return this.cn;
  }, set: function(a) {
    var b = this.cn;
    b !== a && (this.cn = a, this.g("copiesArrays", b, a));
  } }, copiesArrayObjects: { get: function() {
    return this.bn;
  }, set: function(a) {
    var b = this.bn;
    b !== a && (this.bn = a, this.g("copiesArrayObjects", b, a));
  } }, copiesKey: {
    get: function() {
      return this.en;
    },
    set: function(a) {
      var b = this.en;
      b !== a && (this.en = a, this.g("copiesKey", b, a));
    }
  }, afterCopyFunction: { get: function() {
    return this.Om;
  }, set: function(a) {
    var b = this.Om;
    b !== a && (this.Om = a, this.g("afterCopyFunction", b, a));
  } }, nodeCategoryProperty: { get: function() {
    return this.Aj;
  }, set: function(a) {
    var b = this.Aj;
    b !== a && (this.Aj = a, this.g("nodeCategoryProperty", b, a));
  } }, type: { get: function() {
    return "Model";
  } } });
  Z2.prototype.setCategoryForNodeData = Z2.prototype.vm;
  Z2.prototype.getCategoryForNodeData = Z2.prototype.Zp;
  Z2.prototype.removeArrayItem = Z2.prototype.Hv;
  Z2.prototype.insertArrayItem = Z2.prototype.ys;
  Z2.prototype.addArrayItem = Z2.prototype.Yy;
  Z2.prototype.assignAllDataProperties = Z2.prototype.Np;
  Z2.prototype.set = Z2.prototype.set;
  Z2.prototype.clearUnresolvedReferences = Z2.prototype.mz;
  Z2.prototype.mergeNodeDataArray = Z2.prototype.wA;
  Z2.prototype.removeNodeDataCollection = Z2.prototype.JA;
  Z2.prototype.removeNodeData = Z2.prototype.om;
  Z2.prototype.addNodeDataCollection = Z2.prototype.bz;
  Z2.prototype.addNodeData = Z2.prototype.sf;
  Z2.prototype.makeNodeDataKeyUnique = Z2.prototype.rv;
  Z2.prototype.findNodeDataForKey = Z2.prototype.Yb;
  Z2.prototype.containsNodeData = Z2.prototype.cb;
  Z2.prototype.setKeyForNodeData = Z2.prototype.wm;
  Z2.prototype.getKeyForNodeData = Z2.prototype.pa;
  Z2.prototype.updateTargetBindings = Z2.prototype.Fa;
  Z2.prototype.commit = Z2.prototype.commit;
  Z2.prototype.rollbackTransaction = Z2.prototype.Hf;
  Z2.prototype.commitTransaction = Z2.prototype.Xa;
  Z2.prototype.startTransaction = Z2.prototype.xa;
  Z2.prototype.raiseDataChanged = Z2.prototype.Os;
  Z2.prototype.raiseChanged = Z2.prototype.g;
  Z2.prototype.raiseChangedEvent = Z2.prototype.Wa;
  Z2.prototype.removeChangedListener = Z2.prototype.rk;
  Z2.prototype.addChangedListener = Z2.prototype.yh;
  Z2.prototype.writeJsonValue = Z2.prototype.Gm;
  Z2.prototype.replaceJsonObjects = Z2.prototype.pm;
  Z2.prototype.applyIncrementalJSON = Z2.prototype.fz;
  Z2.prototype.applyIncrementalJson = Z2.prototype.Ax;
  Z2.prototype.toJSON = Z2.prototype.toJSON;
  Z2.prototype.toJson = Z2.prototype.vq;
  Z2.prototype.toIncrementalJSON = Z2.prototype.VA;
  Z2.prototype.toIncrementalJson = Z2.prototype.Fy;
  Z2.prototype.toIncrementalData = Z2.prototype.UA;
  Z2.prototype.clear = Z2.prototype.clear;
  var ir = false, jr = {};
  Z2.className = "Model";
  Z2.fromJSON = Z2.fromJson = function(a, b) {
    b === void 0 && (b = null);
    var c = null;
    if (typeof a === "string")
      try {
        c = x2.JSON.parse(a);
      } catch (f2) {
      }
    else
      typeof a === "object" ? c = a : C2("Unable to construct a Model from: " + a);
    if (b === null) {
      a = null;
      var d = c["class"];
      if (typeof d === "string")
        try {
          var e = null;
          d.indexOf("go.") === 0 ? (d = d.substr(3), e = fr(d)) : (e = fr(d), e === null && (e = x2[d]));
          typeof e === "function" && (a = new e());
        } catch (f2) {
        }
      a === null || a instanceof Z2 ? b = a : C2("Unable to construct a Model of declared class: " + c["class"]);
    }
    b === null && (b = Z2.constructGraphLinksModel());
    b.nq(c);
    b.Ev(c);
    return b;
  };
  Z2.safePropertyValue = hn;
  Z2.safePropertySet = Ij2;
  jr.Brush = hl;
  jr.ChangedEvent = fe2;
  jr.Geometry = P2;
  jr.Margin = lc2;
  jr.Panel = X2;
  jr.Point = K2;
  jr.Rect = N2;
  jr.Size = Gb2;
  jr.Spot = O2;
  jr.Transaction = re2;
  jr.UndoManager = se2;
  function si2(a, b, c, d) {
    Va2(this);
    this.v = false;
    a === void 0 && (a = "");
    b === void 0 && (b = a);
    c === void 0 && (c = null);
    this.j = -1;
    this.od = null;
    this.Ql = a;
    this.Pl = this.yp = 0;
    this.Ur = null;
    this.Yn = false;
    this.Il = b;
    this.an = c;
    d === void 0 ? (this.ql = kr, this.Ck = null) : (this.ql = an, this.Ck = d);
    this.Mt = new G2();
  }
  si2.prototype.copy = function() {
    var a = new si2();
    a.Ql = this.Ql;
    a.yp = this.yp;
    a.Pl = this.Pl;
    a.Ur = this.Ur;
    a.Yn = this.Yn;
    a.Il = this.Il;
    a.an = this.an;
    a.ql = this.ql;
    a.Ck = this.Ck;
    return a;
  };
  t2 = si2.prototype;
  t2.gb = function(a) {
    a.classType === si2 && (this.mode = a);
  };
  t2.toString = function() {
    return "Binding(" + this.targetProperty + ":" + this.sourceProperty + (this.Xi !== -1 ? " " + this.Xi : "") + " " + this.mode.name + ")";
  };
  t2.freeze = function() {
    this.v = true;
    return this;
  };
  t2.ea = function() {
    this.v = false;
    return this;
  };
  t2.ly = function(a) {
    a === void 0 && (a = null);
    this.mode = an;
    this.backConverter = a;
    return this;
  };
  t2.kq = function(a) {
    a === void 0 && (a = "");
    this.sourceName = a;
    this.isToModel = false;
    return this;
  };
  t2.zA = function() {
    this.sourceName = null;
    this.isToModel = true;
    return this;
  };
  function al(a, b, c) {
    a = a.sourceName;
    return a === null || a === "" ? b : a === "/" ? c.part : a === "." ? c : a === ".." ? c.panel : b.Ya(a);
  }
  t2.cw = function(a, b, c) {
    var d = this.Il;
    if (c === void 0 || d === "" || d === c) {
      c = this.Ql;
      var e = this.an;
      if (e === null && c === "")
        ya2("Binding error: target property is the empty string: " + this.toString());
      else {
        var f2 = b;
        d !== "" && (f2 = hn(b, d));
        if (f2 !== void 0)
          if (e === null)
            c !== "" && Ij2(a, c, f2);
          else
            try {
              if (c !== "") {
                var g2 = e(f2, a);
                Ij2(a, c, g2);
              } else
                e(f2, a);
            } catch (h) {
            }
      }
    }
  };
  t2.Aq = function(a, b, c, d) {
    if (this.ql === an) {
      var e = this.Ql;
      if (c === void 0 || e === c) {
        c = this.Il;
        var f2 = this.Ck, g2 = a;
        e !== "" && (g2 = hn(a, e));
        if (g2 !== void 0 && !this.Mt.contains(a))
          try {
            this.Mt.add(a);
            var h = d !== null ? d.diagram : null, k = h !== null ? h.model : null;
            if (f2 === null)
              if (c !== "")
                k !== null ? k.setDataProperty(b, c, g2) : Ij2(b, c, g2);
              else {
                if (k !== null && d !== null && 0 <= d.itemIndex && d.panel !== null && Array.isArray(d.panel.itemArray)) {
                  var l2 = d.itemIndex, m2 = d.panel.itemArray;
                  k.Hv(m2, l2);
                  k.ys(m2, l2, g2);
                }
              }
            else
              try {
                if (c !== "") {
                  var n2 = f2(g2, b, k);
                  k !== null ? k.setDataProperty(b, c, n2) : Ij2(b, c, n2);
                } else {
                  var p2 = f2(g2, b, k);
                  if (p2 !== void 0 && k !== null && d !== null && 0 <= d.itemIndex && d.panel !== null && Array.isArray(d.panel.itemArray)) {
                    var r2 = d.itemIndex, q2 = d.panel.itemArray;
                    k.Hv(q2, r2);
                    k.ys(q2, r2, p2);
                  }
                }
              } catch (u2) {
              }
          } finally {
            this.Mt.remove(a);
          }
      }
    }
  };
  na2.Object.defineProperties(si2.prototype, { Xi: { get: function() {
    return this.j;
  }, set: function(a) {
    this.v && wa2(this);
    this.j = a;
  } }, targetProperty: { get: function() {
    return this.Ql;
  }, set: function(a) {
    this.v && wa2(this);
    this.Ql = a;
  } }, sourceName: { get: function() {
    return this.Ur;
  }, set: function(a) {
    this.v && wa2(this);
    this.Ur = a;
    a !== null && (this.Yn = false);
  } }, isToModel: { get: function() {
    return this.Yn;
  }, set: function(a) {
    this.v && wa2(this);
    this.Yn = a;
  } }, sourceProperty: { get: function() {
    return this.Il;
  }, set: function(a) {
    this.v && wa2(this);
    this.Il = a;
  } }, converter: { get: function() {
    return this.an;
  }, set: function(a) {
    this.v && wa2(this);
    this.an = a;
  } }, backConverter: { get: function() {
    return this.Ck;
  }, set: function(a) {
    this.v && wa2(this);
    this.Ck = a;
  } }, mode: { get: function() {
    return this.ql;
  }, set: function(a) {
    this.v && wa2(this);
    this.ql = a;
  } } });
  si2.prototype.updateSource = si2.prototype.Aq;
  si2.prototype.updateTarget = si2.prototype.cw;
  si2.prototype.ofModel = si2.prototype.zA;
  si2.prototype.ofObject = si2.prototype.kq;
  si2.prototype.makeTwoWay = si2.prototype.ly;
  var Dk = "Binding", kr = new D2(si2, "OneWay", 1), an = new D2(si2, "TwoWay", 2);
  si2.className = "Binding";
  si2.parseEnum = function(a, b) {
    return function(c) {
      c = Wa2(a, c);
      return c === null ? b : c;
    };
  };
  si2.toString = Ka2;
  si2.OneWay = kr;
  si2.TwoWay = an;
  function lr(a, b, c) {
    Z2.call(this);
    this.yw = ',\n  "insertedLinkKeys": ';
    this.Ly = ',\n  "modifiedLinkData": ';
    this.Aw = ',\n  "removedLinkKeys": ';
    this.Yc = [];
    this.Vf = new G2();
    this.kb = new H2();
    this.hi = "";
    this.dj = this.Ik = this.ol = null;
    this.af = "from";
    this.bf = "to";
    this.wj = this.vj = "";
    this.uj = "category";
    this.ce = "";
    this.ul = "isGroup";
    this.Ae = "group";
    this.dn = false;
    b !== void 0 && (this.linkDataArray = b);
    a !== void 0 && (Aa2(a) ? this.nodeDataArray = a : Object.assign(this, a));
    c && Object.assign(this, c);
  }
  ma2(lr, Z2);
  lr.constructGraphLinksModel = Z2.constructGraphLinksModel;
  lr.prototype.cloneProtected = function(a) {
    Z2.prototype.cloneProtected.call(this, a);
    a.hi = this.hi;
    a.ol = this.ol;
    a.Ik = this.Ik;
    a.af = this.af;
    a.bf = this.bf;
    a.vj = this.vj;
    a.wj = this.wj;
    a.uj = this.uj;
    a.ce = this.ce;
    a.ul = this.ul;
    a.Ae = this.Ae;
    a.dn = this.dn;
  };
  t2 = lr.prototype;
  t2.clear = function() {
    Z2.prototype.clear.call(this);
    this.Yc = [];
    this.kb.clear();
    this.Vf.clear();
  };
  t2.toString = function(a) {
    a === void 0 && (a = 0);
    if (2 <= a)
      return this.vq();
    var b = (this.name !== "" ? this.name : "") + " GraphLinksModel";
    if (0 < a) {
      b += "\n node data:";
      a = this.nodeDataArray;
      var c = a.length, d;
      for (d = 0; d < c; d++) {
        var e = a[d];
        b += " " + this.pa(e) + ":" + Ka2(e);
      }
      b += "\n link data:";
      a = this.linkDataArray;
      c = a.length;
      for (d = 0; d < c; d++)
        e = a[d], b += " " + Hq(this, e, true) + "-->" + Hq(this, e, false);
    }
    return b;
  };
  t2.iw = function(a, b) {
    this.linkKeyProperty === "" && C2("GraphLinksModel.linkKeyProperty must not be an empty string for .toIncrementalData() to succeed.");
    var c = Z2.prototype.iw.call(this, a, b), d = this, e = new G2(), f2 = new G2(), g2 = new G2(), h = this.Mh;
    a.changes.each(function(a2) {
      a2.model === d && (a2.modelChange === "linkDataArray" ? a2.change === pe2 ? e.add(a2.newValue) : a2.change === qe2 && g2.add(a2.oldValue) : d.yc(a2.object) ? f2.add(a2.object) : a2.object !== null && (a2.object !== null && h && h.contains(a2.object) ? h.get(a2.object).each(function(a3) {
        d.yc(a3) && f2.add(a3);
      }) : a2.object instanceof Z2 || d.cb(a2.object) || mr(d, a2.object).each(function(a3) {
        f2.add(a3);
      })));
    });
    var k = this.tl;
    k.clear();
    e.each(function(a2) {
      k.add(d.qc(a2));
      b || f2.add(a2);
    });
    var l2 = this.vl;
    l2.clear();
    g2.each(function(a2) {
      l2.add(d.qc(a2));
      b && f2.add(a2);
    });
    a = d.cloneDeep(f2.ya());
    0 < k.count && (c === null && (c = {}), b ? c.removedLinkKeys = k.ya() : c.insertedLinkKeys = k.ya());
    0 < a.length && (c === null && (c = {}), c.modifiedLinkData = a);
    0 < l2.count && (c === null && (c = {}), b ? c.insertedLinkKeys = l2.ya() : c.removedLinkKeys = l2.ya());
    l2.clear();
    k.clear();
    return c;
  };
  t2.Fm = function() {
    var a = Z2.prototype.Fm.call(this), b = "";
    this.linkCategoryProperty !== "category" && typeof this.linkCategoryProperty === "string" && (b += ',\n  "linkCategoryProperty": ' + this.quote(this.linkCategoryProperty));
    this.linkKeyProperty !== "" && typeof this.linkKeyProperty === "string" && (b += ',\n  "linkKeyProperty": ' + this.quote(this.linkKeyProperty));
    this.linkFromKeyProperty !== "from" && typeof this.linkFromKeyProperty === "string" && (b += ',\n  "linkFromKeyProperty": ' + this.quote(this.linkFromKeyProperty));
    this.linkToKeyProperty !== "to" && typeof this.linkToKeyProperty === "string" && (b += ',\n  "linkToKeyProperty": ' + this.quote(this.linkToKeyProperty));
    this.linkFromPortIdProperty !== "" && typeof this.linkFromPortIdProperty === "string" && (b += ',\n  "linkFromPortIdProperty": ' + this.quote(this.linkFromPortIdProperty));
    this.linkToPortIdProperty !== "" && typeof this.linkToPortIdProperty === "string" && (b += ',\n  "linkToPortIdProperty": ' + this.quote(this.linkToPortIdProperty));
    this.linkLabelKeysProperty !== "" && typeof this.linkLabelKeysProperty === "string" && (b += ',\n  "linkLabelKeysProperty": ' + this.quote(this.linkLabelKeysProperty));
    this.nodeIsGroupProperty !== "isGroup" && typeof this.nodeIsGroupProperty === "string" && (b += ',\n  "nodeIsGroupProperty": ' + this.quote(this.nodeIsGroupProperty));
    this.nodeGroupKeyProperty !== "group" && typeof this.nodeGroupKeyProperty === "string" && (b += ',\n  "nodeGroupKeyProperty": ' + this.quote(this.nodeGroupKeyProperty));
    return a + b;
  };
  t2.nq = function(a) {
    Z2.prototype.nq.call(this, a);
    a.linkKeyProperty && (this.linkKeyProperty = a.linkKeyProperty);
    a.linkFromKeyProperty && (this.linkFromKeyProperty = a.linkFromKeyProperty);
    a.linkToKeyProperty && (this.linkToKeyProperty = a.linkToKeyProperty);
    a.linkFromPortIdProperty && (this.linkFromPortIdProperty = a.linkFromPortIdProperty);
    a.linkToPortIdProperty && (this.linkToPortIdProperty = a.linkToPortIdProperty);
    a.linkCategoryProperty && (this.linkCategoryProperty = a.linkCategoryProperty);
    a.linkLabelKeysProperty && (this.linkLabelKeysProperty = a.linkLabelKeysProperty);
    a.nodeIsGroupProperty && (this.nodeIsGroupProperty = a.nodeIsGroupProperty);
    a.nodeGroupKeyProperty && (this.nodeGroupKeyProperty = a.nodeGroupKeyProperty);
  };
  t2.jw = function() {
    var a = Z2.prototype.jw.call(this), b = ',\n  "linkDataArray": ' + Zq(this, this.linkDataArray, true);
    return a + b;
  };
  t2.Ev = function(a) {
    Z2.prototype.Ev.call(this, a);
    a = a.linkDataArray;
    Array.isArray(a) && (this.pm(a), this.linkDataArray = a);
  };
  function mr(a, b) {
    for (var c = new G2(), d = 0; d < a.linkDataArray.length; d++) {
      var e = a.linkDataArray[d];
      $q(a, b, e, e, c);
    }
    return c;
  }
  t2.hw = function(a, b) {
    this.linkKeyProperty === "" && C2("GraphLinksModel.linkKeyProperty must not be an empty string for .toIncrementalJson() to succeed.");
    var c = Z2.prototype.hw.call(this, a, b), d = this, e = new G2(), f2 = new G2(), g2 = new G2(), h = this.Mh;
    a.changes.each(function(a2) {
      a2.model === d && (a2.modelChange === "linkDataArray" ? a2.change === pe2 ? e.add(a2.newValue) : a2.change === qe2 && g2.add(a2.oldValue) : d.yc(a2.object) ? f2.add(a2.object) : a2.object !== null && (a2.object !== null && h && h.contains(a2.object) ? h.get(a2.object).each(function(a3) {
        d.yc(a3) && f2.add(a3);
      }) : a2.object instanceof Z2 || d.cb(a2.object) || mr(d, a2.object).each(function(a3) {
        f2.add(a3);
      })));
    });
    var k = this.tl;
    k.clear();
    e.each(function(a2) {
      k.add(d.qc(a2));
      b || f2.add(a2);
    });
    var l2 = this.vl;
    l2.clear();
    g2.each(function(a2) {
      l2.add(d.qc(a2));
      b && f2.add(a2);
    });
    a = c;
    0 < k.count && (a += (b ? this.Aw : this.yw) + Zq(this, k.ya(), true));
    0 < f2.count && (a += this.Ly + Zq(this, f2.ya(), true));
    0 < l2.count && (a += (b ? this.yw : this.Aw) + Zq(this, l2.ya(), true));
    l2.clear();
    k.clear();
    return a;
  };
  t2.mq = function(a) {
    (a.linkCategoryProperty !== void 0 && a.linkCategoryProperty !== this.linkCategoryProperty || a.linkKeyProperty !== void 0 && a.linkKeyProperty !== this.linkKeyProperty || a.linkFromKeyProperty !== void 0 && a.linkFromKeyProperty !== this.linkFromKeyProperty || a.linkToKeyProperty !== void 0 && a.linkToKeyProperty !== this.linkToKeyProperty || a.linkFromPortIdProperty !== void 0 && a.linkFromPortIdProperty !== this.linkFromPortIdProperty || a.linkToPortIdProperty !== void 0 && a.linkToPortIdProperty !== this.linkToPortIdProperty || a.linkLabelKeysProperty !== void 0 && a.linkLabelKeysProperty !== this.linkLabelKeysProperty || a.nodeIsGroupProperty !== void 0 && a.nodeIsGroupProperty !== this.nodeIsGroupProperty || a.nodeGroupKeyProperty !== void 0 && a.nodeGroupKeyProperty !== this.nodeGroupKeyProperty) && C2("applyIncrementalJson cannot change Model properties");
    Z2.prototype.mq.call(this, a);
    var b = a.insertedLinkKeys;
    if (Array.isArray(b))
      for (var c = b.length, d = 0; d < c; d++) {
        var e = b[d], f2 = this.Dh(e);
        f2 === null && (f2 = this.Sp({}), this.Ss(f2, e), this.Bi(f2));
      }
    b = a.modifiedLinkData;
    if (Array.isArray(b)) {
      for (c = b.length, d = 0; d < c; d++)
        if (e = b[d], f2 = this.qc(e), f2 = this.Dh(f2), f2 !== null) {
          for (var g2 in e)
            g2 !== "__gohashid" && g2 !== this.linkKeyProperty && this.setDataProperty(f2, g2, e[g2]);
          nr(this, e, f2);
        }
    }
    a = a.removedLinkKeys;
    if (Array.isArray(a))
      for (g2 = a.length, b = 0; b < g2; b++)
        c = this.Dh(a[b]), c !== null && this.nm(c);
  };
  lr.prototype.changeState = function(a, b) {
    if (a !== null && a.model === this) {
      if (a.change === ge2) {
        var c = a.object, d = a.propertyName;
        if (d === this.linkKeyProperty && this.yc(c)) {
          var e = a.H(b);
          b = a.H(!b);
          b !== void 0 && this.kb.remove(b);
          e !== void 0 && this.kb.add(e, c);
          Ij2(c, d, e);
          return;
        }
      } else if (a.change === pe2) {
        c = a.newParam;
        if (a.modelChange === "linkDataArray") {
          a = a.newValue;
          za2(a) && typeof c === "number" && (d = this.qc(a), b ? (this.Vf.remove(a), this.Yc[c] === a && this.Yc.splice(c, 1), d !== void 0 && this.kb.remove(d)) : (this.Vf.add(a), this.Yc[c] !== a && this.Yc.splice(c, 0, a), d !== void 0 && this.kb.add(d, a)));
          return;
        }
        if (a.modelChange === "linkLabelKeys") {
          d = this.Bf(a.object);
          Array.isArray(d) && typeof c === "number" && (b ? (c = d.indexOf(a.newValue), 0 <= c && d.splice(c, 1)) : 0 > d.indexOf(a.newValue) && d.splice(c, 0, a.newValue));
          return;
        }
      } else if (a.change === qe2) {
        c = a.oldParam;
        if (a.modelChange === "linkDataArray") {
          a = a.oldValue;
          za2(a) && typeof c === "number" && (d = this.qc(a), b ? (this.Vf.add(a), this.Yc[c] !== a && this.Yc.splice(c, 0, a), d !== void 0 && this.kb.add(d, a)) : (this.Vf.remove(a), this.Yc[c] === a && this.Yc.splice(c, 1), d !== void 0 && this.kb.remove(d)));
          return;
        }
        if (a.modelChange === "linkLabelKeys") {
          d = this.Bf(a.object);
          Array.isArray(d) && typeof c === "number" && (b ? 0 > d.indexOf(a.newValue) && d.splice(c, 0, a.newValue) : (c = d.indexOf(a.newValue), 0 <= c && d.splice(c, 1)));
          return;
        }
      }
      Z2.prototype.changeState.call(this, a, b);
    }
  };
  t2 = lr.prototype;
  t2.hm = function(a) {
    if (a !== void 0) {
      var b = this.dj;
      if (b !== null) {
        var c = this.Yb(a);
        c === null && (c = this.copyNodeData(b), Ij2(c, this.nodeKeyProperty, a), this.sf(c));
      }
      return a;
    }
  };
  t2.Xx = function(a) {
    return Hq(this, a, true);
  };
  t2.Ov = function(a, b) {
    Pq(this, a, b, true);
  };
  t2.$x = function(a) {
    return Hq(this, a, false);
  };
  t2.Sv = function(a, b) {
    Pq(this, a, b, false);
  };
  function Hq(a, b, c) {
    if (b !== null && (a = c ? a.af : a.bf, a !== "" && (a = hn(b, a), a !== void 0))) {
      if (Jq(a))
        return a;
      C2((c ? "FromKey" : "ToKey") + " value for link data " + b + " is not a number or a string: " + a);
    }
  }
  function Pq(a, b, c, d) {
    c === null && (c = void 0);
    if (b !== null) {
      var e = d ? a.af : a.bf;
      if (e !== "")
        if (c = a.hm(c), a.yc(b)) {
          var f2 = hn(b, e);
          f2 !== c && (Nq(a, f2, b), Ij2(b, e, c), a.Yb(c) === null && Oq(a, c, b), gr(a, d ? "linkFromKey" : "linkToKey", ge2, e, b, f2, c), typeof e === "string" && a.Fa(b, e));
        } else
          Ij2(b, e, c);
    }
  }
  t2.Yx = function(a) {
    return Gq(this, a, true);
  };
  t2.Pv = function(a, b) {
    Qq(this, a, b, true);
  };
  t2.ay = function(a) {
    return Gq(this, a, false);
  };
  t2.Tv = function(a, b) {
    Qq(this, a, b, false);
  };
  function Gq(a, b, c) {
    if (b === null)
      return "";
    a = c ? a.vj : a.wj;
    if (a === "")
      return "";
    b = hn(b, a);
    return b === void 0 ? "" : b;
  }
  function Qq(a, b, c, d) {
    if (b !== null) {
      var e = d ? a.vj : a.wj;
      if (e !== "")
        if (a.yc(b)) {
          var f2 = hn(b, e);
          f2 === void 0 && (f2 = "");
          f2 !== c && (Ij2(b, e, c), gr(a, d ? "linkFromPortId" : "linkToPortId", ge2, e, b, f2, c), typeof e === "string" && a.Fa(b, e));
        } else
          Ij2(b, e, c);
    }
  }
  t2.Bf = function(a) {
    if (a === null)
      return or;
    var b = this.ce;
    if (b === "")
      return or;
    a = hn(a, b);
    return a === void 0 ? or : a;
  };
  t2.Ts = function(a, b) {
    if (a !== null) {
      var c = this.ce;
      if (c !== "")
        if (this.yc(a)) {
          var d = hn(a, c);
          d === void 0 && (d = or);
          if (d !== b) {
            if (Array.isArray(d))
              for (var e = d.length, f2 = 0; f2 < e; f2++)
                Nq(this, d[f2], a);
            Ij2(a, c, b);
            e = b.length;
            for (f2 = 0; f2 < e; f2++) {
              var g2 = b[f2];
              this.Yb(g2) === null && Oq(this, g2, a);
            }
            gr(this, "linkLabelKeys", ge2, c, a, d, b);
            typeof c === "string" && this.Fa(a, c);
          }
        } else
          Ij2(a, c, b);
    }
  };
  t2.Bu = function(a, b) {
    if (b !== null && b !== void 0 && a !== null) {
      var c = this.ce;
      if (c !== "") {
        var d = hn(a, c);
        if (d === void 0)
          c = [], c.push(b), this.Ts(a, c);
        else if (Array.isArray(d)) {
          var e = d.indexOf(b);
          0 <= e || (e = d.length, d.push(b), this.yc(a) && (this.Yb(b) === null && Oq(this, b, a), gr(this, "linkLabelKeys", pe2, c, a, null, b, null, e)));
        } else
          C2(c + " property is not an Array; cannot addLabelKeyForLinkData: " + a);
      }
    }
  };
  t2.ty = function(a, b) {
    if (b !== null && b !== void 0 && a !== null) {
      var c = this.ce;
      if (c !== "") {
        var d = hn(a, c);
        if (Array.isArray(d)) {
          var e = d.indexOf(b);
          0 > e || (d.splice(e, 1), this.yc(a) && (Nq(this, b, a), gr(this, "linkLabelKeys", qe2, c, a, b, null, e, null)));
        } else
          d !== void 0 && C2(c + " property is not an Array; cannot removeLabelKeyforLinkData: " + a);
      }
    }
  };
  t2.qc = function(a) {
    if (a !== null) {
      var b = this.hi;
      if (b !== "" && (b = hn(a, b), b !== void 0)) {
        if (Jq(b))
          return b;
        C2("Key value for link data " + a + " is not a number or a string: " + b);
      }
    }
  };
  t2.Ss = function(a, b) {
    if (a !== null) {
      var c = this.hi;
      if (c !== "")
        if (this.yc(a)) {
          var d = hn(a, c);
          d !== b && this.Dh(b) === null && (Ij2(a, c, b), d !== void 0 && this.kb.remove(d), this.kb.add(b, a), gr(this, "linkKey", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c));
        } else
          Ij2(a, c, b);
    }
  };
  t2.Dh = function(a) {
    a === null && C2("GraphLinksModel.findLinkDataForKey:key must not be null");
    return a !== void 0 && Jq(a) ? this.kb.H(a) : null;
  };
  t2.Is = function(a) {
    if (a !== null) {
      var b = this.hi;
      if (b !== "") {
        var c = this.qc(a);
        if (c === void 0 || this.kb.contains(c)) {
          var d = this.ol;
          if (d !== null && (c = d(this, a), c !== void 0 && c !== null && !this.kb.contains(c))) {
            Ij2(a, b, c);
            return;
          }
          if (typeof c === "string") {
            for (d = 2; this.kb.contains(c + d); )
              d++;
            Ij2(a, b, c + d);
          } else if (c === void 0 || typeof c === "number") {
            for (c = -this.kb.count - 1; this.kb.contains(c); )
              c--;
            Ij2(a, b, c);
          }
        }
      }
    }
  };
  t2.yc = function(a) {
    return a === null ? false : this.Vf.contains(a);
  };
  t2.Bi = function(a) {
    a !== null && (kb2(a), this.yc(a) || Lq(this, a, true));
  };
  function Lq(a, b, c) {
    if (a.linkKeyProperty !== "") {
      var d = a.qc(b);
      if (d !== void 0 && a.kb.H(d) === b)
        return;
      a.Is(b);
      d = a.qc(b);
      d === void 0 && C2("GraphLinksModel.makeLinkDataKeyUnique failed on " + b + ". Data not added to model.");
      a.kb.add(d, b);
    }
    a.Vf.add(b);
    d = null;
    c && (d = a.Yc.length, a.Yc.splice(d, 0, b));
    gr(a, "linkDataArray", pe2, "linkDataArray", a, null, b, null, d);
    pr(a, b);
  }
  t2.az = function(a) {
    if (Array.isArray(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.Bi(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.Bi(a.value);
  };
  t2.nm = function(a) {
    a !== null && Kq(this, a, true);
  };
  function Kq(a, b, c) {
    a.Vf.remove(b);
    var d = a.qc(b);
    d !== void 0 && a.kb.remove(d);
    d = null;
    if (c) {
      d = a.Yc.indexOf(b);
      if (0 > d)
        return;
      a.Yc.splice(d, 1);
    }
    gr(a, "linkDataArray", qe2, "linkDataArray", a, b, null, d, null);
    c = Hq(a, b, true);
    Nq(a, c, b);
    c = Hq(a, b, false);
    Nq(a, c, b);
    d = a.Bf(b);
    if (Array.isArray(d))
      for (var e = d.length, f2 = 0; f2 < e; f2++)
        c = d[f2], Nq(a, c, b);
  }
  t2.HA = function(a) {
    if (Array.isArray(a))
      for (var b = a.length, c = 0; c < b; c++)
        this.nm(a[c]);
    else
      for (a = a.iterator; a.next(); )
        this.nm(a.value);
  };
  t2.vA = function(a) {
    this.linkKeyProperty === "" && C2("GraphLinksModel.linkKeyProperty must not be an empty string for .mergeLinkDataArray() to succeed.");
    if (a !== this.linkDataArray && Aa2(a)) {
      var b = this.vl;
      b.clear();
      b.addAll(this.kb.iteratorKeys);
      var c = this.tl;
      c.clear();
      for (var d = a.length, e = 0; e < d; e++) {
        var f2 = a[e], g2 = this.qc(f2);
        if (g2 !== void 0) {
          c.add(g2);
          var h = this.Dh(g2);
          h !== f2 && (h !== null ? (this.Np(h, f2), nr(this, f2, h)) : (f2 = this.cloneDeep(f2), this.Ss(f2, g2), this.Bi(f2)));
        } else
          g2 = this.cloneDeep(f2), this.Bi(g2), c.add(this.qc(g2));
      }
      for (a = b.iterator; a.next(); )
        d = a.value, c.contains(d) || (d = this.Dh(d)) && this.nm(d);
      b.clear();
      c.clear();
    }
  };
  function pr(a, b) {
    var c = Hq(a, b, true);
    c = a.hm(c);
    a.Yb(c) === null && Oq(a, c, b);
    c = Hq(a, b, false);
    c = a.hm(c);
    a.Yb(c) === null && Oq(a, c, b);
    var d = a.Bf(b);
    if (Array.isArray(d))
      for (var e = d.length, f2 = 0; f2 < e; f2++)
        c = d[f2], a.Yb(c) === null && Oq(a, c, b);
  }
  t2.Sp = function(a) {
    if (a === null)
      return null;
    var b = this.Ik;
    a = b !== null ? b(a, this) : hr(this, a, true);
    za2(a) && (Va2(a), this.af !== "" && Ij2(a, this.af, void 0), this.bf !== "" && Ij2(a, this.bf, void 0), this.ce !== "" && Ij2(a, this.ce, []));
    return a;
  };
  t2.lv = function(a) {
    if (a === null)
      return false;
    var b = this.ul;
    return b === "" ? false : hn(a, b) ? true : false;
  };
  t2.Eh = function(a) {
    if (a !== null) {
      var b = this.Ae;
      if (b !== "" && (b = hn(a, b), b !== void 0)) {
        if (Jq(b))
          return b;
        C2("GroupKey value for node data " + a + " is not a number or a string: " + b);
      }
    }
  };
  t2.uq = function(a, b) {
    b === null && (b = void 0);
    if (a !== null) {
      var c = this.Ae;
      if (c !== "")
        if (this.cb(a)) {
          var d = hn(a, c);
          d !== b && (Nq(this, d, a), Ij2(a, c, b), this.Yb(b) === null && Oq(this, b, a), gr(this, "nodeGroupKey", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c));
        } else
          Ij2(a, c, b);
    }
  };
  lr.prototype.copyNodeData = function(a) {
    if (a === null)
      return null;
    a = Z2.prototype.copyNodeData.call(this, a);
    this.Tj || this.Ae === "" || hn(a, this.Ae) === void 0 || Ij2(a, this.Ae, void 0);
    return a;
  };
  lr.prototype.setDataProperty = function(a, b, c) {
    if (this.cb(a)) {
      if (b === this.nodeKeyProperty) {
        this.wm(a, c);
        return;
      }
      if (b === this.nodeCategoryProperty) {
        this.vm(a, c);
        return;
      }
      if (b === this.nodeGroupKeyProperty) {
        this.uq(a, c);
        return;
      }
    } else if (this.yc(a)) {
      if (b === this.linkFromKeyProperty) {
        Pq(this, a, c, true);
        return;
      }
      if (b === this.linkToKeyProperty) {
        Pq(this, a, c, false);
        return;
      }
      if (b === this.linkFromPortIdProperty) {
        Qq(this, a, c, true);
        return;
      }
      if (b === this.linkToPortIdProperty) {
        Qq(this, a, c, false);
        return;
      }
      if (b === this.linkKeyProperty) {
        this.Ss(a, c);
        return;
      }
      if (b === this.linkCategoryProperty) {
        this.tq(a, c);
        return;
      }
      if (b === this.linkLabelKeysProperty) {
        this.Ts(a, c);
        return;
      }
    }
    var d = hn(a, b);
    d !== c && (Ij2(a, b, c), this.Os(a, b, d, c));
  };
  t2 = lr.prototype;
  t2.Np = function(a, b) {
    if (b) {
      var c = this.cb(a), d = this.yc(a), e;
      for (e in b)
        e === "__gohashid" || c && e === this.nodeKeyProperty || c && e === this.nodeIsGroupProperty && hn(a, e) === b[e] || d && e === this.linkKeyProperty || this.setDataProperty(a, e, b[e]);
    }
  };
  t2.rq = function(a, b) {
    Z2.prototype.rq.call(this, a, b);
    for (var c = this.bb.iterator; c.next(); )
      this.Jv(c.value, a, b);
    for (c = this.Vf.iterator; c.next(); ) {
      var d = c.value, e = a, f2 = b;
      if (Hq(this, d, true) === e) {
        var g2 = this.af;
        Ij2(d, g2, f2);
        gr(this, "linkFromKey", ge2, g2, d, e, f2);
        typeof g2 === "string" && this.Fa(d, g2);
      }
      Hq(this, d, false) === e && (g2 = this.bf, Ij2(d, g2, f2), gr(this, "linkToKey", ge2, g2, d, e, f2), typeof g2 === "string" && this.Fa(d, g2));
      g2 = this.Bf(d);
      if (Array.isArray(g2))
        for (var h = g2.length, k = this.ce, l2 = 0; l2 < h; l2++)
          g2[l2] === e && (g2[l2] = f2, gr(this, "linkLabelKeys", pe2, k, d, e, f2, l2, l2));
    }
  };
  t2.Jv = function(a, b, c) {
    if (this.Eh(a) === b) {
      var d = this.Ae;
      Ij2(a, d, c);
      gr(this, "nodeGroupKey", ge2, d, a, b, c);
      typeof d === "string" && this.Fa(a, d);
    }
  };
  t2.bw = function() {
    Z2.prototype.bw.call(this);
    for (var a = this.linkDataArray, b = a.length, c = 0; c < b; c++)
      pr(this, a[c]);
  };
  t2.rm = function(a) {
    Z2.prototype.rm.call(this, a);
    a = this.pa(a);
    var b = Mq(this, a);
    if (b !== null) {
      var c = Ea2();
      for (b = b.iterator; b.next(); ) {
        var d = b.value;
        if (this.cb(d)) {
          if (this.Eh(d) === a) {
            var e = this.Ae;
            gr(this, "nodeGroupKey", ge2, e, d, a, a);
            typeof e === "string" && this.Fa(d, e);
            c.push(d);
          }
        } else if (Hq(this, d, true) === a && (e = this.af, gr(this, "linkFromKey", ge2, e, d, a, a), typeof e === "string" && this.Fa(d, e), c.push(d)), Hq(this, d, false) === a && (e = this.bf, gr(this, "linkToKey", ge2, e, d, a, a), typeof e === "string" && this.Fa(d, e), c.push(d)), e = this.Bf(d), Array.isArray(e))
          for (var f2 = e.length, g2 = this.ce, h = 0; h < f2; h++)
            e[h] === a && (gr(this, "linkLabelKeys", pe2, g2, d, a, a, h, h), c.push(d));
      }
      for (b = 0; b < c.length; b++)
        Nq(this, a, c[b]);
      Ia2(c);
    }
  };
  t2.qm = function(a) {
    Z2.prototype.qm.call(this, a);
    var b = this.Eh(a);
    this.Yb(b) === null && Oq(this, b, a);
  };
  t2.yq = function(a) {
    Z2.prototype.yq.call(this, a);
    var b = this.Eh(a);
    Nq(this, b, a);
  };
  t2.us = function(a) {
    if (a === null)
      return "";
    var b = this.uj;
    if (b === "")
      return "";
    b = hn(a, b);
    if (b === void 0)
      return "";
    if (typeof b === "string")
      return b;
    C2("getCategoryForLinkData found a non-string category for " + a + ": " + b);
  };
  lr.prototype.getLinkCategoryForData = function(a) {
    return this.us(a);
  };
  lr.prototype.tq = function(a, b) {
    if (a !== null) {
      var c = this.uj;
      if (c !== "")
        if (this.yc(a)) {
          var d = hn(a, c);
          d === void 0 && (d = "");
          d !== b && (Ij2(a, c, b), gr(this, "linkCategory", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c));
        } else
          Ij2(a, c, b);
    }
  };
  lr.prototype.setLinkCategoryForData = function(a, b) {
    this.tq(a, b);
  };
  t2 = lr.prototype;
  t2.xm = function(a, b) {
    Z2.prototype.xm.call(this, a, b);
    this.uq(b, this.Eh(a));
  };
  function nr(a, b, c) {
    a.tq(c, a.us(b));
    a.Ov(c, a.Xx(b));
    a.Sv(c, a.$x(b));
    a.Ts(c, a.Bf(b));
    a.Pv(c, a.Yx(b));
    a.Tv(c, a.ay(b));
  }
  t2.dk = function() {
    return true;
  };
  t2.Pi = function() {
    return true;
  };
  t2.Ds = function() {
    return true;
  };
  t2.ek = function() {
    return true;
  };
  na2.Object.defineProperties(lr.prototype, { archetypeNodeData: { get: function() {
    return this.dj;
  }, set: function(a) {
    var b = this.dj;
    b !== a && (this.dj = a, this.g("archetypeNodeData", b, a));
  } }, linkFromKeyProperty: { get: function() {
    return this.af;
  }, set: function(a) {
    var b = this.af;
    b !== a && (this.af = a, this.g("linkFromKeyProperty", b, a));
  } }, linkToKeyProperty: { get: function() {
    return this.bf;
  }, set: function(a) {
    var b = this.bf;
    b !== a && (this.bf = a, this.g("linkToKeyProperty", b, a));
  } }, linkFromPortIdProperty: { get: function() {
    return this.vj;
  }, set: function(a) {
    var b = this.vj;
    b !== a && (this.vj = a, this.g("linkFromPortIdProperty", b, a));
  } }, linkToPortIdProperty: { get: function() {
    return this.wj;
  }, set: function(a) {
    var b = this.wj;
    b !== a && (this.wj = a, this.g("linkToPortIdProperty", b, a));
  } }, linkLabelKeysProperty: { get: function() {
    return this.ce;
  }, set: function(a) {
    var b = this.ce;
    b !== a && (this.ce = a, this.g("linkLabelKeysProperty", b, a));
  } }, linkDataArray: { get: function() {
    return this.Yc;
  }, set: function(a) {
    var b = this.Yc;
    if (b !== a) {
      this.kb.clear();
      for (var c = a.length, d = 0; d < c; d++) {
        var e = a[d];
        za2(e) || C2("GraphLinksModel.linkDataArray must only contain Objects, not: " + e);
        kb2(e);
      }
      this.Yc = a;
      if (this.linkKeyProperty !== "") {
        d = new F2();
        for (e = 0; e < c; e++) {
          var f2 = a[e], g2 = this.qc(f2);
          g2 === void 0 ? d.add(f2) : this.kb.H(g2) !== null ? d.add(f2) : this.kb.add(g2, f2);
        }
        for (d = d.iterator; d.next(); )
          e = d.value, this.Is(e), f2 = this.qc(e), f2 !== void 0 && this.kb.add(f2, e);
      }
      d = new G2();
      for (e = 0; e < c; e++)
        d.add(a[e]);
      this.Vf = d;
      gr(this, "linkDataArray", ge2, "linkDataArray", this, b, a);
      for (b = 0; b < c; b++)
        pr(this, a[b]);
    }
  } }, linkKeyProperty: { get: function() {
    return this.hi;
  }, set: function(a) {
    var b = this.hi;
    if (b !== a) {
      this.hi = a;
      this.kb.clear();
      for (var c = this.linkDataArray.length, d = 0; d < c; d++) {
        var e = this.linkDataArray[d], f2 = this.qc(e);
        f2 === void 0 && (this.Is(e), f2 = this.qc(e));
        f2 !== void 0 && this.kb.add(f2, e);
      }
      this.g("linkKeyProperty", b, a);
    }
  } }, makeUniqueLinkKeyFunction: {
    get: function() {
      return this.ol;
    },
    set: function(a) {
      var b = this.ol;
      b !== a && (this.ol = a, this.g("makeUniqueLinkKeyFunction", b, a));
    }
  }, copyLinkDataFunction: { get: function() {
    return this.Ik;
  }, set: function(a) {
    var b = this.Ik;
    b !== a && (this.Ik = a, this.g("copyLinkDataFunction", b, a));
  } }, nodeIsGroupProperty: { get: function() {
    return this.ul;
  }, set: function(a) {
    var b = this.ul;
    b !== a && (this.ul = a, this.g("nodeIsGroupProperty", b, a));
  } }, nodeGroupKeyProperty: {
    get: function() {
      return this.Ae;
    },
    set: function(a) {
      var b = this.Ae;
      b !== a && (this.Ae = a, this.g("nodeGroupKeyProperty", b, a));
    }
  }, Tj: { get: function() {
    return this.dn;
  }, set: function(a) {
    this.dn !== a && (this.dn = a);
  } }, linkCategoryProperty: { get: function() {
    return this.uj;
  }, set: function(a) {
    var b = this.uj;
    b !== a && (this.uj = a, this.g("linkCategoryProperty", b, a));
  } }, type: { get: function() {
    return "GraphLinksModel";
  } } });
  lr.prototype.setCategoryForLinkData = lr.prototype.tq;
  lr.prototype.getCategoryForLinkData = lr.prototype.us;
  lr.prototype.assignAllDataProperties = lr.prototype.Np;
  lr.prototype.setGroupKeyForNodeData = lr.prototype.uq;
  lr.prototype.getGroupKeyForNodeData = lr.prototype.Eh;
  lr.prototype.isGroupForNodeData = lr.prototype.lv;
  lr.prototype.copyLinkData = lr.prototype.Sp;
  lr.prototype.mergeLinkDataArray = lr.prototype.vA;
  lr.prototype.removeLinkDataCollection = lr.prototype.HA;
  lr.prototype.removeLinkData = lr.prototype.nm;
  lr.prototype.addLinkDataCollection = lr.prototype.az;
  lr.prototype.addLinkData = lr.prototype.Bi;
  lr.prototype.containsLinkData = lr.prototype.yc;
  lr.prototype.makeLinkDataKeyUnique = lr.prototype.Is;
  lr.prototype.findLinkDataForKey = lr.prototype.Dh;
  lr.prototype.setKeyForLinkData = lr.prototype.Ss;
  lr.prototype.getKeyForLinkData = lr.prototype.qc;
  lr.prototype.removeLabelKeyForLinkData = lr.prototype.ty;
  lr.prototype.addLabelKeyForLinkData = lr.prototype.Bu;
  lr.prototype.setLabelKeysForLinkData = lr.prototype.Ts;
  lr.prototype.getLabelKeysForLinkData = lr.prototype.Bf;
  lr.prototype.setToPortIdForLinkData = lr.prototype.Tv;
  lr.prototype.getToPortIdForLinkData = lr.prototype.ay;
  lr.prototype.setFromPortIdForLinkData = lr.prototype.Pv;
  lr.prototype.getFromPortIdForLinkData = lr.prototype.Yx;
  lr.prototype.setToKeyForLinkData = lr.prototype.Sv;
  lr.prototype.getToKeyForLinkData = lr.prototype.$x;
  lr.prototype.setFromKeyForLinkData = lr.prototype.Ov;
  lr.prototype.getFromKeyForLinkData = lr.prototype.Xx;
  lr.prototype.clear = lr.prototype.clear;
  var or = Object.freeze([]);
  lr.className = "GraphLinksModel";
  jr.GraphLinksModel = lr;
  Z2.constructGraphLinksModel = Z2.constructGraphLinksModel = function() {
    return new lr();
  };
  Z2.initDiagramModel = li2 = function() {
    return new lr();
  };
  function qr(a, b) {
    Z2.call(this);
    this.Be = "parent";
    this.fn = false;
    this.Cj = "parentLinkCategory";
    a !== void 0 && (Aa2(a) ? this.nodeDataArray = a : Object.assign(this, a));
    b && Object.assign(this, b);
  }
  ma2(qr, Z2);
  qr.constructGraphLinksModel = Z2.constructGraphLinksModel;
  qr.prototype.cloneProtected = function(a) {
    Z2.prototype.cloneProtected.call(this, a);
    a.Be = this.Be;
    a.fn = this.fn;
    a.Cj = this.Cj;
  };
  t2 = qr.prototype;
  t2.toString = function(a) {
    a === void 0 && (a = 0);
    if (2 <= a)
      return this.vq();
    var b = (this.name !== "" ? this.name : "") + " TreeModel";
    if (0 < a) {
      b += "\n node data:";
      a = this.nodeDataArray;
      for (var c = a.length, d = 0; d < c; d++) {
        var e = a[d];
        b += " " + this.pa(e) + ":" + Ka2(e);
      }
    }
    return b;
  };
  t2.Fm = function() {
    var a = Z2.prototype.Fm.call(this), b = "";
    this.nodeParentKeyProperty !== "parent" && typeof this.nodeParentKeyProperty === "string" && (b += ',\n  "nodeParentKeyProperty": ' + this.quote(this.nodeParentKeyProperty));
    return a + b;
  };
  t2.nq = function(a) {
    Z2.prototype.nq.call(this, a);
    a.nodeParentKeyProperty && (this.nodeParentKeyProperty = a.nodeParentKeyProperty);
  };
  t2.mq = function(a) {
    a.nodeParentKeyProperty !== void 0 && a.nodeParentKeyProperty !== this.nodeParentKeyProperty && C2("applyIncrementalJson cannot change Model properties");
    Z2.prototype.mq.call(this, a);
  };
  t2.hm = function(a) {
    return a;
  };
  t2.Fh = function(a) {
    if (a !== null) {
      var b = this.Be;
      if (b !== "" && (b = hn(a, b), b !== void 0)) {
        if (Jq(b))
          return b;
        C2("ParentKey value for node data " + a + " is not a number or a string: " + b);
      }
    }
  };
  t2.he = function(a, b) {
    b === null && (b = void 0);
    if (a !== null) {
      var c = this.Be;
      if (c !== "")
        if (b = this.hm(b), this.cb(a)) {
          var d = hn(a, c);
          d !== b && (Nq(this, d, a), Ij2(a, c, b), this.Yb(b) === null && Oq(this, b, a), gr(this, "nodeParentKey", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c));
        } else
          Ij2(a, c, b);
    }
  };
  t2.xs = function(a) {
    if (a === null)
      return "";
    var b = this.Cj;
    if (b === "")
      return "";
    b = hn(a, b);
    if (b === void 0)
      return "";
    if (typeof b === "string")
      return b;
    C2("getParentLinkCategoryForNodeData found a non-string category for " + a + ": " + b);
    return "";
  };
  qr.prototype.getLinkCategoryForData = function(a) {
    return this.xs(a);
  };
  qr.prototype.Us = function(a, b) {
    if (a !== null) {
      var c = this.Cj;
      if (c !== "")
        if (this.cb(a)) {
          var d = hn(a, c);
          d === void 0 && (d = "");
          d !== b && (Ij2(a, c, b), gr(this, "parentLinkCategory", ge2, c, a, d, b), typeof c === "string" && this.Fa(a, c));
        } else
          Ij2(a, c, b);
    }
  };
  qr.prototype.setLinkCategoryForData = function(a, b) {
    this.Us(a, b);
  };
  qr.prototype.copyNodeData = function(a) {
    if (a === null)
      return null;
    a = Z2.prototype.copyNodeData.call(this, a);
    this.Uj || this.Be === "" || hn(a, this.Be) === void 0 || Ij2(a, this.Be, void 0);
    return a;
  };
  qr.prototype.setDataProperty = function(a, b, c) {
    if (this.cb(a)) {
      if (b === this.nodeKeyProperty) {
        this.wm(a, c);
        return;
      }
      if (b === this.nodeCategoryProperty) {
        this.vm(a, c);
        return;
      }
      if (b === this.nodeParentKeyProperty) {
        this.he(a, c);
        return;
      }
    }
    var d = hn(a, b);
    d !== c && (Ij2(a, b, c), this.Os(a, b, d, c));
  };
  t2 = qr.prototype;
  t2.rq = function(a, b) {
    Z2.prototype.rq.call(this, a, b);
    for (var c = this.bb.iterator; c.next(); )
      this.Jv(c.value, a, b);
  };
  t2.Jv = function(a, b, c) {
    if (this.Fh(a) === b) {
      var d = this.Be;
      Ij2(a, d, c);
      gr(this, "nodeParentKey", ge2, d, a, b, c);
      typeof d === "string" && this.Fa(a, d);
    }
  };
  t2.rm = function(a) {
    Z2.prototype.rm.call(this, a);
    a = this.pa(a);
    var b = Mq(this, a);
    if (b !== null) {
      var c = Ea2();
      for (b = b.iterator; b.next(); ) {
        var d = b.value;
        if (this.cb(d) && this.Fh(d) === a) {
          var e = this.Be;
          gr(this, "nodeParentKey", ge2, e, d, a, a);
          typeof e === "string" && this.Fa(d, e);
          c.push(d);
        }
      }
      for (b = 0; b < c.length; b++)
        Nq(this, a, c[b]);
      Ia2(c);
    }
  };
  t2.qm = function(a) {
    Z2.prototype.qm.call(this, a);
    var b = this.Fh(a);
    b = this.hm(b);
    this.Yb(b) === null && Oq(this, b, a);
  };
  t2.yq = function(a) {
    Z2.prototype.yq.call(this, a);
    var b = this.Fh(a);
    Nq(this, b, a);
  };
  t2.xm = function(a, b) {
    Z2.prototype.xm.call(this, a, b);
    this.Us(b, this.xs(a));
    this.he(b, this.Fh(a));
  };
  t2.fm = function() {
    return true;
  };
  t2.Ds = function() {
    return true;
  };
  na2.Object.defineProperties(qr.prototype, {
    nodeParentKeyProperty: { get: function() {
      return this.Be;
    }, set: function(a) {
      var b = this.Be;
      b !== a && (this.Be = a, this.g("nodeParentKeyProperty", b, a));
    } },
    Uj: { get: function() {
      return this.fn;
    }, set: function(a) {
      this.fn !== a && (this.fn = a);
    } },
    parentLinkCategoryProperty: { get: function() {
      return this.Cj;
    }, set: function(a) {
      var b = this.Cj;
      b !== a && (this.Cj = a, this.g("parentLinkCategoryProperty", b, a));
    } },
    linkCategoryProperty: { get: function() {
      return this.parentLinkCategoryProperty;
    }, set: function(a) {
      this.parentLinkCategoryProperty = a;
    } },
    type: { get: function() {
      return "TreeModel";
    } }
  });
  qr.prototype.setParentLinkCategoryForNodeData = qr.prototype.Us;
  qr.prototype.getParentLinkCategoryForNodeData = qr.prototype.xs;
  qr.prototype.setParentKeyForNodeData = qr.prototype.he;
  qr.prototype.getParentKeyForNodeData = qr.prototype.Fh;
  qr.className = "TreeModel";
  jr.TreeModel = qr;
  function rr(a) {
    ni2.call(this);
    this.Ow = this.tn = this.bc = 0;
    this.Xq = 360;
    this.Nw = sr;
    this.hj = 0;
    this.Cw = new K2();
    this.Oq = this.de = 0;
    this.fs = new tr();
    this.zt = this.Bj = 0;
    this.Ry = 600;
    this.So = NaN;
    this.Tm = 1;
    this.vp = 0;
    this.Nl = 360;
    this.Ib = sr;
    this.K = ur;
    this.$c = vr;
    this.Sc = kq;
    this.jf = 6;
    this.Co = wr;
    a && Object.assign(this, a);
  }
  ma2(rr, ni2);
  rr.prototype.cloneProtected = function(a) {
    ni2.prototype.cloneProtected.call(this, a);
    a.So = this.So;
    a.Tm = this.Tm;
    a.vp = this.vp;
    a.Nl = this.Nl;
    a.Ib = this.Ib;
    a.K = this.K;
    a.$c = this.$c;
    a.Sc = this.Sc;
    a.jf = this.jf;
    a.Co = this.Co;
  };
  rr.prototype.gb = function(a) {
    if (a.classType === rr)
      if (a === xr || a === yr || a === zr || a === Ar || a === vr)
        this.sorting = a;
      else if (a === Br || a === Cr || a === ur || a === Dr)
        this.direction = a;
      else if (a === Er || a === Fr || a === sr || a === Gr)
        this.arrangement = a;
      else {
        if (a === Hr || a === wr)
          this.nodeDiameterFormula = a;
      }
    else
      ni2.prototype.gb.call(this, a);
  };
  rr.prototype.createNetwork = function() {
    return new Ir(this);
  };
  rr.prototype.doLayout = function(a) {
    this.network === null && (this.network = this.makeNetwork(a));
    this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
    a = this.network.vertexes;
    if (1 >= a.count)
      a.count === 1 && (a = a.first(), a.centerX = 0, a.centerY = 0);
    else {
      var b = new F2();
      b.addAll(a.iterator);
      a = new F2();
      var c = new F2();
      var d = this.sort(b);
      var e, f2, g2 = this.Oq;
      var h = this.arrangement;
      var k = this.nodeDiameterFormula;
      var l2 = this.radius;
      if (!isFinite(l2) || 0 >= l2)
        l2 = NaN;
      var m2 = this.aspectRatio;
      if (!isFinite(m2) || 0 >= m2)
        m2 = 1;
      var n2 = this.startAngle;
      isFinite(n2) || (n2 = 0);
      var p2 = this.sweepAngle;
      if (!isFinite(p2) || 360 < p2 || 1 > p2)
        p2 = 360;
      b = this.spacing;
      isFinite(b) || (b = NaN);
      h === Gr && k === Hr ? h = sr : h === Gr && k !== Hr && (h = this.arrangement);
      if ((this.direction === Br || this.direction === Cr) && this.sorting !== vr) {
        for (k = 0; !(k >= d.length); k += 2) {
          a.add(d.J(k));
          if (k + 1 >= d.length)
            break;
          c.add(d.J(k + 1));
        }
        this.direction === Br ? (this.arrangement === Gr && a.reverse(), d = new F2(), d.addAll(a), d.addAll(c)) : (this.arrangement === Gr && c.reverse(), d = new F2(), d.addAll(c), d.addAll(a));
      }
      k = d.length;
      for (var r2 = f2 = e = 0; r2 < d.length; r2++) {
        var q2 = n2 + p2 * f2 * (this.direction === ur ? 1 : -1) / k, u2 = d.J(r2).diameter;
        isNaN(u2) && (u2 = Jr(d.J(r2), q2));
        360 > p2 && (r2 === 0 || r2 === d.length - 1) && (u2 /= 2);
        e += u2;
        f2++;
      }
      if (isNaN(l2) || h === Gr) {
        isNaN(b) && (b = 6);
        if (h !== sr && h !== Gr) {
          f2 = -Infinity;
          for (g2 = 0; g2 < k; g2++)
            r2 = d.J(g2), e = d.J(g2 === k - 1 ? 0 : g2 + 1), isNaN(r2.diameter) && Jr(r2, 0), isNaN(e.diameter) && Jr(e, 0), f2 = Math.max(f2, (r2.diameter + e.diameter) / 2);
          g2 = f2 + b;
          h === Er ? l2 = (f2 + b) / (2 * Math.PI / k) : l2 = Kr(this, g2 * (360 <= p2 ? k : k - 1), m2, n2 * Math.PI / 180, p2 * Math.PI / 180);
        } else
          l2 = Kr(this, e + (360 <= p2 ? k : k - 1) * (h !== Gr ? b : 1.6 * b), m2, n2 * Math.PI / 180, p2 * Math.PI / 180);
        f2 = l2 * m2;
      } else if (f2 = l2 * m2, r2 = Lr(this, l2, f2, n2 * Math.PI / 180, p2 * Math.PI / 180), isNaN(b)) {
        if (h === sr || h === Gr)
          b = (r2 - e) / (360 <= p2 ? k : k - 1);
      } else if (h === sr || h === Gr)
        r2 = (r2 - e) / (360 <= p2 ? k : k - 1), r2 < b ? (l2 = Kr(this, e + b * (360 <= p2 ? k : k - 1), m2, n2 * Math.PI / 180, p2 * Math.PI / 180), f2 = l2 * m2) : b = r2;
      else {
        g2 = -Infinity;
        for (e = 0; e < k; e++)
          q2 = d.J(e), u2 = d.J(e === k - 1 ? 0 : e + 1), isNaN(q2.diameter) && Jr(q2, 0), isNaN(u2.diameter) && Jr(u2, 0), g2 = Math.max(g2, (q2.diameter + u2.diameter) / 2);
        g2 += b;
        e = Kr(this, g2 * (360 <= p2 ? k : k - 1), m2, n2 * Math.PI / 180, p2 * Math.PI / 180);
        e > l2 ? (l2 = e, f2 = l2 * m2) : g2 = r2 / (360 <= p2 ? k : k - 1);
      }
      this.Nw = h;
      this.bc = l2;
      this.tn = m2;
      this.Ow = n2;
      this.Xq = p2;
      this.hj = b;
      this.de = f2;
      this.Oq = g2;
      b = d;
      d = this.Nw;
      h = this.bc;
      l2 = this.Ow;
      m2 = this.Xq;
      n2 = this.hj;
      p2 = this.de;
      k = this.Oq;
      if (this.direction !== Br && this.direction !== Cr || d !== Gr)
        if (this.direction === Br || this.direction === Cr) {
          g2 = 0;
          switch (d) {
            case Fr:
              g2 = 180 * Mr(this, h, p2, l2, k) / Math.PI;
              break;
            case sr:
              k = b = 0;
              g2 = a.first();
              g2 !== null && (b = Jr(g2, Math.PI / 2));
              g2 = c.first();
              g2 !== null && (k = Jr(g2, Math.PI / 2));
              g2 = 180 * Mr(this, h, p2, l2, n2 + (b + k) / 2) / Math.PI;
              break;
            case Er:
              g2 = m2 / b.length;
          }
          if (this.direction === Br) {
            switch (d) {
              case Fr:
                Nr(this, a, l2, Dr);
                break;
              case sr:
                Or(this, a, l2, Dr);
                break;
              case Er:
                Pr(this, a, m2 / 2, l2, Dr);
            }
            switch (d) {
              case Fr:
                Nr(this, c, l2 + g2, ur);
                break;
              case sr:
                Or(this, c, l2 + g2, ur);
                break;
              case Er:
                Pr(this, c, m2 / 2, l2 + g2, ur);
            }
          } else {
            switch (d) {
              case Fr:
                Nr(this, c, l2, Dr);
                break;
              case sr:
                Or(this, c, l2, Dr);
                break;
              case Er:
                Pr(this, c, m2 / 2, l2, Dr);
            }
            switch (d) {
              case Fr:
                Nr(this, a, l2 + g2, ur);
                break;
              case sr:
                Or(this, a, l2 + g2, ur);
                break;
              case Er:
                Pr(this, a, m2 / 2, l2 + g2, ur);
            }
          }
        } else
          switch (d) {
            case Fr:
              Nr(this, b, l2, this.direction);
              break;
            case sr:
              Or(this, b, l2, this.direction);
              break;
            case Er:
              Pr(this, b, m2, l2, this.direction);
              break;
            case Gr:
              Qr(this, b, m2, l2, this.direction);
          }
      else
        Qr(this, b, m2, l2 - m2 / 2, ur);
    }
    this.updateParts();
    this.network = null;
    this.isValidLayout = true;
  };
  function Pr(a, b, c, d, e) {
    var f2 = a.Xq, g2 = a.bc;
    a = a.de;
    d = d * Math.PI / 180;
    c = c * Math.PI / 180;
    for (var h = b.length, k = 0; k < h; k++) {
      var l2 = d + (e === ur ? k * c / (360 <= f2 ? h : h - 1) : -(k * c) / h), m2 = b.J(k), n2 = g2 * Math.tan(l2) / a;
      n2 = Math.sqrt((g2 * g2 + a * a * n2 * n2) / (1 + n2 * n2));
      m2.centerX = n2 * Math.cos(l2);
      m2.centerY = n2 * Math.sin(l2);
      m2.actualAngle = 180 * l2 / Math.PI;
    }
  }
  function Or(a, b, c, d) {
    var e = a.bc, f2 = a.de, g2 = a.hj;
    c = c * Math.PI / 180;
    for (var h = b.length, k = 0; k < h; k++) {
      var l2 = b.J(k), m2 = b.J(k === h - 1 ? 0 : k + 1), n2 = f2 * Math.sin(c);
      l2.centerX = e * Math.cos(c);
      l2.centerY = n2;
      l2.actualAngle = 180 * c / Math.PI;
      isNaN(l2.diameter) && Jr(l2, 0);
      isNaN(m2.diameter) && Jr(m2, 0);
      l2 = Mr(a, e, f2, d === ur ? c : -c, (l2.diameter + m2.diameter) / 2 + g2);
      c += d === ur ? l2 : -l2;
    }
  }
  function Nr(a, b, c, d) {
    var e = a.bc, f2 = a.de, g2 = a.Oq;
    c = c * Math.PI / 180;
    for (var h = b.length, k = 0; k < h; k++) {
      var l2 = b.J(k);
      l2.centerX = e * Math.cos(c);
      l2.centerY = f2 * Math.sin(c);
      l2.actualAngle = 180 * c / Math.PI;
      l2 = Mr(a, e, f2, d === ur ? c : -c, g2);
      c += d === ur ? l2 : -l2;
    }
  }
  function Qr(a, b, c, d, e) {
    var f2 = a.Xq;
    a.Bj = 0;
    a.fs = new tr();
    if (360 > c) {
      for (f2 = d + (e === ur ? f2 : -f2); 0 > f2; )
        f2 += 360;
      f2 %= 360;
      180 < f2 && (f2 -= 360);
      f2 *= Math.PI / 180;
      a.zt = f2;
      Rr(a, b, c, d, e);
    } else
      Sr(a, b, c, d, e);
    a.fs.commit(b);
  }
  function Sr(a, b, c, d, e) {
    var f2 = a.bc, g2 = a.hj, h = a.tn, k = f2 * Math.cos(d * Math.PI / 180), l2 = a.de * Math.sin(d * Math.PI / 180), m2 = b.ya();
    if (m2.length === 3)
      m2[0].centerX = f2, m2[0].centerY = 0, m2[1].centerX = m2[0].centerX - m2[0].width / 2 - m2[1].width / 2 - g2, m2[1].y = m2[0].y, m2[2].centerX = (m2[0].centerX + m2[1].centerX) / 2, m2[2].y = m2[0].y - m2[2].height - g2;
    else if (m2.length === 4)
      m2[0].centerX = f2, m2[0].centerY = 0, m2[2].centerX = -m2[0].centerX, m2[2].centerY = m2[0].centerY, m2[1].centerX = 0, m2[1].y = Math.min(m2[0].y, m2[2].y) - m2[1].height - g2, m2[3].centerX = 0, m2[3].y = Math.max(m2[0].y + m2[0].height + g2, m2[2].y + m2[2].height + g2);
    else {
      f2 = K2.alloc();
      for (var n2 = 0; n2 < m2.length; n2++) {
        m2[n2].centerX = k;
        m2[n2].centerY = l2;
        if (n2 >= m2.length - 1)
          break;
        Tr(a, k, l2, m2, n2, e, f2) || Ur(a, k, l2, m2, n2, e, f2);
        k = f2.x;
        l2 = f2.y;
      }
      K2.free(f2);
      a.Bj++;
      if (!(23 < a.Bj)) {
        k = m2[0].centerX;
        l2 = m2[0].centerY;
        f2 = m2[m2.length - 1].centerX;
        n2 = m2[m2.length - 1].centerY;
        var p2 = Math.abs(k - f2) - ((m2[0].width + m2[m2.length - 1].width) / 2 + g2), r2 = Math.abs(l2 - n2) - ((m2[0].height + m2[m2.length - 1].height) / 2 + g2);
        g2 = 0;
        1 > Math.abs(r2) ? Math.abs(k - f2) < (m2[0].width + m2[m2.length - 1].width) / 2 && (g2 = 0) : g2 = 0 < r2 ? r2 : 1 > Math.abs(p2) ? 0 : p2;
        k = Math.abs(f2) > Math.abs(n2) ? 0 < f2 !== l2 > n2 : 0 < n2 !== k < f2;
        if (k = e === ur ? k : !k)
          g2 = -Math.abs(g2), g2 = Math.min(g2, -m2[m2.length - 1].width), g2 = Math.min(g2, -m2[m2.length - 1].height);
        a.fs.compare(g2, m2);
        1 < Math.abs(g2) && (a.bc = 8 > a.Bj ? a.bc - g2 / (2 * Math.PI) : 5 > m2.length && 10 < g2 ? a.bc / 2 : a.bc - (0 < g2 ? 1.7 : -2.3), a.de = a.bc * h, Sr(a, b, c, d, e));
      }
    }
  }
  function Rr(a, b, c, d, e) {
    for (var f2 = a.bc, g2 = a.de, h = a.tn, k = f2 * Math.cos(d * Math.PI / 180), l2 = g2 * Math.sin(d * Math.PI / 180), m2 = K2.alloc(), n2 = b.ya(), p2 = 0; p2 < n2.length; p2++) {
      n2[p2].centerX = k;
      n2[p2].centerY = l2;
      if (p2 >= n2.length - 1)
        break;
      Tr(a, k, l2, n2, p2, e, m2) || Ur(a, k, l2, n2, p2, e, m2);
      k = m2.x;
      l2 = m2.y;
    }
    K2.free(m2);
    a.Bj++;
    if (!(23 < a.Bj)) {
      k = Math.atan2(l2, k);
      k = e === ur ? a.zt - k : k - a.zt;
      k = Math.abs(k) < Math.abs(k - 2 * Math.PI) ? k : k - 2 * Math.PI;
      f2 = k * (f2 + g2) / 2;
      g2 = a.fs;
      if (Math.abs(f2) < Math.abs(g2.bm))
        for (g2.bm = f2, g2.sk = [], g2.Hm = [], k = 0; k < n2.length; k++)
          g2.sk[k] = n2[k].bounds.x, g2.Hm[k] = n2[k].bounds.y;
      1 < Math.abs(f2) && (a.bc = 8 > a.Bj ? a.bc - f2 / (2 * Math.PI) : a.bc - (0 < f2 ? 1.7 : -2.3), a.de = a.bc * h, Rr(a, b, c, d, e));
    }
  }
  function Tr(a, b, c, d, e, f2, g2) {
    var h = a.bc, k = a.de, l2 = 0;
    a = (d[e].width + d[e + 1].width) / 2 + a.hj;
    var m2 = false;
    if (0 <= c !== (f2 === ur)) {
      if (f2 = b + a, f2 > h) {
        f2 = b - a;
        if (f2 < -h)
          return g2.x = f2, g2.y = l2, false;
        m2 = true;
      }
    } else if (f2 = b - a, f2 < -h) {
      f2 = b + a;
      if (f2 > h)
        return g2.x = f2, g2.y = l2, false;
      m2 = true;
    }
    l2 = Math.sqrt(1 - Math.min(1, f2 * f2 / (h * h))) * k;
    0 > c !== m2 && (l2 = -l2);
    if (Math.abs(c - l2) > (d[e].height + d[e + 1].height) / 2)
      return g2.x = f2, g2.y = l2, false;
    g2.x = f2;
    g2.y = l2;
    return true;
  }
  function Ur(a, b, c, d, e, f2, g2) {
    var h = a.bc, k = a.de, l2 = 0;
    a = (d[e].height + d[e + 1].height) / 2 + a.hj;
    d = false;
    if (0 <= b !== (f2 === ur)) {
      if (f2 = c - a, f2 < -k) {
        f2 = c + a;
        if (f2 > k) {
          g2.x = l2;
          g2.y = f2;
          return;
        }
        d = true;
      }
    } else if (f2 = c + a, f2 > k) {
      f2 = c - a;
      if (f2 < -k) {
        g2.x = l2;
        g2.y = f2;
        return;
      }
      d = true;
    }
    l2 = Math.sqrt(1 - Math.min(1, f2 * f2 / (k * k))) * h;
    0 > b !== d && (l2 = -l2);
    g2.x = l2;
    g2.y = f2;
  }
  rr.prototype.commitLayout = function() {
    this.commitNodes();
    this.isRouting && this.commitLinks();
  };
  rr.prototype.commitNodes = function() {
    var a = this.group !== null && this.group.placeholder !== null && this.group.isSubGraphExpanded, b = a ? this.group.location.copy() : null, c = this.actualCenter;
    a ? c = new K2(0, 0) : (c.x = this.arrangementOrigin.x + this.bc, c.y = this.arrangementOrigin.y + this.de);
    for (var d = this.network.vertexes.iterator; d.next(); ) {
      var e = d.value;
      e.x += c.x;
      e.y += c.y;
      e.commit();
    }
    a && (this.group.Ta(), a = this.group.position.copy(), c = this.group.location.copy(), b = b.ie(c.ie(a)), this.group.move(b), this.Cw = b.ie(a));
  };
  rr.prototype.commitLinks = function() {
    for (var a = this.network.edges.iterator; a.next(); )
      a.value.commit();
  };
  function Lr(a, b, c, d, e) {
    var f2 = a.Ry;
    if (1e-3 > Math.abs(a.tn - 1))
      return d !== void 0 && e !== void 0 ? e * b : 2 * Math.PI * b;
    a = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c;
    var g2 = 0;
    var h = d !== void 0 && e !== void 0 ? e / (f2 + 1) : Math.PI / (2 * (f2 + 1));
    for (var k = 0, l2 = 0; l2 <= f2; l2++) {
      d !== void 0 && e !== void 0 ? k = d + l2 * e / f2 : k = l2 * Math.PI / (2 * f2);
      var m2 = Math.sin(k);
      g2 += Math.sqrt(1 - a * a * m2 * m2) * h;
    }
    return d !== void 0 && e !== void 0 ? (b > c ? b : c) * g2 : 4 * (b > c ? b : c) * g2;
  }
  function Kr(a, b, c, d, e) {
    return b / (d !== void 0 && e !== void 0 ? Lr(a, 1, c, d, e) : Lr(a, 1, c));
  }
  function Mr(a, b, c, d, e) {
    if (1e-3 > Math.abs(a.tn - 1))
      return e / b;
    var f2 = b > c ? Math.sqrt(b * b - c * c) / b : Math.sqrt(c * c - b * b) / c, g2 = 0;
    a = 2 * Math.PI / (700 * a.network.vertexes.count);
    b > c && (d += Math.PI / 2);
    for (var h = 0; ; h++) {
      var k = Math.sin(d + h * a);
      g2 += (b > c ? b : c) * Math.sqrt(1 - f2 * f2 * k * k) * a;
      if (g2 >= e)
        return h * a;
    }
  }
  rr.prototype.sort = function(a) {
    switch (this.sorting) {
      case zr:
        break;
      case Ar:
        a.reverse();
        break;
      case xr:
        a.sort(this.comparer);
        break;
      case yr:
        a.sort(this.comparer);
        a.reverse();
        break;
      case vr:
        return this.Ns(Vr(a));
      default:
        C2("Invalid sorting type.");
    }
    return a;
  };
  function Vr(a) {
    for (var b = [], c = 0; c < a.length; c++)
      b.push(0);
    c = new F2();
    for (var d = 0; d < a.length; d++) {
      var e = -1, f2 = -1;
      if (d === 0)
        for (var g2 = 0; g2 < a.length; g2++) {
          var h = a.J(g2).edgesCount;
          h > e && (e = h, f2 = g2);
        }
      else
        for (g2 = 0; g2 < a.length; g2++)
          h = b[g2], h > e && (e = h, f2 = g2);
      c.add(a.J(f2));
      b[f2] = -1;
      f2 = a.J(f2);
      for (g2 = f2.sourceEdges; g2.next(); )
        e = a.indexOf(g2.value.fromVertex), 0 > e || 0 <= b[e] && b[e]++;
      for (f2 = f2.destinationEdges; f2.next(); )
        e = a.indexOf(f2.value.toVertex), 0 > e || 0 <= b[e] && b[e]++;
    }
    return c;
  }
  rr.prototype.Ns = function(a) {
    for (var b = [], c = 0; c < a.length; c++) {
      var d = a.J(c);
      b[c] = [];
      for (var e, f2 = d.destinationEdges; f2.next(); )
        e = a.indexOf(f2.value.toVertex), e !== c && 0 > b[c].indexOf(e) && b[c].push(e);
      for (d = d.sourceEdges; d.next(); )
        e = a.indexOf(d.value.fromVertex), e !== c && 0 > b[c].indexOf(e) && b[c].push(e);
    }
    f2 = [];
    for (c = 0; c < b.length; c++)
      f2[c] = 0;
    c = [];
    var g2 = [], h = [];
    d = [];
    e = new F2();
    for (var k = 0, l2 = 0; l2 < b.length; l2++) {
      var m2 = b[l2].length;
      if (m2 === 1)
        d.push(l2);
      else if (m2 === 0)
        e.add(a.J(l2));
      else {
        if (k === 0)
          c.push(l2);
        else {
          for (var n2 = m2 = Infinity, p2 = -1, r2 = [], q2 = 0; q2 < c.length; q2++)
            0 > b[c[q2]].indexOf(c[q2 === c.length - 1 ? 0 : q2 + 1]) && r2.push(q2 === c.length - 1 ? 0 : q2 + 1);
          if (r2.length === 0)
            for (q2 = 0; q2 < c.length; q2++)
              r2.push(q2);
          for (q2 = 0; q2 < r2.length; q2++) {
            for (var u2 = r2[q2], w = b[l2], v2 = 0, z2 = 0; z2 < g2.length; z2++) {
              var y2 = f2[g2[z2]], B2 = f2[h[z2]];
              if (y2 < B2) {
                var A2 = y2;
                y2 = B2;
              } else
                A2 = B2;
              if (A2 < u2 && u2 <= y2)
                for (B2 = 0; B2 < w.length; B2++) {
                  var E = w[B2];
                  0 > c.indexOf(E) || A2 < f2[E] && f2[E] < y2 || A2 === f2[E] || y2 === f2[E] || v2++;
                }
              else
                for (B2 = 0; B2 < w.length; B2++)
                  E = w[B2], 0 > c.indexOf(E) || A2 < f2[E] && f2[E] < y2 && A2 !== f2[E] && y2 !== f2[E] && v2++;
            }
            w = v2;
            for (z2 = v2 = 0; z2 < b[l2].length; z2++)
              A2 = c.indexOf(b[l2][z2]), 0 <= A2 && (A2 = Math.abs(u2 - (A2 >= u2 ? A2 + 1 : A2)), v2 += A2 < c.length + 1 - A2 ? A2 : c.length + 1 - A2);
            for (z2 = 0; z2 < g2.length; z2++)
              A2 = f2[g2[z2]], y2 = f2[h[z2]], A2 >= u2 && A2++, y2 >= u2 && y2++, A2 > y2 && (B2 = y2, y2 = A2, A2 = B2), y2 - A2 < (c.length + 2) / 2 === (A2 < u2 && u2 <= y2) && v2++;
            if (w < m2 || w === m2 && v2 < n2)
              m2 = w, n2 = v2, p2 = u2;
          }
          c.splice(p2, 0, l2);
          for (m2 = 0; m2 < c.length; m2++)
            f2[c[m2]] = m2;
          for (m2 = 0; m2 < b[l2].length; m2++)
            n2 = b[l2][m2], 0 <= c.indexOf(n2) && (g2.push(l2), h.push(n2));
        }
        k++;
      }
    }
    for (g2 = c.length; ; ) {
      f2 = true;
      for (h = 0; h < d.length; h++)
        if (k = d[h], l2 = b[k][0], m2 = c.indexOf(l2), 0 <= m2) {
          for (p2 = n2 = 0; p2 < b[l2].length; p2++)
            r2 = c.indexOf(b[l2][p2]), 0 > r2 || r2 === m2 || (q2 = r2 > m2 ? r2 - m2 : m2 - r2, n2 += r2 < m2 !== q2 > g2 - q2 ? 1 : -1);
          c.splice(0 > n2 ? m2 : m2 + 1, 0, k);
          d.splice(h, 1);
          h--;
        } else
          f2 = false;
      if (f2)
        break;
      else
        c.push(d[0]), d.splice(0, 1);
    }
    for (b = 0; b < c.length; b++)
      e.add(a.J(c[b]));
    return e;
  };
  na2.Object.defineProperties(rr.prototype, {
    radius: { get: function() {
      return this.So;
    }, set: function(a) {
      this.So !== a && (0 < a || isNaN(a)) && (this.So = a, this.B());
    } },
    aspectRatio: { get: function() {
      return this.Tm;
    }, set: function(a) {
      this.Tm !== a && 0 < a && (this.Tm = a, this.B());
    } },
    startAngle: { get: function() {
      return this.vp;
    }, set: function(a) {
      this.vp !== a && (this.vp = a, this.B());
    } },
    sweepAngle: {
      get: function() {
        return this.Nl;
      },
      set: function(a) {
        this.Nl !== a && (0 < a && 360 >= a ? this.Nl = a : this.Nl = 360, this.B());
      }
    },
    arrangement: { get: function() {
      return this.Ib;
    }, set: function(a) {
      this.Ib === a || a !== Gr && a !== sr && a !== Fr && a !== Er || (this.Ib = a, this.B());
    } },
    direction: { get: function() {
      return this.K;
    }, set: function(a) {
      this.K === a || a !== ur && a !== Dr && a !== Br && a !== Cr || (this.K = a, this.B());
    } },
    sorting: { get: function() {
      return this.$c;
    }, set: function(a) {
      this.$c === a || a !== zr && a !== Ar && a !== xr && !yr && a !== vr || (this.$c = a, this.B());
    } },
    comparer: { get: function() {
      return this.Sc;
    }, set: function(a) {
      this.Sc !== a && (this.Sc = a, this.B());
    } },
    spacing: { get: function() {
      return this.jf;
    }, set: function(a) {
      this.jf !== a && (this.jf = a, this.B());
    } },
    nodeDiameterFormula: { get: function() {
      return this.Co;
    }, set: function(a) {
      this.Co === a || a !== wr && a !== Hr || (this.Co = a, this.B());
    } },
    actualXRadius: { get: function() {
      return this.bc;
    } },
    actualYRadius: { get: function() {
      return this.de;
    } },
    actualSpacing: { get: function() {
      return this.hj;
    } },
    actualCenter: { get: function() {
      return this.Cw;
    } }
  });
  var sr = new D2(rr, "ConstantSpacing", 0), Fr = new D2(rr, "ConstantDistance", 1), Er = new D2(rr, "ConstantAngle", 2), Gr = new D2(rr, "Packed", 3), ur = new D2(rr, "Clockwise", 4), Dr = new D2(rr, "Counterclockwise", 5), Br = new D2(rr, "BidirectionalLeft", 6), Cr = new D2(rr, "BidirectionalRight", 7), zr = new D2(rr, "Forwards", 8), Ar = new D2(rr, "Reverse", 9), xr = new D2(rr, "Ascending", 10), yr = new D2(rr, "Descending", 11), vr = new D2(rr, "Optimized", 12), wr = new D2(rr, "Pythagorean", 13), Hr = new D2(rr, "Circular", 14);
  rr.className = "CircularLayout";
  rr.ConstantSpacing = sr;
  rr.ConstantDistance = Fr;
  rr.ConstantAngle = Er;
  rr.Packed = Gr;
  rr.Clockwise = ur;
  rr.Counterclockwise = Dr;
  rr.BidirectionalLeft = Br;
  rr.BidirectionalRight = Cr;
  rr.Forwards = zr;
  rr.Reverse = Ar;
  rr.Ascending = xr;
  rr.Descending = yr;
  rr.Optimized = vr;
  rr.Pythagorean = wr;
  rr.Circular = Hr;
  function tr() {
    this.bm = -Infinity;
    this.Hm = this.sk = null;
  }
  tr.prototype.compare = function(a, b) {
    if (0 < a && 0 > this.bm || Math.abs(a) < Math.abs(this.bm) && !(0 > a && 0 < this.bm))
      for (this.bm = a, this.sk = [], this.Hm = [], a = 0; a < b.length; a++)
        this.sk[a] = b[a].bounds.x, this.Hm[a] = b[a].bounds.y;
  };
  tr.prototype.commit = function(a) {
    if (this.sk !== null && this.Hm !== null)
      for (var b = 0; b < this.sk.length; b++) {
        var c = a.J(b);
        c.x = this.sk[b];
        c.y = this.Hm[b];
      }
  };
  tr.className = "VertexArrangement";
  function Ir(a) {
    Qp.call(this, a);
  }
  ma2(Ir, Qp);
  Ir.prototype.createVertex = function() {
    return new Wr(this);
  };
  Ir.prototype.createEdge = function() {
    return new Xr(this);
  };
  Ir.className = "CircularNetwork";
  function Wr(a) {
    dq.call(this, a);
    this.C = this.gj = NaN;
  }
  ma2(Wr, dq);
  function Jr(a, b) {
    var c = a.network;
    if (c === null)
      return NaN;
    c = c.layout;
    if (c === null)
      return NaN;
    if (c.arrangement === Gr)
      if (c.nodeDiameterFormula === Hr)
        a.gj = Math.max(a.width, a.height);
      else {
        c = Math.abs(Math.sin(b));
        b = Math.abs(Math.cos(b));
        if (c === 0)
          return a.width;
        if (b === 0)
          return a.height;
        a.gj = Math.min(a.height / c, a.width / b);
      }
    else
      a.gj = c.nodeDiameterFormula === Hr ? Math.max(a.width, a.height) : Math.sqrt(a.width * a.width + a.height * a.height);
    return a.gj;
  }
  na2.Object.defineProperties(Wr.prototype, { diameter: { get: function() {
    return this.gj;
  }, set: function(a) {
    this.gj !== a && (this.gj = a);
  } }, actualAngle: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C !== a && (this.C = a);
  } } });
  Wr.className = "CircularVertex";
  function Xr(a) {
    eq.call(this, a);
  }
  ma2(Xr, eq);
  Xr.className = "CircularEdge";
  function Yr(a) {
    ni2.call(this);
    this.wh = null;
    this.bo = 0;
    this.Rd = new Gb2(100, 100).freeze();
    this.Sm = false;
    this.hf = true;
    this.jd = false;
    this.pl = 100;
    this.wn = 1;
    this.Tf = 1e3;
    this.xo = 10;
    this.To = Math;
    this.Pk = 0.05;
    this.Ok = 50;
    this.Mk = 150;
    this.Nk = 0;
    this.on = 10;
    this.nn = 5;
    a && Object.assign(this, a);
  }
  ma2(Yr, ni2);
  Yr.prototype.cloneProtected = function(a) {
    ni2.prototype.cloneProtected.call(this, a);
    a.Rd.assign(this.Rd);
    a.Sm = this.Sm;
    a.hf = this.hf;
    a.jd = this.jd;
    a.pl = this.pl;
    a.wn = this.wn;
    a.Tf = this.Tf;
    a.xo = this.xo;
    a.To = this.To;
    a.Pk = this.Pk;
    a.Ok = this.Ok;
    a.Mk = this.Mk;
    a.Nk = this.Nk;
    a.on = this.on;
    a.nn = this.nn;
  };
  Yr.prototype.serializeLayoutProperties = function(a, b) {
    ni2.prototype.serializeLayoutProperties.call(this, a, b);
    a.arrangementSpacing = { width: this.arrangementSpacing.width, height: this.arrangementSpacing.height };
    a.arrangesToOrigin = this.arrangesToOrigin;
    a.setsPortSpots = this.setsPortSpots;
    a.comments = this.comments;
    a.maxIterations = this.maxIterations;
    a.epsilonDistance = this.epsilonDistance;
    a.infinityDistance = this.infinityDistance;
    a.moveLimit = this.moveLimit;
    a.defaultSpringStiffness = this.defaultSpringStiffness;
    a.defaultSpringLength = this.defaultSpringLength;
    a.defaultElectricalCharge = this.defaultElectricalCharge;
    a.defaultGravitationalMass = this.defaultGravitationalMass;
    a.defaultCommentSpringLength = this.defaultCommentSpringLength;
    a.defaultCommentElectricalCharge = this.defaultCommentElectricalCharge;
  };
  Yr.prototype.deserializeLayoutProperties = function(a, b, c, d, e) {
    ni2.prototype.deserializeLayoutProperties.call(this, a, b, c, d, e);
    this.arrangementSpacing = new Gb2(a.arrangementSpacing.width, a.arrangementSpacing.height);
    this.arrangesToOrigin = a.arrangesToOrigin;
    this.setsPortSpots = a.setsPortSpots;
    this.comments = a.comments;
    this.maxIterations = a.maxIterations;
    this.epsilonDistance = a.epsilonDistance;
    this.infinityDistance = a.infinityDistance;
    this.moveLimit = a.moveLimit;
    this.defaultSpringStiffness = a.defaultSpringStiffness;
    this.defaultSpringLength = a.defaultSpringLength;
    this.defaultElectricalCharge = a.defaultElectricalCharge;
    this.defaultGravitationalMass = a.defaultGravitationalMass;
    this.defaultCommentSpringLength = a.defaultCommentSpringLength;
    this.defaultCommentElectricalCharge = a.defaultCommentElectricalCharge;
  };
  Yr.prototype.createNetwork = function() {
    return new Zr(this);
  };
  Yr.prototype.doLayout = function(a) {
    this.network === null && (this.network = this.makeNetwork(a));
    if (!this.dw()) {
      a = this.maxIterations;
      if (0 < this.network.vertexes.count) {
        this.network.Tp();
        for (var b = this.network.vertexes.iterator; b.next(); ) {
          var c = b.value;
          c.charge = this.electricalCharge(c);
          c.mass = this.gravitationalMass(c);
        }
        for (b = this.network.edges.iterator; b.next(); )
          c = b.value, c.stiffness = this.springStiffness(c), c.length = this.springLength(c);
        this.Du();
        this.bo = 0;
        if (this.needsClusterLayout()) {
          b = this.network;
          c = b.Ey();
          for (var d = c.iterator; d.next(); ) {
            this.network = d.value;
            for (var e = this.network.vertexes.iterator; e.next(); ) {
              var f2 = e.value;
              f2.Kd = f2.vertexes.count;
              f2.Kh = 1;
              f2.Sj = null;
              f2.Me = null;
            }
            $r(this, 0, a);
          }
          this.network = b;
          var g2 = d = c.iterator;
          d = this.arrangementSpacing;
          var h = g2.count, k = true;
          f2 = e = 0;
          for (var l2 = Ea2(), m2 = 0; m2 < h + b.vertexes.count + 2; m2++)
            l2[m2] = null;
          h = 0;
          g2.reset();
          for (var n2 = N2.alloc(); g2.next(); )
            if (m2 = g2.value, this.computeBounds(m2, n2), k)
              k = false, e = n2.x + n2.width / 2, f2 = n2.y + n2.height / 2, l2[0] = new K2(n2.x + n2.width + d.width, n2.y), l2[1] = new K2(n2.x, n2.y + n2.height + d.height), h = 2;
            else {
              var p2 = as(l2, h, e, f2, n2.width, n2.height, d), r2 = l2[p2], q2 = new K2(r2.x + n2.width + d.width, r2.y), u2 = new K2(r2.x, r2.y + n2.height + d.height);
              p2 + 1 < h && l2.splice(p2 + 1, 0, null);
              l2[p2] = q2;
              l2[p2 + 1] = u2;
              h++;
              p2 = r2.x - n2.x;
              r2 = r2.y - n2.y;
              for (m2 = m2.vertexes.iterator; m2.next(); )
                q2 = m2.value, q2.centerX += p2, q2.centerY += r2;
            }
          N2.free(n2);
          for (m2 = b.vertexes.iterator; m2.next(); )
            g2 = m2.value, p2 = g2.bounds, 2 > h ? (e = p2.x + p2.width / 2, f2 = p2.y + p2.height / 2, l2[0] = new K2(p2.x + p2.width + d.width, p2.y), l2[1] = new K2(p2.x, p2.y + p2.height + d.height), h = 2) : (k = as(l2, h, e, f2, p2.width, p2.height, d), n2 = l2[k], r2 = new K2(n2.x + p2.width + d.width, n2.y), p2 = new K2(n2.x, n2.y + p2.height + d.height), k + 1 < h && l2.splice(k + 1, 0, null), l2[k] = r2, l2[k + 1] = p2, h++, g2.centerX = n2.x + g2.width / 2, g2.centerY = n2.y + g2.height / 2);
          Ia2(l2);
          for (d = c.iterator; d.next(); ) {
            c = d.value;
            for (e = c.vertexes.iterator; e.next(); )
              b.og(e.value);
            for (c = c.edges.iterator; c.next(); )
              b.Tl(c.value);
          }
        }
        bs(this, a);
        this.updateParts();
      }
      this.pl = a;
      this.network = null;
      this.isValidLayout = true;
    }
  };
  Yr.prototype.needsClusterLayout = function() {
    if (3 > this.network.vertexes.count)
      return false;
    for (var a = 0, b = 0, c = this.network.vertexes.first().bounds, d = this.network.vertexes.iterator; d.next(); ) {
      if (d.value.bounds.Lc(c) && (a++, 2 < a))
        return true;
      if (10 < b)
        break;
      b++;
    }
    return false;
  };
  Yr.prototype.computeBounds = function(a, b) {
    var c = true;
    for (a = a.vertexes.iterator; a.next(); ) {
      var d = a.value;
      c ? (c = false, b.set(d.bounds)) : b.Qc(d.bounds);
    }
    return b;
  };
  function $r(a, b, c) {
    if (cs(a, b)) {
      var d = a.Tf;
      a.Tf *= 1 + 1 / (b + 1);
      var e = ds(a, b), f2 = Math.max(0, Math.max(Math.min(a.network.vertexes.count, c * (b + 1) / 11), 10));
      a.maxIterations += f2;
      $r(a, b + 1, c);
      bs(a, f2);
      es(a, e);
      b = e.vertexes.ya();
      b.sort(function(a2, b2) {
        return a2 === null || b2 === null || a2 === b2 ? 0 : b2.Kd - a2.Kd;
      });
      for (c = 0; c < b.length; c++)
        fs(a, b[c]);
      a.Tf = d;
    }
  }
  function cs(a, b) {
    if (10 < b || 3 > a.network.vertexes.count)
      return false;
    a.wh = a.network.vertexes.ya();
    a = a.wh;
    a.sort(function(a2, b2) {
      return a2 === null || b2 === null || a2 === b2 ? 0 : b2.Kd - a2.Kd;
    });
    for (b = a.length - 1; 0 <= b && 1 >= a[b].Kd; )
      b--;
    return 1 < a.length - b;
  }
  function ds(a, b) {
    for (var c = a.network, d = new Zr(a), e = 0; e < a.wh.length; e++) {
      var f2 = a.wh[e];
      if (1 < f2.Kd) {
        d.og(f2);
        var g2 = new gs();
        g2.nt = f2.Kd;
        g2.rt = f2.width;
        g2.ht = f2.height;
        g2.mw = f2.focus.x;
        g2.nw = f2.focus.y;
        f2.Me === null && (f2.Me = new F2());
        f2.Me.add(g2);
        f2.Mv = f2.Me.count - 1;
      } else
        break;
    }
    for (f2 = c.edges.iterator; f2.next(); ) {
      var h = f2.value;
      e = h.fromVertex;
      g2 = h.toVertex;
      e.network === d && g2.network === d ? d.Tl(h) : e.network === d ? (h = e.Sj, h === null && (h = new F2(), e.Sj = h), h.add(g2), e.Kd--, e.Kh += g2.Kh) : g2.network === d && (h = g2.Sj, h === null && (h = new F2(), g2.Sj = h), h.add(e), g2.Kd--, g2.Kh += e.Kh);
    }
    for (e = d.edges.iterator; e.next(); )
      f2 = e.value, f2.length *= Math.max(1, M2.sqrt((f2.fromVertex.Kh + f2.toVertex.Kh) / (4 * b + 1)));
    for (b = d.vertexes.iterator; b.next(); ) {
      e = b.value;
      var k = e.Sj;
      if (k !== null && 0 < k.count && (g2 = e.Me.J(e.Me.count - 1).nt - e.Kd, !(0 >= g2))) {
        for (var l2 = h = 0, m2 = k.count - g2; m2 < k.count; m2++) {
          var n2 = k.J(m2), p2 = null;
          for (f2 = n2.edges.iterator; f2.next(); ) {
            var r2 = f2.value;
            if (r2.Zx(n2) === e) {
              p2 = r2;
              break;
            }
          }
          p2 !== null && (l2 += p2.length, h += n2.width * n2.height);
        }
        f2 = e.centerX;
        k = e.centerY;
        m2 = e.width;
        n2 = e.height;
        p2 = e.focus;
        r2 = m2 * n2;
        1 > r2 && (r2 = 1);
        h = M2.sqrt((h + r2 + l2 * l2 * 4 / (g2 * g2)) / r2);
        g2 = (h - 1) * m2 / 2;
        h = (h - 1) * n2 / 2;
        e.bounds = new N2(f2 - p2.x - g2, k - p2.y - h, m2 + 2 * g2, n2 + 2 * h);
        e.focus = new K2(p2.x + g2, p2.y + h);
      }
    }
    a.network = d;
    return c;
  }
  function es(a, b) {
    for (var c = a.network.vertexes.iterator; c.next(); ) {
      var d = c.value;
      d.network = b;
      if (d.Me !== null) {
        var e = d.Me.J(d.Mv);
        d.Kd = e.nt;
        var f2 = e.mw, g2 = e.nw;
        d.bounds = new N2(d.centerX - f2, d.centerY - g2, e.rt, e.ht);
        d.focus = new K2(f2, g2);
        d.Mv--;
      }
    }
    for (c = a.network.edges.iterator; c.next(); )
      c.value.network = b;
    a.network = b;
  }
  function fs(a, b) {
    var c = b.Sj;
    if (c !== null && c.count !== 0) {
      var d = b.centerX, e = b.centerY, f2 = b.width, g2 = b.height;
      b.Me !== null && 0 < b.Me.count && (g2 = b.Me.J(0), f2 = g2.rt, g2 = g2.ht);
      f2 = M2.sqrt(f2 * f2 + g2 * g2) / 2;
      for (var h = false, k = g2 = 0, l2 = 0, m2 = b.vertexes.iterator; m2.next(); ) {
        var n2 = m2.value;
        1 >= n2.Kd ? k++ : (h = true, l2++, g2 += Math.atan2(b.centerY - n2.centerY, b.centerX - n2.centerX));
      }
      if (k !== 0) {
        for (0 < l2 && (g2 /= l2), l2 = b = 0, b = h ? 2 * Math.PI / (k + 1) : 2 * Math.PI / k, k % 2 === 0 && (l2 = b / 2), 1 < c.count && c.sort(function(a2, b2) {
          return a2 === null || b2 === null || a2 === b2 ? 0 : b2.width * b2.height - a2.width * a2.height;
        }), h = k % 2 === 0 ? 0 : 1, c = c.iterator; c.next(); )
          if (k = c.value, !(1 < k.Kd || a.isFixed(k))) {
            m2 = null;
            for (n2 = k.edges.iterator; n2.next(); ) {
              m2 = n2.value;
              break;
            }
            n2 = k.width;
            var p2 = k.height;
            n2 = M2.sqrt(n2 * n2 + p2 * p2) / 2;
            m2 = f2 + m2.length + n2;
            n2 = g2 + (b * (h / 2 >> 1) + l2) * (h % 2 === 0 ? 1 : -1);
            k.centerX = d + m2 * Math.cos(n2);
            k.centerY = e + m2 * Math.sin(n2);
            h++;
          }
      }
    }
  }
  function as(a, b, c, d, e, f2, g2) {
    var h = 9e19, k = -1, l2 = 0;
    a:
      for (; l2 < b; l2++) {
        var m2 = a[l2], n2 = m2.x - c, p2 = m2.y - d;
        n2 = n2 * n2 + p2 * p2;
        if (n2 < h) {
          for (p2 = l2 - 1; 0 <= p2; p2--)
            if (a[p2].y > m2.y && a[p2].x - m2.x < e + g2.width)
              continue a;
          for (p2 = l2 + 1; p2 < b; p2++)
            if (a[p2].x > m2.x && a[p2].y - m2.y < f2 + g2.height)
              continue a;
          k = l2;
          h = n2;
        }
      }
    return k;
  }
  Yr.prototype.Du = function() {
    if (this.comments)
      for (var a = this.network.vertexes.iterator; a.next(); )
        this.addComments(a.value);
  };
  Yr.prototype.addComments = function(a) {
    var b = a.node;
    if (b !== null)
      for (b = b.Vu(); b.next(); ) {
        var c = b.value;
        if (c.category === "Comment" && c.isVisible()) {
          var d = this.network.Ji(c);
          d === null && (d = this.network.Pj(c));
          d.charge = this.defaultCommentElectricalCharge;
          c = null;
          for (var e = d.destinationEdges; e.next(); ) {
            var f2 = e.value;
            if (f2.toVertex === a) {
              c = f2;
              break;
            }
          }
          if (c === null) {
            for (e = d.sourceEdges; e.next(); )
              if (f2 = e.value, f2.fromVertex === a) {
                c = f2;
                break;
              }
          }
          c === null && (c = this.network.gk(a, d, null));
          c.length = this.defaultCommentSpringLength;
        }
      }
  };
  function hs(a, b) {
    var c = a.bounds, d = c.x;
    a = c.y;
    var e = c.width;
    c = c.height;
    var f2 = b.bounds, g2 = f2.x;
    b = f2.y;
    var h = f2.width;
    f2 = f2.height;
    return d + e < g2 ? a > b + f2 ? (c = d + e - g2, a = a - b - f2, M2.sqrt(c * c + a * a)) : a + c < b ? (d = d + e - g2, a = a + c - b, M2.sqrt(d * d + a * a)) : g2 - (d + e) : d > g2 + h ? a > b + f2 ? (c = d - g2 - h, a = a - b - f2, M2.sqrt(c * c + a * a)) : a + c < b ? (d = d - g2 - h, a = a + c - b, M2.sqrt(d * d + a * a)) : d - (g2 + h) : a > b + f2 ? a - (b + f2) : a + c < b ? b - (a + c) : 0.1;
  }
  function bs(a, b) {
    a.wh = null;
    for (b = a.bo + b; a.bo < b && (a.bo++, is(a)); )
      ;
    a.wh = null;
  }
  function is(a) {
    a.wh === null && (a.wh = a.network.vertexes.ya());
    var b = a.wh;
    if (0 >= b.length)
      return false;
    var c = b[0];
    c.forceX = 0;
    c.forceY = 0;
    for (var d = c.centerX, e = d, f2 = c = c.centerY, g2 = 1; g2 < b.length; g2++) {
      var h = b[g2];
      h.forceX = 0;
      h.forceY = 0;
      var k = h.centerX;
      h = h.centerY;
      d = Math.min(d, k);
      e = Math.max(e, k);
      c = Math.min(c, h);
      f2 = Math.max(f2, h);
    }
    (e = e - d > f2 - c) ? b.sort(function(a2, b2) {
      return a2 === null || b2 === null || a2 === b2 ? 0 : a2.centerX - b2.centerX;
    }) : b.sort(function(a2, b2) {
      return a2 === null || b2 === null || a2 === b2 ? 0 : a2.centerY - b2.centerY;
    });
    c = a.Tf;
    var l2 = d = h = 0;
    for (f2 = 0; f2 < b.length; f2++) {
      g2 = b[f2];
      d = g2.bounds;
      h = g2.focus;
      k = d.x + h.x;
      var m2 = d.y + h.y;
      d = g2.charge * a.electricalFieldX(k, m2);
      l2 = g2.charge * a.electricalFieldY(k, m2);
      d += g2.mass * a.gravitationalFieldX(k, m2);
      l2 += g2.mass * a.gravitationalFieldY(k, m2);
      g2.forceX += d;
      g2.forceY += l2;
      for (var n2 = f2 + 1; n2 < b.length; n2++) {
        var p2 = b[n2];
        if (p2 !== g2) {
          d = p2.bounds;
          h = p2.focus;
          l2 = d.x + h.x;
          var r2 = d.y + h.y;
          if (k - l2 > c || l2 - k > c) {
            if (e)
              break;
          } else if (m2 - r2 > c || r2 - m2 > c) {
            if (!e)
              break;
          } else {
            var q2 = hs(g2, p2);
            1 > q2 ? (d = a.randomNumberGenerator, d === null && (a.randomNumberGenerator = d = new js()), q2 = d.random(), h = d.random(), k > l2 ? (d = Math.abs(p2.bounds.right - g2.bounds.x), d = (1 + d) * q2) : k < l2 ? (d = Math.abs(p2.bounds.x - g2.bounds.right), d = -(1 + d) * q2) : (d = Math.max(p2.width, g2.width), d = (1 + d) * q2 - d / 2), m2 > r2 ? (l2 = Math.abs(p2.bounds.bottom - g2.bounds.y), l2 = (1 + l2) * h) : k < l2 ? (l2 = Math.abs(p2.bounds.y - g2.bounds.bottom), l2 = -(1 + l2) * h) : (l2 = Math.max(p2.height, g2.height), l2 = (1 + l2) * h - l2 / 2)) : (h = -(g2.charge * p2.charge) / (q2 * q2), d = (l2 - k) / q2 * h, l2 = (r2 - m2) / q2 * h);
            g2.forceX += d;
            g2.forceY += l2;
            p2.forceX -= d;
            p2.forceY -= l2;
          }
        }
      }
    }
    for (e = a.network.edges.iterator; e.next(); )
      h = e.value, c = h.fromVertex, f2 = h.toVertex, g2 = c.bounds, k = c.focus, d = g2.x + k.x, g2 = g2.y + k.y, m2 = f2.bounds, n2 = f2.focus, k = m2.x + n2.x, m2 = m2.y + n2.y, n2 = hs(c, f2), 1 > n2 ? (n2 = a.randomNumberGenerator, n2 === null && (a.randomNumberGenerator = n2 = new js()), h = n2.random(), n2 = n2.random(), d = (d > k ? 1 : -1) * (1 + (f2.width > c.width ? f2.width : c.width)) * h, l2 = (g2 > m2 ? 1 : -1) * (1 + (f2.height > c.height ? f2.height : c.height)) * n2) : (h = h.stiffness * (n2 - h.length), d = (k - d) / n2 * h, l2 = (m2 - g2) / n2 * h), c.forceX += d, c.forceY += l2, f2.forceX -= d, f2.forceY -= l2;
    for (e = d = 0; e < b.length; e++)
      c = b[e], a.isFixed(c) ? a.moveFixedVertex(c) : d = Math.max(d, a.moveVertex(c) || 0);
    return d > a.epsilonDistance * a.epsilonDistance;
  }
  Yr.prototype.moveVertex = function(a) {
    var b = a.forceX, c = a.forceY, d = this.moveLimit;
    b < -d ? b = -d : b > d && (b = d);
    c < -d ? c = -d : c > d && (c = d);
    a.centerX += b;
    a.centerY += c;
    return b * b + c * c;
  };
  Yr.prototype.moveFixedVertex = function() {
  };
  Yr.prototype.commitLayout = function() {
    this.Qv();
    this.commitNodes();
    this.isRouting && this.commitLinks();
  };
  Yr.prototype.Qv = function() {
    if (this.setsPortSpots)
      for (var a = this.network.edges.iterator; a.next(); ) {
        var b = a.value.link;
        b !== null && (b.fromSpot = Uc2, b.toSpot = Uc2);
      }
  };
  Yr.prototype.commitNodes = function() {
    var a = 0, b = 0;
    if (this.arrangesToOrigin) {
      var c = N2.alloc();
      this.computeBounds(this.network, c);
      b = this.arrangementOrigin;
      a = b.x - c.x;
      b = b.y - c.y;
      N2.free(c);
    }
    c = N2.alloc();
    for (var d = this.network.vertexes.iterator; d.next(); ) {
      var e = d.value;
      if (a !== 0 || b !== 0)
        c.assign(e.bounds), c.x += a, c.y += b, e.bounds = c;
      e.commit();
    }
    N2.free(c);
  };
  Yr.prototype.commitLinks = function() {
    for (var a = this.network.edges.iterator; a.next(); )
      a.value.commit();
  };
  Yr.prototype.springStiffness = function(a) {
    a = a.stiffness;
    return isNaN(a) ? this.Pk : a;
  };
  Yr.prototype.springLength = function(a) {
    a = a.length;
    return isNaN(a) ? this.Ok : a;
  };
  Yr.prototype.electricalCharge = function(a) {
    a = a.charge;
    return isNaN(a) ? this.Mk : a;
  };
  Yr.prototype.electricalFieldX = function() {
    return 0;
  };
  Yr.prototype.electricalFieldY = function() {
    return 0;
  };
  Yr.prototype.gravitationalMass = function(a) {
    a = a.mass;
    return isNaN(a) ? this.Nk : a;
  };
  Yr.prototype.gravitationalFieldX = function() {
    return 0;
  };
  Yr.prototype.gravitationalFieldY = function() {
    return 0;
  };
  Yr.prototype.isFixed = function(a) {
    return a.isFixed;
  };
  na2.Object.defineProperties(Yr.prototype, { currentIteration: { get: function() {
    return this.bo;
  } }, arrangementSpacing: { get: function() {
    return this.Rd;
  }, set: function(a) {
    this.Rd.A(a) || (this.Rd.assign(a), this.B());
  } }, arrangesToOrigin: { get: function() {
    return this.Sm;
  }, set: function(a) {
    this.Sm !== a && (this.Sm = a, this.B());
  } }, setsPortSpots: { get: function() {
    return this.hf;
  }, set: function(a) {
    this.hf !== a && (this.hf = a, this.B());
  } }, comments: { get: function() {
    return this.jd;
  }, set: function(a) {
    this.jd !== a && (this.jd = a, this.B());
  } }, maxIterations: { get: function() {
    return this.pl;
  }, set: function(a) {
    this.pl !== a && 0 <= a && (this.pl = a, this.B());
  } }, epsilonDistance: { get: function() {
    return this.wn;
  }, set: function(a) {
    this.wn !== a && 0 < a && (this.wn = a, this.B());
  } }, infinityDistance: { get: function() {
    return this.Tf;
  }, set: function(a) {
    this.Tf !== a && 1 < a && (this.Tf = a, this.B());
  } }, moveLimit: { get: function() {
    return this.xo;
  }, set: function(a) {
    this.xo !== a && 1 < a && (this.xo = a, this.B());
  } }, randomNumberGenerator: { get: function() {
    return this.To;
  }, set: function(a) {
    this.To !== a && (a !== null && typeof a.random !== "function" && C2('ForceDirectedLayout.randomNumberGenerator must have a "random()" function on it: ' + a), this.To = a);
  } }, defaultSpringStiffness: {
    get: function() {
      return this.Pk;
    },
    set: function(a) {
      this.Pk !== a && (this.Pk = a, this.B());
    }
  }, defaultSpringLength: { get: function() {
    return this.Ok;
  }, set: function(a) {
    this.Ok !== a && (this.Ok = a, this.B());
  } }, defaultElectricalCharge: { get: function() {
    return this.Mk;
  }, set: function(a) {
    this.Mk !== a && (this.Mk = a, this.B());
  } }, defaultGravitationalMass: { get: function() {
    return this.Nk;
  }, set: function(a) {
    this.Nk !== a && (this.Nk = a, this.B());
  } }, defaultCommentSpringLength: {
    get: function() {
      return this.on;
    },
    set: function(a) {
      this.on !== a && (this.on = a, this.B());
    }
  }, defaultCommentElectricalCharge: { get: function() {
    return this.nn;
  }, set: function(a) {
    this.nn !== a && (this.nn = a, this.B());
  } } });
  Yr.className = "ForceDirectedLayout";
  function gs() {
    this.nw = this.mw = this.ht = this.rt = this.nt = 0;
  }
  gs.className = "ForceDirectedSubnet";
  function Zr(a) {
    Qp.call(this, a);
  }
  ma2(Zr, Qp);
  Zr.prototype.createVertex = function() {
    return new ks(this);
  };
  Zr.prototype.createEdge = function() {
    return new ls(this);
  };
  Zr.className = "ForceDirectedNetwork";
  function ks(a) {
    dq.call(this, a);
    this.Ba = false;
    this.Ma = this.C = NaN;
    this.Kh = this.Kd = this.wa = this.L = 0;
    this.Me = this.Sj = null;
    this.Mv = 0;
  }
  ma2(ks, dq);
  ks.prototype.serializeVertexProperties = function(a, b) {
    dq.prototype.serializeVertexProperties.call(this, a, b);
    a.isFixed = this.isFixed;
    a.charge = this.charge;
    a.mass = this.mass;
  };
  ks.prototype.deserializeVertexProperties = function(a, b, c, d) {
    dq.prototype.deserializeVertexProperties.call(this, a, b, c, d);
    this.isFixed = a.isFixed;
    this.charge = a.charge;
    this.mass = a.mass;
  };
  na2.Object.defineProperties(ks.prototype, { isFixed: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba !== a && (this.Ba = a);
  } }, charge: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C !== a && (this.C = a);
  } }, mass: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma !== a && (this.Ma = a);
  } }, forceX: { get: function() {
    return this.L;
  }, set: function(a) {
    this.L !== a && (this.L = a);
  } }, forceY: {
    get: function() {
      return this.wa;
    },
    set: function(a) {
      this.wa !== a && (this.wa = a);
    }
  } });
  ks.className = "ForceDirectedVertex";
  function ls(a) {
    eq.call(this, a);
    this.j = this.o = NaN;
  }
  ma2(ls, eq);
  ls.prototype.serializeEdgeProperties = function(a, b) {
    eq.prototype.serializeEdgeProperties.call(this, a, b);
    a.stiffness = this.stiffness;
    a.length = this.length;
  };
  ls.prototype.deserializeEdgeProperties = function(a, b, c, d) {
    eq.prototype.deserializeEdgeProperties.call(this, a, b, c, d);
    this.stiffness = a.stiffness;
    this.length = a.length;
  };
  na2.Object.defineProperties(ls.prototype, { stiffness: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o !== a && (this.o = a);
  } }, length: { get: function() {
    return this.j;
  }, set: function(a) {
    this.j !== a && (this.j = a);
  } } });
  ls.className = "ForceDirectedEdge";
  function js() {
    var a = 0;
    this.seed = a;
    this.Gy = 48271;
    this.Iy = 2147483647;
    this.Q = 44488.07041494893;
    this.Jy = 3399;
    this.Hy = 1 / 2147483647;
    this.random();
  }
  js.prototype.random = function() {
    var a = this.seed % this.Q * this.Gy - this.seed / this.Q * this.Jy;
    0 < a ? this.seed = a : this.seed = a + this.Iy;
    return this.seed * this.Hy;
  };
  js.className = "RandomNumberGenerator";
  function ms(a) {
    ni2.call(this);
    this.ac = this.be = 25;
    this.K = 0;
    this.Lk = ns;
    this.kl = os;
    this.$k = ps;
    this.sj = 4;
    this.wk = qs;
    this.ag = 15;
    this.hf = true;
    this.jo = 4;
    this.Ea = this.ji = this.ra = -1;
    this.vc = this.Wg = 0;
    this.Ka = this.wd = this.xd = this.ae = this.Bb = null;
    this.dh = 0;
    this.yo = this.zj = null;
    this.Ec = 0;
    this.zo = null;
    this.Rc = new K2();
    this.ye = [];
    this.ye.length = 100;
    a && Object.assign(this, a);
  }
  ma2(ms, ni2);
  ms.prototype.cloneProtected = function(a) {
    ni2.prototype.cloneProtected.call(this, a);
    a.be = this.be;
    a.ac = this.ac;
    a.K = this.K;
    a.Lk = this.Lk;
    a.kl = this.kl;
    a.$k = this.$k;
    a.sj = this.sj;
    a.wk = this.wk;
    a.ag = this.ag;
    a.hf = this.hf;
    a.jo = this.jo;
  };
  ms.prototype.serializeLayoutProperties = function(a, b) {
    ni2.prototype.serializeLayoutProperties.call(this, a, b);
    a.layerSpacing = this.layerSpacing;
    a.columnSpacing = this.columnSpacing;
    a.direction = this.direction;
    a.cycleRemoveOption = this.cycleRemoveOption.name;
    a.layeringOption = this.layeringOption.name;
    a.initializeOption = this.initializeOption.name;
    a.iterations = this.iterations;
    a.aggressiveOption = this.aggressiveOption.name;
    a.packOption = this.packOption;
    a.setsPortSpots = this.setsPortSpots;
    a.linkSpacing = this.linkSpacing;
    a.ra = this.ra;
    a.ji = this.ji;
    a.Ea = this.Ea;
    a.Wg = this.Wg;
    a.vc = this.vc;
    a.Bb = this.Bb;
    a.dh = this.dh;
    a.Ec = this.Ec;
    a.Rc = { x: this.Rc.x, y: this.Rc.y };
  };
  ms.prototype.deserializeLayoutProperties = function(a, b, c, d, e) {
    ni2.prototype.deserializeLayoutProperties.call(this, a, b, c, d, e);
    this.layerSpacing = a.layerSpacing;
    this.columnSpacing = a.columnSpacing;
    this.direction = a.direction;
    this.cycleRemoveOption = Wa2(ms, a.cycleRemoveOption);
    this.layeringOption = Wa2(ms, a.layeringOption);
    this.initializeOption = Wa2(ms, a.initializeOption);
    this.iterations = a.iterations;
    this.aggressiveOption = Wa2(ms, a.aggressiveOption);
    this.packOption = a.packOption;
    this.setsPortSpots = a.setsPortSpots;
    this.linkSpacing = a.linkSpacing;
    this.ra = a.ra;
    this.ji = a.ji;
    this.Ea = a.Ea;
    this.Wg = a.Wg;
    this.vc = a.vc;
    this.Bb = a.Bb;
    this.dh = a.dh;
    this.Ec = a.Ec;
    this.Rc = new K2(this.Rc.x, this.Rc.y);
    e && !d && e.edges.each(function(a2) {
      if (!a2.link && a2.fromVertex && a2.toVertex && (a2.fromVertex.node === null || a2.toVertex.node === null)) {
        for (var b2 = a2.fromVertex; b2 !== null && b2.node === null && 0 < b2.sd.count; ) {
          var c2 = b2.sd.J(0);
          if (c2.link) {
            a2.link = c2.link;
            break;
          }
          b2 = c2.fromVertex;
        }
        if (!a2.link) {
          for (c2 = a2.toVertex; c2 !== null && c2.node === null && 0 < c2.Fd.count; ) {
            var d2 = c2.Fd.J(0);
            if (d2.link) {
              a2.link = d2.link;
              break;
            }
            c2 = d2.toVertex;
          }
          if (!a2.link) {
            for (c2 = c2.sd.iterator; c2.next(); )
              if (d2 = c2.value, d2.link && d2.fromVertex === b2) {
                a2.link = d2.link;
                break;
              }
          }
        }
      }
    });
  };
  ms.prototype.gb = function(a) {
    a.classType === ms ? a.name.indexOf("Aggressive") === 0 ? this.aggressiveOption = a : a.name.indexOf("Cycle") === 0 ? this.cycleRemoveOption = a : a.name.indexOf("Init") === 0 ? this.initializeOption = a : a.name.indexOf("Layer") === 0 ? this.layeringOption = a : C2("Unknown enum value: " + a) : ni2.prototype.gb.call(this, a);
  };
  ms.prototype.createNetwork = function() {
    return new rs(this);
  };
  ms.prototype.doLayout = function(a) {
    this.network === null && (this.network = this.makeNetwork(a));
    this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin);
    this.ji = -1;
    this.vc = this.Wg = 0;
    this.zo = this.yo = this.zj = null;
    for (a = 0; a < this.ye.length; a++)
      this.ye[a] = null;
    if (0 < this.network.vertexes.count) {
      this.network.Tp();
      if (this.dw())
        return;
      this.cycleRemoveOption !== ss && this.removeCycles();
      for (a = this.network.vertexes.iterator; a.next(); )
        a.value.layer = -1;
      this.ra = -1;
      this.assignLayers();
      for (a.reset(); a.next(); )
        this.ra = Math.max(this.ra, a.value.layer);
      this.cycleRemoveOption === ss && this.removeCycles();
      a = this.network;
      for (var b = [], c = a.edges.iterator; c.next(); ) {
        var d = c.value;
        d.valid = false;
        b.push(d);
      }
      for (c = 0; c < b.length; c++) {
        d = b[c];
        var e = d.fromVertex, f2 = d.toVertex;
        if (!(d.valid || (e.node === null && e.data === null || f2.node === null && f2.data === null) && e.layer === f2.layer)) {
          var g2 = 0, h = 0, k = 0, l2 = 0;
          if (d.link !== null) {
            h = d.link;
            if (h === null)
              continue;
            var m2 = e.node;
            g2 = f2.node;
            if (m2 === null || g2 === null)
              continue;
            var n2 = h.fromNode;
            k = h.toNode;
            var p2 = h.fromPort;
            h = h.toPort;
            if (d.rev) {
              l2 = n2;
              var r2 = p2;
              n2 = k;
              p2 = h;
              k = l2;
              h = r2;
            }
            var q2 = e.focus;
            l2 = f2.focus;
            var u2 = d.rev ? f2.bounds : e.bounds;
            r2 = K2.alloc();
            m2 !== n2 ? u2.u() && n2.isVisible() ? n2.actualBounds.u() ? (so(n2, p2, yc2, r2), r2.x += n2.actualBounds.x - u2.x, r2.y += n2.actualBounds.y - u2.y) : (so(n2, p2, yc2, r2), r2.u() || r2.assign(q2)) : r2.assign(q2) : u2.u() ? (so(n2, p2, yc2, r2), r2.u() || r2.assign(q2)) : r2.assign(q2);
            n2 = d.rev ? e.bounds : f2.bounds;
            m2 = K2.alloc();
            g2 !== k ? n2.u() && k.isVisible() ? k.actualBounds.u() ? (so(k, h, yc2, m2), m2.x += k.actualBounds.x - n2.x, m2.y += k.actualBounds.y - n2.y) : (so(k, h, yc2, m2), m2.u() || m2.assign(l2)) : m2.assign(l2) : n2.u() ? (so(k, h, yc2, m2), m2.u() || m2.assign(l2)) : m2.assign(l2);
            this.K === 90 || this.K === 270 ? (g2 = Math.round((r2.x - q2.x) / this.ac), k = r2.x, h = Math.round((m2.x - l2.x) / this.ac), l2 = m2.x) : (g2 = Math.round((r2.y - q2.y) / this.ac), k = r2.y, h = Math.round((m2.y - l2.y) / this.ac), l2 = m2.y);
            K2.free(r2);
            K2.free(m2);
            d.portFromColOffset = g2;
            d.portFromPos = k;
            d.portToColOffset = h;
            d.portToPos = l2;
          } else
            d.portFromColOffset = 0, d.portFromPos = 0, d.portToColOffset = 0, d.portToPos = 0;
          r2 = e.layer;
          m2 = f2.layer;
          n2 = 0;
          u2 = d.link;
          if (u2 !== null) {
            var w = u2.fromPort, v2 = u2.toPort;
            if (w !== null && v2 !== null) {
              var z2 = u2.fromNode;
              p2 = u2.toNode;
              if (z2 !== null && p2 !== null) {
                var y2 = ts(this, true), B2 = ts(this, false), A2 = this.setsPortSpots ? y2 : u2.computeSpot(true, w);
                q2 = this.setsPortSpots ? B2 : u2.computeSpot(false, v2);
                var E = u2.isOrthogonal;
                A2.Nc() && A2.Df(B2) && q2.Nc() && q2.Df(y2) ? n2 = 0 : (y2 = u2.getLinkPoint(z2, w, A2, true, E, p2, v2, K2.alloc()), B2 = u2.getLinkDirection(z2, w, y2, A2, true, E, p2, v2), K2.free(y2), A2.Es() || B2 !== us(this, d, true) ? this.setsPortSpots && z2 !== null && z2.ports.count === 1 && d.rev && (n2 += 1) : n2 += 1, A2 = u2.getLinkPoint(p2, v2, q2, false, E, z2, w, K2.alloc()), u2 = u2.getLinkDirection(p2, v2, A2, q2, false, E, z2, w), K2.free(A2), q2.Es() || u2 !== us(this, d, false) ? this.setsPortSpots && p2 !== null && p2.ports.count === 1 && d.rev && (n2 += 2) : n2 += 2);
              }
            }
          }
          p2 = n2;
          n2 = p2 === 1 || p2 === 3 ? true : false;
          if (p2 = p2 === 2 || p2 === 3 ? true : false)
            q2 = a.createVertex(), q2.node = null, q2.uf = 1, q2.layer = r2, q2.near = e, a.og(q2), e = a.gk(e, q2, d.link), e.valid = false, e.rev = d.rev, e.portFromColOffset = g2, e.portToColOffset = 0, e.portFromPos = k, e.portToPos = 0, e = q2;
          u2 = 1;
          n2 && u2--;
          if (r2 - m2 > u2 && 0 < r2) {
            d.valid = false;
            q2 = a.createVertex();
            q2.node = null;
            q2.uf = 2;
            q2.layer = r2 - 1;
            a.og(q2);
            e = a.gk(e, q2, d.link);
            e.valid = true;
            e.rev = d.rev;
            e.portFromColOffset = p2 ? 0 : g2;
            e.portToColOffset = 0;
            e.portFromPos = p2 ? 0 : k;
            e.portToPos = 0;
            e = q2;
            for (r2--; r2 - m2 > u2 && 0 < r2; )
              q2 = a.createVertex(), q2.node = null, q2.uf = 3, q2.layer = r2 - 1, a.og(q2), e = a.gk(e, q2, d.link), e.valid = true, e.rev = d.rev, e.portFromColOffset = 0, e.portToColOffset = 0, e.portFromPos = 0, e.portToPos = 0, e = q2, r2--;
            e = a.gk(q2, f2, d.link);
            e.valid = !n2;
            n2 && (q2.near = f2);
            e.rev = d.rev;
            e.portFromColOffset = 0;
            e.portToColOffset = h;
            e.portFromPos = 0;
            e.portToPos = l2;
          } else
            d.valid = true;
        }
      }
      a = this.Bb = [];
      for (b = 0; b <= this.ra; b++)
        a[b] = 0;
      for (b = this.network.vertexes.iterator; b.next(); )
        b.value.index = -1;
      this.initializeIndices();
      this.ji = -1;
      for (c = this.vc = this.Wg = 0; c <= this.ra; c++)
        a[c] > a[this.vc] && (this.ji = a[c] - 1, this.vc = c), a[c] < a[this.Wg] && (this.Wg = c);
      this.zo = [];
      for (c = 0; c < a.length; c++)
        this.zo[c] = [];
      for (b.reset(); b.next(); )
        a = b.value, this.zo[a.layer][a.index] = a;
      this.Ea = -1;
      for (a = 0; a <= this.ra; a++) {
        b = vs(this, a);
        c = 0;
        d = this.Bb[a];
        for (f2 = 0; f2 < d; f2++)
          e = b[f2], c += this.nodeMinColumnSpace(e, true), e.column = c, c += 1, c += this.nodeMinColumnSpace(e, false);
        this.Ea = Math.max(this.Ea, c - 1);
        ws(this, a, b);
      }
      this.reduceCrossings();
      this.straightenAndPack();
      this.updateParts();
    }
    this.network = null;
    this.isValidLayout = true;
  };
  ms.prototype.linkMinLength = function() {
    return 1;
  };
  function xs(a) {
    var b = a.fromVertex.node || a.fromVertex.data;
    a = a.toVertex.node || a.toVertex.data;
    return b === null && a === null ? 8 : b === null || a === null ? 4 : 1;
  }
  ms.prototype.nodeMinLayerSpace = function(a, b) {
    return a.node === null && a.data === null ? 0 : this.K === 90 || this.K === 270 ? b ? a.focus.y + 10 : a.bounds.height - a.focus.y + 10 : b ? a.focus.x + 10 : a.bounds.width - a.focus.x + 10;
  };
  ms.prototype.nodeMinColumnSpace = function(a, b) {
    if (a.node === null && a.data === null)
      return 0;
    var c = b ? a.kk : a.jk;
    if (c !== null)
      return c;
    c = this.K;
    return c === 90 || c === 270 ? b ? a.kk = a.focus.x / this.ac + 1 | 0 : a.jk = (a.bounds.width - a.focus.x) / this.ac + 1 | 0 : b ? a.kk = a.focus.y / this.ac + 1 | 0 : a.jk = (a.bounds.height - a.focus.y) / this.ac + 1 | 0;
  };
  function ys(a) {
    a.zj === null && (a.zj = []);
    for (var b = 0, c = a.network.vertexes.iterator; c.next(); ) {
      var d = c.value;
      a.zj[b] = d.layer;
      b++;
      a.zj[b] = d.column;
      b++;
      a.zj[b] = d.index;
      b++;
    }
    return a.zj;
  }
  function zs(a, b) {
    var c = 0;
    for (a = a.network.vertexes.iterator; a.next(); ) {
      var d = a.value;
      d.layer = b[c];
      c++;
      d.column = b[c];
      c++;
      d.index = b[c];
      c++;
    }
  }
  function As(a, b, c) {
    var d = vs(a, b), e = a.Bb[b];
    if (a.yo === null || a.yo.length < e * e)
      a.yo = [];
    for (var f2 = a.yo, g2 = 0; g2 < e; g2++) {
      var h = 0, k = d[g2], l2 = k.near;
      if (l2 !== null && l2.layer === k.layer)
        if (k = l2.index, k > g2)
          for (var m2 = g2 + 1; m2 < k; m2++) {
            var n2 = d[m2];
            n2.near === l2 && n2.uf === l2.uf || h++;
          }
        else
          for (m2 = g2 - 1; m2 > k; m2--)
            n2 = d[m2], n2.near === l2 && n2.uf === l2.uf || h++;
      var p2;
      if (0 <= c)
        for (k = d[g2].sourceEdgesArrayAccess, l2 = 0; l2 < k.length; l2++) {
          var r2 = k[l2];
          if (r2.valid && r2.fromVertex.layer !== b)
            for (n2 = r2.fromVertex.index, m2 = r2.portToPos, r2 = r2.portFromPos, p2 = l2 + 1; p2 < k.length; p2++) {
              var q2 = k[p2];
              if (q2.valid && q2.fromVertex.layer !== b) {
                var u2 = q2.fromVertex.index;
                var w = q2.portToPos;
                q2 = q2.portFromPos;
                m2 < w && (n2 > u2 || n2 === u2 && r2 > q2) && h++;
                w < m2 && (u2 > n2 || u2 === n2 && q2 > r2) && h++;
              }
            }
        }
      if (0 >= c) {
        for (k = d[g2].destinationEdgesArrayAccess, l2 = 0; l2 < k.length; l2++)
          if (r2 = k[l2], r2.valid && r2.toVertex.layer !== b)
            for (n2 = r2.toVertex.index, m2 = r2.portToPos, r2 = r2.portFromPos, p2 = l2 + 1; p2 < k.length; p2++)
              q2 = k[p2], q2.valid && q2.toVertex.layer !== b && (u2 = q2.toVertex.index, w = q2.portToPos, q2 = q2.portFromPos, r2 < q2 && (n2 > u2 || n2 === u2 && m2 > w) && h++, q2 < r2 && (u2 > n2 || u2 === n2 && w > m2) && h++);
      }
      f2[g2 * e + g2] = h;
      for (k = g2 + 1; k < e; k++) {
        var v2 = 0, z2 = 0;
        if (0 <= c) {
          h = d[g2].sourceEdgesArrayAccess;
          var y2 = d[k].sourceEdgesArrayAccess;
          for (l2 = 0; l2 < h.length; l2++)
            if (r2 = h[l2], r2.valid && r2.fromVertex.layer !== b)
              for (n2 = r2.fromVertex.index, r2 = r2.portFromPos, p2 = 0; p2 < y2.length; p2++)
                q2 = y2[p2], q2.valid && q2.fromVertex.layer !== b && (u2 = q2.fromVertex.index, q2 = q2.portFromPos, (n2 < u2 || n2 === u2 && r2 < q2) && z2++, (u2 < n2 || u2 === n2 && q2 < r2) && v2++);
        }
        if (0 >= c) {
          for (h = d[g2].destinationEdgesArrayAccess, y2 = d[k].destinationEdgesArrayAccess, l2 = 0; l2 < h.length; l2++)
            if (r2 = h[l2], r2.valid && r2.toVertex.layer !== b)
              for (n2 = r2.toVertex.index, m2 = r2.portToPos, p2 = 0; p2 < y2.length; p2++)
                q2 = y2[p2], q2.valid && q2.toVertex.layer !== b && (u2 = q2.toVertex.index, w = q2.portToPos, (n2 < u2 || n2 === u2 && m2 < w) && z2++, (u2 < n2 || u2 === n2 && w < m2) && v2++);
        }
        f2[g2 * e + k] = v2;
        f2[k * e + g2] = z2;
      }
    }
    ws(a, b, d);
    return f2;
  }
  ms.prototype.countCrossings = function() {
    for (var a = 0, b = 0; b <= this.ra; b++)
      for (var c = As(this, b, 1), d = this.Bb[b], e = 0; e < d; e++)
        for (var f2 = e; f2 < d; f2++)
          a += c[e * d + f2];
    return a;
  };
  function Bs(a) {
    for (var b = 0, c = 0; c <= a.ra; c++) {
      for (var d = a, e = c, f2 = vs(d, e), g2 = d.Bb[e], h = 0, k = 0; k < g2; k++) {
        var l2 = f2[k].destinationEdgesArrayAccess;
        if (l2 !== null)
          for (var m2 = 0; m2 < l2.length; m2++) {
            var n2 = l2[m2];
            if (n2.valid && n2.toVertex.layer !== e) {
              var p2 = n2.fromVertex.column + n2.portFromColOffset;
              var r2 = n2.toVertex.column + n2.portToColOffset;
              h += (Math.abs(p2 - r2) + 1) * xs(n2);
            }
          }
      }
      ws(d, e, f2);
      b += h;
    }
    return b;
  }
  ms.prototype.normalize = function() {
    var a = Infinity;
    this.Ea = -1;
    for (var b = this.network.vertexes.iterator; b.next(); ) {
      var c = b.value;
      a = Math.min(a, c.column - this.nodeMinColumnSpace(c, true));
      this.Ea = Math.max(this.Ea, c.column + this.nodeMinColumnSpace(c, false));
    }
    for (b.reset(); b.next(); )
      b.value.column -= a;
    this.Ea -= a;
  };
  function Cs(a, b, c) {
    for (var d = vs(a, b), e = a.Bb[b], f2 = [], g2 = 0; g2 < e; g2++) {
      var h = d[g2], k = null;
      0 >= c && (k = h.sourceEdgesArrayAccess);
      var l2 = null;
      0 <= c && (l2 = h.destinationEdgesArrayAccess);
      var m2 = 0, n2 = 0, p2 = h.near;
      p2 !== null && p2.layer === h.layer && (m2 += p2.column - 1, n2++);
      if (k !== null)
        for (p2 = 0; p2 < k.length; p2++) {
          h = k[p2];
          var r2 = h.fromVertex;
          h.valid && !h.rev && r2.layer !== b && (m2 += r2.column, n2++);
        }
      if (l2 !== null)
        for (k = 0; k < l2.length; k++)
          h = l2[k], p2 = h.toVertex, h.valid && !h.rev && p2.layer !== b && (m2 += p2.column, n2++);
      f2[g2] = n2 === 0 ? -1 : m2 / n2;
    }
    ws(a, b, d);
    return f2;
  }
  function Ds(a, b, c) {
    for (var d = vs(a, b), e = a.Bb[b], f2 = [], g2 = 0; g2 < e; g2++) {
      var h = d[g2], k = null;
      0 >= c && (k = h.sourceEdgesArrayAccess);
      var l2 = null;
      0 <= c && (l2 = h.destinationEdgesArrayAccess);
      var m2 = 0, n2 = [], p2 = h.near;
      p2 !== null && p2.layer === h.layer && (n2[m2] = p2.column - 1, m2++);
      h = void 0;
      if (k !== null)
        for (p2 = 0; p2 < k.length; p2++) {
          h = k[p2];
          var r2 = h.fromVertex;
          h.valid && !h.rev && r2.layer !== b && (n2[m2] = r2.column + h.portFromColOffset, m2++);
        }
      if (l2 !== null)
        for (k = 0; k < l2.length; k++)
          h = l2[k], p2 = h.toVertex, h.valid && !h.rev && p2.layer !== b && (n2[m2] = p2.column + h.portToColOffset, m2++);
      m2 === 0 ? f2[g2] = -1 : (n2.sort(function(a2, b2) {
        return a2 - b2;
      }), l2 = m2 >> 1, f2[g2] = (m2 & 1) !== 0 ? n2[l2] : n2[l2 - 1] + n2[l2] >> 1);
    }
    ws(a, b, d);
    return f2;
  }
  function Es(a, b, c, d, e, f2) {
    if (b.component === d) {
      b.component = c;
      if (e)
        for (var g2 = b.destinationEdges; g2.next(); ) {
          var h = g2.value;
          var k = h.toVertex;
          var l2 = b.layer - k.layer;
          h = a.linkMinLength(h);
          l2 === h && Es(a, k, c, d, e, f2);
        }
      if (f2)
        for (g2 = b.sourceEdges; g2.next(); )
          h = g2.value, k = h.fromVertex, l2 = k.layer - b.layer, h = a.linkMinLength(h), l2 === h && Es(a, k, c, d, e, f2);
    }
  }
  function Fs(a, b, c, d, e, f2) {
    if (b.component === d) {
      b.component = c;
      if (e)
        for (var g2 = b.destinationEdges; g2.next(); )
          Fs(a, g2.value.toVertex, c, d, e, f2);
      if (f2)
        for (b = b.sourceEdges; b.next(); )
          Fs(a, b.value.fromVertex, c, d, e, f2);
    }
  }
  ms.prototype.removeCycles = function() {
    for (var a = this.network.edges.iterator; a.next(); )
      a.value.rev = false;
    switch (this.Lk) {
      default:
      case Gs:
        a = this.network;
        var b = 0, c = a.vertexes.count - 1, d = [];
        d.length = c + 1;
        for (var e = a.vertexes.iterator; e.next(); )
          e.value.valid = true;
        for (; Hs(a) !== null; ) {
          for (e = Is(a); e !== null; )
            d[c] = e, c--, e.valid = false, e = Is(a);
          for (e = Js(a); e !== null; )
            d[b] = e, b++, e.valid = false, e = Js(a);
          e = null;
          for (var f2 = 0, g2 = this.network.vertexes.iterator; g2.next(); ) {
            var h = g2.value;
            if (h.valid) {
              for (var k = 0, l2 = h.destinationEdges; l2.next(); )
                l2.value.toVertex.valid && k++;
              l2 = 0;
              for (var m2 = h.sourceEdges; m2.next(); )
                m2.value.fromVertex.valid && l2++;
              if (e === null || f2 < k - l2)
                e = h, f2 = k - l2;
            }
          }
          e !== null && (d[b] = e, b++, e.valid = false);
        }
        for (b = 0; b < a.vertexes.count; b++)
          d[b].index = b;
        for (d = a.edges.iterator; d.next(); )
          b = d.value, b.fromVertex.index > b.toVertex.index && (a.sm(b), b.rev = true);
        break;
      case ns:
        for (d = this.network.vertexes.iterator; d.next(); )
          a = d.value, a.pg = -1, a.finish = -1;
        for (a = this.network.edges.iterator; a.next(); )
          a.value.forest = false;
        this.dh = 0;
        for (d.reset(); d.next(); )
          b = d.value, b.sourceEdges.count === 0 && Ks(this, b);
        for (d.reset(); d.next(); )
          b = d.value, b.pg === -1 && Ks(this, b);
        for (a.reset(); a.next(); )
          d = a.value, d.forest || (b = d.fromVertex, c = b.finish, e = d.toVertex, f2 = e.finish, e.pg < b.pg && c < f2 && (this.network.sm(d), d.rev = true));
        break;
      case ss:
        a = this.network;
        b = a.vertexes.iterator;
        for (d = Infinity; b.next(); )
          d = Math.min(d, b.value.layer);
        if (Infinity > d) {
          if (0 > d)
            for (b.reset(); b.next(); )
              b.value.layer -= d;
          d = [];
          for (b.reset(); b.next(); )
            c = b.value, e = d[c.layer], e === void 0 ? d[c.layer] = [c] : e.push(c);
          for (c = b = 0; c < d.length; c++)
            if (e = d[c], !e || e.length === 0)
              b++;
            else if (0 < c)
              for (f2 = 0; f2 < e.length; f2++)
                e[f2].layer -= b;
          for (d = a.edges.iterator; d.next(); )
            b = d.value, b.fromVertex.layer < b.toVertex.layer && (a.sm(b), b.rev = true);
        }
    }
  };
  function Hs(a) {
    for (a = a.vertexes.iterator; a.next(); ) {
      var b = a.value;
      if (b.valid)
        return b;
    }
    return null;
  }
  function Is(a) {
    for (a = a.vertexes.iterator; a.next(); ) {
      var b = a.value;
      if (b.valid) {
        for (var c = true, d = b.destinationEdges; d.next(); )
          if (d.value.toVertex.valid) {
            c = false;
            break;
          }
        if (c)
          return b;
      }
    }
    return null;
  }
  function Js(a) {
    for (a = a.vertexes.iterator; a.next(); ) {
      var b = a.value;
      if (b.valid) {
        for (var c = true, d = b.sourceEdges; d.next(); )
          if (d.value.fromVertex.valid) {
            c = false;
            break;
          }
        if (c)
          return b;
      }
    }
    return null;
  }
  function Ks(a, b) {
    b.pg = a.dh;
    a.dh++;
    for (var c = b.destinationEdges; c.next(); ) {
      var d = c.value, e = d.toVertex;
      e.pg === -1 && (d.forest = true, Ks(a, e));
    }
    b.finish = a.dh;
    a.dh++;
  }
  ms.prototype.assignLayers = function() {
    switch (this.kl) {
      case Ls:
        Ms(this);
        break;
      case Ns:
        for (var a, b = this.network.vertexes.iterator; b.next(); )
          a = Os(this, b.value), this.ra = Math.max(a, this.ra);
        for (b.reset(); b.next(); )
          a = b.value, a.layer = this.ra - a.layer;
        break;
      default:
      case os:
        Ms(this);
        for (b = this.network.vertexes.iterator; b.next(); )
          b.value.valid = false;
        for (b.reset(); b.next(); )
          a = b.value, a.sourceEdges.count === 0 && Ps(this, a);
        a = Infinity;
        for (b.reset(); b.next(); )
          a = Math.min(a, b.value.layer);
        this.ra = -1;
        for (b.reset(); b.next(); ) {
          var c = b.value;
          c.layer -= a;
          this.ra = Math.max(this.ra, c.layer);
        }
    }
  };
  function Ms(a) {
    for (var b = a.network.vertexes.iterator; b.next(); ) {
      var c = Qs(a, b.value);
      a.ra = Math.max(c, a.ra);
    }
  }
  function Qs(a, b) {
    var c = 0;
    if (b.layer === -1) {
      for (var d = b.destinationEdges; d.next(); ) {
        var e = d.value, f2 = e.toVertex;
        e = a.linkMinLength(e);
        c = Math.max(c, Qs(a, f2) + e);
      }
      b.layer = c;
    } else
      c = b.layer;
    return c;
  }
  function Os(a, b) {
    var c = 0;
    if (b.layer === -1) {
      for (var d = b.sourceEdges; d.next(); ) {
        var e = d.value, f2 = e.fromVertex;
        e = a.linkMinLength(e);
        c = Math.max(c, Os(a, f2) + e);
      }
      b.layer = c;
    } else
      c = b.layer;
    return c;
  }
  function Ps(a, b) {
    if (!b.valid) {
      b.valid = true;
      for (var c = b.destinationEdges; c.next(); )
        Ps(a, c.value.toVertex);
      for (c = a.network.vertexes.iterator; c.next(); )
        c.value.component = -1;
      for (var d = b.sourceEdgesArrayAccess, e = d.length, f2 = 0; f2 < e; f2++) {
        var g2 = d[f2], h = g2.fromVertex, k = g2.toVertex;
        g2 = a.linkMinLength(g2);
        h.layer - k.layer > g2 && Es(a, h, 0, -1, true, false);
      }
      for (Es(a, b, 1, -1, true, true); b.component !== 0; ) {
        f2 = 0;
        d = Infinity;
        h = 0;
        k = null;
        for (g2 = a.network.vertexes.iterator; g2.next(); ) {
          var l2 = g2.value;
          if (l2.component === 1) {
            var m2 = 0, n2 = false, p2 = l2.sourceEdgesArrayAccess;
            e = p2.length;
            for (var r2 = 0; r2 < e; r2++) {
              var q2 = p2[r2], u2 = q2.fromVertex;
              m2 += 1;
              u2.component !== 1 && (f2 += 1, u2 = u2.layer - l2.layer, q2 = a.linkMinLength(q2), d = Math.min(d, u2 - q2));
            }
            p2 = l2.destinationEdgesArrayAccess;
            e = p2.length;
            for (r2 = 0; r2 < e; r2++)
              q2 = p2[r2].toVertex, --m2, q2.component !== 1 ? --f2 : n2 = true;
            (k === null || m2 < h) && !n2 && (k = l2, h = m2);
          }
        }
        if (0 < f2) {
          for (c.reset(); c.next(); )
            e = c.value, e.component === 1 && (e.layer += d);
          b.component = 0;
        } else
          k.component = 0;
      }
      for (c = a.network.vertexes.iterator; c.next(); )
        c.value.component = -1;
      for (Es(a, b, 1, -1, true, false); b.component !== 0; ) {
        d = 0;
        e = Infinity;
        f2 = 0;
        h = null;
        for (k = a.network.vertexes.iterator; k.next(); )
          if (g2 = k.value, g2.component === 1) {
            l2 = 0;
            m2 = false;
            p2 = g2.sourceEdgesArrayAccess;
            n2 = p2.length;
            for (r2 = 0; r2 < n2; r2++)
              q2 = p2[r2].fromVertex, l2 += 1, q2.component !== 1 ? d += 1 : m2 = true;
            p2 = g2.destinationEdgesArrayAccess;
            n2 = p2.length;
            for (r2 = 0; r2 < n2; r2++)
              q2 = p2[r2], u2 = q2.toVertex, --l2, u2.component !== 1 && (--d, u2 = g2.layer - u2.layer, q2 = a.linkMinLength(q2), e = Math.min(e, u2 - q2));
            (h === null || l2 > f2) && !m2 && (h = g2, f2 = l2);
          }
        if (0 > d) {
          for (c.reset(); c.next(); )
            d = c.value, d.component === 1 && (d.layer -= e);
          b.component = 0;
        } else
          h.component = 0;
      }
    }
  }
  function us(a, b, c) {
    return a.K === 90 ? c && !b.rev || !c && b.rev ? 270 : 90 : a.K === 180 ? c && !b.rev || !c && b.rev ? 0 : 180 : a.K === 270 ? c && !b.rev || !c && b.rev ? 90 : 270 : c && !b.rev || !c && b.rev ? 180 : 0;
  }
  ms.prototype.initializeIndices = function() {
    switch (this.$k) {
      default:
      case Rs:
        for (var a = this.network.vertexes.iterator; a.next(); ) {
          var b = a.value, c = b.layer;
          b.index = this.Bb[c];
          this.Bb[c]++;
        }
        break;
      case ps:
        a = this.network.vertexes.iterator;
        for (b = this.ra; 0 <= b; b--)
          for (a.reset(); a.next(); )
            c = a.value, c.layer === b && c.index === -1 && Ss(this, c);
        break;
      case Ts:
        for (a = this.network.vertexes.iterator, b = 0; b <= this.ra; b++)
          for (a.reset(); a.next(); )
            c = a.value, c.layer === b && c.index === -1 && Us(this, c);
    }
  };
  function Ss(a, b) {
    var c = b.layer;
    b.index = a.Bb[c];
    a.Bb[c]++;
    b = b.destinationEdgesArrayAccess;
    for (c = true; c; ) {
      c = false;
      for (var d = 0; d < b.length - 1; d++) {
        var e = b[d], f2 = b[d + 1];
        e.portFromColOffset > f2.portFromColOffset && (c = true, b[d] = f2, b[d + 1] = e);
      }
    }
    for (c = 0; c < b.length; c++)
      d = b[c], d.valid && (d = d.toVertex, d.index === -1 && Ss(a, d));
  }
  function Us(a, b) {
    var c = b.layer;
    b.index = a.Bb[c];
    a.Bb[c]++;
    b = b.sourceEdgesArrayAccess;
    for (var d = true; d; )
      for (d = false, c = 0; c < b.length - 1; c++) {
        var e = b[c], f2 = b[c + 1];
        e.portToColOffset > f2.portToColOffset && (d = true, b[c] = f2, b[c + 1] = e);
      }
    for (c = 0; c < b.length; c++)
      d = b[c], d.valid && (d = d.fromVertex, d.index === -1 && Us(a, d));
  }
  ms.prototype.reduceCrossings = function() {
    var a = this.countCrossings(), b = ys(this), c, d;
    for (c = 0; c < this.sj; c++) {
      for (d = 0; d <= this.ra; d++)
        Vs(this, d, 1), Ws(this, d, 1);
      var e = this.countCrossings();
      e < a && (a = e, b = ys(this));
      for (d = this.ra; 0 <= d; d--)
        Vs(this, d, -1), Ws(this, d, -1);
      e = this.countCrossings();
      e < a && (a = e, b = ys(this));
    }
    zs(this, b);
    for (c = 0; c < this.sj; c++) {
      for (d = 0; d <= this.ra; d++)
        Vs(this, d, 0), Ws(this, d, 0);
      e = this.countCrossings();
      e < a && (a = e, b = ys(this));
      for (d = this.ra; 0 <= d; d--)
        Vs(this, d, 0), Ws(this, d, 0);
      e = this.countCrossings();
      e < a && (a = e, b = ys(this));
    }
    zs(this, b);
    var f2, g2, h;
    switch (this.wk) {
      case Xs:
        break;
      case Ys:
        for (h = a + 1; (d = this.countCrossings()) < h; )
          for (h = d, c = this.ra; 0 <= c; c--)
            for (g2 = 0; g2 <= c; g2++) {
              for (f2 = true; f2; )
                for (f2 = false, d = c; d >= g2; d--)
                  f2 = Ws(this, d, -1) || f2;
              e = this.countCrossings();
              e >= a ? zs(this, b) : (a = e, b = ys(this));
              for (f2 = true; f2; )
                for (f2 = false, d = c; d >= g2; d--)
                  f2 = Ws(this, d, 1) || f2;
              e = this.countCrossings();
              e >= a ? zs(this, b) : (a = e, b = ys(this));
              for (f2 = true; f2; )
                for (f2 = false, d = g2; d <= c; d++)
                  f2 = Ws(this, d, 1) || f2;
              e >= a ? zs(this, b) : (a = e, b = ys(this));
              for (f2 = true; f2; )
                for (f2 = false, d = g2; d <= c; d++)
                  f2 = Ws(this, d, -1) || f2;
              e >= a ? zs(this, b) : (a = e, b = ys(this));
              for (f2 = true; f2; )
                for (f2 = false, d = c; d >= g2; d--)
                  f2 = Ws(this, d, 0) || f2;
              e >= a ? zs(this, b) : (a = e, b = ys(this));
              for (f2 = true; f2; )
                for (f2 = false, d = g2; d <= c; d++)
                  f2 = Ws(this, d, 0) || f2;
              e >= a ? zs(this, b) : (a = e, b = ys(this));
            }
        break;
      default:
      case qs:
        for (c = this.ra, g2 = 0, h = a + 1; (d = this.countCrossings()) < h; ) {
          h = d;
          for (f2 = true; f2; )
            for (f2 = false, d = c; d >= g2; d--)
              f2 = Ws(this, d, -1) || f2;
          e = this.countCrossings();
          e >= a ? zs(this, b) : (a = e, b = ys(this));
          for (f2 = true; f2; )
            for (f2 = false, d = c; d >= g2; d--)
              f2 = Ws(this, d, 1) || f2;
          e = this.countCrossings();
          e >= a ? zs(this, b) : (a = e, b = ys(this));
          for (f2 = true; f2; )
            for (f2 = false, d = g2; d <= c; d++)
              f2 = Ws(this, d, 1) || f2;
          e >= a ? zs(this, b) : (a = e, b = ys(this));
          for (f2 = true; f2; )
            for (f2 = false, d = g2; d <= c; d++)
              f2 = Ws(this, d, -1) || f2;
          e >= a ? zs(this, b) : (a = e, b = ys(this));
          for (f2 = true; f2; )
            for (f2 = false, d = c; d >= g2; d--)
              f2 = Ws(this, d, 0) || f2;
          e >= a ? zs(this, b) : (a = e, b = ys(this));
          for (f2 = true; f2; )
            for (f2 = false, d = g2; d <= c; d++)
              f2 = Ws(this, d, 0) || f2;
          e >= a ? zs(this, b) : (a = e, b = ys(this));
        }
    }
    zs(this, b);
  };
  function Vs(a, b, c) {
    var d = vs(a, b), e = a.Bb[b], f2 = Ds(a, b, c), g2 = Cs(a, b, c);
    for (c = 0; c < e; c++)
      g2[c] === -1 && (g2[c] = d[c].column), f2[c] === -1 && (f2[c] = d[c].column);
    for (var h = true, k; h; )
      for (h = false, c = 0; c < e - 1; c++)
        if (f2[c + 1] < f2[c] || f2[c + 1] === f2[c] && g2[c + 1] < g2[c])
          h = true, k = f2[c], f2[c] = f2[c + 1], f2[c + 1] = k, k = g2[c], g2[c] = g2[c + 1], g2[c + 1] = k, k = d[c], d[c] = d[c + 1], d[c + 1] = k;
    for (c = f2 = 0; c < e; c++)
      k = d[c], k.index = c, f2 += a.nodeMinColumnSpace(k, true), k.column = f2, f2 += 1, f2 += a.nodeMinColumnSpace(k, false);
    ws(a, b, d);
  }
  function Ws(a, b, c) {
    var d = vs(a, b), e = a.Bb[b];
    c = As(a, b, c);
    var f2;
    var g2 = [];
    for (f2 = 0; f2 < e; f2++)
      g2[f2] = -1;
    var h = [];
    for (f2 = 0; f2 < e; f2++)
      h[f2] = -1;
    for (var k = false, l2 = true; l2; )
      for (l2 = false, f2 = 0; f2 < e - 1; f2++) {
        var m2 = c[d[f2].index * e + d[f2 + 1].index], n2 = c[d[f2 + 1].index * e + d[f2].index], p2 = 0, r2 = 0, q2 = d[f2].column, u2 = d[f2 + 1].column, w = a.nodeMinColumnSpace(d[f2], true), v2 = a.nodeMinColumnSpace(d[f2], false), z2 = a.nodeMinColumnSpace(d[f2 + 1], true), y2 = a.nodeMinColumnSpace(d[f2 + 1], false);
        w = q2 - w + z2;
        v2 = u2 - v2 + y2;
        var B2 = d[f2].sourceEdges.iterator;
        for (B2.reset(); B2.next(); )
          if (z2 = B2.value, y2 = z2.fromVertex, z2.valid && y2.layer === b) {
            for (z2 = 0; d[z2] !== y2; )
              z2++;
            z2 < f2 && (p2 += 2 * (f2 - z2), r2 += 2 * (f2 + 1 - z2));
            z2 === f2 + 1 && (p2 += 1);
            z2 > f2 + 1 && (p2 += 4 * (z2 - f2), r2 += 4 * (z2 - (f2 + 1)));
          }
        B2 = d[f2].destinationEdges.iterator;
        for (B2.reset(); B2.next(); )
          if (z2 = B2.value, y2 = z2.toVertex, z2.valid && y2.layer === b) {
            for (z2 = 0; d[z2] !== y2; )
              z2++;
            z2 === f2 + 1 && (r2 += 1);
          }
        B2 = d[f2 + 1].sourceEdges.iterator;
        for (B2.reset(); B2.next(); )
          if (z2 = B2.value, y2 = z2.fromVertex, z2.valid && y2.layer === b) {
            for (z2 = 0; d[z2] !== y2; )
              z2++;
            z2 < f2 && (p2 += 2 * (f2 + 1 - z2), r2 += 2 * (f2 - z2));
            z2 === f2 && (r2 += 1);
            z2 > f2 + 1 && (p2 += 4 * (z2 - (f2 + 1)), r2 += 4 * (z2 - f2));
          }
        B2 = d[f2 + 1].destinationEdges.iterator;
        for (B2.reset(); B2.next(); )
          if (z2 = B2.value, y2 = z2.toVertex, z2.valid && y2.layer === b) {
            for (z2 = 0; d[z2] !== y2; )
              z2++;
            z2 === f2 && (p2 += 1);
          }
        z2 = y2 = 0;
        B2 = g2[d[f2].index];
        var A2 = h[d[f2].index], E = g2[d[f2 + 1].index], Q2 = h[d[f2 + 1].index];
        B2 !== -1 && (y2 += Math.abs(B2 - q2), z2 += Math.abs(B2 - v2));
        A2 !== -1 && (y2 += Math.abs(A2 - q2), z2 += Math.abs(A2 - v2));
        E !== -1 && (y2 += Math.abs(E - u2), z2 += Math.abs(E - w));
        Q2 !== -1 && (y2 += Math.abs(Q2 - u2), z2 += Math.abs(Q2 - w));
        if (r2 < p2 - 0.5 || r2 === p2 && n2 < m2 - 0.5 || r2 === p2 && n2 === m2 && z2 < y2 - 0.5)
          l2 = k = true, d[f2].column = v2, d[f2 + 1].column = w, m2 = d[f2], d[f2] = d[f2 + 1], d[f2 + 1] = m2;
      }
    for (f2 = 0; f2 < e; f2++)
      d[f2].index = f2;
    ws(a, b, d);
    return k;
  }
  ms.prototype.straightenAndPack = function() {
    var a = (this.ag & 1) !== 0;
    var b = (this.ag & Zs) !== 0;
    1e3 < this.network.edges.count && b && (a = false);
    if (a) {
      var c = [];
      for (b = 0; b <= this.ra; b++)
        c[b] = 0;
      for (var d, e = this.network.vertexes.iterator; e.next(); ) {
        var f2 = e.value;
        b = f2.layer;
        d = f2.column;
        f2 = this.nodeMinColumnSpace(f2, false);
        c[b] = Math.max(c[b], d + f2);
      }
      for (e.reset(); e.next(); )
        f2 = e.value, b = f2.layer, d = f2.column, f2.column = (8 * (this.Ea - c[b]) >> 1) + 8 * d;
      this.Ea *= 8;
    }
    if ((this.ag & 2) !== 0)
      for (c = true; c; ) {
        c = false;
        for (b = this.vc + 1; b <= this.ra; b++)
          c = $s(this, b, 1) || c;
        for (b = this.vc - 1; 0 <= b; b--)
          c = $s(this, b, -1) || c;
        c = $s(this, this.vc, 0) || c;
      }
    if ((this.ag & 4) !== 0) {
      for (b = this.vc + 1; b <= this.ra; b++)
        at(this, b, 1);
      for (b = this.vc - 1; 0 <= b; b--)
        at(this, b, -1);
      at(this, this.vc, 0);
    }
    a && (bt(this, -1), bt(this, 1));
    if ((this.ag & 2) !== 0)
      for (c = true; c; ) {
        c = false;
        c = $s(this, this.vc, 0) || c;
        for (b = this.vc + 1; b <= this.ra; b++)
          c = $s(this, b, 0) || c;
        for (b = this.vc - 1; 0 <= b; b--)
          c = $s(this, b, 0) || c;
      }
  };
  function $s(a, b, c) {
    for (var d = false; ct(a, b, c); )
      d = true;
    return d;
  }
  function ct(a, b, c) {
    var d, e = vs(a, b), f2 = a.Bb[b], g2 = Cs(a, b, -1);
    if (0 < c)
      for (d = 0; d < f2; d++)
        g2[d] = -1;
    var h = Cs(a, b, 1);
    if (0 > c)
      for (d = 0; d < f2; d++)
        h[d] = -1;
    for (var k = false, l2 = true; l2; )
      for (l2 = false, d = 0; d < f2; d++) {
        var m2 = e[d].column, n2 = a.nodeMinColumnSpace(e[d], true), p2 = a.nodeMinColumnSpace(e[d], false), r2 = 0;
        0 > d - 1 || m2 - e[d - 1].column - 1 > n2 + a.nodeMinColumnSpace(e[d - 1], false) ? r2 = m2 - 1 : r2 = m2;
        n2 = d + 1 >= f2 || e[d + 1].column - m2 - 1 > p2 + a.nodeMinColumnSpace(e[d + 1], true) ? m2 + 1 : m2;
        var q2 = p2 = 0, u2 = 0;
        if (0 >= c)
          for (var w = e[d].sourceEdges.iterator; w.next(); ) {
            var v2 = w.value;
            var z2 = v2.fromVertex;
            if (v2.valid && z2.layer !== b) {
              var y2 = xs(v2);
              var B2 = v2.portFromColOffset;
              v2 = v2.portToColOffset;
              z2 = z2.column;
              p2 += (Math.abs(m2 + v2 - (z2 + B2)) + 1) * y2;
              q2 += (Math.abs(r2 + v2 - (z2 + B2)) + 1) * y2;
              u2 += (Math.abs(n2 + v2 - (z2 + B2)) + 1) * y2;
            }
          }
        if (0 <= c)
          for (w = e[d].destinationEdges.iterator; w.next(); )
            v2 = w.value, z2 = v2.toVertex, v2.valid && z2.layer !== b && (y2 = xs(v2), B2 = v2.portFromColOffset, v2 = v2.portToColOffset, z2 = z2.column, p2 += (Math.abs(m2 + B2 - (z2 + v2)) + 1) * y2, q2 += (Math.abs(r2 + B2 - (z2 + v2)) + 1) * y2, u2 += (Math.abs(n2 + B2 - (z2 + v2)) + 1) * y2);
        v2 = B2 = y2 = 0;
        w = g2[e[d].index];
        z2 = h[e[d].index];
        w !== -1 && (y2 += Math.abs(w - m2), B2 += Math.abs(w - r2), v2 += Math.abs(w - n2));
        z2 !== -1 && (y2 += Math.abs(z2 - m2), B2 += Math.abs(z2 - r2), v2 += Math.abs(z2 - n2));
        if (q2 < p2 || q2 === p2 && B2 < y2)
          l2 = k = true, e[d].column = r2;
        else if (u2 < p2 || u2 === p2 && v2 < y2)
          l2 = k = true, e[d].column = n2;
      }
    ws(a, b, e);
    a.normalize();
    return k;
  }
  function at(a, b, c) {
    var d = vs(a, b), e = a.Bb[b], f2 = Ds(a, b, c), g2 = [];
    for (c = 0; c < e; c++)
      g2[c] = f2[c];
    for (f2 = true; f2; )
      for (f2 = false, c = 0; c < e; c++) {
        var h = d[c].column, k = a.nodeMinColumnSpace(d[c], true), l2 = a.nodeMinColumnSpace(d[c], false), m2 = 0;
        if (g2[c] === -1)
          if (c === 0 && c === e - 1)
            m2 = h;
          else if (c === 0) {
            var n2 = d[c + 1].column;
            n2 - h === l2 + a.nodeMinColumnSpace(d[c + 1], true) ? m2 = h - 1 : m2 = h;
          } else
            c === e - 1 ? (n2 = d[c - 1].column, m2 = h - n2 === k + a.nodeMinColumnSpace(d[c - 1], false) ? h + 1 : h) : (n2 = d[c - 1].column, k = n2 + a.nodeMinColumnSpace(d[c - 1], false) + k + 1, n2 = d[c + 1].column, l2 = n2 - a.nodeMinColumnSpace(d[c + 1], true) - l2 - 1, m2 = (k + l2) / 2 | 0);
        else
          c === 0 && c === e - 1 ? m2 = g2[c] : c === 0 ? (n2 = d[c + 1].column, l2 = n2 - a.nodeMinColumnSpace(d[c + 1], true) - l2 - 1, m2 = Math.min(g2[c], l2)) : c === e - 1 ? (n2 = d[c - 1].column, k = n2 + a.nodeMinColumnSpace(d[c - 1], false) + k + 1, m2 = Math.max(g2[c], k)) : (n2 = d[c - 1].column, k = n2 + a.nodeMinColumnSpace(d[c - 1], false) + k + 1, n2 = d[c + 1].column, l2 = n2 - a.nodeMinColumnSpace(d[c + 1], true) - l2 - 1, k < g2[c] && g2[c] < l2 ? m2 = g2[c] : k >= g2[c] ? m2 = k : l2 <= g2[c] && (m2 = l2));
        m2 !== h && (f2 = true, d[c].column = m2);
      }
    ws(a, b, d);
    a.normalize();
  }
  function dt(a, b) {
    for (var c = true, d = a.network.vertexes.iterator; d.next(); ) {
      var e = d.value, f2 = a.nodeMinColumnSpace(e, true), g2 = a.nodeMinColumnSpace(e, false);
      if (e.column - f2 <= b && e.column + g2 >= b) {
        c = false;
        break;
      }
    }
    a = false;
    if (c)
      for (d.reset(); d.next(); )
        c = d.value, c.column > b && (--c.column, a = true);
    return a;
  }
  function et(a, b) {
    var c = b + 1;
    var d, e = [], f2 = [];
    for (d = 0; d <= a.ra; d++)
      e[d] = false, f2[d] = false;
    for (var g2 = a.network.vertexes.iterator; g2.next(); ) {
      d = g2.value;
      var h = d.column - a.nodeMinColumnSpace(d, true), k = d.column + a.nodeMinColumnSpace(d, false);
      h <= b && k >= b && (e[d.layer] = true);
      h <= c && k >= c && (f2[d.layer] = true);
    }
    h = true;
    c = false;
    for (d = 0; d <= a.ra; d++)
      h = h && !(e[d] && f2[d]);
    if (h)
      for (g2.reset(); g2.next(); )
        a = g2.value, a.column > b && (--a.column, c = true);
    return c;
  }
  function bt(a, b) {
    for (var c = 0; c <= a.Ea; c++)
      for (; dt(a, c); )
        ;
    a.normalize();
    for (c = 0; c < a.Ea; c++)
      for (; et(a, c); )
        ;
    a.normalize();
    var d;
    if (0 < b)
      for (c = 0; c <= a.Ea; c++) {
        var e = ys(a);
        var f2 = Bs(a);
        for (d = f2 + 1; f2 < d; ) {
          d = f2;
          ft(a, c, 1);
          var g2 = Bs(a);
          g2 > f2 ? zs(a, e) : g2 < f2 && (f2 = g2, e = ys(a));
        }
      }
    if (0 > b)
      for (c = a.Ea; 0 <= c; c--)
        for (e = ys(a), f2 = Bs(a), d = f2 + 1; f2 < d; )
          d = f2, ft(a, c, -1), g2 = Bs(a), g2 > f2 ? zs(a, e) : g2 < f2 && (f2 = g2, e = ys(a));
    a.normalize();
  }
  function ft(a, b, c) {
    a.Ec = 0;
    for (var d = a.network.vertexes.iterator; d.next(); )
      d.value.component = -1;
    if (0 < c)
      for (d.reset(); d.next(); ) {
        var e = d.value;
        e.column - a.nodeMinColumnSpace(e, true) <= b && (e.component = a.Ec);
      }
    if (0 > c)
      for (d.reset(); d.next(); )
        e = d.value, e.column + a.nodeMinColumnSpace(e, false) >= b && (e.component = a.Ec);
    a.Ec++;
    for (d.reset(); d.next(); )
      b = d.value, b.component === -1 && (Fs(a, b, a.Ec, -1, true, true), a.Ec++);
    var f2;
    b = [];
    for (f2 = 0; f2 < a.Ec * a.Ec; f2++)
      b[f2] = false;
    e = [];
    for (f2 = 0; f2 < (a.ra + 1) * (a.Ea + 1); f2++)
      e[f2] = -1;
    for (d.reset(); d.next(); ) {
      f2 = d.value;
      for (var g2 = f2.layer, h = Math.max(0, f2.column - a.nodeMinColumnSpace(f2, true)), k = Math.min(a.Ea, f2.column + a.nodeMinColumnSpace(f2, false)); h <= k; h++)
        e[g2 * (a.Ea + 1) + h] = f2.component;
    }
    for (f2 = 0; f2 <= a.ra; f2++) {
      if (0 < c)
        for (g2 = 0; g2 < a.Ea; g2++)
          e[f2 * (a.Ea + 1) + g2] !== -1 && e[f2 * (a.Ea + 1) + g2 + 1] !== -1 && e[f2 * (a.Ea + 1) + g2] !== e[f2 * (a.Ea + 1) + g2 + 1] && (b[e[f2 * (a.Ea + 1) + g2] * a.Ec + e[f2 * (a.Ea + 1) + g2 + 1]] = true);
      if (0 > c)
        for (g2 = a.Ea; 0 < g2; g2--)
          e[f2 * (a.Ea + 1) + g2] !== -1 && e[f2 * (a.Ea + 1) + g2 - 1] !== -1 && e[f2 * (a.Ea + 1) + g2] !== e[f2 * (a.Ea + 1) + g2 - 1] && (b[e[f2 * (a.Ea + 1) + g2] * a.Ec + e[f2 * (a.Ea + 1) + g2 - 1]] = true);
    }
    e = [];
    for (f2 = 0; f2 < a.Ec; f2++)
      e[f2] = true;
    g2 = [];
    for (g2.push(0); g2.length !== 0; )
      if (k = g2[g2.length - 1], g2.pop(), e[k])
        for (e[k] = false, f2 = 0; f2 < a.Ec; f2++)
          b[k * a.Ec + f2] && g2.splice(0, 0, f2);
    if (0 < c)
      for (d.reset(); d.next(); )
        a = d.value, e[a.component] && --a.column;
    if (0 > c)
      for (d.reset(); d.next(); )
        c = d.value, e[c.component] && (c.column += 1);
  }
  ms.prototype.commitLayout = function() {
    if (this.setsPortSpots)
      for (var a = ts(this, true), b = ts(this, false), c = this.network.edges.iterator; c.next(); ) {
        var d = c.value.link;
        d !== null && (d.fromSpot = a, d.toSpot = b);
      }
    this.commitNodes();
    this.Ju();
    this.isRouting && this.commitLinks();
  };
  function ts(a, b) {
    return a.K === 270 ? b ? ad2 : dd2 : a.K === 90 ? b ? dd2 : ad2 : a.K === 180 ? b ? bd2 : cd2 : b ? cd2 : bd2;
  }
  ms.prototype.commitNodes = function() {
    this.ae = [];
    this.xd = [];
    this.wd = [];
    this.Ka = [];
    for (var a = 0; a <= this.ra; a++)
      this.ae[a] = 0, this.xd[a] = 0, this.wd[a] = 0, this.Ka[a] = 0;
    for (a = this.network.vertexes.iterator; a.next(); ) {
      var b = a.value, c = b.layer;
      this.ae[c] = Math.max(this.ae[c], this.nodeMinLayerSpace(b, true));
      this.xd[c] = Math.max(this.xd[c], this.nodeMinLayerSpace(b, false));
    }
    b = 0;
    c = this.be;
    for (var d = 0; d <= this.ra; d++) {
      var e = c;
      0 >= this.ae[d] + this.xd[d] && (e = 0);
      0 < d && (b += e / 2);
      this.K === 90 || this.K === 0 ? (b += this.xd[d], this.wd[d] = b, b += this.ae[d]) : (b += this.ae[d], this.wd[d] = b, b += this.xd[d]);
      d < this.ra && (b += e / 2);
      this.Ka[d] = b;
    }
    c = b;
    b = this.arrangementOrigin;
    for (d = 0; d <= this.ra; d++)
      this.K === 270 ? this.wd[d] = b.y + this.wd[d] : this.K === 90 ? (this.wd[d] = b.y + c - this.wd[d], this.Ka[d] = c - this.Ka[d]) : this.K === 180 ? this.wd[d] = b.x + this.wd[d] : (this.wd[d] = b.x + c - this.wd[d], this.Ka[d] = c - this.Ka[d]);
    a.reset();
    for (c = d = Infinity; a.next(); ) {
      e = a.value;
      var f2 = e.layer, g2 = e.column | 0;
      if (this.K === 270 || this.K === 90) {
        var h = b.x + this.ac * g2;
        f2 = this.wd[f2];
      } else
        h = this.wd[f2], f2 = b.y + this.ac * g2;
      e.centerX = h;
      e.centerY = f2;
      d = Math.min(e.x, d);
      c = Math.min(e.y, c);
    }
    d = b.x - d;
    b = b.y - c;
    this.Rc = new K2(d, b);
    for (a.reset(); a.next(); )
      c = a.value, c.x += d, c.y += b, c.commit();
  };
  ms.prototype.Ju = function() {
    for (var a = 0, b = this.be, c = 0; c <= this.ra; c++)
      a += this.ae[c], a += this.xd[c];
    a += this.ra * b;
    b = [];
    c = this.ac * this.Ea;
    for (var d = this.maxLayer; 0 <= d; d--)
      this.K === 270 ? d === 0 ? b.push(new N2(0, 0, c, Math.abs(this.Ka[0]))) : b.push(new N2(0, this.Ka[d - 1], c, Math.abs(this.Ka[d - 1] - this.Ka[d]))) : this.K === 90 ? d === 0 ? b.push(new N2(0, this.Ka[0], c, Math.abs(this.Ka[0] - a))) : b.push(new N2(0, this.Ka[d], c, Math.abs(this.Ka[d - 1] - this.Ka[d]))) : this.K === 180 ? d === 0 ? b.push(new N2(0, 0, Math.abs(this.Ka[0]), c)) : b.push(new N2(this.Ka[d - 1], 0, Math.abs(this.Ka[d - 1] - this.Ka[d]), c)) : d === 0 ? b.push(new N2(this.Ka[0], 0, Math.abs(this.Ka[0] - a), c)) : b.push(new N2(this.Ka[d], 0, Math.abs(this.Ka[d - 1] - this.Ka[d]), c));
    this.commitLayers(b, this.Rc);
  };
  ms.prototype.commitLayers = function() {
  };
  ms.prototype.commitLinks = function() {
    for (var a = this.network.edges.iterator, b; a.next(); )
      b = a.value.link, b !== null && (b.Lh(), b.Rj(), b.vf());
    for (a.reset(); a.next(); )
      b = a.value.link, b !== null && b.vg();
    for (a.reset(); a.next(); ) {
      var c = a.value;
      b = c.link;
      if (b !== null) {
        b.Lh();
        var d = b, e = d.fromNode, f2 = d.toNode, g2 = d.fromPort, h = d.toPort;
        if (e !== null) {
          var k = e.findVisibleNode();
          k !== null && k !== e && (e = k, g2 = k.port);
        }
        f2 !== null && (k = f2.findVisibleNode(), k !== null && k !== f2 && (f2 = k, h = k.port));
        var l2 = b.computeSpot(true, g2);
        k = b.computeSpot(false, h);
        var m2 = c.fromVertex, n2 = c.toVertex;
        if (c.valid) {
          if (b.curve === Uf2 && b.pointsCount === 4)
            if (m2.column === n2.column)
              c = b.getLinkPoint(e, g2, l2, true, false, f2, h), g2 = b.getLinkPoint(f2, h, k, false, false, e, g2), c.u() || c.set(e.actualBounds.center), g2.u() || g2.set(f2.actualBounds.center), b.Rj(), b.tf(c.x, c.y), b.tf((2 * c.x + g2.x) / 3, (2 * c.y + g2.y) / 3), b.tf((c.x + 2 * g2.x) / 3, (c.y + 2 * g2.y) / 3), b.tf(g2.x, g2.y);
            else {
              var p2 = false, r2 = false;
              g2 !== null && l2 === rc2 && (p2 = true);
              h !== null && k === rc2 && (r2 = true);
              if (p2 || r2) {
                var q2 = b.i(0).x;
                c = b.i(0).y;
                m2 = b.i(3).x;
                d = b.i(3).y;
                if (p2) {
                  if (this.K === 90 || this.K === 270) {
                    p2 = q2;
                    var u2 = (c + d) / 2;
                  } else
                    p2 = (q2 + m2) / 2, u2 = c;
                  b.M(1, p2, u2);
                  l2 = b.getLinkPoint(e, g2, l2, true, false, f2, h);
                  l2.u() || l2.set(e.actualBounds.center);
                  b.M(0, l2.x, l2.y);
                }
                r2 && (this.K === 90 || this.K === 270 ? (l2 = m2, c = (c + d) / 2) : (l2 = (q2 + m2) / 2, c = d), b.M(2, l2, c), e = b.getLinkPoint(f2, h, k, false, false, e, g2), e.u() || e.set(f2.actualBounds.center), b.M(3, e.x, e.y));
              }
            }
          b.vf();
        } else if (m2.layer === n2.layer)
          b.vf();
        else {
          p2 = r2 = false;
          u2 = this.be;
          q2 = b.firstPickIndex + 1;
          if (b.isOrthogonal) {
            p2 = true;
            var w = b.pointsCount;
            4 < w && b.points.removeRange(2, w - 3);
          } else if (b.curve === Uf2)
            r2 = true, w = b.pointsCount, 4 < w && b.points.removeRange(2, w - 3), w === 4 && (q2 = 2);
          else {
            w = b.pointsCount;
            var v2 = l2 === rc2, z2 = k === rc2;
            2 < w && v2 && z2 ? b.points.removeRange(1, w - 2) : 3 < w && v2 && !z2 ? b.points.removeRange(1, w - 3) : 3 < w && !v2 && z2 ? b.points.removeRange(2, w - 2) : 4 < w && !v2 && !z2 && b.points.removeRange(2, w - 3);
          }
          if (c.rev) {
            for (; n2 !== null && m2 !== n2; ) {
              var y2 = w = null;
              for (v2 = n2.sourceEdges.iterator; v2.next() && (z2 = v2.value, z2.link !== c.link || (w = z2.fromVertex, y2 = z2.toVertex, w.node !== null)); )
                ;
              if (w === null)
                break;
              if (w !== m2) {
                v2 = b.i(q2 - 1).x;
                z2 = b.i(q2 - 1).y;
                var B2 = w.centerX;
                var A2 = w.centerY;
                if (p2)
                  this.K === 180 || this.K === 0 ? q2 === b.firstPickIndex + 1 ? (b.l(q2++, v2, z2), b.l(q2++, v2, A2)) : (y2 !== null ? y2.centerY : z2) !== A2 && (y2 = this.Ka[w.layer - 1] + this.Rc.x, b.l(q2++, y2, z2), b.l(q2++, y2, A2)) : q2 === b.firstPickIndex + 1 ? (b.l(q2++, v2, z2), b.l(q2++, B2, z2)) : (y2 !== null ? y2.centerX : v2) !== B2 && (y2 = this.Ka[w.layer - 1] + this.Rc.y, b.l(q2++, v2, y2), b.l(q2++, B2, y2));
                else if (q2 === b.firstPickIndex + 1) {
                  y2 = Math.max(10, this.ae[n2.layer]);
                  var E = Math.max(10, this.xd[n2.layer]);
                  if (r2)
                    this.K === 180 ? B2 <= n2.bounds.x ? (n2 = n2.bounds.x, b.l(q2++, n2 - y2, A2), b.l(q2++, n2, A2), b.l(q2++, n2 + E, A2)) : (b.l(q2++, B2 - y2, A2), b.l(q2++, B2, A2), b.l(q2++, B2 + E, A2)) : this.K === 90 ? A2 >= n2.bounds.bottom ? (n2 = n2.bounds.y + n2.bounds.height, b.l(q2++, B2, n2 + E), b.l(q2++, B2, n2), b.l(q2++, B2, n2 - y2)) : (b.l(q2++, B2, A2 + E), b.l(q2++, B2, A2), b.l(q2++, B2, A2 - y2)) : this.K === 270 ? A2 <= n2.bounds.y ? (n2 = n2.bounds.y, b.l(q2++, B2, n2 - y2), b.l(q2++, B2, n2), b.l(q2++, B2, n2 + E)) : (b.l(q2++, B2, A2 - y2), b.l(q2++, B2, A2), b.l(q2++, B2, A2 + E)) : this.K === 0 && (B2 >= n2.bounds.right ? (n2 = n2.bounds.x + n2.bounds.width, b.l(q2++, n2 + E, A2), b.l(q2++, n2, A2), b.l(q2++, n2 - y2, A2)) : (b.l(q2++, B2 + E, A2), b.l(q2++, B2, A2), b.l(q2++, B2 - y2, A2)));
                  else {
                    b.l(q2++, v2, z2);
                    var Q2 = 0;
                    if (this.K === 180 || this.K === 0) {
                      if (this.K === 180 ? B2 >= n2.bounds.right : B2 <= n2.bounds.x)
                        Q2 = (this.K === 0 ? -y2 : E) / 2;
                      b.l(q2++, v2 + Q2, A2);
                    } else {
                      if (this.K === 270 ? A2 >= n2.bounds.bottom : A2 <= n2.bounds.y)
                        Q2 = (this.K === 90 ? -y2 : E) / 2;
                      b.l(q2++, B2, z2 + Q2);
                    }
                    b.l(q2++, B2, A2);
                  }
                } else
                  y2 = Math.max(10, this.ae[w.layer]), E = Math.max(10, this.xd[w.layer]), r2 ? this.K === 180 ? (b.l(q2++, B2 - y2 - u2, A2), b.l(q2++, Math.min(B2 - y2 + u2 / 2, B2), A2), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, Math.max(B2 + E - u2 / 2, B2), A2), b.l(q2++, B2 + E + u2, A2)) : this.K === 90 ? (b.l(q2++, B2, A2 + E + u2), b.l(q2++, B2, Math.max(A2 + E - u2 / 2, A2)), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, B2, Math.min(A2 - y2 + u2 / 2, A2)), b.l(q2++, B2, A2 - y2 - u2)) : this.K === 270 ? (b.l(q2++, B2, A2 - y2 - u2), b.l(q2++, B2, Math.min(A2 - y2 + u2 / 2, A2)), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, B2, Math.max(A2 + E - u2 / 2, A2)), b.l(q2++, B2, A2 + E + u2)) : (b.l(q2++, B2 + E + u2, A2), b.l(q2++, Math.max(B2 + E - u2 / 2, B2), A2), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, Math.min(B2 - y2 + u2 / 2, B2), A2), b.l(q2++, B2 - y2 - u2, A2)) : b.l(q2++, B2, A2);
              }
              n2 = w;
            }
            if (h === null || l2 !== rc2 || p2)
              if (v2 = b.i(q2 - 1).x, z2 = b.i(q2 - 1).y, B2 = b.i(q2).x, A2 = b.i(q2).y, p2)
                u2 = this.xd[m2.layer], this.K === 180 || this.K === 0 ? (p2 = z2, p2 >= m2.bounds.y && p2 <= m2.bounds.bottom && (this.K === 180 ? B2 >= m2.bounds.x : B2 <= m2.bounds.right) && (n2 = m2.centerX + (this.K === 180 ? -u2 : u2), p2 < m2.bounds.y + m2.bounds.height / 2 ? p2 = m2.bounds.y - this.ac / 2 : p2 = m2.bounds.bottom + this.ac / 2, b.l(q2++, n2, z2), b.l(q2++, n2, p2)), b.l(q2++, B2, p2)) : (p2 = v2, p2 >= m2.bounds.x && p2 <= m2.bounds.right && (this.K === 270 ? A2 >= m2.bounds.y : A2 <= m2.bounds.bottom) && (n2 = m2.centerY + (this.K === 270 ? -u2 : u2), p2 < m2.bounds.x + m2.bounds.width / 2 ? p2 = m2.bounds.x - this.ac / 2 : p2 = m2.bounds.right + this.ac / 2, b.l(q2++, v2, n2), b.l(q2++, p2, n2)), b.l(q2++, p2, A2)), b.l(q2++, B2, A2);
              else if (r2)
                y2 = Math.max(10, this.ae[m2.layer]), E = Math.max(10, this.xd[m2.layer]), this.K === 180 && B2 >= m2.bounds.x ? (n2 = m2.bounds.x + m2.bounds.width, b.M(q2 - 2, n2, z2), b.M(q2 - 1, n2 + E, z2)) : this.K === 90 && A2 <= m2.bounds.bottom ? (n2 = m2.bounds.y, b.M(q2 - 2, v2, n2), b.M(q2 - 1, v2, n2 - y2)) : this.K === 270 && A2 >= m2.bounds.y ? (n2 = m2.bounds.y + m2.bounds.height, b.M(q2 - 2, v2, n2), b.M(q2 - 1, v2, n2 + E)) : this.K === 0 && B2 <= m2.bounds.right && (n2 = m2.bounds.x, b.M(q2 - 2, n2, z2), b.M(q2 - 1, n2 - y2, z2));
              else {
                y2 = Math.max(10, this.ae[m2.layer]);
                E = Math.max(10, this.xd[m2.layer]);
                p2 = 0;
                if (this.K === 180 || this.K === 0) {
                  if (this.K === 180 ? B2 <= m2.bounds.x : B2 >= m2.bounds.right)
                    p2 = (this.K === 0 ? E : -y2) / 2;
                  b.l(q2++, B2 + p2, z2);
                } else {
                  if (this.K === 270 ? A2 <= m2.bounds.y : A2 >= m2.bounds.bottom)
                    p2 = (this.K === 90 ? E : -y2) / 2;
                  b.l(q2++, v2, A2 + p2);
                }
                b.l(q2++, B2, A2);
              }
          } else {
            for (; m2 !== null && m2 !== n2; ) {
              y2 = w = null;
              for (m2 = m2.destinationEdges.iterator; m2.next() && (v2 = m2.value, v2.link !== c.link || (w = v2.toVertex, y2 = v2.fromVertex, y2.node !== null && (y2 = null), w.node !== null)); )
                ;
              if (w === null)
                break;
              w !== n2 && (v2 = b.i(q2 - 1).x, z2 = b.i(q2 - 1).y, B2 = w.centerX, A2 = w.centerY, p2 ? this.K === 180 || this.K === 0 ? (y2 !== null ? y2.centerY : z2) !== A2 && (y2 = this.Ka[w.layer] + this.Rc.x, q2 === b.firstPickIndex + 1 && (y2 = this.K === 0 ? Math.max(y2, v2) : Math.min(y2, v2)), b.l(q2++, y2, z2), b.l(q2++, y2, A2)) : (y2 !== null ? y2.centerX : v2) !== B2 && (y2 = this.Ka[w.layer] + this.Rc.y, q2 === b.firstPickIndex + 1 && (y2 = this.K === 90 ? Math.max(y2, z2) : Math.min(y2, z2)), b.l(q2++, v2, y2), b.l(q2++, B2, y2)) : (y2 = Math.max(10, this.ae[w.layer]), E = Math.max(10, this.xd[w.layer]), r2 ? this.K === 180 ? (b.l(q2++, B2 + E + u2, A2), b.l(q2++, Math.max(B2 + E - u2 / 2, B2), A2), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, Math.min(B2 - y2 + u2 / 2, B2), A2), b.l(q2++, B2 - y2 - u2, A2)) : this.K === 90 ? (b.l(q2++, B2, A2 - y2 - u2), b.l(q2++, B2, Math.min(A2 - y2 + u2 / 2, A2)), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, B2, Math.max(A2 + E - u2 / 2, A2)), b.l(q2++, B2, A2 + E + u2)) : this.K === 270 ? (b.l(q2++, B2, A2 + E + u2), b.l(q2++, B2, Math.max(A2 + E - u2 / 2, A2)), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, B2, Math.min(A2 - y2 + u2 / 2, A2)), b.l(q2++, B2, A2 - y2 - u2)) : (b.l(q2++, B2 - y2 - u2, A2), b.l(q2++, Math.min(B2 - y2 + u2 / 2, B2), A2), b.l(q2++, B2, A2), b.l(q2++, B2, A2), b.l(q2++, Math.max(B2 + E - u2 / 2, B2), A2), b.l(q2++, B2 + E + u2, A2)) : this.K === 180 ? (b.l(q2++, B2 + E, A2), b.l(q2++, B2 - y2, A2)) : this.K === 90 ? (b.l(q2++, B2, A2 - y2), b.l(q2++, B2, A2 + E)) : this.K === 270 ? (b.l(q2++, B2, A2 + E), b.l(q2++, B2, A2 - y2)) : (b.l(q2++, B2 - y2, A2), b.l(q2++, B2 + E, A2))));
              m2 = w;
            }
            p2 && (v2 = b.i(q2 - 1).x, z2 = b.i(q2 - 1).y, B2 = b.i(q2).x, A2 = b.i(q2).y, this.K === 180 || this.K === 0 ? z2 !== A2 && (y2 = this.K === 0 ? Math.min(Math.max((B2 + v2) / 2, this.Ka[n2.layer] + this.Rc.x), B2) : Math.max(Math.min((B2 + v2) / 2, this.Ka[n2.layer] + this.Rc.x), B2), b.l(q2++, y2, z2), b.l(q2++, y2, A2)) : v2 !== B2 && (y2 = this.K === 90 ? Math.min(Math.max((A2 + z2) / 2, this.Ka[n2.layer] + this.Rc.y), A2) : Math.max(Math.min((A2 + z2) / 2, this.Ka[n2.layer] + this.Rc.y), A2), b.l(q2++, v2, y2), b.l(q2++, B2, y2)));
          }
          d !== null && r2 && (g2 !== null && (l2 === rc2 && (l2 = b.i(0), d = b.i(2), l2.A(d) || b.M(1, (l2.x + d.x) / 2, (l2.y + d.y) / 2)), l2 = b.getLinkPoint(e, g2, rc2, true, false, f2, h), l2.u() || l2.set(e.actualBounds.center), b.M(0, l2.x, l2.y)), h !== null && (k === rc2 && (k = b.i(b.pointsCount - 1), l2 = b.i(b.pointsCount - 3), k.A(l2) || b.M(b.pointsCount - 2, (k.x + l2.x) / 2, (k.y + l2.y) / 2)), e = b.getLinkPoint(f2, h, rc2, false, false, e, g2), e.u() || e.set(f2.actualBounds.center), b.M(b.pointsCount - 1, e.x, e.y)));
          b.vf();
          c.commit();
        }
      }
    }
    this.avoidOrthogonalOverlaps();
  };
  ms.prototype.avoidOrthogonalOverlaps = function() {
    if (!(0 >= this.linkSpacing)) {
      for (var a = new F2(), b = this.network.edges.iterator; b.next(); ) {
        var c = b.value.link;
        c !== null && c.isOrthogonal && !a.contains(c) && a.add(c);
      }
      if (0 < a.count)
        if (this.K === 90 || this.K === 270) {
          b = 0;
          c = [];
          for (a = a.iterator; a.next(); ) {
            var d = a.value;
            if (d !== null && d.isOrthogonal)
              for (var e = 2; e < d.pointsCount - 3; e++) {
                var f2 = d.i(e);
                var g2 = d.i(e + 1);
                if (this.w(f2.y, g2.y) && !this.w(f2.x, g2.x)) {
                  var h = new gt();
                  h.layer = Math.floor(f2.y / 2);
                  var k = d.i(0), l2 = d.i(d.pointsCount - 1);
                  h.first = k.x * k.x + k.y;
                  h.$b = l2.x * l2.x + l2.y;
                  h.ed = Math.min(f2.x, g2.x);
                  h.xc = Math.max(f2.x, g2.x);
                  h.index = e;
                  h.link = d;
                  if (e + 2 < d.pointsCount) {
                    k = d.i(e - 1);
                    l2 = d.i(e + 2);
                    var m2 = 0;
                    k.y < f2.y ? m2 = l2.y < f2.y ? 3 : f2.x < g2.x ? 2 : 1 : k.y > f2.y && (m2 = l2.y > f2.y ? 0 : g2.x < f2.x ? 2 : 1);
                    h.j = m2;
                  }
                  c.push(h);
                }
              }
          }
          if (1 < c.length)
            for (c.sort(this.yy), a = 0; a < c.length; ) {
              f2 = c[a].layer;
              for (d = a + 1; d < c.length && c[d].layer === f2; )
                d++;
              if (1 < d - a)
                for (f2 = a; f2 < d; ) {
                  g2 = c[f2].xc;
                  for (e = a + 1; e < d && c[e].ed < g2; )
                    g2 = Math.max(g2, c[e].xc), e++;
                  g2 = e - f2;
                  if (1 < g2) {
                    this.Vi(c, this.Rs, f2, f2 + g2);
                    m2 = 1;
                    h = c[f2].$b;
                    for (k = f2; k < e; k++)
                      l2 = c[k], l2.$b !== h && (m2++, h = l2.$b);
                    this.Vi(c, this.xy, f2, f2 + g2);
                    var n2 = 1;
                    h = c[f2].first;
                    for (k = f2; k < e; k++)
                      l2 = c[k], l2.first !== h && (n2++, h = l2.first);
                    k = true;
                    l2 = n2;
                    m2 < n2 ? (k = false, l2 = m2, h = c[f2].$b, this.Vi(c, this.Rs, f2, f2 + g2)) : h = c[f2].first;
                    m2 = 0;
                    for (n2 = f2; n2 < e; n2++) {
                      var p2 = c[n2];
                      (k ? p2.first : p2.$b) !== h && (m2++, h = k ? p2.first : p2.$b);
                      var r2 = p2.link;
                      f2 = r2.i(p2.index);
                      g2 = r2.i(p2.index + 1);
                      var q2 = this.linkSpacing * (m2 - (l2 - 1) / 2);
                      b++;
                      r2.Lh();
                      r2.M(p2.index, f2.x, f2.y + q2);
                      r2.M(p2.index + 1, g2.x, g2.y + q2);
                      r2.vf();
                    }
                  }
                  f2 = e;
                }
              a = d;
            }
        } else {
          b = 0;
          c = [];
          for (a = a.iterator; a.next(); )
            if (d = a.value, d !== null && d.isOrthogonal)
              for (e = 2; e < d.pointsCount - 3; e++)
                f2 = d.i(e), g2 = d.i(e + 1), this.w(f2.x, g2.x) && !this.w(f2.y, g2.y) && (h = new gt(), h.layer = Math.floor(f2.x / 2), k = d.i(0), l2 = d.i(d.pointsCount - 1), h.first = k.x + k.y * k.y, h.$b = l2.x + l2.y * l2.y, h.ed = Math.min(f2.y, g2.y), h.xc = Math.max(f2.y, g2.y), h.index = e, h.link = d, e + 2 < d.pointsCount && (k = d.i(e - 1), l2 = d.i(e + 2), m2 = 0, k.x < f2.x ? m2 = l2.x < f2.x ? 3 : f2.y < g2.y ? 2 : 1 : k.x > f2.x && (m2 = l2.x > f2.x ? 0 : g2.y < f2.y ? 2 : 1), h.j = m2), c.push(h));
          if (1 < c.length)
            for (c.sort(this.yy), a = 0; a < c.length; ) {
              f2 = c[a].layer;
              for (d = a + 1; d < c.length && c[d].layer === f2; )
                d++;
              if (1 < d - a)
                for (f2 = a; f2 < d; ) {
                  g2 = c[f2].xc;
                  for (e = a + 1; e < d && c[e].ed < g2; )
                    g2 = Math.max(g2, c[e].xc), e++;
                  g2 = e - f2;
                  if (1 < g2) {
                    this.Vi(c, this.Rs, f2, f2 + g2);
                    m2 = 1;
                    h = c[f2].$b;
                    for (k = f2; k < e; k++)
                      l2 = c[k], l2.$b !== h && (m2++, h = l2.$b);
                    this.Vi(c, this.xy, f2, f2 + g2);
                    n2 = 1;
                    h = c[f2].first;
                    for (k = f2; k < e; k++)
                      l2 = c[k], l2.first !== h && (n2++, h = l2.first);
                    k = true;
                    l2 = n2;
                    m2 < n2 ? (k = false, l2 = m2, h = c[f2].$b, this.Vi(c, this.Rs, f2, f2 + g2)) : h = c[f2].first;
                    m2 = 0;
                    for (n2 = f2; n2 < e; n2++)
                      p2 = c[n2], (k ? p2.first : p2.$b) !== h && (m2++, h = k ? p2.first : p2.$b), r2 = p2.link, f2 = r2.i(p2.index), g2 = r2.i(p2.index + 1), q2 = this.linkSpacing * (m2 - (l2 - 1) / 2), b++, r2.Lh(), r2.M(p2.index, f2.x + q2, f2.y), r2.M(p2.index + 1, g2.x + q2, g2.y), r2.vf();
                  }
                  f2 = e;
                }
              a = d;
            }
        }
    }
  };
  t2 = ms.prototype;
  t2.yy = function(a, b) {
    return a instanceof gt && b instanceof gt && a !== b ? a.layer < b.layer ? -1 : a.layer > b.layer ? 1 : a.ed < b.ed ? -1 : a.ed > b.ed ? 1 : a.xc < b.xc ? -1 : a.xc > b.xc ? 1 : 0 : 0;
  };
  t2.xy = function(a, b) {
    return a instanceof gt && b instanceof gt && a !== b ? a.first < b.first ? -1 : a.first > b.first || a.j < b.j ? 1 : a.j > b.j || a.ed < b.ed ? -1 : a.ed > b.ed ? 1 : a.xc < b.xc ? -1 : a.xc > b.xc ? 1 : 0 : 0;
  };
  t2.Rs = function(a, b) {
    return a instanceof gt && b instanceof gt && a !== b ? a.$b < b.$b ? -1 : a.$b > b.$b || a.j < b.j ? 1 : a.j > b.j || a.ed < b.ed ? -1 : a.ed > b.ed ? 1 : a.xc < b.xc ? -1 : a.xc > b.xc ? 1 : 0 : 0;
  };
  t2.w = function(a, b) {
    a -= b;
    return -1 < a && 1 > a;
  };
  t2.Vi = function(a, b, c, d) {
    var e = a.length, f2 = d - c;
    if (!(1 >= f2))
      if ((0 > c || c >= e - 1) && C2("not in range 0 <= from < length: " + c), f2 === 2)
        d = a[c], e = a[c + 1], 0 < b(d, e) && (a[c] = e, a[c + 1] = d);
      else if (c === 0)
        if (d >= e)
          a.sort(b);
        else
          for (c = a.slice(0, d), c.sort(b), b = 0; b < d; b++)
            a[b] = c[b];
      else if (d >= e)
        for (d = a.slice(c), d.sort(b), b = c; b < e; b++)
          a[b] = d[b - c];
      else
        for (e = a.slice(c, d), e.sort(b), b = c; b < d; b++)
          a[b] = e[b - c];
  };
  function vs(a, b) {
    var c = a.Bb[b];
    if (c >= a.ye.length) {
      var d = [];
      for (var e = 0; e < a.ye.length; e++)
        d[e] = a.ye[e];
      a.ye = d;
    }
    a.ye[c] === void 0 || a.ye[c] === null ? d = [] : (d = a.ye[c], a.ye[c] = null);
    a = a.zo[b];
    for (b = 0; b < a.length; b++)
      c = a[b], d[c.index] = c;
    return d;
  }
  function ws(a, b, c) {
    a.ye[a.Bb[b]] = c;
  }
  na2.Object.defineProperties(ms.prototype, {
    layerSpacing: { get: function() {
      return this.be;
    }, set: function(a) {
      this.be !== a && 0 <= a && (this.be = a, this.B());
    } },
    columnSpacing: { get: function() {
      return this.ac;
    }, set: function(a) {
      this.ac !== a && 0 < a && (this.ac = a, this.B());
    } },
    direction: { get: function() {
      return this.K;
    }, set: function(a) {
      this.K !== a && (a === 0 || a === 90 || a === 180 || a === 270 ? (this.K = a, this.B()) : C2("LayeredDigraphLayout.direction must be 0, 90, 180, or 270"));
    } },
    cycleRemoveOption: { get: function() {
      return this.Lk;
    }, set: function(a) {
      this.Lk === a || a !== Gs && a !== ns && a !== ss || (this.Lk = a, this.B());
    } },
    layeringOption: { get: function() {
      return this.kl;
    }, set: function(a) {
      this.kl === a || a !== os && a !== Ls && a !== Ns || (this.kl = a, this.B());
    } },
    initializeOption: { get: function() {
      return this.$k;
    }, set: function(a) {
      this.$k === a || a !== ps && a !== Ts && a !== Rs || (this.$k = a, this.B());
    } },
    iterations: {
      get: function() {
        return this.sj;
      },
      set: function(a) {
        this.sj !== a && 0 <= a && (this.sj = a, this.B());
      }
    },
    aggressiveOption: { get: function() {
      return this.wk;
    }, set: function(a) {
      this.wk === a || a !== Xs && a !== qs && a !== Ys || (this.wk = a, this.B());
    } },
    packOption: { get: function() {
      return this.ag;
    }, set: function(a) {
      this.ag !== a && 0 <= a && 8 > a && (this.ag = a, this.B());
    } },
    setsPortSpots: { get: function() {
      return this.hf;
    }, set: function(a) {
      this.hf !== a && (this.hf = a, this.B());
    } },
    linkSpacing: { get: function() {
      return this.jo;
    }, set: function(a) {
      this.jo !== a && 0 <= a && (this.jo = a, this.B());
    } },
    maxLayer: { get: function() {
      return this.ra;
    } },
    maxIndex: { get: function() {
      return this.ji;
    } },
    maxColumn: { get: function() {
      return this.Ea;
    } },
    minIndexLayer: { get: function() {
      return this.Wg;
    } },
    maxIndexLayer: { get: function() {
      return this.vc;
    } }
  });
  var ns = new D2(ms, "CycleDepthFirst", 0), Gs = new D2(ms, "CycleGreedy", 1), ss = new D2(ms, "CycleFromLayers", 2), os = new D2(ms, "LayerOptimalLinkLength", 0), Ls = new D2(ms, "LayerLongestPathSink", 1), Ns = new D2(ms, "LayerLongestPathSource", 2), ps = new D2(ms, "InitDepthFirstOut", 0), Ts = new D2(ms, "InitDepthFirstIn", 1), Rs = new D2(ms, "InitNaive", 2), Xs = new D2(ms, "AggressiveNone", 0), qs = new D2(ms, "AggressiveLess", 1), Ys = new D2(ms, "AggressiveMore", 2), Zs = 8;
  ms.className = "LayeredDigraphLayout";
  ms.CycleDepthFirst = ns;
  ms.CycleGreedy = Gs;
  ms.CycleFromLayers = ss;
  ms.LayerOptimalLinkLength = os;
  ms.LayerLongestPathSink = Ls;
  ms.LayerLongestPathSource = Ns;
  ms.InitDepthFirstOut = ps;
  ms.InitDepthFirstIn = Ts;
  ms.InitNaive = Rs;
  ms.AggressiveNone = Xs;
  ms.AggressiveLess = qs;
  ms.AggressiveMore = Ys;
  ms.PackNone = 0;
  ms.PackExpand = 1;
  ms.PackStraighten = 2;
  ms.PackMedian = 4;
  ms.PackAll = 15;
  function gt() {
    this.index = this.xc = this.ed = this.$b = this.first = this.layer = 0;
    this.link = null;
    this.j = 0;
  }
  gt.className = "SegInfo";
  function rs(a) {
    Qp.call(this, a);
  }
  ma2(rs, Qp);
  rs.prototype.createVertex = function() {
    return new ht(this);
  };
  rs.prototype.createEdge = function() {
    return new it(this);
  };
  rs.className = "LayeredDigraphNetwork";
  function ht(a) {
    dq.call(this, a);
    this.Ra = this.Cg = this.fi = -1;
    this.C = NaN;
    this.L = null;
    this.valid = false;
    this.finish = this.pg = NaN;
    this.uf = 0;
    this.jk = this.kk = null;
  }
  ma2(ht, dq);
  ht.prototype.serializeVertexProperties = function(a, b) {
    dq.prototype.serializeVertexProperties.call(this, a, b);
    a.layer = this.layer;
    a.column = this.column;
    a.index = this.index;
    a.component = this.component;
    a.near = this.near ? ib2(this.near) : null;
    a.valid = this.valid;
    a.pg = this.pg;
    a.finish = this.finish;
    a.uf = this.uf;
    a.kk = this.kk;
    a.jk = this.jk;
  };
  ht.prototype.deserializeVertexProperties = function(a, b, c, d) {
    dq.prototype.deserializeVertexProperties.call(this, a, b, c, d);
    this.layer = a.layer;
    this.column = a.column;
    this.index = a.index;
    this.component = a.component;
    if (b = b.get(a.near))
      this.near = b;
    this.valid = a.valid;
    this.pg = a.pg;
    this.finish = a.finish;
    this.uf = a.uf;
    this.kk = a.kk;
    this.jk = a.jk;
  };
  na2.Object.defineProperties(ht.prototype, { layer: { get: function() {
    return this.fi;
  }, set: function(a) {
    this.fi !== a && (this.fi = a);
  } }, column: { get: function() {
    return this.Cg;
  }, set: function(a) {
    this.Cg !== a && (this.Cg = a);
  } }, index: { get: function() {
    return this.Ra;
  }, set: function(a) {
    this.Ra !== a && (this.Ra = a);
  } }, component: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C !== a && (this.C = a);
  } }, near: {
    get: function() {
      return this.L;
    },
    set: function(a) {
      this.L !== a && (this.L = a);
    }
  } });
  ht.className = "LayeredDigraphVertex";
  function it(a) {
    eq.call(this, a);
    this.j = this.Ba = this.Ma = false;
    this.wa = this.C = NaN;
    this.L = this.o = 0;
  }
  ma2(it, eq);
  it.prototype.serializeEdgeProperties = function(a, b) {
    eq.prototype.serializeEdgeProperties.call(this, a, b);
    a.valid = this.valid;
    a.rev = this.rev;
    a.forest = this.forest;
    a.portFromPos = this.portFromPos;
    a.portToPos = this.portToPos;
    a.portFromColOffset = this.portFromColOffset;
    a.portToColOffset = this.portToColOffset;
  };
  it.prototype.deserializeEdgeProperties = function(a, b, c, d) {
    eq.prototype.deserializeEdgeProperties.call(this, a, b, c, d);
    this.valid = a.valid;
    this.rev = a.rev;
    this.forest = a.forest;
    this.portFromPos = a.portFromPos;
    this.portToPos = a.portToPos;
    this.portFromColOffset = a.portFromColOffset;
    this.portToColOffset = a.portToColOffset;
  };
  na2.Object.defineProperties(it.prototype, { fromVertex: { get: function() {
    return this.Uc;
  }, set: function(a) {
    this.Uc !== a && (this.Uc = a);
  } }, toVertex: { get: function() {
    return this.cd;
  }, set: function(a) {
    this.cd !== a && (this.cd = a);
  } }, valid: { get: function() {
    return this.Ma;
  }, set: function(a) {
    this.Ma !== a && (this.Ma = a);
  } }, rev: { get: function() {
    return this.Ba;
  }, set: function(a) {
    this.Ba !== a && (this.Ba = a);
  } }, forest: {
    get: function() {
      return this.j;
    },
    set: function(a) {
      this.j !== a && (this.j = a);
    }
  }, portFromPos: { get: function() {
    return this.C;
  }, set: function(a) {
    this.C !== a && (this.C = a);
  } }, portToPos: { get: function() {
    return this.wa;
  }, set: function(a) {
    this.wa !== a && (this.wa = a);
  } }, portFromColOffset: { get: function() {
    return this.o;
  }, set: function(a) {
    this.o !== a && (this.o = a);
  } }, portToColOffset: {
    get: function() {
      return this.L;
    },
    set: function(a) {
      this.L !== a && (this.L = a);
    }
  } });
  it.className = "LayeredDigraphEdge";
  function jt(a) {
    ni2.call(this);
    this.Lb = new G2();
    this.Mo = kt;
    this.ld = lt;
    this.Fp = mt;
    this.ur = nt;
    this.Dw = [];
    this.jd = true;
    this.Ib = ot;
    this.Rd = new Gb2(10, 10).freeze();
    var b = new pt(this);
    this.V = new qt(b);
    this.W = new qt(b);
    this.su = [];
    a && Object.assign(this, a);
  }
  ma2(jt, ni2);
  jt.prototype.cloneProtected = function(a) {
    ni2.prototype.cloneProtected.call(this, a);
    a.Mo = this.Mo;
    a.Fp = this.Fp;
    a.ur = this.ur;
    a.jd = this.jd;
    a.Ib = this.Ib;
    a.Rd.assign(this.Rd);
    a.V.copyInheritedPropertiesFrom(this.V);
    a.W.copyInheritedPropertiesFrom(this.W);
  };
  jt.prototype.gb = function(a) {
    a.classType === jt ? a.name.indexOf("Alignment") === 0 ? this.alignment = a : a.name.indexOf("Arrangement") === 0 ? this.arrangement = a : a.name.indexOf("Compaction") === 0 ? this.compaction = a : a.name.indexOf("Path") === 0 ? this.path = a : a.name.indexOf("Sorting") === 0 ? this.sorting = a : a.name.indexOf("Style") === 0 ? this.treeStyle = a : C2("Unknown enum value: " + a) : ni2.prototype.gb.call(this, a);
  };
  jt.prototype.createNetwork = function() {
    return new pt(this);
  };
  jt.prototype.makeNetwork = function(a) {
    function b(a2) {
      if (a2 instanceof W2)
        return !a2.isLinkLabel && a2.category !== "Comment";
      if (a2 instanceof T2) {
        var b2 = a2.fromNode;
        if (b2 === null || b2.isLinkLabel || b2.category === "Comment")
          return false;
        a2 = a2.toNode;
        return a2 === null || a2.isLinkLabel || a2.category === "Comment" ? false : true;
      }
      return false;
    }
    var c = this.createNetwork();
    a instanceof R2 ? (c.ng(a.nodes, true, b), c.ng(a.links, true, b)) : a instanceof U2 ? c.ng(a.memberParts, false, b) : c.ng(a.iterator, false, b);
    return c;
  };
  jt.prototype.doLayout = function(a) {
    this.network === null && (this.network = this.makeNetwork(a));
    this.arrangement !== rt && (this.arrangementOrigin = this.initialOrigin(this.arrangementOrigin));
    var b = this.diagram;
    b === null && a instanceof R2 && (b = a);
    this.path === kt && b !== null ? this.ld = b.isTreePathToChildren ? lt : st : this.ld = this.path === kt ? lt : this.path;
    if (0 < this.network.vertexes.count) {
      this.network.Tp();
      for (a = this.network.vertexes.iterator; a.next(); )
        b = a.value, b.initialized = false, b.level = 0, b.parent = null, b.children = [];
      if (0 < this.Lb.count) {
        a = new G2();
        for (b = this.Lb.iterator; b.next(); ) {
          var c = b.value;
          c instanceof W2 ? (c = this.network.Ji(c), c !== null && a.add(c)) : c instanceof qt && a.add(c);
        }
        this.Lb = a;
      }
      this.Lb.count === 0 && this.findRoots();
      for (a = this.Lb.copy().iterator; a.next(); )
        b = a.value, b.initialized || (b.initialized = true, tt(this, b));
      b = this.network.vertexes;
      for (a = null; a = ut(b), 0 < a.count; )
        b = vt(this, a), b !== null && this.Lb.add(b), b.initialized = true, tt(this, b), b = a;
      for (a = this.Lb.iterator; a.next(); )
        b = a.value, b instanceof qt && wt(this, b);
      for (a = this.Lb.iterator; a.next(); )
        b = a.value, b instanceof qt && xt(this, b);
      for (a = this.Lb.iterator; a.next(); )
        b = a.value, b instanceof qt && yt(this, b);
      this.Du();
      if (this.layerStyle === zt) {
        a = [];
        for (b = this.network.vertexes.iterator; b.next(); ) {
          c = b.value;
          var d = c.parent;
          d === null && (d = c);
          d = d.angle === 0 || d.angle === 180;
          var e = a[c.level];
          e === void 0 && (e = 0);
          a[c.level] = Math.max(e, d ? c.width : c.height);
        }
        for (b = 0; b < a.length; b++)
          a[b] === void 0 && (a[b] = 0);
        this.Dw = a;
        for (b = this.network.vertexes.iterator; b.next(); )
          c = b.value, d = c.parent, d === null && (d = c), d.angle === 0 || d.angle === 180 ? (d.angle === 180 && (c.focusX += a[c.level] - c.width), c.width = a[c.level]) : (d.angle === 270 && (c.focusY += a[c.level] - c.height), c.height = a[c.level]);
      } else if (this.layerStyle === At)
        for (a = this.network.vertexes.iterator; a.next(); ) {
          b = a.value;
          c = b.angle === 0 || b.angle === 180;
          d = -1;
          for (e = 0; e < b.children.length; e++) {
            var f2 = b.children[e];
            d = Math.max(d, c ? f2.width : f2.height);
          }
          if (0 <= d)
            for (e = 0; e < b.children.length; e++)
              f2 = b.children[e], c ? (b.angle === 180 && (f2.focusX += d - f2.width), f2.width = d) : (b.angle === 270 && (f2.focusY += d - f2.height), f2.height = d);
        }
      for (a = this.Lb.iterator; a.next(); )
        b = a.value, b instanceof qt && this.layoutTree(b);
      this.arrangeTrees();
      this.updateParts();
    }
    this.network = null;
    this.Lb = new G2();
    this.isValidLayout = true;
  };
  function ut(a) {
    var b = new G2();
    for (a = a.iterator; a.next(); ) {
      var c = a.value;
      c.initialized || b.add(c);
    }
    return b;
  }
  jt.prototype.findRoots = function() {
    for (var a = this.network.vertexes, b = a.iterator; b.next(); ) {
      var c = b.value;
      switch (this.ld) {
        case lt:
          c.sourceEdges.count === 0 && this.Lb.add(c);
          break;
        case st:
          c.destinationEdges.count === 0 && this.Lb.add(c);
          break;
        default:
          C2("Unhandled path value " + this.ld.toString());
      }
    }
    this.Lb.count === 0 && (a = vt(this, a), a !== null && this.Lb.add(a));
  };
  function vt(a, b) {
    var c = 999999, d = null;
    for (b = b.iterator; b.next(); ) {
      var e = b.value;
      switch (a.ld) {
        case lt:
          e.sourceEdges.count < c && (c = e.sourceEdges.count, d = e);
          break;
        case st:
          e.destinationEdges.count < c && (c = e.destinationEdges.count, d = e);
          break;
        default:
          C2("Unhandled path value " + a.ld.toString());
      }
    }
    return d;
  }
  function tt(a, b) {
    if (b !== null) {
      switch (a.ld) {
        case lt:
          if (0 < b.destinationEdges.count) {
            for (var c = new F2(), d = b.destinationVertexes; d.next(); ) {
              var e = d.value;
              Bt(a, b, e) && c.add(e);
            }
            0 < c.count && (b.children = c.ya());
          }
          break;
        case st:
          if (0 < b.sourceEdges.count) {
            c = new F2();
            for (d = b.sourceVertexes; d.next(); )
              e = d.value, Bt(a, b, e) && c.add(e);
            0 < c.count && (b.children = c.ya());
          }
          break;
        default:
          C2("Unhandled path value" + a.ld.toString());
      }
      c = b.children;
      d = c.length;
      for (e = 0; e < d; e++) {
        var f2 = c[e];
        f2.initialized = true;
        f2.level = b.level + 1;
        f2.parent = b;
        a.Lb.remove(f2);
      }
      for (b = 0; b < d; b++)
        tt(a, c[b]);
    }
  }
  function Bt(a, b, c) {
    if (c.initialized) {
      if (b === null)
        var d = false;
      else {
        for (d = b.parent; d !== null && d !== c; )
          d = d.parent;
        d = d === c;
      }
      if (d || c.level > b.level)
        return false;
      a.removeChild(c.parent, c);
    }
    return true;
  }
  jt.prototype.removeChild = function(a, b) {
    if (a !== null && b !== null) {
      for (var c = a.children, d = 0, e = 0; e < c.length; e++)
        c[e] === b && d++;
      if (0 < d) {
        d = Array(c.length - d);
        for (var f2 = e = 0; f2 < c.length; f2++)
          c[f2] !== b && (d[e++] = c[f2]);
        a.children = d;
      }
    }
  };
  function wt(a, b) {
    if (b !== null) {
      a.initializeTreeVertexValues(b);
      b.alignment === Ct && a.sortTreeVertexChildren(b);
      for (var c = 0, d = b.childrenCount, e = 0, f2 = b.children, g2 = f2.length, h = 0; h < g2; h++) {
        var k = f2[h];
        wt(a, k);
        c += k.descendantCount + 1;
        d = Math.max(d, k.maxChildrenCount);
        e = Math.max(e, k.maxGenerationCount);
      }
      b.descendantCount = c;
      b.maxChildrenCount = d;
      b.maxGenerationCount = 0 < d ? e + 1 : 0;
    }
  }
  function Dt(a, b) {
    switch (a.Fp) {
      default:
      case mt:
        return b.parent !== null ? b.parent : a.V;
      case Et:
        return b.parent === null ? a.V : b.parent.parent === null ? a.W : b.parent;
      case Ft:
        return b.parent !== null ? b.parent.parent !== null ? b.parent.parent : a.W : a.V;
      case Gt:
        var c = true;
        if (b.childrenCount === 0)
          c = false;
        else
          for (var d = b.children, e = d.length, f2 = 0; f2 < e; f2++)
            if (0 < d[f2].childrenCount) {
              c = false;
              break;
            }
        return c && b.parent !== null ? a.W : b.parent !== null ? b.parent : a.V;
    }
  }
  jt.prototype.initializeTreeVertexValues = function(a) {
    a.copyInheritedPropertiesFrom(Dt(this, a));
    if (a.parent !== null && a.parent.alignment === Ct) {
      for (var b = a.angle, c = a.parent.children, d = 0; d < c.length && a !== c[d]; )
        d++;
      d % 2 === 0 ? d !== c.length - 1 && (b = b === 90 ? 180 : b === 180 ? 270 : b === 270 ? 180 : 270) : b = b === 90 ? 0 : b === 180 ? 90 : b === 270 ? 0 : 90;
      a.angle = b;
    }
    a.initialized = true;
  };
  function xt(a, b) {
    if (b !== null) {
      a.assignTreeVertexValues(b);
      b = b.children;
      for (var c = b.length, d = 0; d < c; d++)
        xt(a, b[d]);
    }
  }
  jt.prototype.assignTreeVertexValues = function() {
  };
  function yt(a, b) {
    if (b !== null) {
      b.alignment !== Ct && a.sortTreeVertexChildren(b);
      b = b.children;
      for (var c = b.length, d = 0; d < c; d++)
        yt(a, b[d]);
    }
  }
  jt.prototype.sortTreeVertexChildren = function(a) {
    switch (a.sorting) {
      case Ht:
        break;
      case It:
        a.children.reverse();
        break;
      case Jt:
        a.children.sort(a.comparer);
        break;
      case Kt:
        a.children.sort(a.comparer);
        a.children.reverse();
        break;
      default:
        C2("Unhandled sorting value " + a.sorting.toString());
    }
  };
  jt.prototype.Du = function() {
    if (this.comments)
      for (var a = this.network.vertexes.iterator; a.next(); )
        this.addComments(a.value);
  };
  jt.prototype.addComments = function(a) {
    var b = a.angle, c = a.parent, d = 0;
    var e = false;
    c !== null && (d = c.angle, e = c.alignment, e = Lt(e));
    b = b === 90 || b === 270;
    d = d === 90 || d === 270;
    c = a.childrenCount === 0;
    var f2 = 0, g2 = 0, h = 0, k = a.commentSpacing;
    if (a.node !== null)
      for (var l2 = a.node.Vu(); l2.next(); ) {
        var m2 = l2.value;
        m2.category === "Comment" && m2.canLayout() && (a.comments === null && (a.comments = []), a.comments.push(m2), m2.Ta(), m2 = m2.measuredBounds, b && !c || !e && !d && c || e && d && c ? (f2 = Math.max(f2, m2.width), g2 += m2.height + Math.abs(h)) : (f2 += m2.width + Math.abs(h), g2 = Math.max(g2, m2.height)), h = k);
      }
    a.comments !== null && (b && !c || !e && !d && c || e && d && c ? (f2 += Math.abs(a.commentMargin), g2 = Math.max(0, g2 - a.height)) : (g2 += Math.abs(a.commentMargin), f2 = Math.max(0, f2 - a.width)), e = N2.allocAt(0, 0, a.bounds.width + f2, a.bounds.height + g2), a.bounds = e, N2.free(e));
  };
  function Lt(a) {
    return a === Mt || a === Ct || a === Nt || a === Ot;
  }
  function Pt(a) {
    return a === Mt || a === Ct;
  }
  function Qt(a) {
    var b = a.parent;
    if (b !== null) {
      var c = b.alignment;
      if (Lt(c)) {
        if (Pt(c)) {
          b = b.children;
          for (c = 0; c < b.length && a !== b[c]; )
            c++;
          return c % 2 === 0;
        }
        if (c === Nt)
          return true;
      }
    }
    return false;
  }
  jt.prototype.layoutComments = function(a) {
    if (a.comments !== null) {
      var b = a.node.measuredBounds, c = a.parent, d = a.angle, e = 0;
      var f2 = false;
      c !== null && (e = c.angle, f2 = c.alignment, f2 = Lt(f2));
      d = d === 90 || d === 270;
      c = e === 90 || e === 270;
      for (var g2 = a.childrenCount === 0, h = Qt(a), k = 0, l2 = a.comments, m2 = l2.length, n2 = K2.alloc(), p2 = 0; p2 < m2; p2++) {
        var r2 = l2[p2], q2 = r2.measuredBounds;
        if (d && !g2 || !f2 && !c && g2 || f2 && c && g2) {
          if (135 < e && !f2 || c && h)
            if (0 <= a.commentMargin)
              for (n2.h(a.bounds.x - a.commentMargin - q2.width, a.bounds.y + k), r2.move(n2), r2 = r2.Gd(); r2.next(); ) {
                var u2 = r2.value;
                u2.fromSpot = bd2;
                u2.toSpot = cd2;
              }
            else
              for (n2.h(a.bounds.x + 2 * a.focus.x - a.commentMargin, a.bounds.y + k), r2.move(n2), r2 = r2.Gd(); r2.next(); )
                u2 = r2.value, u2.fromSpot = cd2, u2.toSpot = bd2;
          else if (0 <= a.commentMargin)
            for (n2.h(a.bounds.x + 2 * a.focus.x + a.commentMargin, a.bounds.y + k), r2.move(n2), r2 = r2.Gd(); r2.next(); )
              u2 = r2.value, u2.fromSpot = cd2, u2.toSpot = bd2;
          else
            for (n2.h(a.bounds.x + a.commentMargin - q2.width, a.bounds.y + k), r2.move(n2), r2 = r2.Gd(); r2.next(); )
              u2 = r2.value, u2.fromSpot = bd2, u2.toSpot = cd2;
          k = 0 <= a.commentSpacing ? k + (q2.height + a.commentSpacing) : k + (a.commentSpacing - q2.height);
        } else {
          if (135 < e && !f2 || !c && h)
            if (0 <= a.commentMargin)
              for (n2.h(a.bounds.x + k, a.bounds.y - a.commentMargin - q2.height), r2.move(n2), r2 = r2.Gd(); r2.next(); )
                u2 = r2.value, u2.fromSpot = ad2, u2.toSpot = dd2;
            else
              for (n2.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y - a.commentMargin), r2.move(n2), r2 = r2.Gd(); r2.next(); )
                u2 = r2.value, u2.fromSpot = dd2, u2.toSpot = ad2;
          else if (0 <= a.commentMargin)
            for (n2.h(a.bounds.x + k, a.bounds.y + 2 * a.focus.y + a.commentMargin), r2.move(n2), r2 = r2.Gd(); r2.next(); )
              u2 = r2.value, u2.fromSpot = dd2, u2.toSpot = ad2;
          else
            for (n2.h(a.bounds.x + k, a.bounds.y + a.commentMargin - q2.height), r2.move(n2), r2 = r2.Gd(); r2.next(); )
              u2 = r2.value, u2.fromSpot = ad2, u2.toSpot = dd2;
          k = 0 <= a.commentSpacing ? k + (q2.width + a.commentSpacing) : k + (a.commentSpacing - q2.width);
        }
      }
      K2.free(n2);
      b = k - a.commentSpacing - (d ? b.height : b.width);
      if (this.ld === lt)
        for (a = a.destinationEdges; a.next(); )
          e = a.value.link, e === null || e.isAvoiding || (e.fromEndSegmentLength = 0 < b ? b : NaN);
      else
        for (a = a.sourceEdges; a.next(); )
          e = a.value.link, e === null || e.isAvoiding || (e.toEndSegmentLength = 0 < b ? b : NaN);
    }
  };
  jt.prototype.layoutTree = function(a) {
    if (a !== null) {
      for (var b = a.children, c = b.length, d = 0; d < c; d++)
        this.layoutTree(b[d]);
      switch (a.compaction) {
        case Rt:
          Xt(this, a);
          break;
        case Yt:
          if (a.alignment === Ct)
            Xt(this, a);
          else if (a.childrenCount === 0)
            d = a.parent, c = false, b = 0, d !== null && (b = d.angle, c = d.alignment, c = Lt(c)), d = Qt(a), a.U.h(0, 0), a.va.h(a.width, a.height), a.parent === null || a.comments === null || (b !== 180 && b !== 270 || c) && !d ? a.fa.h(0, 0) : b === 180 && !c || (b === 90 || b === 270) && d ? a.fa.h(a.width - 2 * a.focus.x, 0) : a.fa.h(0, a.height - 2 * a.focus.y), a.gq = null, a.sq = null;
          else {
            var e = Zt(a);
            b = e === 90 || e === 270;
            var f2 = 0, g2 = a.children, h = g2.length;
            for (c = 0; c < h; c++)
              d = g2[c], f2 = Math.max(f2, b ? d.va.width : d.va.height);
            var k = a.alignment, l2 = k === $t, m2 = Lt(k), n2 = Math.max(0, a.breadthLimit);
            c = au(a);
            var p2 = a.nodeSpacing, r2 = bu(a), q2 = a.rowSpacing, u2 = 0;
            if (k === cu || l2 || a.tm || a.um && a.maxGenerationCount === 1)
              u2 = Math.max(0, a.rowIndent);
            d = a.width;
            var w = a.height, v2 = 0, z2 = 0, y2 = 0, B2 = null, A2 = null, E = 0, Q2 = 0, J2 = 0, S2 = 0, L2 = 0, I2 = 0, ja2 = 0, ca2 = 0;
            m2 && !Pt(k) && 135 < e && g2.reverse();
            if (Pt(k))
              if (1 < h)
                for (var pa2 = 0; pa2 < h; pa2++)
                  pa2 % 2 === 0 && pa2 !== h - 1 && (ca2 = Math.max(ca2, b ? g2[pa2].va.width : g2[pa2].va.height));
              else
                h === 1 && (ca2 = b ? g2[0].va.width : g2[0].va.height);
            if (m2) {
              switch (k) {
                case Mt:
                  z2 = 135 > e ? du(a, g2, ca2, v2, z2) : eu(a, g2, ca2, v2, z2);
                  ca2 = z2.x;
                  v2 = z2.width;
                  z2 = z2.height;
                  break;
                case Nt:
                  for (B2 = 0; B2 < h; B2++)
                    A2 = g2[B2], n2 = A2.va, y2 = I2 === 0 ? 0 : q2, b ? (A2.U.h(f2 - n2.width, S2 + y2), v2 = Math.max(v2, n2.width), z2 = Math.max(z2, S2 + y2 + n2.height), S2 += y2 + n2.height) : (A2.U.h(J2 + y2, f2 - n2.height), v2 = Math.max(v2, J2 + y2 + n2.width), z2 = Math.max(z2, n2.height), J2 += y2 + n2.width), I2++;
                  break;
                case Ot:
                  for (B2 = 0; B2 < h; B2++)
                    A2 = g2[B2], f2 = A2.va, n2 = I2 === 0 ? 0 : q2, b ? (A2.U.h(p2 / 2 + a.focus.x, S2 + n2), v2 = Math.max(v2, f2.width), z2 = Math.max(z2, S2 + n2 + f2.height), S2 += n2 + f2.height) : (A2.U.h(J2 + n2, p2 / 2 + a.focus.y), v2 = Math.max(v2, J2 + n2 + f2.width), z2 = Math.max(z2, f2.height), J2 += n2 + f2.width), I2++;
              }
              B2 = fu(this, 2);
              A2 = fu(this, 2);
              b ? (B2[0].h(0, 0), B2[1].h(0, z2), A2[0].h(v2, 0)) : (B2[0].h(0, 0), B2[1].h(v2, 0), A2[0].h(0, z2));
              A2[1].h(v2, z2);
            } else
              for (pa2 = 0; pa2 < h; pa2++) {
                var Na2 = g2[pa2], fb2 = Na2.va;
                if (b) {
                  0 < n2 && 0 < I2 && J2 + p2 + fb2.width > n2 && (J2 < f2 && gu(a, k, f2 - J2, 0, ja2, pa2 - 1), L2++, I2 = 0, ja2 = pa2, y2 = z2, J2 = 0, S2 = 135 < e ? -z2 - q2 : z2 + q2);
                  hu(this, Na2, 0, S2);
                  var Ga2 = 0;
                  if (I2 === 0) {
                    if (B2 = Na2.gq, A2 = Na2.sq, E = fb2.width, Q2 = fb2.height, B2 === null || A2 === null || e !== Zt(Na2))
                      B2 = fu(this, 2), A2 = fu(this, 2), B2[0].h(0, 0), B2[1].h(0, Q2), A2[0].h(E, 0), A2[1].h(E, Q2);
                  } else {
                    var Ha2 = Ea2();
                    Q2 = iu(this, a, Na2, B2, A2, E, Q2, Ha2);
                    Ga2 = Q2.x;
                    B2 = Ha2[0];
                    A2 = Ha2[1];
                    E = Q2.width;
                    Q2 = Q2.height;
                    Ia2(Ha2);
                    J2 < fb2.width && 0 > Ga2 && (ju(a, -Ga2, 0, ja2, pa2 - 1), ku(B2, -Ga2, 0), ku(A2, -Ga2, 0), Ga2 = 0);
                  }
                  Na2.U.h(Ga2, S2);
                  v2 = Math.max(v2, E);
                  z2 = Math.max(z2, y2 + (L2 === 0 ? 0 : q2) + fb2.height);
                  J2 = E;
                } else {
                  0 < n2 && 0 < I2 && S2 + p2 + fb2.height > n2 && (S2 < f2 && gu(a, k, 0, f2 - S2, ja2, pa2 - 1), L2++, I2 = 0, ja2 = pa2, y2 = v2, S2 = 0, J2 = 135 < e ? -v2 - q2 : v2 + q2);
                  hu(this, Na2, J2, 0);
                  Ga2 = 0;
                  if (I2 === 0) {
                    if (B2 = Na2.gq, A2 = Na2.sq, E = fb2.width, Q2 = fb2.height, B2 === null || A2 === null || e !== Zt(Na2))
                      B2 = fu(this, 2), A2 = fu(this, 2), B2[0].h(0, 0), B2[1].h(E, 0), A2[0].h(0, Q2), A2[1].h(E, Q2);
                  } else
                    Ha2 = Ea2(), Q2 = iu(this, a, Na2, B2, A2, E, Q2, Ha2), Ga2 = Q2.x, B2 = Ha2[0], A2 = Ha2[1], E = Q2.width, Q2 = Q2.height, Ia2(Ha2), S2 < fb2.height && 0 > Ga2 && (ju(a, 0, -Ga2, ja2, pa2 - 1), ku(B2, 0, -Ga2), ku(A2, 0, -Ga2), Ga2 = 0);
                  Na2.U.h(J2, Ga2);
                  z2 = Math.max(z2, Q2);
                  v2 = Math.max(v2, y2 + (L2 === 0 ? 0 : q2) + fb2.width);
                  S2 = Q2;
                }
                I2++;
              }
            0 < L2 && (b ? (z2 += Math.max(0, c), J2 < v2 && gu(a, k, v2 - J2, 0, ja2, h - 1), 0 < u2 && (l2 || ju(a, u2, 0, 0, h - 1), v2 += u2)) : (v2 += Math.max(0, c), S2 < z2 && gu(a, k, 0, z2 - S2, ja2, h - 1), 0 < u2 && (l2 || ju(a, 0, u2, 0, h - 1), z2 += u2)));
            u2 = l2 = 0;
            switch (k) {
              case lu:
                b ? l2 += v2 / 2 - a.focus.x - r2 / 2 : u2 += z2 / 2 - a.focus.y - r2 / 2;
                break;
              case mu:
                0 < L2 ? b ? l2 += v2 / 2 - a.focus.x - r2 / 2 : u2 += z2 / 2 - a.focus.y - r2 / 2 : b ? (ca2 = g2[0].U.x + g2[0].fa.x, l2 += ca2 + (g2[h - 1].U.x + g2[h - 1].fa.x + 2 * g2[h - 1].focus.x - ca2) / 2 - a.focus.x - r2 / 2) : (ca2 = g2[0].U.y + g2[0].fa.y, u2 += ca2 + (g2[h - 1].U.y + g2[h - 1].fa.y + 2 * g2[h - 1].focus.y - ca2) / 2 - a.focus.y - r2 / 2);
                break;
              case cu:
                b ? (l2 -= r2, v2 += r2) : (u2 -= r2, z2 += r2);
                break;
              case $t:
                b ? (l2 += v2 - a.width + r2, v2 += r2) : (u2 += z2 - a.height + r2, z2 += r2);
                break;
              case Mt:
                b ? 1 < h ? l2 += ca2 + p2 / 2 - a.focus.x : l2 += g2[0].focus.x - a.focus.x + g2[0].fa.x : 1 < h ? u2 += ca2 + p2 / 2 - a.focus.y : u2 += g2[0].focus.y - a.focus.y + g2[0].fa.y;
                break;
              case Nt:
                b ? l2 += v2 + p2 / 2 - a.focus.x : u2 += z2 + p2 / 2 - a.focus.y;
                break;
              case Ot:
                break;
              default:
                C2("Unhandled alignment value " + k.toString());
            }
            for (r2 = 0; r2 < h; r2++)
              ca2 = g2[r2], b ? ca2.U.h(ca2.U.x + ca2.fa.x - l2, ca2.U.y + (135 < e ? (m2 ? -z2 : -ca2.va.height) + ca2.fa.y - c : w + c + ca2.fa.y)) : ca2.U.h(ca2.U.x + (135 < e ? (m2 ? -v2 : -ca2.va.width) + ca2.fa.x - c : d + c + ca2.fa.x), ca2.U.y + ca2.fa.y - u2);
            h = g2 = 0;
            m2 ? b ? (v2 = nu(a, v2, l2), 0 > l2 && (l2 = 0), 135 < e && (u2 += z2 + c), z2 += w + c, k === Ot && (g2 += p2 / 2 + a.focus.x), h += w + c) : (135 < e && (l2 += v2 + c), v2 += d + c, z2 = ou(a, z2, u2), 0 > u2 && (u2 = 0), k === Ot && (h += p2 / 2 + a.focus.y), g2 += d + c) : b ? (a.comments === null ? d > v2 && (v2 = pu(k, d - v2, 0), g2 = v2.x, h = v2.y, v2 = d, l2 = 0) : v2 = nu(a, v2, l2), 0 > l2 && (g2 -= l2, l2 = 0), 135 < e && (u2 += z2 + c), z2 = Math.max(Math.max(z2, w), z2 + w + c), h += w + c) : (135 < e && (l2 += v2 + c), v2 = Math.max(Math.max(v2, d), v2 + d + c), a.comments === null ? w > z2 && (z2 = pu(k, 0, w - z2), g2 = z2.x, h = z2.y, z2 = w, u2 = 0) : z2 = ou(a, z2, u2), 0 > u2 && (h -= u2, u2 = 0), g2 += d + c);
            if (0 < L2)
              e = fu(this, 4), L2 = fu(this, 4), b ? (e[2].h(0, w + c), e[3].h(e[2].x, z2), L2[2].h(v2, e[2].y), L2[3].h(L2[2].x, e[3].y)) : (e[2].h(d + c, 0), e[3].h(v2, e[2].y), L2[2].h(e[2].x, z2), L2[3].h(e[3].x, L2[2].y));
            else {
              e = fu(this, B2.length + 2);
              L2 = fu(this, A2.length + 2);
              for (k = 0; k < B2.length; k++)
                m2 = B2[k], e[k + 2].h(m2.x + g2, m2.y + h);
              for (k = 0; k < A2.length; k++)
                m2 = A2[k], L2[k + 2].h(m2.x + g2, m2.y + h);
            }
            b ? (e[0].h(l2, 0), e[1].h(e[0].x, w), e[2].y < e[1].y && (e[2].x > e[0].x ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].y < e[2].y && (e[3].x > e[0].x ? e[3].assign(e[2]) : e[2].assign(e[3])), L2[0].h(l2 + d, 0), L2[1].h(L2[0].x, w), L2[2].y < L2[1].y && (L2[2].x < L2[0].x ? L2[2].assign(L2[1]) : L2[1].assign(L2[2])), L2[3].y < L2[2].y && (L2[3].x < L2[0].x ? L2[3].assign(L2[2]) : L2[2].assign(L2[3])), e[2].y -= c / 2, L2[2].y -= c / 2) : (e[0].h(0, u2), e[1].h(d, e[0].y), e[2].x < e[1].x && (e[2].y > e[0].y ? e[2].assign(e[1]) : e[1].assign(e[2])), e[3].x < e[2].x && (e[3].y > e[0].y ? e[3].assign(e[2]) : e[2].assign(e[3])), L2[0].h(0, u2 + w), L2[1].h(d, L2[0].y), L2[2].x < L2[1].x && (L2[2].y < L2[0].y ? L2[2].assign(L2[1]) : L2[1].assign(L2[2])), L2[3].x < L2[2].x && (L2[3].y < L2[0].y ? L2[3].assign(L2[2]) : L2[2].assign(L2[3])), e[2].x -= c / 2, L2[2].x -= c / 2);
            qu(this, B2);
            qu(this, A2);
            a.gq = e;
            a.sq = L2;
            a.fa.h(l2, u2);
            a.va.h(v2, z2);
          }
          break;
        default:
          C2("Unhandled compaction value " + a.compaction.toString());
      }
    }
  };
  function Xt(a, b) {
    if (b.childrenCount === 0) {
      var c = false, d = 0;
      b.parent !== null && (d = b.parent.angle, c = b.parent.alignment, c = Lt(c));
      var e = Qt(b);
      b.U.h(0, 0);
      b.va.h(b.width, b.height);
      b.parent === null || b.comments === null || (d !== 180 && d !== 270 || c) && !e ? b.fa.h(0, 0) : d === 180 && !c || (d === 90 || d === 270) && e ? b.fa.h(b.width - 2 * b.focus.x, 0) : b.fa.h(0, b.height - 2 * b.focus.y);
    } else {
      d = Zt(b);
      c = d === 90 || d === 270;
      var f2 = 0;
      e = b.children;
      for (var g2 = e.length, h = 0; h < g2; h++) {
        var k = e[h];
        f2 = Math.max(f2, c ? k.va.width : k.va.height);
      }
      var l2 = b.alignment, m2 = l2 === cu, n2 = l2 === $t;
      h = Lt(l2);
      var p2 = Math.max(0, b.breadthLimit);
      k = au(b);
      var r2 = b.nodeSpacing, q2 = bu(b), u2 = m2 || n2 ? 0 : q2 / 2, w = b.rowSpacing, v2 = 0;
      if (m2 || n2 || b.tm || b.um && b.maxGenerationCount === 1)
        v2 = Math.max(0, b.rowIndent);
      m2 = b.width;
      var z2 = b.height, y2 = 0, B2 = 0, A2 = 0, E = 0, Q2 = 0, J2 = 0, S2 = 0, L2 = 0, I2 = 0;
      h && !Pt(l2) && 135 < d && e.reverse();
      if (Pt(l2))
        if (1 < g2)
          for (var ja2 = 0; ja2 < g2; ja2++) {
            var ca2 = e[ja2], pa2 = ca2.va;
            ja2 % 2 === 0 && ja2 !== g2 - 1 && (I2 = Math.max(I2, (c ? pa2.width : pa2.height) + ru(ca2) - r2));
          }
        else
          g2 === 1 && (I2 = c ? e[0].va.width : e[0].va.height);
      if (h)
        switch (l2) {
          case Mt:
          case Ct:
            B2 = 135 > d ? du(b, e, I2, y2, B2) : eu(b, e, I2, y2, B2);
            I2 = B2.x;
            y2 = B2.width;
            B2 = B2.height;
            break;
          case Nt:
            for (a = 0; a < g2; a++)
              p2 = e[a], u2 = p2.va, A2 = S2 === 0 ? 0 : w, c ? (p2.U.h(f2 - u2.width, Q2 + A2), y2 = Math.max(y2, u2.width), B2 = Math.max(B2, Q2 + A2 + u2.height), Q2 += A2 + u2.height) : (p2.U.h(E + A2, f2 - u2.height), y2 = Math.max(y2, E + A2 + u2.width), B2 = Math.max(B2, u2.height), E += A2 + u2.width), S2++;
            break;
          case Ot:
            for (f2 = 0; f2 < g2; f2++)
              a = e[f2], p2 = a.va, u2 = S2 === 0 ? 0 : w, c ? (a.U.h(r2 / 2 + b.focus.x, Q2 + u2), y2 = Math.max(y2, p2.width), B2 = Math.max(B2, Q2 + u2 + p2.height), Q2 += u2 + p2.height) : (a.U.h(E + u2, r2 / 2 + b.focus.y), y2 = Math.max(y2, E + u2 + p2.width), B2 = Math.max(B2, p2.height), E += u2 + p2.width), S2++;
        }
      else
        for (ja2 = 0; ja2 < g2; ja2++) {
          ca2 = e[ja2];
          pa2 = ca2.va;
          if (c) {
            0 < p2 && 0 < S2 && E + r2 + pa2.width > p2 && (E < f2 && gu(b, l2, f2 - E, 0, L2, ja2 - 1), J2++, S2 = 0, L2 = ja2, A2 = B2, E = 0, Q2 = 135 < d ? -B2 - w : B2 + w);
            var Na2 = S2 === 0 ? u2 : r2;
            hu(a, ca2, 0, Q2);
            ca2.U.h(E + Na2, Q2);
            y2 = Math.max(y2, E + Na2 + pa2.width);
            B2 = Math.max(B2, A2 + (J2 === 0 ? 0 : w) + pa2.height);
            E += Na2 + pa2.width;
          } else
            0 < p2 && 0 < S2 && Q2 + r2 + pa2.height > p2 && (Q2 < f2 && gu(b, l2, 0, f2 - Q2, L2, ja2 - 1), J2++, S2 = 0, L2 = ja2, A2 = y2, Q2 = 0, E = 135 < d ? -y2 - w : y2 + w), Na2 = S2 === 0 ? u2 : r2, hu(a, ca2, E, 0), ca2.U.h(E, Q2 + Na2), B2 = Math.max(B2, Q2 + Na2 + pa2.height), y2 = Math.max(y2, A2 + (J2 === 0 ? 0 : w) + pa2.width), Q2 += Na2 + pa2.height;
          S2++;
        }
      0 < J2 && (c ? (B2 += Math.max(0, k), E < y2 && gu(b, l2, y2 - E, 0, L2, g2 - 1), 0 < v2 && (n2 || ju(b, v2, 0, 0, g2 - 1), y2 += v2)) : (y2 += Math.max(0, k), Q2 < B2 && gu(b, l2, 0, B2 - Q2, L2, g2 - 1), 0 < v2 && (n2 || ju(b, 0, v2, 0, g2 - 1), B2 += v2)));
      v2 = n2 = 0;
      switch (l2) {
        case lu:
          c ? n2 += y2 / 2 - b.focus.x - q2 / 2 : v2 += B2 / 2 - b.focus.y - q2 / 2;
          break;
        case mu:
          0 < J2 ? c ? n2 += y2 / 2 - b.focus.x - q2 / 2 : v2 += B2 / 2 - b.focus.y - q2 / 2 : c ? (l2 = e[0].U.x + e[0].fa.x, n2 += l2 + (e[g2 - 1].U.x + e[g2 - 1].fa.x + 2 * e[g2 - 1].focus.x - l2) / 2 - b.focus.x - q2 / 2) : (l2 = e[0].U.y + e[0].fa.y, v2 += l2 + (e[g2 - 1].U.y + e[g2 - 1].fa.y + 2 * e[g2 - 1].focus.y - l2) / 2 - b.focus.y - q2 / 2);
          break;
        case cu:
          c ? (n2 -= q2, y2 += q2) : (v2 -= q2, B2 += q2);
          break;
        case $t:
          c ? (n2 += y2 - b.width + q2, y2 += q2) : (v2 += B2 - b.height + q2, B2 += q2);
          break;
        case Mt:
        case Ct:
          c ? 1 < g2 ? n2 += I2 + r2 / 2 - b.focus.x : n2 += e[0].focus.x - b.focus.x + e[0].fa.x : 1 < g2 ? v2 += I2 + r2 / 2 - b.focus.y : v2 += e[0].focus.y - b.focus.y + e[0].fa.y;
          break;
        case Nt:
          c ? n2 += y2 + r2 / 2 - b.focus.x : v2 += B2 + r2 / 2 - b.focus.y;
          break;
        case Ot:
          break;
        default:
          C2("Unhandled alignment value " + l2.toString());
      }
      for (q2 = 0; q2 < g2; q2++)
        l2 = e[q2], c ? l2.U.h(l2.U.x + l2.fa.x - n2, l2.U.y + (135 < d ? (h ? -B2 : -l2.va.height) + l2.fa.y - k : z2 + k + l2.fa.y)) : l2.U.h(l2.U.x + (135 < d ? (h ? -y2 : -l2.va.width) + l2.fa.x - k : m2 + k + l2.fa.x), l2.U.y + l2.fa.y - v2);
      c ? (y2 = nu(b, y2, n2), 0 > n2 && (n2 = 0), 135 < d && (v2 += B2 + k), B2 = Math.max(Math.max(B2, z2), B2 + z2 + k)) : (135 < d && (n2 += y2 + k), y2 = Math.max(Math.max(y2, m2), y2 + m2 + k), B2 = ou(b, B2, v2), 0 > v2 && (v2 = 0));
      b.fa.h(n2, v2);
      b.va.h(y2, B2);
    }
  }
  function du(a, b, c, d, e) {
    var f2 = b.length;
    if (f2 === 0)
      return new N2(c, 0, d, e);
    if (f2 === 1)
      return a = b[0], d = a.va.width, e = a.va.height, new N2(c, 0, d, e);
    for (var g2 = a.nodeSpacing, h = a.rowSpacing, k = Zt(a) === 90, l2 = 0, m2 = 0, n2 = 0, p2 = 0; p2 < f2; p2++)
      if (!(p2 % 2 !== 0 || 1 < f2 && p2 === f2 - 1)) {
        var r2 = b[p2], q2 = r2.va, u2 = l2 === 0 ? 0 : h;
        if (k) {
          var w = ru(r2) - g2;
          r2.U.h(c - (q2.width + w), n2 + u2);
          d = Math.max(d, q2.width + w);
          e = Math.max(e, n2 + u2 + q2.height);
          n2 += u2 + q2.height;
        } else
          w = ru(r2) - g2, r2.U.h(m2 + u2, c - (q2.height + w)), e = Math.max(e, q2.height + w), d = Math.max(d, m2 + u2 + q2.width), m2 += u2 + q2.width;
        l2++;
      }
    l2 = 0;
    r2 = m2;
    p2 = n2;
    k ? (m2 = c + g2, n2 = 0) : (m2 = 0, n2 = c + g2);
    for (q2 = 0; q2 < f2; q2++)
      if (q2 % 2 !== 0) {
        u2 = b[q2];
        w = u2.va;
        var v2 = l2 === 0 ? 0 : h;
        if (k) {
          var z2 = ru(u2) - g2;
          u2.U.h(m2 + z2, n2 + v2);
          d = Math.max(d, m2 + w.width + z2);
          e = Math.max(e, n2 + v2 + w.height);
          n2 += v2 + w.height;
        } else
          z2 = ru(u2) - g2, u2.U.h(m2 + v2, n2 + z2), d = Math.max(d, m2 + v2 + w.width), e = Math.max(e, n2 + w.height + z2), m2 += v2 + w.width;
        l2++;
      }
    1 < f2 && f2 % 2 === 1 && (b = b[f2 - 1], f2 = b.va, h = b.parent === null ? 0 : b.parent.rowSpacing, k ? (b.U.h(c + g2 / 2 - b.focus.x - b.fa.x, e + h), k = c + g2 / 2 - b.focus.x - b.fa.x, d = Math.max(d, k + f2.width), 0 > k && (d -= k), e = Math.max(e, Math.max(p2, n2) + h + f2.height), 0 > b.U.x && (c = su(a, b.U.x, false, c, g2))) : (b.U.h(d + h, c + g2 / 2 - b.focus.y - b.fa.y), d = Math.max(d, Math.max(r2, m2) + h + f2.width), n2 = c + g2 / 2 - b.focus.y - b.fa.y, e = Math.max(e, n2 + f2.height), 0 > n2 && (e -= n2), 0 > b.U.y && (c = su(a, b.U.y, true, c, g2))));
    return new N2(c, 0, d, e);
  }
  function eu(a, b, c, d, e) {
    var f2 = b.length;
    if (f2 === 0)
      return new N2(c, 0, d, e);
    if (f2 === 1)
      return b = b[0], d = b.va.width, e = b.va.height, new N2(c, 0, d, e);
    for (var g2 = a.nodeSpacing, h = a.rowSpacing, k = Zt(a) === 270, l2 = 0, m2 = 0, n2 = 0, p2 = 0; p2 < f2; p2++)
      if (!(p2 % 2 !== 0 || 1 < f2 && p2 === f2 - 1)) {
        var r2 = b[p2], q2 = r2.va, u2 = l2 === 0 ? 0 : h;
        if (k) {
          var w = ru(r2) - g2;
          n2 -= u2 + q2.height;
          r2.U.h(c - (q2.width + w), n2);
          d = Math.max(d, q2.width + w);
          e = Math.max(e, Math.abs(n2));
        } else
          w = ru(r2) - g2, m2 -= u2 + q2.width, r2.U.h(m2, c - (q2.height + w)), e = Math.max(e, q2.height + w), d = Math.max(d, Math.abs(m2));
        l2++;
      }
    l2 = 0;
    r2 = m2;
    p2 = n2;
    k ? (m2 = c + g2, n2 = 0) : (m2 = 0, n2 = c + g2);
    for (q2 = 0; q2 < f2; q2++)
      if (q2 % 2 !== 0) {
        u2 = b[q2];
        w = u2.va;
        var v2 = l2 === 0 ? 0 : h;
        if (k) {
          var z2 = ru(u2) - g2;
          n2 -= v2 + w.height;
          u2.U.h(m2 + z2, n2);
          d = Math.max(d, m2 + w.width + z2);
          e = Math.max(e, Math.abs(n2));
        } else
          z2 = ru(u2) - g2, m2 -= v2 + w.width, u2.U.h(m2, n2 + z2), e = Math.max(e, n2 + w.height + z2), d = Math.max(d, Math.abs(m2));
        l2++;
      }
    1 < f2 && f2 % 2 === 1 && (h = b[f2 - 1], l2 = h.va, q2 = h.parent === null ? 0 : h.parent.rowSpacing, k ? (h.U.h(c + g2 / 2 - h.focus.x - h.fa.x, -e - l2.height - q2), m2 = c + g2 / 2 - h.focus.x - h.fa.x, d = Math.max(d, m2 + l2.width), 0 > m2 && (d -= m2), e = Math.max(e, Math.abs(Math.min(p2, n2)) + q2 + l2.height), 0 > h.U.x && (c = su(a, h.U.x, false, c, g2))) : (h.U.h(-d - l2.width - q2, c + g2 / 2 - h.focus.y - h.fa.y), d = Math.max(d, Math.abs(Math.min(r2, m2)) + q2 + l2.width), n2 = c + g2 / 2 - h.focus.y - h.fa.y, e = Math.max(e, n2 + l2.height), 0 > n2 && (e -= n2), 0 > h.U.y && (c = su(a, h.U.y, true, c, g2))));
    for (a = 0; a < f2; a++)
      g2 = b[a], k ? g2.U.h(g2.U.x, g2.U.y + e) : g2.U.h(g2.U.x + d, g2.U.y);
    return new N2(c, 0, d, e);
  }
  function ru(a) {
    return a.parent === null ? 0 : a.parent.nodeSpacing;
  }
  function su(a, b, c, d, e) {
    a = a.children;
    for (var f2 = a.length, g2 = 0; g2 < f2; g2++)
      c ? a[g2].U.h(a[g2].U.x, a[g2].U.y - b) : a[g2].U.h(a[g2].U.x - b, a[g2].U.y);
    b = a[f2 - 1];
    return Math.max(d, c ? b.fa.y + b.focus.y - e / 2 : b.fa.x + b.focus.x - e / 2);
  }
  function nu(a, b, c) {
    switch (a.alignment) {
      case mu:
      case lu:
        return c + a.width > b && (b = c + a.width), 0 > c && (b -= c), b;
      case cu:
        return a.width > b ? a.width : b;
      case $t:
        return 2 * a.focus.x > b ? a.width : b + a.width - 2 * a.focus.x;
      case Mt:
      case Ct:
        return Math.max(a.width, Math.max(b, c + a.width) - Math.min(0, c));
      case Nt:
        return a.width - a.focus.x + a.nodeSpacing / 2 + b;
      case Ot:
        return Math.max(a.width, a.focus.x + a.nodeSpacing / 2 + b);
      default:
        return b;
    }
  }
  function ou(a, b, c) {
    switch (a.alignment) {
      case mu:
      case lu:
        return c + a.height > b && (b = c + a.height), 0 > c && (b -= c), b;
      case cu:
        return a.height > b ? a.height : b;
      case $t:
        return 2 * a.focus.y > b ? a.height : b + a.height - 2 * a.focus.y;
      case Mt:
      case Ct:
        return Math.max(a.height, Math.max(b, c + a.height) - Math.min(0, c));
      case Nt:
        return a.height - a.focus.y + a.nodeSpacing / 2 + b;
      case Ot:
        return Math.max(a.height, a.focus.y + a.nodeSpacing / 2 + b);
      default:
        return b;
    }
  }
  function pu(a, b, c) {
    switch (a) {
      case lu:
        b /= 2;
        c /= 2;
        break;
      case mu:
        b /= 2;
        c /= 2;
        break;
      case cu:
        c = b = 0;
        break;
      case $t:
        break;
      default:
        C2("Unhandled alignment value " + a.toString());
    }
    return new K2(b, c);
  }
  function gu(a, b, c, d, e, f2) {
    b = pu(b, c, d);
    ju(a, b.x, b.y, e, f2);
  }
  function ju(a, b, c, d, e) {
    if (b !== 0 || c !== 0)
      for (a = a.children; d <= e; d++) {
        var f2 = a[d].U;
        f2.x += b;
        f2.y += c;
      }
  }
  function hu(a, b, c, d) {
    var e = b.parent;
    switch (a.ld) {
      case lt:
        for (a = b.sourceEdges; a.next(); )
          b = a.value, b.fromVertex === e && b.relativePoint.h(c, d);
        break;
      case st:
        for (a = b.destinationEdges; a.next(); )
          b = a.value, b.toVertex === e && b.relativePoint.h(c, d);
        break;
      default:
        C2("Unhandled path value " + a.ld.toString());
    }
  }
  function ku(a, b, c) {
    for (var d = 0; d < a.length; d++) {
      var e = a[d];
      e.x += b;
      e.y += c;
    }
  }
  function iu(a, b, c, d, e, f2, g2, h) {
    var k = Zt(b), l2 = k === 90 || k === 270, m2 = b.nodeSpacing;
    b = d;
    var n2 = e;
    d = f2;
    var p2 = g2, r2 = c.gq, q2 = c.sq;
    g2 = c.va;
    var u2 = l2 ? Math.max(p2, g2.height) : Math.max(d, g2.width);
    if (r2 === null || k !== Zt(c))
      r2 = fu(a, 2), q2 = fu(a, 2), l2 ? (r2[0].h(0, 0), r2[1].h(0, g2.height), q2[0].h(g2.width, 0), q2[1].h(q2[0].x, r2[1].y)) : (r2[0].h(0, 0), r2[1].h(g2.width, 0), q2[0].h(0, g2.height), q2[1].h(r2[1].x, q2[0].y));
    if (l2) {
      p2 = 9999999;
      if (!(n2 === null || 2 > n2.length || r2 === null || 2 > r2.length))
        for (e = c = 0; c < n2.length && e < r2.length; ) {
          f2 = n2[c];
          var w = r2[e];
          k = w.x;
          l2 = w.y;
          k += d;
          var v2 = f2;
          c + 1 < n2.length && (v2 = n2[c + 1]);
          var z2 = w;
          w = z2.x;
          z2 = z2.y;
          e + 1 < r2.length && (z2 = r2[e + 1], w = z2.x, z2 = z2.y, w += d);
          var y2 = p2;
          f2.y === l2 ? y2 = k - f2.x : f2.y > l2 && f2.y < z2 ? y2 = k + (f2.y - l2) / (z2 - l2) * (w - k) - f2.x : l2 > f2.y && l2 < v2.y && (y2 = k - (f2.x + (l2 - f2.y) / (v2.y - f2.y) * (v2.x - f2.x)));
          y2 < p2 && (p2 = y2);
          v2.y <= f2.y ? c++ : z2 <= l2 ? e++ : (v2.y <= z2 && c++, z2 <= v2.y && e++);
        }
      p2 = d - p2;
      p2 += m2;
      c = r2;
      e = p2;
      if (b === null || 2 > b.length || c === null || 2 > c.length)
        d = null;
      else {
        m2 = fu(a, b.length + c.length);
        for (d = f2 = k = 0; f2 < c.length && c[f2].y < b[0].y; )
          l2 = c[f2++], m2[d++].h(l2.x + e, l2.y);
        for (; k < b.length; )
          l2 = b[k++], m2[d++].h(l2.x, l2.y);
        for (k = b[b.length - 1].y; f2 < c.length && c[f2].y <= k; )
          f2++;
        for (; f2 < c.length && c[f2].y > k; )
          l2 = c[f2++], m2[d++].h(l2.x + e, l2.y);
        c = fu(a, d);
        for (k = 0; k < d; k++)
          c[k].assign(m2[k]);
        qu(a, m2);
        d = c;
      }
      f2 = q2;
      k = p2;
      if (n2 === null || 2 > n2.length || f2 === null || 2 > f2.length)
        e = null;
      else {
        m2 = fu(a, n2.length + f2.length);
        for (e = l2 = c = 0; c < n2.length && n2[c].y < f2[0].y; )
          v2 = n2[c++], m2[e++].h(v2.x, v2.y);
        for (; l2 < f2.length; )
          v2 = f2[l2++], m2[e++].h(v2.x + k, v2.y);
        for (f2 = f2[f2.length - 1].y; c < n2.length && n2[c].y <= f2; )
          c++;
        for (; c < n2.length && n2[c].y > f2; )
          k = n2[c++], m2[e++].h(k.x, k.y);
        f2 = fu(a, e);
        for (c = 0; c < e; c++)
          f2[c].assign(m2[c]);
        qu(a, m2);
        e = f2;
      }
      f2 = Math.max(0, p2) + g2.width;
      g2 = u2;
      qu(a, b);
      qu(a, r2);
      qu(a, n2);
      qu(a, q2);
      h[0] = d;
      h[1] = e;
      return new N2(p2, 0, f2, g2);
    }
    d = 9999999;
    if (!(n2 === null || 2 > n2.length || r2 === null || 2 > r2.length))
      for (e = c = 0; c < n2.length && e < r2.length; )
        f2 = n2[c], w = r2[e], k = w.x, l2 = w.y, l2 += p2, v2 = f2, c + 1 < n2.length && (v2 = n2[c + 1]), z2 = w, w = z2.x, z2 = z2.y, e + 1 < r2.length && (z2 = r2[e + 1], w = z2.x, z2 = z2.y, z2 += p2), y2 = d, f2.x === k ? y2 = l2 - f2.y : f2.x > k && f2.x < w ? y2 = l2 + (f2.x - k) / (w - k) * (z2 - l2) - f2.y : k > f2.x && k < v2.x && (y2 = l2 - (f2.y + (k - f2.x) / (v2.x - f2.x) * (v2.y - f2.y))), y2 < d && (d = y2), v2.x <= f2.x ? c++ : w <= k ? e++ : (v2.x <= w && c++, w <= v2.x && e++);
    p2 -= d;
    p2 += m2;
    c = r2;
    e = p2;
    if (b === null || 2 > b.length || c === null || 2 > c.length)
      d = null;
    else {
      m2 = fu(a, b.length + c.length);
      for (d = f2 = k = 0; f2 < c.length && c[f2].x < b[0].x; )
        l2 = c[f2++], m2[d++].h(l2.x, l2.y + e);
      for (; k < b.length; )
        l2 = b[k++], m2[d++].h(l2.x, l2.y);
      for (k = b[b.length - 1].x; f2 < c.length && c[f2].x <= k; )
        f2++;
      for (; f2 < c.length && c[f2].x > k; )
        l2 = c[f2++], m2[d++].h(l2.x, l2.y + e);
      c = fu(a, d);
      for (k = 0; k < d; k++)
        c[k].assign(m2[k]);
      qu(a, m2);
      d = c;
    }
    f2 = q2;
    k = p2;
    if (n2 === null || 2 > n2.length || f2 === null || 2 > f2.length)
      e = null;
    else {
      m2 = fu(a, n2.length + f2.length);
      for (e = l2 = c = 0; c < n2.length && n2[c].x < f2[0].x; )
        v2 = n2[c++], m2[e++].h(v2.x, v2.y);
      for (; l2 < f2.length; )
        v2 = f2[l2++], m2[e++].h(v2.x, v2.y + k);
      for (f2 = f2[f2.length - 1].x; c < n2.length && n2[c].x <= f2; )
        c++;
      for (; c < n2.length && n2[c].x > f2; )
        k = n2[c++], m2[e++].h(k.x, k.y);
      f2 = fu(a, e);
      for (c = 0; c < e; c++)
        f2[c].assign(m2[c]);
      qu(a, m2);
      e = f2;
    }
    f2 = u2;
    g2 = Math.max(0, p2) + g2.height;
    qu(a, b);
    qu(a, r2);
    qu(a, n2);
    qu(a, q2);
    h[0] = d;
    h[1] = e;
    return new N2(p2, 0, f2, g2);
  }
  function fu(a, b) {
    a = a.su[b];
    if (a !== void 0 && (a = a.pop(), a !== void 0))
      return a;
    a = [];
    for (var c = 0; c < b; c++)
      a[c] = new K2();
    return a;
  }
  function qu(a, b) {
    var c = b.length, d = a.su[c];
    d === void 0 && (d = [], a.su[c] = d);
    d.push(b);
  }
  jt.prototype.arrangeTrees = function() {
    if (this.Ib === rt)
      for (var a = this.Lb.iterator; a.next(); ) {
        var b = a.value;
        if (b instanceof qt) {
          var c = b.node;
          if (c !== null) {
            var d = c.position;
            c = d.x;
            d = d.y;
            isFinite(c) || (c = 0);
            isFinite(d) || (d = 0);
            tu(this, b, c, d);
          }
        }
      }
    else {
      a = [];
      for (b = this.Lb.iterator; b.next(); )
        c = b.value, c instanceof qt && a.push(c);
      switch (this.sorting) {
        case Ht:
          break;
        case It:
          a.reverse();
          break;
        case Jt:
          a.sort(this.comparer);
          break;
        case Kt:
          a.sort(this.comparer);
          a.reverse();
          break;
        default:
          C2("Unhandled sorting value " + this.sorting.toString());
      }
      c = this.arrangementOrigin;
      b = c.x;
      c = c.y;
      for (d = 0; d < a.length; d++) {
        var e = a[d];
        tu(this, e, b + e.fa.x, c + e.fa.y);
        switch (this.Ib) {
          case ot:
            c += e.va.height + this.Rd.height;
            break;
          case uu:
            b += e.va.width + this.Rd.width;
            break;
          default:
            C2("Unhandled arrangement value " + this.Ib.toString());
        }
      }
    }
  };
  function tu(a, b, c, d) {
    if (b !== null) {
      b.x = c;
      b.y = d;
      b = b.children;
      for (var e = b.length, f2 = 0; f2 < e; f2++) {
        var g2 = b[f2];
        tu(a, g2, c + g2.U.x, d + g2.U.y);
      }
    }
  }
  jt.prototype.commitLayout = function() {
    this.Qv();
    this.commitNodes();
    this.Ju();
    this.isRouting && this.commitLinks();
  };
  jt.prototype.commitNodes = function() {
    for (var a = this.network.vertexes.iterator; a.next(); )
      a.value.commit();
    for (a.reset(); a.next(); )
      this.layoutComments(a.value);
  };
  jt.prototype.Ju = function() {
    if (this.layerStyle === zt) {
      for (var a = this.Dw, b = [], c = null, d = this.network.vertexes.iterator; d.next(); ) {
        var e = d.value;
        c === null ? c = e.bounds.copy() : c.Qc(e.bounds);
        var f2 = b[e.level];
        f2 === void 0 ? f2 = au(e) : f2 = Math.max(f2, au(e));
        b[e.level] = f2;
      }
      for (d = 0; d < b.length; d++)
        b[d] === void 0 && (b[d] = 0);
      this.angle === 90 || this.angle === 270 ? (c.Jc(this.nodeSpacing / 2, this.layerSpacing), d = new K2(-this.nodeSpacing / 2, -this.layerSpacing / 2)) : (c.Jc(this.layerSpacing, this.nodeSpacing / 2), d = new K2(-this.layerSpacing / 2, -this.nodeSpacing / 2));
      e = [];
      c = this.angle === 90 || this.angle === 270 ? c.width : c.height;
      f2 = 0;
      if (this.angle === 180 || this.angle === 270)
        for (var g2 = 0; g2 < a.length; g2++)
          f2 += a[g2] + b[g2];
      for (g2 = 0; g2 < a.length; g2++) {
        var h = a[g2] + b[g2];
        this.angle === 270 ? (f2 -= h, e.push(new N2(0, f2, c, h))) : this.angle === 90 ? (e.push(new N2(0, f2, c, h)), f2 += h) : this.angle === 180 ? (f2 -= h, e.push(new N2(f2, 0, h, c))) : (e.push(new N2(f2, 0, h, c)), f2 += h);
      }
      this.commitLayers(e, d);
    }
  };
  jt.prototype.commitLayers = function() {
  };
  jt.prototype.commitLinks = function() {
    for (var a = this.network.edges.iterator; a.next(); )
      a.value.commit();
  };
  jt.prototype.Qv = function() {
    for (var a = this.Lb.iterator; a.next(); ) {
      var b = a.value;
      b instanceof qt && vu(this, b);
    }
  };
  function vu(a, b) {
    if (b !== null) {
      a.setPortSpots(b);
      b = b.children;
      for (var c = b.length, d = 0; d < c; d++)
        vu(a, b[d]);
    }
  }
  jt.prototype.setPortSpots = function(a) {
    var b = a.alignment;
    if (Lt(b)) {
      var c = this.ld === lt, d = Zt(a);
      switch (d) {
        case 0:
          var e = cd2;
          break;
        case 90:
          e = dd2;
          break;
        case 180:
          e = bd2;
          break;
        default:
          e = ad2;
      }
      var f2 = a.children, g2 = f2.length;
      switch (b) {
        case Mt:
        case Ct:
          for (b = 0; b < g2; b++) {
            var h = f2[b];
            h = (c ? h.sourceEdges : h.destinationEdges).first();
            if (h !== null && (h = h.link, h !== null)) {
              var k = d === 90 || d === 270 ? bd2 : ad2;
              if (g2 === 1 || b === g2 - 1 && g2 % 2 === 1)
                switch (d) {
                  case 0:
                    k = bd2;
                    break;
                  case 90:
                    k = ad2;
                    break;
                  case 180:
                    k = cd2;
                    break;
                  default:
                    k = dd2;
                }
              else
                b % 2 === 0 && (k = d === 90 || d === 270 ? cd2 : dd2);
              c ? (a.setsPortSpot && (h.fromSpot = e), a.setsChildPortSpot && (h.toSpot = k)) : (a.setsPortSpot && (h.fromSpot = k), a.setsChildPortSpot && (h.toSpot = e));
            }
          }
          break;
        case Nt:
          d = d === 90 || d === 270 ? cd2 : dd2;
          for (f2 = c ? a.destinationEdges : a.sourceEdges; f2.next(); )
            g2 = f2.value.link, g2 !== null && (c ? (a.setsPortSpot && (g2.fromSpot = e), a.setsChildPortSpot && (g2.toSpot = d)) : (a.setsPortSpot && (g2.fromSpot = d), a.setsChildPortSpot && (g2.toSpot = e)));
          break;
        case Ot:
          for (d = d === 90 || d === 270 ? bd2 : ad2, f2 = c ? a.destinationEdges : a.sourceEdges; f2.next(); )
            g2 = f2.value.link, g2 !== null && (c ? (a.setsPortSpot && (g2.fromSpot = e), a.setsChildPortSpot && (g2.toSpot = d)) : (a.setsPortSpot && (g2.fromSpot = d), a.setsChildPortSpot && (g2.toSpot = e)));
      }
    } else if (c = Zt(a), this.ld === lt)
      for (e = a.destinationEdges; e.next(); ) {
        if (d = e.value.link, d !== null) {
          if (a.setsPortSpot)
            if (a.portSpot.Nb())
              switch (c) {
                case 0:
                  d.fromSpot = cd2;
                  break;
                case 90:
                  d.fromSpot = dd2;
                  break;
                case 180:
                  d.fromSpot = bd2;
                  break;
                default:
                  d.fromSpot = ad2;
              }
            else
              d.fromSpot = a.portSpot;
          if (a.setsChildPortSpot)
            if (a.childPortSpot.Nb())
              switch (c) {
                case 0:
                  d.toSpot = bd2;
                  break;
                case 90:
                  d.toSpot = ad2;
                  break;
                case 180:
                  d.toSpot = cd2;
                  break;
                default:
                  d.toSpot = dd2;
              }
            else
              d.toSpot = a.childPortSpot;
        }
      }
    else
      for (e = a.sourceEdges; e.next(); )
        if (d = e.value.link, d !== null) {
          if (a.setsPortSpot)
            if (a.portSpot.Nb())
              switch (c) {
                case 0:
                  d.toSpot = cd2;
                  break;
                case 90:
                  d.toSpot = dd2;
                  break;
                case 180:
                  d.toSpot = bd2;
                  break;
                default:
                  d.toSpot = ad2;
              }
            else
              d.toSpot = a.portSpot;
          if (a.setsChildPortSpot)
            if (a.childPortSpot.Nb())
              switch (c) {
                case 0:
                  d.fromSpot = bd2;
                  break;
                case 90:
                  d.fromSpot = ad2;
                  break;
                case 180:
                  d.fromSpot = cd2;
                  break;
                default:
                  d.fromSpot = dd2;
              }
            else
              d.fromSpot = a.childPortSpot;
        }
  };
  function Zt(a) {
    a = a.angle;
    return 45 >= a ? 0 : 135 >= a ? 90 : 225 >= a ? 180 : 315 >= a ? 270 : 0;
  }
  function au(a) {
    var b = Zt(a);
    b = b === 90 || b === 270;
    var c = a.layerSpacing;
    if (0 < a.layerSpacingParentOverlap) {
      var d = Math.min(1, a.layerSpacingParentOverlap);
      c -= b ? a.height * d : a.width * d;
    }
    c < (b ? -a.height : -a.width) && (c = b ? -a.height : -a.width);
    return c;
  }
  function bu(a) {
    var b = Zt(a), c = a.nodeIndent;
    if (0 < a.nodeIndentPastParent) {
      var d = Math.min(1, a.nodeIndentPastParent);
      c += b === 90 || b === 270 ? a.width * d : a.height * d;
    }
    return c = Math.max(0, c);
  }
  na2.Object.defineProperties(jt.prototype, { roots: { get: function() {
    return this.Lb;
  }, set: function(a) {
    this.Lb !== a && (this.Lb = a, this.B());
  } }, path: { get: function() {
    return this.Mo;
  }, set: function(a) {
    this.Mo !== a && (this.Mo = a, this.B());
  } }, treeStyle: { get: function() {
    return this.Fp;
  }, set: function(a) {
    this.Ib === a || a !== mt && a !== Ft && a !== Gt && a !== Et || (this.Fp = a, this.B());
  } }, layerStyle: {
    get: function() {
      return this.ur;
    },
    set: function(a) {
      this.Ib === a || a !== nt && a !== At && a !== zt || (this.ur = a, this.B());
    }
  }, comments: { get: function() {
    return this.jd;
  }, set: function(a) {
    this.jd !== a && (this.jd = a, this.B());
  } }, arrangement: { get: function() {
    return this.Ib;
  }, set: function(a) {
    this.Ib === a || a !== ot && a !== uu && a !== rt || (this.Ib = a, this.B());
  } }, arrangementSpacing: { get: function() {
    return this.Rd;
  }, set: function(a) {
    this.Rd.A(a) || (this.Rd.assign(a), this.B());
  } }, rootDefaults: {
    get: function() {
      return this.V;
    },
    set: function(a) {
      this.V !== a && (this.V = a, this.B());
    }
  }, alternateDefaults: { get: function() {
    return this.W;
  }, set: function(a) {
    this.W !== a && (this.W = a, this.B());
  } }, sorting: { get: function() {
    return this.V.sorting;
  }, set: function(a) {
    this.V.sorting === a || a !== Ht && a !== It && a !== Jt && !Kt || (this.V.sorting = a, this.B());
  } }, comparer: { get: function() {
    return this.V.comparer;
  }, set: function(a) {
    this.V.comparer !== a && (this.V.comparer = a, this.B());
  } }, angle: { get: function() {
    return this.V.angle;
  }, set: function(a) {
    this.V.angle !== a && (a === 0 || a === 90 || a === 180 || a === 270 ? (this.V.angle = a, this.B()) : C2("TreeLayout.angle must be 0, 90, 180, or 270"));
  } }, alignment: { get: function() {
    return this.V.alignment;
  }, set: function(a) {
    this.V.alignment !== a && (this.V.alignment = a, this.B());
  } }, nodeIndent: { get: function() {
    return this.V.nodeIndent;
  }, set: function(a) {
    this.V.nodeIndent !== a && 0 <= a && (this.V.nodeIndent = a, this.B());
  } }, nodeIndentPastParent: { get: function() {
    return this.V.nodeIndentPastParent;
  }, set: function(a) {
    this.V.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.V.nodeIndentPastParent = a, this.B());
  } }, nodeSpacing: { get: function() {
    return this.V.nodeSpacing;
  }, set: function(a) {
    this.V.nodeSpacing !== a && (this.V.nodeSpacing = a, this.B());
  } }, layerSpacing: { get: function() {
    return this.V.layerSpacing;
  }, set: function(a) {
    this.V.layerSpacing !== a && (this.V.layerSpacing = a, this.B());
  } }, layerSpacingParentOverlap: { get: function() {
    return this.V.layerSpacingParentOverlap;
  }, set: function(a) {
    this.V.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.V.layerSpacingParentOverlap = a, this.B());
  } }, compaction: { get: function() {
    return this.V.compaction;
  }, set: function(a) {
    this.V.compaction === a || a !== Rt && a !== Yt || (this.V.compaction = a, this.B());
  } }, breadthLimit: {
    get: function() {
      return this.V.breadthLimit;
    },
    set: function(a) {
      this.V.breadthLimit !== a && 0 <= a && (this.V.breadthLimit = a, this.B());
    }
  }, rowSpacing: { get: function() {
    return this.V.rowSpacing;
  }, set: function(a) {
    this.V.rowSpacing !== a && (this.V.rowSpacing = a, this.B());
  } }, rowIndent: { get: function() {
    return this.V.rowIndent;
  }, set: function(a) {
    this.V.rowIndent !== a && 0 <= a && (this.V.rowIndent = a, this.B());
  } }, commentSpacing: { get: function() {
    return this.V.commentSpacing;
  }, set: function(a) {
    this.V.commentSpacing !== a && (this.V.commentSpacing = a, this.B());
  } }, commentMargin: { get: function() {
    return this.V.commentMargin;
  }, set: function(a) {
    this.V.commentMargin !== a && (this.V.commentMargin = a, this.B());
  } }, setsPortSpot: { get: function() {
    return this.V.setsPortSpot;
  }, set: function(a) {
    this.V.setsPortSpot !== a && (this.V.setsPortSpot = a, this.B());
  } }, portSpot: { get: function() {
    return this.V.portSpot;
  }, set: function(a) {
    this.V.portSpot.A(a) || (this.V.portSpot = a, this.B());
  } }, setsChildPortSpot: { get: function() {
    return this.V.setsChildPortSpot;
  }, set: function(a) {
    this.V.setsChildPortSpot !== a && (this.V.setsChildPortSpot = a, this.B());
  } }, childPortSpot: { get: function() {
    return this.V.childPortSpot;
  }, set: function(a) {
    this.V.childPortSpot.A(a) || (this.V.childPortSpot = a, this.B());
  } }, alternateSorting: { get: function() {
    return this.W.sorting;
  }, set: function(a) {
    this.W.sorting === a || a !== Ht && a !== It && a !== Jt && !Kt || (this.W.sorting = a, this.B());
  } }, alternateComparer: { get: function() {
    return this.W.comparer;
  }, set: function(a) {
    this.W.comparer !== a && (this.W.comparer = a, this.B());
  } }, alternateAngle: { get: function() {
    return this.W.angle;
  }, set: function(a) {
    this.W.angle === a || a !== 0 && a !== 90 && a !== 180 && a !== 270 || (this.W.angle = a, this.B());
  } }, alternateAlignment: { get: function() {
    return this.W.alignment;
  }, set: function(a) {
    this.W.alignment !== a && (this.W.alignment = a, this.B());
  } }, alternateNodeIndent: { get: function() {
    return this.W.nodeIndent;
  }, set: function(a) {
    this.W.nodeIndent !== a && 0 <= a && (this.W.nodeIndent = a, this.B());
  } }, alternateNodeIndentPastParent: { get: function() {
    return this.W.nodeIndentPastParent;
  }, set: function(a) {
    this.W.nodeIndentPastParent !== a && 0 <= a && 1 >= a && (this.W.nodeIndentPastParent = a, this.B());
  } }, alternateNodeSpacing: {
    get: function() {
      return this.W.nodeSpacing;
    },
    set: function(a) {
      this.W.nodeSpacing !== a && (this.W.nodeSpacing = a, this.B());
    }
  }, alternateLayerSpacing: { get: function() {
    return this.W.layerSpacing;
  }, set: function(a) {
    this.W.layerSpacing !== a && (this.W.layerSpacing = a, this.B());
  } }, alternateLayerSpacingParentOverlap: { get: function() {
    return this.W.layerSpacingParentOverlap;
  }, set: function(a) {
    this.W.layerSpacingParentOverlap !== a && 0 <= a && 1 >= a && (this.W.layerSpacingParentOverlap = a, this.B());
  } }, alternateCompaction: {
    get: function() {
      return this.W.compaction;
    },
    set: function(a) {
      this.W.compaction === a || a !== Rt && a !== Yt || (this.W.compaction = a, this.B());
    }
  }, alternateBreadthLimit: { get: function() {
    return this.W.breadthLimit;
  }, set: function(a) {
    this.W.breadthLimit !== a && 0 <= a && (this.W.breadthLimit = a, this.B());
  } }, alternateRowSpacing: { get: function() {
    return this.W.rowSpacing;
  }, set: function(a) {
    this.W.rowSpacing !== a && (this.W.rowSpacing = a, this.B());
  } }, alternateRowIndent: {
    get: function() {
      return this.W.rowIndent;
    },
    set: function(a) {
      this.W.rowIndent !== a && 0 <= a && (this.W.rowIndent = a, this.B());
    }
  }, alternateCommentSpacing: { get: function() {
    return this.W.commentSpacing;
  }, set: function(a) {
    this.W.commentSpacing !== a && (this.W.commentSpacing = a, this.B());
  } }, alternateCommentMargin: { get: function() {
    return this.W.commentMargin;
  }, set: function(a) {
    this.W.commentMargin !== a && (this.W.commentMargin = a, this.B());
  } }, alternateSetsPortSpot: {
    get: function() {
      return this.W.setsPortSpot;
    },
    set: function(a) {
      this.W.setsPortSpot !== a && (this.W.setsPortSpot = a, this.B());
    }
  }, alternatePortSpot: { get: function() {
    return this.W.portSpot;
  }, set: function(a) {
    this.W.portSpot.A(a) || (this.W.portSpot = a, this.B());
  } }, alternateSetsChildPortSpot: { get: function() {
    return this.W.setsChildPortSpot;
  }, set: function(a) {
    this.W.setsChildPortSpot !== a && (this.W.setsChildPortSpot = a, this.B());
  } }, alternateChildPortSpot: {
    get: function() {
      return this.W.childPortSpot;
    },
    set: function(a) {
      this.W.childPortSpot.A(a) || (this.W.childPortSpot = a, this.B());
    }
  } });
  var kt = new D2(jt, "PathDefault", -1), lt = new D2(jt, "PathDestination", 0), st = new D2(jt, "PathSource", 1), Ht = new D2(jt, "SortingForwards", 10), It = new D2(jt, "SortingReverse", 11), Jt = new D2(jt, "SortingAscending", 12), Kt = new D2(jt, "SortingDescending", 13), lu = new D2(jt, "AlignmentCenterSubtrees", 20), mu = new D2(jt, "AlignmentCenterChildren", 21), cu = new D2(jt, "AlignmentStart", 22), $t = new D2(jt, "AlignmentEnd", 23), Mt = new D2(jt, "AlignmentBus", 24), Ct = new D2(jt, "AlignmentBusBranching", 25), Nt = new D2(jt, "AlignmentTopLeftBus", 26), Ot = new D2(jt, "AlignmentBottomRightBus", 27), Rt = new D2(jt, "CompactionNone", 30), Yt = new D2(jt, "CompactionBlock", 31), mt = new D2(jt, "StyleLayered", 40), Gt = new D2(jt, "StyleLastParents", 41), Ft = new D2(jt, "StyleAlternating", 42), Et = new D2(jt, "StyleRootOnly", 43), ot = new D2(jt, "ArrangementVertical", 50), uu = new D2(jt, "ArrangementHorizontal", 51), rt = new D2(jt, "ArrangementFixedRoots", 52), nt = new D2(jt, "LayerIndividual", 60), At = new D2(jt, "LayerSiblings", 61), zt = new D2(jt, "LayerUniform", 62);
  jt.className = "TreeLayout";
  jt.PathDefault = kt;
  jt.PathDestination = lt;
  jt.PathSource = st;
  jt.SortingForwards = Ht;
  jt.SortingReverse = It;
  jt.SortingAscending = Jt;
  jt.SortingDescending = Kt;
  jt.AlignmentCenterSubtrees = lu;
  jt.AlignmentCenterChildren = mu;
  jt.AlignmentStart = cu;
  jt.AlignmentEnd = $t;
  jt.AlignmentBus = Mt;
  jt.AlignmentBusBranching = Ct;
  jt.AlignmentTopLeftBus = Nt;
  jt.AlignmentBottomRightBus = Ot;
  jt.CompactionNone = Rt;
  jt.CompactionBlock = Yt;
  jt.StyleLayered = mt;
  jt.StyleLastParents = Gt;
  jt.StyleAlternating = Ft;
  jt.StyleRootOnly = Et;
  jt.ArrangementVertical = ot;
  jt.ArrangementHorizontal = uu;
  jt.ArrangementFixedRoots = rt;
  jt.LayerIndividual = nt;
  jt.LayerSiblings = At;
  jt.LayerUniform = zt;
  function pt(a) {
    Qp.call(this, a);
  }
  ma2(pt, Qp);
  pt.prototype.createVertex = function() {
    return new qt(this);
  };
  pt.prototype.createEdge = function() {
    return new wu(this);
  };
  pt.className = "TreeNetwork";
  function qt(a) {
    dq.call(this, a);
    this.wa = false;
    this.Hb = null;
    this.C = [];
    this.Rb = this.Ma = this.L = this.Ba = 0;
    this.jd = null;
    this.U = new K2(0, 0);
    this.va = new Gb2(0, 0);
    this.fa = new K2(0, 0);
    this.um = this.tm = this.MA = false;
    this.sq = this.gq = null;
    this.$c = Ht;
    this.Sc = kq;
    this.zb = 0;
    this.yb = mu;
    this.Cr = this.Br = 0;
    this.Dr = 20;
    this.be = 50;
    this.tr = 0;
    this.Mq = Yt;
    this.Fq = 0;
    this.Mr = 25;
    this.Lq = this.Lr = 10;
    this.Kq = 20;
    this.Rr = true;
    this.Ir = Uc2;
    this.Qr = true;
    this.Iq = Uc2;
  }
  ma2(qt, dq);
  qt.prototype.copyInheritedPropertiesFrom = function(a) {
    a !== null && (this.$c = a.sorting, this.Sc = a.comparer, this.zb = a.angle, this.yb = a.alignment, this.Br = a.nodeIndent, this.Cr = a.nodeIndentPastParent, this.Dr = a.nodeSpacing, this.be = a.layerSpacing, this.tr = a.layerSpacingParentOverlap, this.Mq = a.compaction, this.Fq = a.breadthLimit, this.Mr = a.rowSpacing, this.Lr = a.rowIndent, this.Lq = a.commentSpacing, this.Kq = a.commentMargin, this.Rr = a.setsPortSpot, this.Ir = a.portSpot, this.Qr = a.setsChildPortSpot, this.Iq = a.childPortSpot);
  };
  na2.Object.defineProperties(qt.prototype, {
    initialized: { get: function() {
      return this.wa;
    }, set: function(a) {
      this.wa !== a && (this.wa = a);
    } },
    parent: { get: function() {
      return this.Hb;
    }, set: function(a) {
      this.Hb !== a && (this.Hb = a);
    } },
    children: { get: function() {
      return this.C;
    }, set: function(a) {
      if (this.C !== a) {
        if (a !== null)
          for (var b = a.length, c = 0; c < b; c++)
            ;
        this.C = a;
      }
    } },
    level: { get: function() {
      return this.Ba;
    }, set: function(a) {
      this.Ba !== a && (this.Ba = a);
    } },
    descendantCount: { get: function() {
      return this.L;
    }, set: function(a) {
      this.L !== a && (this.L = a);
    } },
    maxChildrenCount: { get: function() {
      return this.Ma;
    }, set: function(a) {
      this.Ma !== a && (this.Ma = a);
    } },
    maxGenerationCount: { get: function() {
      return this.Rb;
    }, set: function(a) {
      this.Rb !== a && (this.Rb = a);
    } },
    comments: { get: function() {
      return this.jd;
    }, set: function(a) {
      if (this.jd !== a) {
        if (a !== null)
          for (var b = a.length, c = 0; c < b; c++)
            ;
        this.jd = a;
      }
    } },
    sorting: { get: function() {
      return this.$c;
    }, set: function(a) {
      this.$c !== a && (this.$c = a);
    } },
    comparer: { get: function() {
      return this.Sc;
    }, set: function(a) {
      this.Sc !== a && (this.Sc = a);
    } },
    angle: { get: function() {
      return this.zb;
    }, set: function(a) {
      this.zb !== a && (this.zb = a);
    } },
    alignment: { get: function() {
      return this.yb;
    }, set: function(a) {
      this.yb !== a && (this.yb = a);
    } },
    nodeIndent: {
      get: function() {
        return this.Br;
      },
      set: function(a) {
        this.Br !== a && (this.Br = a);
      }
    },
    nodeIndentPastParent: { get: function() {
      return this.Cr;
    }, set: function(a) {
      this.Cr !== a && (this.Cr = a);
    } },
    nodeSpacing: { get: function() {
      return this.Dr;
    }, set: function(a) {
      this.Dr !== a && (this.Dr = a);
    } },
    layerSpacing: { get: function() {
      return this.be;
    }, set: function(a) {
      this.be !== a && (this.be = a);
    } },
    layerSpacingParentOverlap: {
      get: function() {
        return this.tr;
      },
      set: function(a) {
        this.tr !== a && (this.tr = a);
      }
    },
    compaction: { get: function() {
      return this.Mq;
    }, set: function(a) {
      this.Mq !== a && (this.Mq = a);
    } },
    breadthLimit: { get: function() {
      return this.Fq;
    }, set: function(a) {
      this.Fq !== a && (this.Fq = a);
    } },
    rowSpacing: { get: function() {
      return this.Mr;
    }, set: function(a) {
      this.Mr !== a && (this.Mr = a);
    } },
    rowIndent: { get: function() {
      return this.Lr;
    }, set: function(a) {
      this.Lr !== a && (this.Lr = a);
    } },
    commentSpacing: { get: function() {
      return this.Lq;
    }, set: function(a) {
      this.Lq !== a && (this.Lq = a);
    } },
    commentMargin: { get: function() {
      return this.Kq;
    }, set: function(a) {
      this.Kq !== a && (this.Kq = a);
    } },
    setsPortSpot: { get: function() {
      return this.Rr;
    }, set: function(a) {
      this.Rr !== a && (this.Rr = a);
    } },
    portSpot: { get: function() {
      return this.Ir;
    }, set: function(a) {
      this.Ir.A(a) || (this.Ir = a);
    } },
    setsChildPortSpot: {
      get: function() {
        return this.Qr;
      },
      set: function(a) {
        this.Qr !== a && (this.Qr = a);
      }
    },
    childPortSpot: { get: function() {
      return this.Iq;
    }, set: function(a) {
      this.Iq.A(a) || (this.Iq = a);
    } },
    childrenCount: { get: function() {
      return this.children.length;
    } },
    relativePosition: { get: function() {
      return this.U;
    }, set: function(a) {
      this.U.set(a);
    } },
    subtreeSize: { get: function() {
      return this.va;
    }, set: function(a) {
      this.va.set(a);
    } },
    subtreeOffset: { get: function() {
      return this.fa;
    }, set: function(a) {
      this.fa.set(a);
    } }
  });
  qt.className = "TreeVertex";
  function wu(a) {
    eq.call(this, a);
    this.gu = new K2(0, 0);
  }
  ma2(wu, eq);
  wu.prototype.commit = function() {
    var a = this.link;
    if (a !== null && !a.isAvoiding) {
      var b = this.network.layout, c = null, d = null;
      switch (b.ld) {
        case lt:
          c = this.fromVertex;
          d = this.toVertex;
          break;
        case st:
          c = this.toVertex;
          d = this.fromVertex;
          break;
        default:
          C2("Unhandled path value " + b.ld.toString());
      }
      if (c !== null && d !== null)
        if (b = this.gu, b.x !== 0 || b.y !== 0 || c.MA) {
          d = c.bounds;
          var e = Zt(c), f2 = au(c), g2 = c.rowSpacing;
          a.vg();
          var h = a.curve === Uf2, k = a.isOrthogonal, l2;
          a.Lh();
          if (k || h) {
            for (l2 = 2; 4 < a.pointsCount; )
              a.Iv(2);
            var m2 = a.i(1);
            var n2 = a.i(2);
          } else {
            for (l2 = 1; 3 < a.pointsCount; )
              a.Iv(1);
            m2 = a.i(0);
            n2 = a.i(a.pointsCount - 1);
          }
          var p2 = a.i(a.pointsCount - 1);
          e === 0 ? (c.alignment === $t ? (e = d.bottom + b.y, b.y === 0 && m2.y > p2.y + c.rowIndent && (e = Math.min(e, Math.max(m2.y, e - bu(c))))) : c.alignment === cu ? (e = d.top + b.y, b.y === 0 && m2.y < p2.y - c.rowIndent && (e = Math.max(e, Math.min(m2.y, e + bu(c))))) : e = c.tm || c.um && c.maxGenerationCount === 1 ? d.top - c.fa.y + b.y : d.y + d.height / 2 + b.y, h ? (a.l(l2, m2.x, e), l2++, a.l(l2, d.right + f2, e), l2++, a.l(l2, d.right + f2 + (b.x - g2) / 3, e), l2++, a.l(l2, d.right + f2 + 2 * (b.x - g2) / 3, e), l2++, a.l(l2, d.right + f2 + (b.x - g2), e), l2++, a.l(l2, n2.x, e)) : (k && (a.l(l2, d.right + f2 / 2, m2.y), l2++), a.l(l2, d.right + f2 / 2, e), l2++, a.l(l2, d.right + f2 + b.x - (k ? g2 / 2 : g2), e), l2++, k && a.l(l2, a.i(l2 - 1).x, n2.y))) : e === 90 ? (c.alignment === $t ? (e = d.right + b.x, b.x === 0 && m2.x > p2.x + c.rowIndent && (e = Math.min(e, Math.max(m2.x, e - bu(c))))) : c.alignment === cu ? (e = d.left + b.x, b.x === 0 && m2.x < p2.x - c.rowIndent && (e = Math.max(e, Math.min(m2.x, e + bu(c))))) : e = c.tm || c.um && c.maxGenerationCount === 1 ? d.left - c.fa.x + b.x : d.x + d.width / 2 + b.x, h ? (a.l(l2, e, m2.y), l2++, a.l(l2, e, d.bottom + f2), l2++, a.l(l2, e, d.bottom + f2 + (b.y - g2) / 3), l2++, a.l(l2, e, d.bottom + f2 + 2 * (b.y - g2) / 3), l2++, a.l(l2, e, d.bottom + f2 + (b.y - g2)), l2++, a.l(l2, e, n2.y)) : (k && (a.l(l2, m2.x, d.bottom + f2 / 2), l2++), a.l(l2, e, d.bottom + f2 / 2), l2++, a.l(l2, e, d.bottom + f2 + b.y - (k ? g2 / 2 : g2)), l2++, k && a.l(l2, n2.x, a.i(l2 - 1).y))) : e === 180 ? (c.alignment === $t ? (e = d.bottom + b.y, b.y === 0 && m2.y > p2.y + c.rowIndent && (e = Math.min(e, Math.max(m2.y, e - bu(c))))) : c.alignment === cu ? (e = d.top + b.y, b.y === 0 && m2.y < p2.y - c.rowIndent && (e = Math.max(e, Math.min(m2.y, e + bu(c))))) : e = c.tm || c.um && c.maxGenerationCount === 1 ? d.top - c.fa.y + b.y : d.y + d.height / 2 + b.y, h ? (a.l(l2, m2.x, e), l2++, a.l(l2, d.left - f2, e), l2++, a.l(l2, d.left - f2 + (b.x + g2) / 3, e), l2++, a.l(l2, d.left - f2 + 2 * (b.x + g2) / 3, e), l2++, a.l(l2, d.left - f2 + (b.x + g2), e), l2++, a.l(l2, n2.x, e)) : (k && (a.l(l2, d.left - f2 / 2, m2.y), l2++), a.l(l2, d.left - f2 / 2, e), l2++, a.l(l2, d.left - f2 + b.x + (k ? g2 / 2 : g2), e), l2++, k && a.l(l2, a.i(l2 - 1).x, n2.y))) : e === 270 ? (c.alignment === $t ? (e = d.right + b.x, b.x === 0 && m2.x > p2.x + c.rowIndent && (e = Math.min(e, Math.max(m2.x, e - bu(c))))) : c.alignment === cu ? (e = d.left + b.x, b.x === 0 && m2.x < p2.x - c.rowIndent && (e = Math.max(e, Math.min(m2.x, e + bu(c))))) : e = c.tm || c.um && c.maxGenerationCount === 1 ? d.left - c.fa.x + b.x : d.x + d.width / 2 + b.x, h ? (a.l(l2, e, m2.y), l2++, a.l(l2, e, d.top - f2), l2++, a.l(l2, e, d.top - f2 + (b.y + g2) / 3), l2++, a.l(l2, e, d.top - f2 + 2 * (b.y + g2) / 3), l2++, a.l(l2, e, d.top - f2 + (b.y + g2)), l2++, a.l(l2, e, n2.y)) : (k && (a.l(l2, m2.x, d.top - f2 / 2), l2++), a.l(l2, e, d.top - f2 / 2), l2++, a.l(l2, e, d.top - f2 + b.y + (k ? g2 / 2 : g2)), l2++, k && a.l(l2, n2.x, a.i(l2 - 1).y))) : C2("Invalid angle " + e);
          a.vf();
        } else
          a = this.link, f2 = Zt(c), f2 !== Zt(d) && (g2 = au(c), h = c.bounds, c = d.bounds, f2 === 0 && c.left - h.right < g2 + 1 || f2 === 90 && c.top - h.bottom < g2 + 1 || f2 === 180 && h.left - c.right < g2 + 1 || f2 === 270 && h.top - c.bottom < g2 + 1 || (a.vg(), c = a.curve === Uf2, b = a.isOrthogonal, d = Lt(this.fromVertex.alignment), a.Lh(), f2 === 0 ? (f2 = h.right + g2 / 2, c ? a.pointsCount === 4 && (c = a.i(3).y, a.M(1, f2 - 20, a.i(1).y), a.l(2, f2 - 20, c), a.l(3, f2, c), a.l(4, f2 + 20, c), a.M(5, a.i(5).x, c)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : a.pointsCount === 6 && (a.M(2, f2, a.i(2).y), a.M(3, f2, a.i(3).y)) : a.pointsCount === 4 ? a.l(2, f2, a.i(2).y) : a.pointsCount === 3 ? a.M(1, f2, a.i(2).y) : a.pointsCount === 2 && a.l(1, f2, a.i(1).y)) : f2 === 90 ? (f2 = h.bottom + g2 / 2, c ? a.pointsCount === 4 && (c = a.i(3).x, a.M(1, a.i(1).x, f2 - 20), a.l(2, c, f2 - 20), a.l(3, c, f2), a.l(4, c, f2 + 20), a.M(5, c, a.i(5).y)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : a.pointsCount === 6 && (a.M(2, a.i(2).x, f2), a.M(3, a.i(3).x, f2)) : a.pointsCount === 4 ? a.l(2, a.i(2).x, f2) : a.pointsCount === 3 ? a.M(1, a.i(2).x, f2) : a.pointsCount === 2 && a.l(1, a.i(1).x, f2)) : f2 === 180 ? (f2 = h.left - g2 / 2, c ? a.pointsCount === 4 && (c = a.i(3).y, a.M(1, f2 + 20, a.i(1).y), a.l(2, f2 + 20, c), a.l(3, f2, c), a.l(4, f2 - 20, c), a.M(5, a.i(5).x, c)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : a.pointsCount === 6 && (a.M(2, f2, a.i(2).y), a.M(3, f2, a.i(3).y)) : a.pointsCount === 4 ? a.l(2, f2, a.i(2).y) : a.pointsCount === 3 ? a.M(1, f2, a.i(2).y) : a.pointsCount === 2 && a.l(1, f2, a.i(1).y)) : f2 === 270 && (f2 = h.top - g2 / 2, c ? a.pointsCount === 4 && (c = a.i(3).x, a.M(1, a.i(1).x, f2 + 20), a.l(2, c, f2 + 20), a.l(3, c, f2), a.l(4, c, f2 - 20), a.M(5, c, a.i(5).y)) : b ? d ? a.M(3, a.i(2).x, a.i(4).y) : a.pointsCount === 6 && (a.M(2, a.i(2).x, f2), a.M(3, a.i(3).x, f2)) : a.pointsCount === 4 ? a.l(2, a.i(2).x, f2) : a.pointsCount === 3 ? a.M(1, a.i(2).x, f2) : a.pointsCount === 2 && a.l(1, a.i(1).x, f2)), a.vf()));
    }
  };
  na2.Object.defineProperties(wu.prototype, { fromVertex: { get: function() {
    return this.Uc;
  }, set: function(a) {
    this.Uc !== a && (this.Uc = a);
  } }, toVertex: { get: function() {
    return this.cd;
  }, set: function(a) {
    this.cd !== a && (this.cd = a);
  } }, relativePoint: { get: function() {
    return this.gu;
  }, set: function(a) {
    this.gu.set(a);
  } } });
  wu.className = "TreeEdge";
  Pa2.prototype.initializeStandardTools = function() {
    this.Za("Action", new ug2(), this.mouseDownTools);
    this.Za("Relinking", new Se2(), this.mouseDownTools);
    this.Za("LinkReshaping", new Sf2(), this.mouseDownTools);
    this.Za("Rotating", new sg2(), this.mouseDownTools);
    this.Za("Resizing", new lg2(), this.mouseDownTools);
    this.Za("Linking", new Lf2(), this.mouseMoveTools);
    this.Za("Dragging", new Le2(), this.mouseMoveTools);
    this.Za("DragSelecting", new xg2(), this.mouseMoveTools);
    this.Za("Panning", new yg2(), this.mouseMoveTools);
    this.Za("ContextMenu", new Ag2(), this.mouseUpTools);
    this.Za("TextEditing", new Lg2(), this.mouseUpTools);
    this.Za("ClickCreating", new vg2(), this.mouseUpTools);
    this.Za("ClickSelecting", new tg2(), this.mouseUpTools);
  };
  ln("Horizontal", new om());
  ln("Spot", new qm());
  ln("Table", new vm());
  ln("Viewbox", new Am());
  ln("TableRow", new ym());
  ln("TableColumn", new zm());
  ln("Graduated", new Km());
  ln("Grid", new Bm());
  ii2.add("GraphLinksModel", Dq);
  ii2.add("TreeModel", Rq);
  Wp(Yr, null);
  Wp(ms, null);
  var xu = x2.go, yu = {
    get licenseKey() {
      return R2.licenseKey;
    },
    set licenseKey(a) {
      R2.licenseKey = a;
    },
    get version() {
      return R2.version;
    },
    Group: U2,
    EnumValue: D2,
    List: F2,
    Set: G2,
    Map: H2,
    Point: K2,
    Size: Gb2,
    Rect: N2,
    Margin: lc2,
    Spot: O2,
    Geometry: P2,
    PathFigure: $d2,
    PathSegment: ae2,
    InputEvent: ce2,
    DiagramEvent: ee2,
    ChangedEvent: fe2,
    Model: Z2,
    GraphLinksModel: lr,
    TreeModel: qr,
    Binding: si2,
    Transaction: re2,
    UndoManager: se2,
    CommandHandler: Lk,
    Tool: ue2,
    DraggingTool: Le2,
    DraggingInfo: Te2,
    DraggingOptions: Me2,
    LinkingBaseTool: wf2,
    LinkingTool: Lf2,
    RelinkingTool: Se2,
    LinkReshapingTool: Sf2,
    ResizingTool: lg2,
    RotatingTool: sg2,
    ClickSelectingTool: tg2,
    ActionTool: ug2,
    ClickCreatingTool: vg2,
    HTMLInfo: Ee2,
    ContextMenuTool: Ag2,
    DragSelectingTool: xg2,
    PanningTool: yg2,
    TextEditingTool: Lg2,
    ToolManager: Pa2,
    Animation: gh2,
    AnimationManager: ch2,
    AnimationTrigger: Wh2,
    Layer: ai2,
    Diagram: R2,
    Palette: Ek,
    Overview: Hk,
    Brush: hl,
    GraphObject: Y2,
    Panel: X2,
    RowColumnDefinition: Jj2,
    Shape: xf2,
    TextBlock: Mg2,
    Picture: Rj2,
    Part: V2,
    Adornment: ze,
    Node: W2,
    Link: T2,
    Placeholder: ng2,
    Layout: ni2,
    LayoutNetwork: Qp,
    LayoutVertex: dq,
    LayoutEdge: eq,
    GridLayout: Gk,
    PanelLayout: Fl,
    CircularLayout: rr,
    CircularNetwork: Ir,
    CircularVertex: Wr,
    CircularEdge: Xr,
    ForceDirectedLayout: Yr,
    ForceDirectedNetwork: Zr,
    ForceDirectedVertex: ks,
    ForceDirectedEdge: ls,
    LayeredDigraphLayout: ms,
    LayeredDigraphNetwork: rs,
    LayeredDigraphVertex: ht,
    LayeredDigraphEdge: it,
    TreeLayout: jt,
    TreeNetwork: pt,
    TreeVertex: qt,
    TreeEdge: wu
  };
  typeof xu === "object" && xu.version && C2("WARNING: a `go` object on the root object is already defined.  " + ("Debug" in xu ? "debug " : "") + "version: " + xu.version + ", replaced with version: " + yu.version);
  R2.prototype.go = yu;
  x2.go = yu;
  (typeof x2 === "undefined" || typeof x2.module === "undefined" || typeof x2.module.exports !== "object") && x2.define && typeof x2.define === "function" && x2.define.amd && x2.define(yu);
  typeof module !== "undefined" && typeof module.exports === "object" && (module.exports = typeof global !== "undefined" ? global.go : self.go);
})();
const go = typeof global !== "undefined" ? global.go : self.go;
const Group = go.Group;
go.EnumValue;
const List = go.List;
const Set$1 = go.Set;
const Map$1 = go.Map;
const Point = go.Point;
const Size = go.Size;
const Rect = go.Rect;
const Margin = go.Margin;
const Spot = go.Spot;
const Geometry = go.Geometry;
const PathFigure = go.PathFigure;
const PathSegment = go.PathSegment;
go.InputEvent;
go.DiagramEvent;
go.ChangedEvent;
const Model = go.Model;
const GraphLinksModel = go.GraphLinksModel;
go.TreeModel;
const Binding = go.Binding;
go.Transaction;
go.UndoManager;
go.CommandHandler;
const Tool = go.Tool;
go.DraggingTool;
go.DraggingInfo;
go.LinkingBaseTool;
go.LinkingTool;
go.RelinkingTool;
go.LinkReshapingTool;
go.ResizingTool;
go.RotatingTool;
go.ClickSelectingTool;
go.ActionTool;
go.ClickCreatingTool;
const HTMLInfo = go.HTMLInfo;
go.ContextMenuTool;
go.DragSelectingTool;
go.PanningTool;
go.TextEditingTool;
go.ToolManager;
go.Animation;
go.AnimationManager;
go.AnimationTrigger;
go.Layer;
const Diagram = go.Diagram;
const Palette = go.Palette;
go.Overview;
go.Brush;
const GraphObject = go.GraphObject;
const Panel = go.Panel;
go.RowColumnDefinition;
const Shape = go.Shape;
const TextBlock = go.TextBlock;
go.TextBlockMetrics;
go.Picture;
const Part = go.Part;
const Adornment = go.Adornment;
const Node = go.Node;
const Link = go.Link;
const Placeholder = go.Placeholder;
go.Layout;
go.LayoutNetwork;
go.LayoutVertex;
go.LayoutEdge;
go.GridLayout;
go.PanelLayout;
go.CircularLayout;
go.CircularNetwork;
go.CircularVertex;
go.CircularEdge;
go.ForceDirectedLayout;
go.ForceDirectedNetwork;
go.ForceDirectedVertex;
go.ForceDirectedEdge;
go.LayeredDigraphLayout;
go.LayeredDigraphNetwork;
go.LayeredDigraphVertex;
go.LayeredDigraphEdge;
go.TreeLayout;
go.TreeNetwork;
go.TreeVertex;
go.TreeEdge;
go.version;
class Inspector {
  constructor(divid, diagram, options) {
    this._inspectedObject = null;
    this._inspectSelection = true;
    this._includesOwnProperties = true;
    this._properties = {};
    this._propertyModified = null;
    this._multipleSelection = false;
    this._showUnionProperties = false;
    this._showLimit = 0;
    this.inspectedProperties = {};
    this.multipleProperties = {};
    const mainDiv = document.getElementById(divid);
    mainDiv.className = "inspector";
    mainDiv.innerHTML = "";
    this._div = mainDiv;
    this._diagram = diagram;
    this.tabIndex = 0;
    if (options !== void 0) {
      if (options.inspectSelection !== void 0)
        this._inspectSelection = options.inspectSelection;
      if (options.includesOwnProperties !== void 0)
        this._includesOwnProperties = options.includesOwnProperties;
      if (options.properties !== void 0)
        this._properties = options.properties;
      if (options.propertyModified !== void 0)
        this._propertyModified = options.propertyModified;
      if (options.multipleSelection !== void 0)
        this._multipleSelection = options.multipleSelection;
      if (options.showUnionProperties !== void 0)
        this._showUnionProperties = options.showUnionProperties;
      if (options.showLimit !== void 0)
        this._showLimit = options.showLimit;
    }
    const self2 = this;
    this.inspectOnModelChanged = (e) => {
      if (e.isTransactionFinished)
        self2.inspectObject();
    };
    this.inspectOnSelectionChanged = (e) => {
      self2.inspectObject();
    };
    this._diagram.addModelChangedListener(this.inspectOnModelChanged);
    if (this._inspectSelection) {
      this._diagram.addDiagramListener("ChangedSelection", this.inspectOnSelectionChanged);
    }
  }
  get div() {
    return this._div;
  }
  get diagram() {
    return this._diagram;
  }
  set diagram(val) {
    if (val !== this._diagram) {
      this._diagram.removeModelChangedListener(this.inspectOnModelChanged);
      this._diagram.removeDiagramListener("ChangedSelection", this.inspectOnSelectionChanged);
      this._diagram = val;
      this._diagram.addModelChangedListener(this.inspectOnModelChanged);
      if (this._inspectSelection) {
        this._diagram.addDiagramListener("ChangedSelection", this.inspectOnSelectionChanged);
        this.inspectObject();
      } else {
        this.inspectObject(null);
      }
    }
  }
  get inspectedObject() {
    return this._inspectedObject;
  }
  get inspectSelection() {
    return this._inspectSelection;
  }
  set inspectSelection(val) {
    if (val !== this._inspectSelection) {
      this._inspectSelection = val;
      if (this._inspectSelection) {
        this._diagram.addDiagramListener("ChangedSelection", this.inspectOnSelectionChanged);
        this.inspectObject();
      } else {
        this._diagram.removeDiagramListener("ChangedSelection", this.inspectOnSelectionChanged);
        this.inspectObject(null);
      }
    }
  }
  get includesOwnProperties() {
    return this._includesOwnProperties;
  }
  set includesOwnProperties(val) {
    if (val !== this._includesOwnProperties) {
      this._includesOwnProperties = val;
      this.inspectObject();
    }
  }
  get properties() {
    return this._properties;
  }
  set properties(val) {
    if (val !== this._properties) {
      this._properties = val;
      this.inspectObject();
    }
  }
  get propertyModified() {
    return this._propertyModified;
  }
  set propertyModified(val) {
    if (val !== this._propertyModified) {
      this._propertyModified = val;
    }
  }
  get multipleSelection() {
    return this._multipleSelection;
  }
  set multipleSelection(val) {
    if (val !== this._multipleSelection) {
      this._multipleSelection = val;
      this.inspectObject();
    }
  }
  get showUnionProperties() {
    return this._showUnionProperties;
  }
  set showUnionProperties(val) {
    if (val !== this._showUnionProperties) {
      this._showUnionProperties = val;
      this.inspectObject();
    }
  }
  get showLimit() {
    return this._showLimit;
  }
  set showLimit(val) {
    if (val !== this._showLimit) {
      this._showLimit = val;
      this.inspectObject();
    }
  }
  static showIfNode(part) {
    return part instanceof Node;
  }
  static showIfLink(part) {
    return part instanceof Link;
  }
  static showIfGroup(part) {
    return part instanceof Group;
  }
  static showIfPresent(data, propname) {
    if (data instanceof Part)
      data = data.data;
    return typeof data === "object" && data[propname] !== void 0;
  }
  inspectObject(object) {
    let inspectedObject = null;
    let inspectedObjects = null;
    if (object === null)
      return;
    if (object === void 0) {
      if (this._inspectSelection) {
        if (this._multipleSelection) {
          inspectedObjects = this._diagram.selection;
        } else {
          inspectedObject = this._diagram.selection.first();
        }
      } else {
        inspectedObject = this._inspectedObject;
      }
    } else {
      inspectedObject = object;
    }
    if (!inspectedObjects && inspectedObject) {
      inspectedObjects = new Set$1();
      inspectedObjects.add(inspectedObject);
    }
    if (!inspectedObjects || inspectedObjects.count < 1) {
      this.updateAllHTML();
      return;
    }
    if (inspectedObjects) {
      const mainDiv = this._div;
      mainDiv.innerHTML = "";
      const shared = new Map$1();
      const properties = new Map$1();
      const all = new Map$1();
      const it = inspectedObjects.iterator;
      let nodecount = 2;
      const table = document.createElement("table");
      const tbody = document.createElement("tbody");
      this.inspectedProperties = {};
      this.tabIndex = 0;
      const declaredProperties = this._properties;
      it.next();
      inspectedObject = it.value;
      this._inspectedObject = inspectedObject;
      let data = inspectedObject instanceof Part ? inspectedObject.data : inspectedObject;
      if (data) {
        for (const name in declaredProperties) {
          const desc = declaredProperties[name];
          if (!this.canShowProperty(name, desc, inspectedObject))
            continue;
          const val = this.findValue(name, desc, data);
          if (val === "" && this._properties[name] && this._properties[name].type === "checkbox") {
            shared.add(name, false);
            all.add(name, false);
          } else {
            shared.add(name, val);
            all.add(name, val);
          }
        }
        if (this._includesOwnProperties) {
          for (const k in data) {
            if (k === "__gohashid")
              continue;
            if (this.inspectedProperties[k])
              continue;
            if (declaredProperties[k] && !this.canShowProperty(k, declaredProperties[k], inspectedObject))
              continue;
            shared.add(k, data[k]);
            all.add(k, data[k]);
          }
        }
      }
      while (it.next() && (this._showLimit < 1 || nodecount <= this._showLimit)) {
        properties.clear();
        inspectedObject = it.value;
        if (inspectedObject) {
          data = inspectedObject instanceof Part ? inspectedObject.data : inspectedObject;
          if (data) {
            for (const name in declaredProperties) {
              const desc = declaredProperties[name];
              if (!this.canShowProperty(name, desc, inspectedObject))
                continue;
              const val = this.findValue(name, desc, data);
              if (val === "" && this._properties[name] && this._properties[name].type === "checkbox") {
                properties.add(name, false);
              } else {
                properties.add(name, val);
              }
            }
            if (this._includesOwnProperties) {
              for (const k in data) {
                if (k === "__gohashid")
                  continue;
                if (this.inspectedProperties[k])
                  continue;
                if (declaredProperties[k] && !this.canShowProperty(k, declaredProperties[k], inspectedObject))
                  continue;
                properties.add(k, data[k]);
              }
            }
          }
        }
        if (!this._showUnionProperties) {
          const addIt = shared.iterator;
          const toRemove = [];
          while (addIt.next()) {
            if (properties.has(addIt.key)) {
              let newVal = all.get(addIt.key) + "|" + properties.get(addIt.key);
              all.set(addIt.key, newVal);
              if (declaredProperties[addIt.key] && declaredProperties[addIt.key].type !== "color" && declaredProperties[addIt.key].type !== "checkbox" && declaredProperties[addIt.key].type !== "select" || !declaredProperties[addIt.key]) {
                newVal = shared.get(addIt.key) + "|" + properties.get(addIt.key);
                shared.set(addIt.key, newVal);
              }
            } else {
              toRemove.push(addIt.key);
            }
          }
          for (let i = 0; i < toRemove.length; i++) {
            shared.remove(toRemove[i]);
            all.remove(toRemove[i]);
          }
        } else {
          let addIt = properties.iterator;
          while (addIt.next()) {
            if (all.has(addIt.key)) {
              if (declaredProperties[addIt.key] && declaredProperties[addIt.key].type !== "color" && declaredProperties[addIt.key].type !== "checkbox" && declaredProperties[addIt.key].type !== "select" || !declaredProperties[addIt.key]) {
                const newVal = all.get(addIt.key) + "|" + properties.get(addIt.key);
                all.set(addIt.key, newVal);
              }
            } else {
              let newVal = "";
              for (let i = 0; i < nodecount - 1; i++)
                newVal += "|";
              newVal += properties.get(addIt.key);
              all.set(addIt.key, newVal);
            }
          }
          addIt = all.iterator;
          while (addIt.next()) {
            if (!properties.has(addIt.key)) {
              if (declaredProperties[addIt.key] && declaredProperties[addIt.key].type !== "color" && declaredProperties[addIt.key].type !== "checkbox" && declaredProperties[addIt.key].type !== "select" || !declaredProperties[addIt.key]) {
                const newVal = all.get(addIt.key) + "|";
                all.set(addIt.key, newVal);
              }
            }
          }
        }
        nodecount++;
      }
      let mapIt;
      if (!this._showUnionProperties)
        mapIt = shared.iterator;
      else
        mapIt = all.iterator;
      while (mapIt.next()) {
        tbody.appendChild(this.buildPropertyRow(mapIt.key, mapIt.value));
      }
      table.appendChild(tbody);
      mainDiv.appendChild(table);
      const allIt = all.iterator;
      while (allIt.next()) {
        this.multipleProperties[allIt.key] = allIt.value;
      }
    }
  }
  canShowProperty(propertyName, propertyDesc, inspectedObject) {
    const prop = propertyDesc;
    if (prop.show === false)
      return false;
    if (typeof prop.show === "function")
      return prop.show(inspectedObject, propertyName);
    return true;
  }
  canEditProperty(propertyName, propertyDesc, inspectedObject) {
    if (this._diagram.isReadOnly || this._diagram.isModelReadOnly)
      return false;
    if (inspectedObject === null)
      return false;
    const data = inspectedObject instanceof Part ? inspectedObject.data : inspectedObject;
    const valtype = typeof data[propertyName];
    if (valtype === "function")
      return false;
    if (propertyDesc) {
      const prop = propertyDesc;
      if (prop.readOnly === true)
        return false;
      if (typeof prop.readOnly === "function")
        return !prop.readOnly(inspectedObject, propertyName);
    }
    return true;
  }
  findValue(propName, propDesc, data) {
    let val = "";
    if (propDesc && propDesc.defaultValue !== void 0)
      val = propDesc.defaultValue;
    if (data[propName] !== void 0)
      val = data[propName];
    if (val === void 0)
      return "";
    return val;
  }
  buildPropertyRow(propertyName, propertyValue) {
    const tr = document.createElement("tr");
    const td1 = document.createElement("td");
    let displayName;
    if (this._properties[propertyName] && this._properties[propertyName].name !== void 0) {
      displayName = this._properties[propertyName].name;
    } else {
      displayName = propertyName;
    }
    td1.textContent = displayName;
    tr.appendChild(td1);
    const td2 = document.createElement("td");
    const decProp = this._properties[propertyName];
    let input = null;
    const self2 = this;
    function updateall() {
      if (self2._diagram.selection.count === 1 || !self2.multipleSelection) {
        self2.updateAllProperties();
      } else {
        self2.updateAllObjectsProperties();
      }
    }
    if (decProp && decProp.type === "select") {
      const inputs = input = document.createElement("select");
      this.updateSelect(decProp, inputs, propertyName, propertyValue);
      inputs.addEventListener("change", updateall);
    } else {
      const inputi = input = document.createElement("input");
      if (inputi && inputi.setPointerCapture) {
        inputi.addEventListener("pointerdown", (e) => inputi.setPointerCapture(e.pointerId));
      }
      inputi.value = this.convertToString(propertyValue);
      if (decProp) {
        const t2 = decProp.type;
        if (t2 !== "string" && t2 !== "number" && t2 !== "boolean" && t2 !== "arrayofnumber" && t2 !== "point" && t2 !== "size" && t2 !== "rect" && t2 !== "spot" && t2 !== "margin") {
          inputi.setAttribute("type", decProp.type);
        }
        if (decProp.type === "color") {
          if (inputi.type === "color") {
            inputi.value = this.convertToColor(propertyValue);
            inputi.addEventListener("change", updateall);
          }
        }
        if (decProp.type === "checkbox") {
          inputi.checked = !!propertyValue;
          inputi.addEventListener("change", updateall);
        }
      }
      if (inputi.type !== "color")
        inputi.addEventListener("blur", updateall);
    }
    if (input) {
      input.tabIndex = this.tabIndex++;
      input.disabled = !this.canEditProperty(propertyName, decProp, this._inspectedObject);
      td2.appendChild(input);
    }
    tr.appendChild(td2);
    this.inspectedProperties[propertyName] = input;
    return tr;
  }
  convertToColor(propertyValue) {
    const ctx = document.createElement("canvas").getContext("2d");
    if (ctx === null)
      return "#000000";
    ctx.fillStyle = propertyValue;
    return ctx.fillStyle;
  }
  convertToArrayOfNumber(propertyValue) {
    if (propertyValue === "null")
      return null;
    const split = propertyValue.split(" ");
    const arr = [];
    for (let i = 0; i < split.length; i++) {
      const str = split[i];
      if (!str)
        continue;
      arr.push(parseFloat(str));
    }
    return arr;
  }
  convertToString(x2) {
    if (x2 === void 0)
      return "undefined";
    if (x2 === null)
      return "null";
    if (x2 instanceof Point)
      return Point.stringify(x2);
    if (x2 instanceof Size)
      return Size.stringify(x2);
    if (x2 instanceof Rect)
      return Rect.stringify(x2);
    if (x2 instanceof Spot)
      return Spot.stringify(x2);
    if (x2 instanceof Margin)
      return Margin.stringify(x2);
    if (x2 instanceof List)
      return this.convertToString(x2.toArray());
    if (Array.isArray(x2)) {
      let str = "";
      for (let i = 0; i < x2.length; i++) {
        if (i > 0)
          str += " ";
        const v2 = x2[i];
        str += this.convertToString(v2);
      }
      return str;
    }
    return x2.toString();
  }
  updateAllHTML() {
    const inspectedProps = this.inspectedProperties;
    const isPart = this._inspectedObject instanceof Part;
    const data = isPart ? this._inspectedObject.data : this._inspectedObject;
    if (!data) {
      for (const name in inspectedProps) {
        const input = inspectedProps[name];
        if (input instanceof HTMLSelectElement) {
          input.innerHTML = "";
        } else if (input.type === "color") {
          input.value = "#000000";
        } else if (input.type === "checkbox") {
          input.checked = false;
        } else {
          input.value = "";
        }
      }
    } else {
      for (const name in inspectedProps) {
        const input = inspectedProps[name];
        const propertyValue = data[name];
        if (input instanceof HTMLSelectElement) {
          const decProp = this._properties[name];
          this.updateSelect(decProp, input, name, propertyValue);
        } else if (input.type === "color") {
          input.value = this.convertToColor(propertyValue);
        } else if (input.type === "checkbox") {
          input.checked = !!propertyValue;
        } else {
          input.value = this.convertToString(propertyValue);
        }
      }
    }
  }
  updateSelect(decProp, select, propertyName, propertyValue) {
    select.innerHTML = "";
    let choices = decProp.choices;
    if (typeof choices === "function")
      choices = choices(this._inspectedObject, propertyName);
    if (!Array.isArray(choices))
      choices = [];
    decProp.choicesArray = choices;
    for (let i = 0; i < choices.length; i++) {
      const choice = choices[i];
      const opt = document.createElement("option");
      opt.text = this.convertToString(choice);
      select.add(opt);
    }
    select.value = this.convertToString(propertyValue);
  }
  parseValue(decProp, value, input, oldval) {
    let type = "";
    if (decProp !== void 0 && decProp.type !== void 0) {
      type = decProp.type;
    }
    if (type === "") {
      if (typeof oldval === "boolean")
        type = "boolean";
      else if (typeof oldval === "number")
        type = "number";
      else if (oldval instanceof Point)
        type = "point";
      else if (oldval instanceof Size)
        type = "size";
      else if (oldval instanceof Rect)
        type = "rect";
      else if (oldval instanceof Spot)
        type = "spot";
      else if (oldval instanceof Margin)
        type = "margin";
    }
    switch (type) {
      case "boolean":
        value = !(value === false || value === "false" || value === "0");
        break;
      case "number":
        value = parseFloat(value);
        break;
      case "arrayofnumber":
        value = this.convertToArrayOfNumber(value);
        break;
      case "point":
        value = Point.parse(value);
        break;
      case "size":
        value = Size.parse(value);
        break;
      case "rect":
        value = Rect.parse(value);
        break;
      case "spot":
        value = Spot.parse(value);
        break;
      case "margin":
        value = Margin.parse(value);
        break;
      case "checkbox":
        value = input.checked;
        break;
      case "select":
        value = decProp.choicesArray[input.selectedIndex];
        break;
    }
    return value;
  }
  updateAllObjectsProperties() {
    const inspectedProps = this.inspectedProperties;
    const diagram = this._diagram;
    diagram.startTransaction("set all properties");
    for (const name in inspectedProps) {
      const input = inspectedProps[name];
      let value = input.value;
      const arr1 = value.split("|");
      let arr2 = [];
      if (this.multipleProperties[name]) {
        if (this._properties[name] && this._properties[name].type === "checkbox" && this._showUnionProperties) {
          arr2.push(this.multipleProperties[name]);
        } else if (this._properties[name]) {
          arr2 = this.multipleProperties[name].toString().split("|");
        }
      }
      const it = diagram.selection.iterator;
      let change = false;
      if (this._properties[name] && this._properties[name].type === "checkbox")
        change = true;
      if (arr1.length < arr2.length && (!this._properties[name] || !(this._properties[name] && (this._properties[name].type === "color" || this._properties[name].type === "checkbox" || this._properties[name].type === "choices")))) {
        change = true;
      } else {
        for (let j = 0; j < arr1.length && j < arr2.length; j++) {
          if (!(arr1[j] === arr2[j]) && !(this._properties[name] && this._properties[name].type === "color" && arr1[j].toLowerCase() === arr2[j].toLowerCase())) {
            change = true;
          }
        }
      }
      if (change) {
        for (let i = 0; i < diagram.selection.count; i++) {
          it.next();
          const isPart = it.value instanceof Part;
          const data = isPart ? it.value.data : it.value;
          if (data) {
            if (i < arr1.length)
              value = arr1[i];
            else
              value = arr1[0];
            const decProp = this._properties[name];
            if (!this.canEditProperty(name, decProp, it.value))
              continue;
            const oldval = data[name];
            value = this.parseValue(decProp, value, input, oldval);
            input.value = value;
            diagram.model.setDataProperty(data, name, value);
            if (this.propertyModified !== null)
              this.propertyModified(name, value, this);
          }
        }
      }
    }
    diagram.commitTransaction("set all properties");
  }
  updateAllProperties() {
    const inspectedProps = this.inspectedProperties;
    const diagram = this._diagram;
    const isPart = this.inspectedObject instanceof Part;
    const data = isPart ? this.inspectedObject.data : this.inspectedObject;
    if (!data)
      return;
    diagram.startTransaction("set all properties");
    for (const name in inspectedProps) {
      const input = inspectedProps[name];
      let value = input.value;
      const decProp = this._properties[name];
      if (!this.canEditProperty(name, decProp, this.inspectedObject))
        continue;
      const oldval = data[name];
      value = this.parseValue(decProp, value, input, oldval);
      input.value = value;
      diagram.model.setDataProperty(data, name, value);
      if (this.propertyModified !== null)
        this.propertyModified(name, value, this);
    }
    diagram.commitTransaction("set all properties");
  }
}
class FreehandDrawingTool extends Tool {
  constructor() {
    super();
    this._temporaryShape = GraphObject.make(Shape, { name: "SHAPE", fill: null, strokeWidth: 1.5 });
    this._archetypePartData = {};
    this._isBackgroundOnly = true;
    this.temp = GraphObject.make(Part, { layerName: "Tool" }, this._temporaryShape);
    this.name = "FreehandDrawing";
  }
  get temporaryShape() {
    return this._temporaryShape;
  }
  set temporaryShape(val) {
    if (this._temporaryShape !== val && val !== null) {
      val.name = "SHAPE";
      const panel = this._temporaryShape.panel;
      if (panel !== null) {
        panel.remove(this._temporaryShape);
        this._temporaryShape = val;
        panel.add(this._temporaryShape);
      }
    }
  }
  get archetypePartData() {
    return this._archetypePartData;
  }
  set archetypePartData(val) {
    this._archetypePartData = val;
  }
  get isBackgroundOnly() {
    return this._isBackgroundOnly;
  }
  set isBackgroundOnly(val) {
    this._isBackgroundOnly = val;
  }
  canStart() {
    if (!this.isEnabled)
      return false;
    const diagram = this.diagram;
    if (diagram.isReadOnly || diagram.isModelReadOnly)
      return false;
    if (!diagram.allowInsert)
      return false;
    if (diagram.currentTool !== this && this.isBackgroundOnly) {
      const part = diagram.findPartAt(diagram.lastInput.documentPoint, true);
      if (part !== null)
        return false;
    }
    return true;
  }
  doActivate() {
    super.doActivate();
    this.diagram.isMouseCaptured = true;
    this.diagram.currentCursor = "crosshair";
  }
  doDeactivate() {
    super.doDeactivate();
    if (this.temporaryShape !== null && this.temporaryShape.part !== null) {
      this.diagram.remove(this.temporaryShape.part);
    }
    this.diagram.currentCursor = "";
    this.diagram.isMouseCaptured = false;
  }
  addPoint(p2) {
    const shape = this.temporaryShape;
    if (shape === null)
      return;
    const part = shape.part;
    if (part === null)
      return;
    const viewpt = this.diagram.viewportBounds.position;
    const q2 = new Point(p2.x - viewpt.x, p2.y - viewpt.y);
    if (part.diagram === null) {
      const f2 = new PathFigure(q2.x, q2.y, true);
      const g2 = new Geometry().add(f2);
      shape.geometry = g2;
      part.position = new Point(viewpt.x - shape.strokeWidth / 2, viewpt.y - shape.strokeWidth / 2);
      this.diagram.add(part);
    }
    const geo = shape.geometry;
    if (geo !== null) {
      const fig = geo.figures.first();
      if (fig !== null) {
        const segs = fig.segments;
        const idx = segs.count - 1;
        if (idx >= 0) {
          const last = segs.elt(idx);
          if (Math.abs(q2.x - last.endX) < 0.5 && Math.abs(q2.y - last.endY) < 0.5)
            return;
        }
        const geo2 = geo.copy();
        const fig2 = geo2.figures.first();
        if (fig2 !== null) {
          fig2.add(new PathSegment(PathSegment.Line, q2.x, q2.y));
          shape.geometry = geo2;
        }
      }
    }
  }
  doMouseDown() {
    if (!this.isActive) {
      this.doActivate();
      this.addPoint(this.diagram.lastInput.documentPoint);
    }
  }
  doMouseMove() {
    if (this.isActive) {
      this.addPoint(this.diagram.lastInput.documentPoint);
    }
  }
  doMouseUp() {
    const diagram = this.diagram;
    let started = false;
    if (this.isActive) {
      started = true;
      this.addPoint(diagram.lastInput.documentPoint);
      const viewpt = diagram.viewportBounds.position;
      if (this.temporaryShape.geometry !== null) {
        const geo = this.temporaryShape.geometry.copy();
        const pos = geo.normalize();
        pos.x = viewpt.x - pos.x;
        pos.y = viewpt.y - pos.y;
        diagram.startTransaction(this.name);
        const d = diagram.model.copyNodeData(this.archetypePartData);
        if (d !== null) {
          diagram.model.addNodeData(d);
          const part = diagram.findPartForData(d);
          if (part !== null) {
            part.location = new Point(pos.x + geo.bounds.width / 2, pos.y + geo.bounds.height / 2);
            const shape = part.findObject("SHAPE");
            if (shape !== null)
              shape.geometry = geo;
          }
        }
      }
    }
    this.stopTool();
    if (started)
      diagram.commitTransaction(this.name);
  }
}
class ToastStore {
  constructor() {
    __publicField(this, "ref", null);
  }
  bind(newRef) {
    this.ref = newRef;
  }
  info(msg, title, till = 3e3) {
    var _a;
    (_a = this.ref) == null ? void 0 : _a.show({
      severity: "info",
      summary: title,
      detail: msg,
      life: till
    });
  }
  success(msg, title, till = 3e3) {
    var _a;
    (_a = this.ref) == null ? void 0 : _a.show({
      severity: "success",
      summary: title,
      detail: msg,
      life: till
    });
  }
  warn(msg, title, till = 3e3) {
    var _a;
    (_a = this.ref) == null ? void 0 : _a.show({
      severity: "warn",
      summary: title,
      detail: msg,
      life: till
    });
  }
  error(msg, title, till = 3e3) {
    var _a;
    (_a = this.ref) == null ? void 0 : _a.show({
      severity: "error",
      summary: title,
      detail: msg,
      life: till
    });
  }
  clear() {
    var _a;
    (_a = this.ref) == null ? void 0 : _a.clear();
  }
  replyCancel() {
    this.info("Think twice before you press your mouse!");
  }
}
const _toastStore = new ToastStore();
const useToastStore = () => {
  return _toastStore;
};
const Figure_BuildIn = [
  "Rectangle",
  "Square",
  "RoundedRectangle",
  "Border",
  "Ellipse",
  "Circle",
  "TriangleRight",
  "TriangleDown",
  "TriangleLeft",
  "TriangleUp",
  "Triangle",
  "Diamond",
  "LineH",
  "LineV",
  "None",
  "BarH",
  "BarV",
  "MinusLine",
  "PlusLine",
  "XLine"
];
const FontFamilys = [
  "Times New Roman",
  "Consolas",
  "helvetica",
  "lab",
  "Microsoft YaHei"
];
const $make = GraphObject.make;
const makePort = (name, spot, output, input) => {
  return $make(Shape, "Circle", {
    fill: null,
    stroke: null,
    desiredSize: new Size(7, 7),
    alignment: spot,
    alignmentFocus: spot,
    portId: name,
    fromSpot: spot,
    toSpot: spot,
    fromLinkable: output,
    toLinkable: input,
    cursor: "pointer"
  });
};
const showPort = (node, show) => {
  node.ports.each((port) => {
    if (port.portId !== "") {
      port.fill = show ? "rgba(0, 0, 0, 0.3)" : null;
    }
  });
};
const emptyModel = () => {
  const _model = Model.fromJson(JSON.stringify({
    class: "GraphLinkModel",
    linkFromPortIdProperty: "fromPort",
    linkToPortIdProperty: "toPort",
    nodeDataArray: [],
    linkDataArray: []
  }));
  _model.name = "diagram";
  return _model;
};
const baseDiagram = (el) => {
  return $make(Diagram, el, {
    grid: $make(Panel, "Grid", $make(Shape, "LineH", { stroke: "lightgray", strokeWidth: 0.5 }), $make(Shape, "LineH", { stroke: "gray", strokeWidth: 0.5, interval: 10 }), $make(Shape, "LineV", { stroke: "lightgray", strokeWidth: 0.5 }), $make(Shape, "LineV", { stroke: "gray", strokeWidth: 0.5, interval: 10 })),
    "draggingTool.dragsLink": false,
    "draggingTool.isGridSnapEnabled": true,
    "linkingTool.isUnconnectedLinkValid": false,
    "linkingTool.portGravity": 20,
    "relinkingTool.isUnconnectedLinkValid": false,
    "relinkingTool.portGravity": 20,
    "relinkingTool.fromHandleArchetype": $make(Shape, "Diamond", {
      segmentIndex: 0,
      cursor: "pointer",
      desiredSize: new Size(8, 8),
      fill: "lightblue",
      stroke: "lightblue"
    }),
    "relinkingTool.toHandleArchetype": $make(Shape, "Diamond", {
      segmentIndex: -1,
      cursor: "pointer",
      desiredSize: new Size(8, 8),
      fill: "lightblue",
      stroke: "lightblue"
    }),
    "linkReshapingTool.handleArchetype": $make(Shape, "Diamond", {
      desiredSize: new Size(7, 7),
      fill: "lightblue",
      stroke: "lightblue"
    }),
    "rotatingTool.handleAngle": 270,
    "rotatingTool.handleDistance": 30,
    "rotatingTool.snapAngleMultiple": 15,
    "rotatingTool.snapAngleEpsilon": 15,
    "undoManager.isEnabled": true
  });
};
const nodeSelectTemplate = () => {
  return $make(Adornment, "Auto", $make(Shape, { fill: null, stroke: "deepskyblue", strokeWidth: 1, strokeDashArray: [4, 2] }), $make(Placeholder));
};
const nodeResizeTemplate = () => {
  return $make(Adornment, "Spot", { locationSpot: Spot.Center }, $make(Placeholder), $make(Shape, {
    alignment: Spot.TopLeft,
    cursor: "nw-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.Top,
    cursor: "n-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.TopRight,
    cursor: "ne-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.Right,
    cursor: "e-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.BottomRight,
    cursor: "sw-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.Bottom,
    cursor: "s-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.BottomLeft,
    cursor: "se-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    alignment: Spot.Left,
    cursor: "w-resize",
    desiredSize: new Size(6, 6),
    fill: "lightblue",
    stroke: "deepskyblue"
  }));
};
const nodeRotateTemplate = () => {
  return $make(Adornment, { locationSpot: Spot.Center, locationObjectName: "CIRCLE" }, $make(Shape, "Circle", {
    name: "CIRCLE",
    cursor: "pointer",
    desiredSize: new Size(7, 7),
    fill: "lightblue",
    stroke: "deepskyblue"
  }), $make(Shape, {
    geometryString: "M3.5 7 L3.5 30",
    isGeometryPositioned: true,
    stroke: "deepskyblue",
    strokeWidth: 1,
    strokeDashArray: [4, 2]
  }));
};
const nodeTemplate = (ctxMenu) => {
  return $make(Node, "Spot", {
    contextMenu: ctxMenu,
    locationSpot: Spot.Center,
    selectable: true,
    selectionAdornmentTemplate: nodeSelectTemplate(),
    resizable: true,
    resizeObjectName: "PANEL",
    resizeAdornmentTemplate: nodeResizeTemplate(),
    rotatable: true,
    rotateAdornmentTemplate: nodeRotateTemplate()
  }, new Binding("location", "loc", Point.parse).makeTwoWay(Point.stringify), new Binding("angle").makeTwoWay(), $make(Panel, "Auto", { name: "PANEL" }, new Binding("desiredSize", "size", Size.parse).makeTwoWay(Size.stringify), $make(Shape, "Rectangle", {
    portId: "",
    fromLinkable: true,
    fromLinkableSelfNode: true,
    fromLinkableDuplicates: true,
    toLinkable: true,
    toLinkableSelfNode: true,
    toLinkableDuplicates: true,
    cursor: "pointer",
    fill: "white",
    strokeWidth: 2
  }, new Binding("fill"), new Binding("stroke"), new Binding("figure"), new Binding("strokeWidth")), $make(TextBlock, {
    font: 'bold 11pt "Times New Roman", Times, serif',
    margin: 8,
    maxSize: new Size(160, NaN),
    wrap: TextBlock.WrapFit,
    editable: true
  }, new Binding("text").makeTwoWay(), new Binding("stroke", "textColor"), new Binding("font", "fontFamily", (val) => {
    return `bold 11pt ${val}`;
  }))), makePort("T", Spot.Top, true, true), makePort("R", Spot.Right, true, true), makePort("B", Spot.Bottom, true, true), makePort("L", Spot.Left, true, true), {
    mouseEnter: (e, node) => {
      showPort(node, true);
    },
    mouseLeave: (e, node) => {
      showPort(node, false);
    }
  });
};
const linkSelectTemplate = () => {
  return $make(Adornment, "Link", $make(Shape, {
    isPanelMain: true,
    fill: "transparent",
    stroke: "deepskyblue",
    strokeWidth: 0
  }));
};
const linkTemplate = (ctxMenu) => {
  return $make(Link, {
    contextMenu: ctxMenu,
    routing: Link.AvoidsNodes,
    curve: Link.JumpOver,
    corner: 5,
    toShortLength: 4,
    cursor: "pointer",
    selectable: true,
    selectionAdornmentTemplate: linkSelectTemplate(),
    relinkableFrom: true,
    relinkableTo: true,
    reshapable: true
  }, new Binding("points").makeTwoWay(), $make(Shape, { isPanelMain: true, strokeWidth: 2, stroke: "#999999" }, new Binding("fill", "stroke"), new Binding("stroke")), $make(Shape, { toArrow: "Standard", stroke: "#999999", fill: "#999999" }, new Binding("fill", "stroke"), new Binding("stroke")), $make(Panel, "Auto", $make(Shape, "Rectangle", { fill: null, stroke: "#343434", strokeWidth: 0.5, minSize: new Size(40, NaN) }, new Binding("visible", "isSelected").ofObject()), $make(TextBlock, {
    textAlign: "center",
    font: '10pt "Times New Roman", Times, serif',
    stroke: "#999999",
    margin: 5,
    minSize: new Size(40, NaN),
    editable: true
  }, new Binding("text").makeTwoWay(), new Binding("stroke", "textColor"), new Binding("font", "fontFamily", (val) => {
    return `bold 11pt ${val}`;
  }))));
};
const paletteItems = [
  {
    isNode: true,
    text: "Start",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "Circle",
    fill: "#ffffff",
    stroke: "#000000",
    strokeWidth: 2
  },
  {
    isNode: true,
    text: "Progress",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "Rectangle",
    fill: "#ffffff",
    stroke: "#000000",
    strokeWidth: 2
  },
  {
    isNode: true,
    text: "Branch",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "Diamond",
    fill: "#ffffff",
    stroke: "#000000",
    strokeWidth: 2
  },
  {
    isNode: true,
    text: "Comment",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "RoundedRectangle",
    fill: "#ffffff",
    stroke: "#000000",
    strokeWidth: 2
  },
  {
    isNode: true,
    text: "Text",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "Rectangle",
    fill: "transparent",
    stroke: "transparent",
    strokeWidth: 0,
    hidden: ["fill", "figure", "stroke", "strokeWidth"]
  },
  {
    isNode: true,
    text: "Port",
    textColor: "#777777",
    fontFamily: "Times New Roman",
    figure: "Triangle",
    fill: "#ffffff",
    stroke: "#000000",
    strokeWidth: 2
  }
];
const createContextMenu = (prop) => {
  return $make(HTMLInfo, {
    show: prop.show,
    hide: prop.hide
  });
};
const createDiagram = (diagramEl, ctxMenu) => {
  const _diagram = baseDiagram(diagramEl);
  _diagram.nodeTemplate = nodeTemplate(ctxMenu);
  _diagram.linkTemplate = linkTemplate(ctxMenu);
  _diagram.contextMenu = ctxMenu;
  return _diagram;
};
const createPalette = (paletteEl, ctxMenu, diagram) => {
  return $make(Palette, paletteEl, {
    name: "palette",
    contextMenu: ctxMenu,
    maxSelectionCount: 1,
    nodeTemplateMap: diagram.nodeTemplateMap,
    model: new GraphLinksModel(paletteItems, [], {
      name: "palette"
    })
  });
};
const createInspector = (inspectorEl, diagram) => {
  let elId = inspectorEl.id;
  if (!elId || elId.trim() === "") {
    inspectorEl.id = `inspector-${Date.now()}`;
    elId = inspectorEl.id;
  }
  return new Inspector(elId, diagram, {
    properties: {
      isNode: { show: false },
      size: { show: false },
      loc: { show: false },
      points: { show: false },
      geo: { show: false },
      category: { show: false },
      hidden: { show: false },
      key: { show: Inspector.showIfPresent, readOnly: true },
      text: { show: Inspector.showIfPresent, type: "string" },
      textColor: { show: Inspector.showIfPresent, type: "color" },
      fontFamily: {
        show: Inspector.showIfPresent,
        type: "select",
        choices: FontFamilys
      },
      fill: {
        show: (data) => {
          return data.data.fill && (!data.data.hidden || !data.data.hidden.includes("fill"));
        },
        type: "color"
      },
      stroke: {
        show: (data) => {
          return data.data.stroke && (!data.data.hidden || !data.data.hidden.includes("strokeWidth"));
        },
        type: "color"
      },
      strokeWidth: {
        show: (data) => {
          return data.data.strokeWidth && (!data.data.hidden || !data.data.hidden.includes("strokeWidth"));
        },
        type: "number"
      },
      figure: {
        show: (data) => {
          return data.data.figure && (!data.data.hidden || !data.data.hidden.includes("figure"));
        },
        type: "select",
        choices: Figure_BuildIn
      },
      fromPort: {
        show: Inspector.showIfPresent,
        type: "select",
        choices: [
          "",
          "T",
          "R",
          "B",
          "L"
        ]
      },
      toPort: {
        show: Inspector.showIfPresent,
        type: "select",
        choices: [
          "",
          "T",
          "R",
          "B",
          "L"
        ]
      }
    }
  });
};
const createFreeHandDrawer = (diagram) => {
  const DrawingTemplate = $make(Part, {
    locationSpot: Spot.Center,
    isLayoutPositioned: false,
    selectionAdorned: true,
    selectionObjectName: "SHAPE",
    selectionAdornmentTemplate: nodeSelectTemplate(),
    resizable: true,
    resizeObjectName: "SHAPE",
    rotatable: true,
    rotateObjectName: "SHAPE",
    reshapable: true,
    cursor: "pointer"
  }, new Binding("location", "loc", Point.parse).makeTwoWay(Point.stringify), $make(Shape, { name: "SHAPE", fill: null, strokeWidth: 2 }, new Binding("desiredSize", "size", Size.parse).makeTwoWay(Size.stringify), new Binding("angle").makeTwoWay(), new Binding("geometryString", "geo").makeTwoWay(), new Binding("stroke"), new Binding("strokeWidth")));
  diagram.nodeTemplateMap.add("FreehandDrawing", DrawingTemplate);
  const tool = new FreehandDrawingTool();
  tool.isBackgroundOnly = false;
  tool.archetypePartData = {
    category: "FreehandDrawing",
    stroke: "#777777",
    strokeWidth: 2,
    angle: 0
  };
  tool.isEnabled = false;
  diagram.toolManager.mouseMoveTools.insertAt(0, tool);
  return tool;
};
class GojsOperate {
  constructor(diagramEl, paletteEl, inspectorEl, ctxControl) {
    __publicField(this, "diagram");
    __publicField(this, "palette");
    __publicField(this, "drawTool");
    const ctxMenu = createContextMenu({
      show: (obj, diagram, tool) => {
        var _a, _b;
        const diagramName = diagram.model.name;
        if (diagramName === "palette") {
          (_b = (_a = diagram.contextMenu) == null ? void 0 : _a.hide) == null ? void 0 : _b.call(_a, diagram, tool);
          return;
        }
        const mousePt = diagram.lastInput.viewPoint;
        if (obj === null)
          ctxControl("blank", [mousePt.x, mousePt.y]);
        else {
          const objData = obj.data;
          if (!objData.isNode) {
            ctxControl("link", [mousePt.x, mousePt.y]);
          } else {
            ctxControl("node", [mousePt.x, mousePt.y]);
          }
        }
      },
      hide: () => {
        ctxControl("hide", [-1e3, -1e3]);
      }
    });
    this.diagram = createDiagram(diagramEl, ctxMenu);
    this.model = emptyModel();
    this.palette = createPalette(paletteEl, ctxMenu, this.diagram);
    createInspector(inspectorEl, this.diagram);
    this.drawTool = createFreeHandDrawer(this.diagram);
    this.diagram.addDiagramListener("LinkDrawn", (e) => {
      e.subject.data.text = "";
      e.subject.data.textColor = "#999999";
      e.subject.data.stroke = "#999999";
      e.subject.data.fontFamily = "Times New Roman";
    });
  }
  get model() {
    return this.diagram.model;
  }
  set model(val) {
    this.diagram.model = val;
  }
  doCut() {
    this.diagram.commandHandler.canCutSelection() && this.diagram.commandHandler.cutSelection();
  }
  doCopy() {
    this.diagram.commandHandler.canCopySelection() && this.diagram.commandHandler.copySelection();
  }
  doPaste() {
    if (!this.diagram.commandHandler.canPasteSelection()) {
      useToastStore().warn("Paste cannot be performed because there is no source");
    } else {
      this.diagram.commandHandler.pasteSelection(this.diagram.lastInput.documentPoint);
    }
  }
  doDelete() {
    this.diagram.commandHandler.deleteSelection();
  }
  doDrawMode() {
    this.drawTool.isEnabled ? useToastStore().warn("already in draw mode") : useToastStore().success("switch mode: DRAW");
    this.drawTool.isEnabled = true;
  }
  doSelectMode() {
    this.drawTool.isEnabled ? useToastStore().success("switch mode: SELECT") : useToastStore().warn("already in select mode");
    this.drawTool.isEnabled = false;
  }
  doZoomToFit() {
    this.diagram.commandHandler.canZoomToFit() && this.diagram.commandHandler.zoomToFit();
  }
  doClear() {
    this.diagram.clear();
  }
  doDownload() {
    this.diagram.makeImageData({
      callback: (dataUrl) => {
        const aTag = document.createElement("a");
        aTag.download = `canvas_${Date.now()}.png`;
        aTag.href = dataUrl;
        aTag.click();
      }
    });
  }
  doLoad() {
    const fileSelector = document.createElement("input");
    fileSelector.type = "file";
    fileSelector.onchange = () => {
      var _a;
      const file = (_a = fileSelector.files) == null ? void 0 : _a[0];
      if (!!file) {
        if (file.name.split(".").reverse()[0] !== "fc") {
          useToastStore().warn("Incorrect file");
          fileSelector.onchange = null;
        } else {
          const reader = new FileReader();
          reader.onload = () => {
            const fileObj = JSON.parse(reader.result);
            const doSha = SHA256(fileObj.modelJson) + "";
            if (doSha !== fileObj.sha) {
              useToastStore().warn("This file has been tampered with");
            } else {
              this.model = Model.fromJson(fileObj.modelJson);
              useToastStore().success(`Diagram reloaded (last modified: ${fileObj.date})`);
            }
            fileSelector.onchange = null;
          };
          reader.onerror = () => {
            useToastStore().error("Some error occurred when reading this file");
            fileSelector.onchange = null;
          };
          reader.readAsText(file);
        }
      }
    };
    fileSelector.click();
  }
  doStore() {
    useToastStore().info("Generating");
    try {
      const modelJsonStr = this.model.toJson();
      const dateStr = new Date().toLocaleDateString().replace(/[/]/g, "-") + " " + new Date().toLocaleTimeString();
      const fileObj = {
        sha: SHA256(modelJsonStr) + "",
        date: dateStr,
        modelJson: modelJsonStr
      };
      const file64 = window.btoa(JSON.stringify(fileObj));
      const aTag = document.createElement("a");
      aTag.href = `data:text/plain;base64,${file64}`;
      aTag.download = `diagram_${dateStr.replace(/[-/ ]/g, ".").replace(/[:]/g, "")}.fc`;
      aTag.click();
      useToastStore().success("Done");
    } catch (e) {
      useToastStore().error("Error: ", e.toString());
    }
  }
  dispose() {
    this.diagram.div = null;
    this.palette.div = null;
  }
}
const drag_MousedownCB = (mousedownEv) => {
  const eventSourceEl = mousedownEv.currentTarget;
  const targetDragId = eventSourceEl.dataset.dragTarget;
  const path = mousedownEv.path || mousedownEv.composedPath && mousedownEv.composedPath();
  const dragTargetEl = path.find((el) => {
    return !!el.dataset.dragId && el.dataset.dragId === targetDragId;
  });
  if (!eventSourceEl || !targetDragId || !dragTargetEl)
    return;
  const disX = mousedownEv.clientX - dragTargetEl.offsetLeft;
  const disY = mousedownEv.clientY - dragTargetEl.offsetTop;
  const drag_MousemoveCB = (mousemoveEv) => {
    const newX = mousemoveEv.clientX - disX;
    const newY = mousemoveEv.clientY - disY;
    if (newX > 0 && newX < window.innerWidth - eventSourceEl.offsetWidth - 10) {
      dragTargetEl.style.left = newX + "px";
    }
    if (newY > 0 && newY < window.innerHeight - eventSourceEl.offsetHeight - 10) {
      dragTargetEl.style.top = newY + "px";
    }
  };
  const drag_MouseupCB = () => {
    document.removeEventListener("mousemove", drag_MousemoveCB);
    document.removeEventListener("mouseup", drag_MouseupCB);
  };
  document.addEventListener("mousemove", drag_MousemoveCB);
  document.addEventListener("mouseup", drag_MouseupCB);
};
const EnableDrag = ({
  innerEl,
  initPos
}) => {
  const dragBoxRef = react.exports.useRef(null);
  const dragId = v4();
  react.exports.useLayoutEffect(() => {
    var _a;
    const controller = (_a = dragBoxRef.current) == null ? void 0 : _a.getElementsByClassName("drag-controller")[0];
    if (!controller)
      throw new Error("No controller for this draggable element.");
    controller.dataset.dragTarget = dragId;
    controller.style.cursor = "grab";
    controller.style.userSelect = "none";
    controller.addEventListener("mousedown", drag_MousedownCB);
    return () => {
      controller.removeEventListener("mousedown", drag_MousedownCB);
    };
  }, [dragId]);
  return /* @__PURE__ */ jsx("div", {
    ref: dragBoxRef,
    "data-drag-id": dragId,
    style: __spreadValues({
      position: "absolute",
      zIndex: "10000",
      width: "fit-content",
      height: "fit-content"
    }, initPos),
    children: innerEl
  });
};
const inspectorPanel = "_inspector-panel_142ym_1";
var Styles = {
  inspectorPanel
};
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _unsupportedIterableToArray$1(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$1(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$1(o, minLen);
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest();
}
function _typeof$4(obj) {
  "@babel/helpers - typeof";
  return _typeof$4 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof$4(obj);
}
function classNames() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (args) {
    var classes = [];
    for (var i = 0; i < args.length; i++) {
      var className = args[i];
      if (!className)
        continue;
      var type = _typeof$4(className);
      if (type === "string" || type === "number") {
        classes.push(className);
      } else if (type === "object") {
        var _classes = Array.isArray(className) ? className : Object.entries(className).map(function(_ref) {
          var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
          return !!value ? key : null;
        });
        classes = _classes.length ? classes.concat(_classes.filter(function(c) {
          return !!c;
        })) : classes;
      }
    }
    return classes.join(" ");
  }
  return void 0;
}
function _classCallCheck$5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it)
        o = it;
      var i = 0;
      var F2 = function F3() {
      };
      return { s: F2, n: function n2() {
        if (i >= o.length)
          return { done: true };
        return { done: false, value: o[i++] };
      }, e: function e(_e) {
        throw _e;
      }, f: F2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true, didErr = false, err;
  return { s: function s() {
    it = it.call(o);
  }, n: function n2() {
    var step = it.next();
    normalCompletion = step.done;
    return step;
  }, e: function e(_e2) {
    didErr = true;
    err = _e2;
  }, f: function f2() {
    try {
      if (!normalCompletion && it["return"] != null)
        it["return"]();
    } finally {
      if (didErr)
        throw err;
    }
  } };
}
function _unsupportedIterableToArray$2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray$2(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray$2(o, minLen);
}
function _arrayLikeToArray$2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
var DomHandler = /* @__PURE__ */ function() {
  function DomHandler2() {
    _classCallCheck$5(this, DomHandler2);
  }
  _createClass$5(DomHandler2, null, [{
    key: "innerWidth",
    value: function innerWidth(el) {
      if (el) {
        var width = el.offsetWidth;
        var style = getComputedStyle(el);
        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
        return width;
      }
      return 0;
    }
  }, {
    key: "width",
    value: function width(el) {
      if (el) {
        var width2 = el.offsetWidth;
        var style = getComputedStyle(el);
        width2 -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
        return width2;
      }
      return 0;
    }
  }, {
    key: "getBrowserLanguage",
    value: function getBrowserLanguage() {
      return navigator.userLanguage || navigator.languages && navigator.languages.length && navigator.languages[0] || navigator.language || navigator.browserLanguage || navigator.systemLanguage || "en";
    }
  }, {
    key: "getWindowScrollTop",
    value: function getWindowScrollTop() {
      var doc = document.documentElement;
      return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    }
  }, {
    key: "getWindowScrollLeft",
    value: function getWindowScrollLeft() {
      var doc = document.documentElement;
      return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    }
  }, {
    key: "getOuterWidth",
    value: function getOuterWidth(el, margin) {
      if (el) {
        var width = el.offsetWidth || el.getBoundingClientRect().width;
        if (margin) {
          var style = getComputedStyle(el);
          width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);
        }
        return width;
      }
      return 0;
    }
  }, {
    key: "getOuterHeight",
    value: function getOuterHeight(el, margin) {
      if (el) {
        var height = el.offsetHeight || el.getBoundingClientRect().height;
        if (margin) {
          var style = getComputedStyle(el);
          height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
        }
        return height;
      }
      return 0;
    }
  }, {
    key: "getClientHeight",
    value: function getClientHeight(el, margin) {
      if (el) {
        var height = el.clientHeight;
        if (margin) {
          var style = getComputedStyle(el);
          height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
        }
        return height;
      }
      return 0;
    }
  }, {
    key: "getClientWidth",
    value: function getClientWidth(el, margin) {
      if (el) {
        var width = el.clientWidth;
        if (margin) {
          var style = getComputedStyle(el);
          width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);
        }
        return width;
      }
      return 0;
    }
  }, {
    key: "getViewport",
    value: function getViewport() {
      var win = window, d = document, e = d.documentElement, g2 = d.getElementsByTagName("body")[0], w = win.innerWidth || e.clientWidth || g2.clientWidth, h = win.innerHeight || e.clientHeight || g2.clientHeight;
      return {
        width: w,
        height: h
      };
    }
  }, {
    key: "getOffset",
    value: function getOffset(el) {
      if (el) {
        var rect = el.getBoundingClientRect();
        return {
          top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),
          left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)
        };
      }
      return {
        top: "auto",
        left: "auto"
      };
    }
  }, {
    key: "index",
    value: function index(element) {
      if (element) {
        var children = element.parentNode.childNodes;
        var num = 0;
        for (var i = 0; i < children.length; i++) {
          if (children[i] === element)
            return num;
          if (children[i].nodeType === 1)
            num++;
        }
      }
      return -1;
    }
  }, {
    key: "addMultipleClasses",
    value: function addMultipleClasses(element, className) {
      if (element && className) {
        if (element.classList) {
          var styles = className.split(" ");
          for (var i = 0; i < styles.length; i++) {
            element.classList.add(styles[i]);
          }
        } else {
          var _styles = className.split(" ");
          for (var _i = 0; _i < _styles.length; _i++) {
            element.className += " " + _styles[_i];
          }
        }
      }
    }
  }, {
    key: "removeMultipleClasses",
    value: function removeMultipleClasses(element, className) {
      if (element && className) {
        if (element.classList) {
          var styles = className.split(" ");
          for (var i = 0; i < styles.length; i++) {
            element.classList.remove(styles[i]);
          }
        } else {
          var _styles2 = className.split(" ");
          for (var _i2 = 0; _i2 < _styles2.length; _i2++) {
            element.className = element.className.replace(new RegExp("(^|\\b)" + _styles2[_i2].split(" ").join("|") + "(\\b|$)", "gi"), " ");
          }
        }
      }
    }
  }, {
    key: "addClass",
    value: function addClass2(element, className) {
      if (element && className) {
        if (element.classList)
          element.classList.add(className);
        else
          element.className += " " + className;
      }
    }
  }, {
    key: "removeClass",
    value: function removeClass3(element, className) {
      if (element && className) {
        if (element.classList)
          element.classList.remove(className);
        else
          element.className = element.className.replace(new RegExp("(^|\\b)" + className.split(" ").join("|") + "(\\b|$)", "gi"), " ");
      }
    }
  }, {
    key: "hasClass",
    value: function hasClass2(element, className) {
      if (element) {
        if (element.classList)
          return element.classList.contains(className);
        else
          return new RegExp("(^| )" + className + "( |$)", "gi").test(element.className);
      }
    }
  }, {
    key: "find",
    value: function find(element, selector) {
      return element ? Array.from(element.querySelectorAll(selector)) : [];
    }
  }, {
    key: "findSingle",
    value: function findSingle(element, selector) {
      if (element) {
        return element.querySelector(selector);
      }
      return null;
    }
  }, {
    key: "getHeight",
    value: function getHeight(el) {
      if (el) {
        var height = el.offsetHeight;
        var style = getComputedStyle(el);
        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
        return height;
      }
      return 0;
    }
  }, {
    key: "getWidth",
    value: function getWidth(el) {
      if (el) {
        var width = el.offsetWidth;
        var style = getComputedStyle(el);
        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);
        return width;
      }
      return 0;
    }
  }, {
    key: "alignOverlay",
    value: function alignOverlay(overlay, target, appendTo) {
      var calculateMinWidth = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
      if (overlay && target) {
        if (appendTo === "self") {
          this.relativePosition(overlay, target);
        } else {
          calculateMinWidth && (overlay.style.minWidth = DomHandler2.getOuterWidth(target) + "px");
          this.absolutePosition(overlay, target);
        }
      }
    }
  }, {
    key: "absolutePosition",
    value: function absolutePosition(element, target) {
      if (element) {
        var elementDimensions = element.offsetParent ? {
          width: element.offsetWidth,
          height: element.offsetHeight
        } : this.getHiddenElementDimensions(element);
        var elementOuterHeight = elementDimensions.height;
        var elementOuterWidth = elementDimensions.width;
        var targetOuterHeight = target.offsetHeight;
        var targetOuterWidth = target.offsetWidth;
        var targetOffset = target.getBoundingClientRect();
        var windowScrollTop = this.getWindowScrollTop();
        var windowScrollLeft = this.getWindowScrollLeft();
        var viewport = this.getViewport();
        var top, left;
        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {
          top = targetOffset.top + windowScrollTop - elementOuterHeight;
          if (top < 0) {
            top = windowScrollTop;
          }
          element.style.transformOrigin = "bottom";
        } else {
          top = targetOuterHeight + targetOffset.top + windowScrollTop;
          element.style.transformOrigin = "top";
        }
        if (targetOffset.left + targetOuterWidth + elementOuterWidth > viewport.width)
          left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);
        else
          left = targetOffset.left + windowScrollLeft;
        element.style.top = top + "px";
        element.style.left = left + "px";
      }
    }
  }, {
    key: "relativePosition",
    value: function relativePosition(element, target) {
      if (element) {
        var elementDimensions = element.offsetParent ? {
          width: element.offsetWidth,
          height: element.offsetHeight
        } : this.getHiddenElementDimensions(element);
        var targetHeight = target.offsetHeight;
        var targetOffset = target.getBoundingClientRect();
        var viewport = this.getViewport();
        var top, left;
        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {
          top = -1 * elementDimensions.height;
          if (targetOffset.top + top < 0) {
            top = -1 * targetOffset.top;
          }
          element.style.transformOrigin = "bottom";
        } else {
          top = targetHeight;
          element.style.transformOrigin = "top";
        }
        if (elementDimensions.width > viewport.width) {
          left = targetOffset.left * -1;
        } else if (targetOffset.left + elementDimensions.width > viewport.width) {
          left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;
        } else {
          left = 0;
        }
        element.style.top = top + "px";
        element.style.left = left + "px";
      }
    }
  }, {
    key: "flipfitCollision",
    value: function flipfitCollision(element, target) {
      var _this = this;
      var my = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "left top";
      var at = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "left bottom";
      var callback = arguments.length > 4 ? arguments[4] : void 0;
      var targetOffset = target.getBoundingClientRect();
      var viewport = this.getViewport();
      var myArr = my.split(" ");
      var atArr = at.split(" ");
      var getPositionValue = function getPositionValue2(arr, isOffset) {
        return isOffset ? +arr.substring(arr.search(/(\+|-)/g)) || 0 : arr.substring(0, arr.search(/(\+|-)/g)) || arr;
      };
      var position = {
        my: {
          x: getPositionValue(myArr[0]),
          y: getPositionValue(myArr[1] || myArr[0]),
          offsetX: getPositionValue(myArr[0], true),
          offsetY: getPositionValue(myArr[1] || myArr[0], true)
        },
        at: {
          x: getPositionValue(atArr[0]),
          y: getPositionValue(atArr[1] || atArr[0]),
          offsetX: getPositionValue(atArr[0], true),
          offsetY: getPositionValue(atArr[1] || atArr[0], true)
        }
      };
      var myOffset = {
        left: function left() {
          var totalOffset = position.my.offsetX + position.at.offsetX;
          return totalOffset + targetOffset.left + (position.my.x === "left" ? 0 : -1 * (position.my.x === "center" ? _this.getOuterWidth(element) / 2 : _this.getOuterWidth(element)));
        },
        top: function top() {
          var totalOffset = position.my.offsetY + position.at.offsetY;
          return totalOffset + targetOffset.top + (position.my.y === "top" ? 0 : -1 * (position.my.y === "center" ? _this.getOuterHeight(element) / 2 : _this.getOuterHeight(element)));
        }
      };
      var alignWithAt = {
        count: {
          x: 0,
          y: 0
        },
        left: function left() {
          var left2 = myOffset.left();
          var scrollLeft = DomHandler2.getWindowScrollLeft();
          element.style.left = left2 + scrollLeft + "px";
          if (this.count.x === 2) {
            element.style.left = scrollLeft + "px";
            this.count.x = 0;
          } else if (left2 < 0) {
            this.count.x++;
            position.my.x = "left";
            position.at.x = "right";
            position.my.offsetX *= -1;
            position.at.offsetX *= -1;
            this.right();
          }
        },
        right: function right() {
          var left = myOffset.left() + DomHandler2.getOuterWidth(target);
          var scrollLeft = DomHandler2.getWindowScrollLeft();
          element.style.left = left + scrollLeft + "px";
          if (this.count.x === 2) {
            element.style.left = viewport.width - DomHandler2.getOuterWidth(element) + scrollLeft + "px";
            this.count.x = 0;
          } else if (left + DomHandler2.getOuterWidth(element) > viewport.width) {
            this.count.x++;
            position.my.x = "right";
            position.at.x = "left";
            position.my.offsetX *= -1;
            position.at.offsetX *= -1;
            this.left();
          }
        },
        top: function top() {
          var top2 = myOffset.top();
          var scrollTop = DomHandler2.getWindowScrollTop();
          element.style.top = top2 + scrollTop + "px";
          if (this.count.y === 2) {
            element.style.left = scrollTop + "px";
            this.count.y = 0;
          } else if (top2 < 0) {
            this.count.y++;
            position.my.y = "top";
            position.at.y = "bottom";
            position.my.offsetY *= -1;
            position.at.offsetY *= -1;
            this.bottom();
          }
        },
        bottom: function bottom() {
          var top = myOffset.top() + DomHandler2.getOuterHeight(target);
          var scrollTop = DomHandler2.getWindowScrollTop();
          element.style.top = top + scrollTop + "px";
          if (this.count.y === 2) {
            element.style.left = viewport.height - DomHandler2.getOuterHeight(element) + scrollTop + "px";
            this.count.y = 0;
          } else if (top + DomHandler2.getOuterHeight(target) > viewport.height) {
            this.count.y++;
            position.my.y = "bottom";
            position.at.y = "top";
            position.my.offsetY *= -1;
            position.at.offsetY *= -1;
            this.top();
          }
        },
        center: function center(axis) {
          if (axis === "y") {
            var top = myOffset.top() + DomHandler2.getOuterHeight(target) / 2;
            element.style.top = top + DomHandler2.getWindowScrollTop() + "px";
            if (top < 0) {
              this.bottom();
            } else if (top + DomHandler2.getOuterHeight(target) > viewport.height) {
              this.top();
            }
          } else {
            var left = myOffset.left() + DomHandler2.getOuterWidth(target) / 2;
            element.style.left = left + DomHandler2.getWindowScrollLeft() + "px";
            if (left < 0) {
              this.left();
            } else if (left + DomHandler2.getOuterWidth(element) > viewport.width) {
              this.right();
            }
          }
        }
      };
      alignWithAt[position.at.x]("x");
      alignWithAt[position.at.y]("y");
      if (this.isFunction(callback)) {
        callback(position);
      }
    }
  }, {
    key: "findCollisionPosition",
    value: function findCollisionPosition(position) {
      if (position) {
        var isAxisY = position === "top" || position === "bottom";
        var myXPosition = position === "left" ? "right" : "left";
        var myYPosition = position === "top" ? "bottom" : "top";
        if (isAxisY) {
          return {
            axis: "y",
            my: "center ".concat(myYPosition),
            at: "center ".concat(position)
          };
        }
        return {
          axis: "x",
          my: "".concat(myXPosition, " center"),
          at: "".concat(position, " center")
        };
      }
    }
  }, {
    key: "getParents",
    value: function getParents(element) {
      var parents = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      return element["parentNode"] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));
    }
  }, {
    key: "getScrollableParents",
    value: function getScrollableParents(element) {
      var scrollableParents = [];
      if (element) {
        var parents = this.getParents(element);
        var overflowRegex = /(auto|scroll)/;
        var overflowCheck = function overflowCheck2(node) {
          var styleDeclaration = node ? getComputedStyle(node) : null;
          return styleDeclaration && (overflowRegex.test(styleDeclaration.getPropertyValue("overflow")) || overflowRegex.test(styleDeclaration.getPropertyValue("overflowX")) || overflowRegex.test(styleDeclaration.getPropertyValue("overflowY")));
        };
        var _iterator = _createForOfIteratorHelper(parents), _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done; ) {
            var parent = _step.value;
            var scrollSelectors = parent.nodeType === 1 && parent.dataset["scrollselectors"];
            if (scrollSelectors) {
              var selectors = scrollSelectors.split(",");
              var _iterator2 = _createForOfIteratorHelper(selectors), _step2;
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                  var selector = _step2.value;
                  var el = this.findSingle(parent, selector);
                  if (el && overflowCheck(el)) {
                    scrollableParents.push(el);
                  }
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            }
            if (parent.nodeType !== 9 && overflowCheck(parent)) {
              scrollableParents.push(parent);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      return scrollableParents;
    }
  }, {
    key: "getHiddenElementOuterHeight",
    value: function getHiddenElementOuterHeight(element) {
      if (element) {
        element.style.visibility = "hidden";
        element.style.display = "block";
        var elementHeight = element.offsetHeight;
        element.style.display = "none";
        element.style.visibility = "visible";
        return elementHeight;
      }
      return 0;
    }
  }, {
    key: "getHiddenElementOuterWidth",
    value: function getHiddenElementOuterWidth(element) {
      if (element) {
        element.style.visibility = "hidden";
        element.style.display = "block";
        var elementWidth = element.offsetWidth;
        element.style.display = "none";
        element.style.visibility = "visible";
        return elementWidth;
      }
      return 0;
    }
  }, {
    key: "getHiddenElementDimensions",
    value: function getHiddenElementDimensions(element) {
      var dimensions = {};
      if (element) {
        element.style.visibility = "hidden";
        element.style.display = "block";
        dimensions.width = element.offsetWidth;
        dimensions.height = element.offsetHeight;
        element.style.display = "none";
        element.style.visibility = "visible";
      }
      return dimensions;
    }
  }, {
    key: "fadeIn",
    value: function fadeIn(element, duration) {
      if (element) {
        element.style.opacity = 0;
        var last = +new Date();
        var opacity = 0;
        var tick = function tick2() {
          opacity = +element.style.opacity + (new Date().getTime() - last) / duration;
          element.style.opacity = opacity;
          last = +new Date();
          if (+opacity < 1) {
            window.requestAnimationFrame && requestAnimationFrame(tick2) || setTimeout(tick2, 16);
          }
        };
        tick();
      }
    }
  }, {
    key: "fadeOut",
    value: function fadeOut(element, duration) {
      if (element) {
        var opacity = 1, interval = 50, gap = interval / duration;
        var fading = setInterval(function() {
          opacity -= gap;
          if (opacity <= 0) {
            opacity = 0;
            clearInterval(fading);
          }
          element.style.opacity = opacity;
        }, interval);
      }
    }
  }, {
    key: "getUserAgent",
    value: function getUserAgent() {
      return navigator.userAgent;
    }
  }, {
    key: "isIOS",
    value: function isIOS() {
      return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window["MSStream"];
    }
  }, {
    key: "isAndroid",
    value: function isAndroid() {
      return /(android)/i.test(navigator.userAgent);
    }
  }, {
    key: "isTouchDevice",
    value: function isTouchDevice() {
      return "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
    }
  }, {
    key: "isFunction",
    value: function isFunction(obj) {
      return !!(obj && obj.constructor && obj.call && obj.apply);
    }
  }, {
    key: "appendChild",
    value: function appendChild(element, target) {
      if (this.isElement(target))
        target.appendChild(element);
      else if (target.el && target.el.nativeElement)
        target.el.nativeElement.appendChild(element);
      else
        throw new Error("Cannot append " + target + " to " + element);
    }
  }, {
    key: "removeChild",
    value: function removeChild(element, target) {
      if (this.isElement(target))
        target.removeChild(element);
      else if (target.el && target.el.nativeElement)
        target.el.nativeElement.removeChild(element);
      else
        throw new Error("Cannot remove " + element + " from " + target);
    }
  }, {
    key: "isElement",
    value: function isElement(obj) {
      return (typeof HTMLElement === "undefined" ? "undefined" : _typeof$4(HTMLElement)) === "object" ? obj instanceof HTMLElement : obj && _typeof$4(obj) === "object" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === "string";
    }
  }, {
    key: "scrollInView",
    value: function scrollInView(container, item) {
      var borderTopValue = getComputedStyle(container).getPropertyValue("borderTopWidth");
      var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;
      var paddingTopValue = getComputedStyle(container).getPropertyValue("paddingTop");
      var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;
      var containerRect = container.getBoundingClientRect();
      var itemRect = item.getBoundingClientRect();
      var offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;
      var scroll = container.scrollTop;
      var elementHeight = container.clientHeight;
      var itemHeight = this.getOuterHeight(item);
      if (offset < 0) {
        container.scrollTop = scroll + offset;
      } else if (offset + itemHeight > elementHeight) {
        container.scrollTop = scroll + offset - elementHeight + itemHeight;
      }
    }
  }, {
    key: "clearSelection",
    value: function clearSelection() {
      if (window.getSelection) {
        if (window.getSelection().empty) {
          window.getSelection().empty();
        } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {
          window.getSelection().removeAllRanges();
        }
      } else if (document["selection"] && document["selection"].empty) {
        try {
          document["selection"].empty();
        } catch (error) {
        }
      }
    }
  }, {
    key: "calculateScrollbarWidth",
    value: function calculateScrollbarWidth(el) {
      if (el) {
        var style = getComputedStyle(el);
        return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);
      } else {
        if (this.calculatedScrollbarWidth != null)
          return this.calculatedScrollbarWidth;
        var scrollDiv = document.createElement("div");
        scrollDiv.className = "p-scrollbar-measure";
        document.body.appendChild(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        document.body.removeChild(scrollDiv);
        this.calculatedScrollbarWidth = scrollbarWidth;
        return scrollbarWidth;
      }
    }
  }, {
    key: "getBrowser",
    value: function getBrowser() {
      if (!this.browser) {
        var matched = this.resolveUserAgent();
        this.browser = {};
        if (matched.browser) {
          this.browser[matched.browser] = true;
          this.browser["version"] = matched.version;
        }
        if (this.browser["chrome"]) {
          this.browser["webkit"] = true;
        } else if (this.browser["webkit"]) {
          this.browser["safari"] = true;
        }
      }
      return this.browser;
    }
  }, {
    key: "resolveUserAgent",
    value: function resolveUserAgent() {
      var ua2 = navigator.userAgent.toLowerCase();
      var match = /(chrome)[ ]([\w.]+)/.exec(ua2) || /(webkit)[ ]([\w.]+)/.exec(ua2) || /(opera)(?:.*version|)[ ]([\w.]+)/.exec(ua2) || /(msie) ([\w.]+)/.exec(ua2) || ua2.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua2) || [];
      return {
        browser: match[1] || "",
        version: match[2] || "0"
      };
    }
  }, {
    key: "isVisible",
    value: function isVisible(element) {
      return element && element.offsetParent != null;
    }
  }, {
    key: "isExist",
    value: function isExist(element) {
      return element !== null && typeof element !== "undefined" && element.nodeName && element.parentNode;
    }
  }, {
    key: "hasDOM",
    value: function hasDOM() {
      return !!(typeof window !== "undefined" && window.document && window.document.createElement);
    }
  }, {
    key: "getFocusableElements",
    value: function getFocusableElements(element) {
      var selector = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      var focusableElements = DomHandler2.find(element, 'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])'.concat(selector, ',\n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector, ',\n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector, ',\n                select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector, ',\n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector, ',\n                [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector, ',\n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])').concat(selector));
      var visibleFocusableElements = [];
      var _iterator3 = _createForOfIteratorHelper(focusableElements), _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
          var focusableElement = _step3.value;
          if (getComputedStyle(focusableElement).display !== "none" && getComputedStyle(focusableElement).visibility !== "hidden")
            visibleFocusableElements.push(focusableElement);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return visibleFocusableElements;
    }
  }, {
    key: "getFirstFocusableElement",
    value: function getFirstFocusableElement(element, selector) {
      var focusableElements = DomHandler2.getFocusableElements(element, selector);
      return focusableElements.length > 0 ? focusableElements[0] : null;
    }
  }, {
    key: "getLastFocusableElement",
    value: function getLastFocusableElement(element, selector) {
      var focusableElements = DomHandler2.getFocusableElements(element, selector);
      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;
    }
  }, {
    key: "getCursorOffset",
    value: function getCursorOffset(el, prevText, nextText, currentText) {
      if (el) {
        var style = getComputedStyle(el);
        var ghostDiv = document.createElement("div");
        ghostDiv.style.position = "absolute";
        ghostDiv.style.top = "0px";
        ghostDiv.style.left = "0px";
        ghostDiv.style.visibility = "hidden";
        ghostDiv.style.pointerEvents = "none";
        ghostDiv.style.overflow = style.overflow;
        ghostDiv.style.width = style.width;
        ghostDiv.style.height = style.height;
        ghostDiv.style.padding = style.padding;
        ghostDiv.style.border = style.border;
        ghostDiv.style.overflowWrap = style.overflowWrap;
        ghostDiv.style.whiteSpace = style.whiteSpace;
        ghostDiv.style.lineHeight = style.lineHeight;
        ghostDiv.innerHTML = prevText.replace(/\r\n|\r|\n/g, "<br />");
        var ghostSpan = document.createElement("span");
        ghostSpan.textContent = currentText;
        ghostDiv.appendChild(ghostSpan);
        var text = document.createTextNode(nextText);
        ghostDiv.appendChild(text);
        document.body.appendChild(ghostDiv);
        var offsetLeft = ghostSpan.offsetLeft, offsetTop = ghostSpan.offsetTop, clientHeight = ghostSpan.clientHeight;
        document.body.removeChild(ghostDiv);
        return {
          left: Math.abs(offsetLeft - el.scrollLeft),
          top: Math.abs(offsetTop - el.scrollTop) + clientHeight
        };
      }
      return {
        top: "auto",
        left: "auto"
      };
    }
  }, {
    key: "invokeElementMethod",
    value: function invokeElementMethod(element, methodName, args) {
      element[methodName].apply(element, args);
    }
  }, {
    key: "isClickable",
    value: function isClickable(element) {
      var targetNode = element.nodeName;
      var parentNode = element.parentElement && element.parentElement.nodeName;
      return targetNode === "INPUT" || targetNode === "TEXTAREA" || targetNode === "BUTTON" || targetNode === "A" || parentNode === "INPUT" || parentNode === "TEXTAREA" || parentNode === "BUTTON" || parentNode === "A" || this.hasClass(element, "p-button") || this.hasClass(element.parentElement, "p-button") || this.hasClass(element.parentElement, "p-checkbox") || this.hasClass(element.parentElement, "p-radiobutton");
    }
  }, {
    key: "applyStyle",
    value: function applyStyle(element, style) {
      if (typeof style === "string") {
        element.style.cssText = this.style;
      } else {
        for (var prop in this.style) {
          element.style[prop] = style[prop];
        }
      }
    }
  }, {
    key: "exportCSV",
    value: function exportCSV(csv, filename) {
      var blob = new Blob([csv], {
        type: "application/csv;charset=utf-8;"
      });
      if (window.navigator.msSaveOrOpenBlob) {
        navigator.msSaveOrOpenBlob(blob, filename + ".csv");
      } else {
        var isDownloaded = DomHandler2.saveAs({
          name: filename + ".csv",
          src: URL.createObjectURL(blob)
        });
        if (!isDownloaded) {
          csv = "data:text/csv;charset=utf-8," + csv;
          window.open(encodeURI(csv));
        }
      }
    }
  }, {
    key: "saveAs",
    value: function saveAs(file) {
      if (file) {
        var link = document.createElement("a");
        if (link.download !== void 0) {
          var name = file.name, src = file.src;
          link.setAttribute("href", src);
          link.setAttribute("download", name);
          link.style.display = "none";
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
          return true;
        }
      }
      return false;
    }
  }, {
    key: "createInlineStyle",
    value: function createInlineStyle(nonce) {
      var styleElement = document.createElement("style");
      try {
        if (!nonce) {
          nonce = {}.REACT_APP_CSS_NONCE;
        }
      } catch (error) {
      }
      nonce && styleElement.setAttribute("nonce", nonce);
      document.head.appendChild(styleElement);
      return styleElement;
    }
  }, {
    key: "removeInlineStyle",
    value: function removeInlineStyle(styleElement) {
      if (this.isExist(styleElement)) {
        try {
          document.head.removeChild(styleElement);
        } catch (error) {
        }
        styleElement = null;
      }
      return styleElement;
    }
  }]);
  return DomHandler2;
}();
var ObjectUtils = /* @__PURE__ */ function() {
  function ObjectUtils2() {
    _classCallCheck$5(this, ObjectUtils2);
  }
  _createClass$5(ObjectUtils2, null, [{
    key: "equals",
    value: function equals(obj1, obj2, field) {
      if (field && obj1 && _typeof$4(obj1) === "object" && obj2 && _typeof$4(obj2) === "object")
        return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);
      else
        return this.deepEquals(obj1, obj2);
    }
  }, {
    key: "deepEquals",
    value: function deepEquals(a, b) {
      if (a === b)
        return true;
      if (a && b && _typeof$4(a) == "object" && _typeof$4(b) == "object") {
        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;
        if (arrA && arrB) {
          length = a.length;
          if (length !== b.length)
            return false;
          for (i = length; i-- !== 0; ) {
            if (!this.deepEquals(a[i], b[i]))
              return false;
          }
          return true;
        }
        if (arrA !== arrB)
          return false;
        var dateA = a instanceof Date, dateB = b instanceof Date;
        if (dateA !== dateB)
          return false;
        if (dateA && dateB)
          return a.getTime() === b.getTime();
        var regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;
        if (regexpA !== regexpB)
          return false;
        if (regexpA && regexpB)
          return a.toString() === b.toString();
        var keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i = length; i-- !== 0; ) {
          if (!Object.prototype.hasOwnProperty.call(b, keys[i]))
            return false;
        }
        for (i = length; i-- !== 0; ) {
          key = keys[i];
          if (!this.deepEquals(a[key], b[key]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
  }, {
    key: "resolveFieldData",
    value: function resolveFieldData(data, field) {
      if (data && Object.keys(data).length && field) {
        if (this.isFunction(field)) {
          return field(data);
        } else if (field.indexOf(".") === -1) {
          return data[field];
        } else {
          var fields = field.split(".");
          var value = data;
          for (var i = 0, len = fields.length; i < len; ++i) {
            if (value == null) {
              return null;
            }
            value = value[fields[i]];
          }
          return value;
        }
      } else {
        return null;
      }
    }
  }, {
    key: "isFunction",
    value: function isFunction(obj) {
      return !!(obj && obj.constructor && obj.call && obj.apply);
    }
  }, {
    key: "findDiffKeys",
    value: function findDiffKeys(obj1, obj2) {
      if (!obj1 || !obj2) {
        return {};
      }
      return Object.keys(obj1).filter(function(key) {
        return !obj2.hasOwnProperty(key);
      }).reduce(function(result, current) {
        result[current] = obj1[current];
        return result;
      }, {});
    }
  }, {
    key: "reorderArray",
    value: function reorderArray(value, from, to) {
      var target;
      if (value && from !== to) {
        if (to >= value.length) {
          target = to - value.length;
          while (target-- + 1) {
            value.push(void 0);
          }
        }
        value.splice(to, 0, value.splice(from, 1)[0]);
      }
    }
  }, {
    key: "findIndexInList",
    value: function findIndexInList(value, list, dataKey) {
      var _this = this;
      if (list) {
        return dataKey ? list.findIndex(function(item) {
          return _this.equals(item, value, dataKey);
        }) : list.findIndex(function(item) {
          return item === value;
        });
      }
      return -1;
    }
  }, {
    key: "getJSXElement",
    value: function getJSXElement(obj) {
      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        params[_key - 1] = arguments[_key];
      }
      return this.isFunction(obj) ? obj.apply(void 0, params) : obj;
    }
  }, {
    key: "getPropValue",
    value: function getPropValue(obj) {
      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        params[_key2 - 1] = arguments[_key2];
      }
      return this.isFunction(obj) ? obj.apply(void 0, params) : obj;
    }
  }, {
    key: "getRefElement",
    value: function getRefElement(ref) {
      if (ref) {
        return _typeof$4(ref) === "object" && ref.hasOwnProperty("current") ? ref.current : ref;
      }
      return null;
    }
  }, {
    key: "removeAccents",
    value: function removeAccents(str) {
      if (str && str.search(/[\xC0-\xFF]/g) > -1) {
        str = str.replace(/[\xC0-\xC5]/g, "A").replace(/[\xC6]/g, "AE").replace(/[\xC7]/g, "C").replace(/[\xC8-\xCB]/g, "E").replace(/[\xCC-\xCF]/g, "I").replace(/[\xD0]/g, "D").replace(/[\xD1]/g, "N").replace(/[\xD2-\xD6\xD8]/g, "O").replace(/[\xD9-\xDC]/g, "U").replace(/[\xDD]/g, "Y").replace(/[\xDE]/g, "P").replace(/[\xE0-\xE5]/g, "a").replace(/[\xE6]/g, "ae").replace(/[\xE7]/g, "c").replace(/[\xE8-\xEB]/g, "e").replace(/[\xEC-\xEF]/g, "i").replace(/[\xF1]/g, "n").replace(/[\xF2-\xF6\xF8]/g, "o").replace(/[\xF9-\xFC]/g, "u").replace(/[\xFE]/g, "p").replace(/[\xFD\xFF]/g, "y");
      }
      return str;
    }
  }, {
    key: "isEmpty",
    value: function isEmpty(value) {
      return value === null || value === void 0 || value === "" || Array.isArray(value) && value.length === 0 || !(value instanceof Date) && _typeof$4(value) === "object" && Object.keys(value).length === 0;
    }
  }, {
    key: "isNotEmpty",
    value: function isNotEmpty(value) {
      return !this.isEmpty(value);
    }
  }, {
    key: "sort",
    value: function sort(value1, value2) {
      var order = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
      var locale = arguments.length > 3 ? arguments[3] : void 0;
      var result = null;
      if (value1 == null && value2 != null)
        result = -1;
      else if (value1 != null && value2 == null)
        result = 1;
      else if (value1 == null && value2 == null)
        result = 0;
      else if (typeof value1 === "string" && typeof value2 === "string")
        result = value1.localeCompare(value2, locale, {
          numeric: true
        });
      else
        result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
      return order * result;
    }
  }]);
  return ObjectUtils2;
}();
function _arrayWithoutHoles$1(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray$1(arr);
}
function _iterableToArray$1(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _nonIterableSpread$1() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray$1(arr) {
  return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1();
}
function handler() {
  var zIndexes = [];
  var generateZIndex = function generateZIndex2(key, autoZIndex) {
    var baseZIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 999;
    var lastZIndex = getLastZIndex(key, autoZIndex, baseZIndex);
    var newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 1;
    zIndexes.push({
      key,
      value: newZIndex
    });
    return newZIndex;
  };
  var revertZIndex = function revertZIndex2(zIndex) {
    zIndexes = zIndexes.filter(function(obj) {
      return obj.value !== zIndex;
    });
  };
  var getCurrentZIndex = function getCurrentZIndex2(key, autoZIndex) {
    return getLastZIndex(key, autoZIndex).value;
  };
  var getLastZIndex = function getLastZIndex2(key, autoZIndex) {
    var baseZIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    return _toConsumableArray$1(zIndexes).reverse().find(function(obj) {
      return autoZIndex ? true : obj.key === key;
    }) || {
      key,
      value: baseZIndex
    };
  };
  var getZIndex = function getZIndex2(el) {
    return el ? parseInt(el.style.zIndex, 10) || 0 : 0;
  };
  return {
    get: getZIndex,
    set: function set(key, el, autoZIndex, baseZIndex) {
      if (el) {
        el.style.zIndex = String(generateZIndex(key, autoZIndex, baseZIndex));
      }
    },
    clear: function clear(el) {
      if (el) {
        revertZIndex(ZIndexUtils.get(el));
        el.style.zIndex = "";
      }
    },
    getCurrent: function getCurrent(key, autoZIndex) {
      return getCurrentZIndex(key, autoZIndex);
    }
  };
}
var ZIndexUtils = handler();
function _defineProperties$4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _classCallCheck$4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperty$3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var FilterMatchMode = Object.freeze({
  STARTS_WITH: "startsWith",
  CONTAINS: "contains",
  NOT_CONTAINS: "notContains",
  ENDS_WITH: "endsWith",
  EQUALS: "equals",
  NOT_EQUALS: "notEquals",
  IN: "in",
  LESS_THAN: "lt",
  LESS_THAN_OR_EQUAL_TO: "lte",
  GREATER_THAN: "gt",
  GREATER_THAN_OR_EQUAL_TO: "gte",
  BETWEEN: "between",
  DATE_IS: "dateIs",
  DATE_IS_NOT: "dateIsNot",
  DATE_BEFORE: "dateBefore",
  DATE_AFTER: "dateAfter",
  CUSTOM: "custom"
});
var PrimeReact = /* @__PURE__ */ _createClass$4(function PrimeReact2() {
  _classCallCheck$4(this, PrimeReact2);
});
_defineProperty$3(PrimeReact, "ripple", false);
_defineProperty$3(PrimeReact, "inputStyle", "outlined");
_defineProperty$3(PrimeReact, "locale", "en");
_defineProperty$3(PrimeReact, "appendTo", null);
_defineProperty$3(PrimeReact, "cssTransition", true);
_defineProperty$3(PrimeReact, "autoZIndex", true);
_defineProperty$3(PrimeReact, "nonce", null);
_defineProperty$3(PrimeReact, "zIndex", {
  modal: 1100,
  overlay: 1e3,
  menu: 1e3,
  tooltip: 1100,
  toast: 1200
});
_defineProperty$3(PrimeReact, "filterMatchModeOptions", {
  text: [FilterMatchMode.STARTS_WITH, FilterMatchMode.CONTAINS, FilterMatchMode.NOT_CONTAINS, FilterMatchMode.ENDS_WITH, FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS],
  numeric: [FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS, FilterMatchMode.LESS_THAN, FilterMatchMode.LESS_THAN_OR_EQUAL_TO, FilterMatchMode.GREATER_THAN, FilterMatchMode.GREATER_THAN_OR_EQUAL_TO],
  date: [FilterMatchMode.DATE_IS, FilterMatchMode.DATE_IS_NOT, FilterMatchMode.DATE_BEFORE, FilterMatchMode.DATE_AFTER]
});
Object.freeze({
  ALIGN_CENTER: "pi pi-align-center",
  ALIGN_JUSTIFY: "pi pi-align-justify",
  ALIGN_LEFT: "pi pi-align-left",
  ALIGN_RIGHT: "pi pi-align-right",
  AMAZON: "pi pi-amazon",
  ANDROID: "pi pi-android",
  ANGLE_DOUBLE_DOWN: "pi pi-angle-double-down",
  ANGLE_DOUBLE_LEFT: "pi pi-angle-double-left",
  ANGLE_DOUBLE_RIGHT: "pi pi-angle-double-right",
  ANGLE_DOUBLE_UP: "pi pi-angle-double-up",
  ANGLE_DOWN: "pi pi-angle-down",
  ANGLE_LEFT: "pi pi-angle-left",
  ANGLE_RIGHT: "pi pi-angle-right",
  ANGLE_UP: "pi pi-angle-up",
  APPLE: "pi pi-apple",
  ARROW_CIRCLE_DOWN: "pi pi-arrow-circle-down",
  ARROW_CIRCLE_LEFT: "pi pi-arrow-circle-left",
  ARROW_CIRCLE_RIGHT: "pi pi-arrow-circle-right",
  ARROW_CIRCLE_UP: "pi pi-arrow-circle-up",
  ARROW_DOWN: "pi pi-arrow-down",
  ARROW_DOWN_LEFT: "pi pi-arrow-down-left",
  ARROW_DOWN_RIGHT: "pi pi-arrow-down-right",
  ARROW_LEFT: "pi pi-arrow-left",
  ARROW_RIGHT: "pi pi-arrow-right",
  ARROW_UP: "pi pi-arrow-up",
  ARROW_UP_LEFT: "pi pi-arrow-up-left",
  ARROW_UP_RIGHT: "pi pi-arrow-up-right",
  ARROW_H: "pi pi-arrow-h",
  ARROW_V: "pi pi-arrow-v",
  AT: "pi pi-at",
  BACKWARD: "pi pi-backward",
  BAN: "pi pi-ban",
  BARS: "pi pi-bars",
  BELL: "pi pi-bell",
  BOLT: "pi pi-bolt",
  BOOK: "pi pi-book",
  BOOKMARK: "pi pi-bookmark",
  BOOKMARK_FILL: "pi pi-bookmark-fill",
  BOX: "pi pi-box",
  BRIEFCASE: "pi pi-briefcase",
  BUILDING: "pi pi-building",
  CALENDAR: "pi pi-calendar",
  CALENDAR_MINUS: "pi pi-calendar-minus",
  CALENDAR_PLUS: "pi pi-calendar-plus",
  CALENDAR_TIMES: "pi pi-calendar-times",
  CAMERA: "pi pi-camera",
  CAR: "pi pi-car",
  CARET_DOWN: "pi pi-caret-down",
  CARET_LEFT: "pi pi-caret-left",
  CARET_RIGHT: "pi pi-caret-right",
  CARET_UP: "pi pi-caret-up",
  CHART_BAR: "pi pi-chart-bar",
  CHART_LINE: "pi pi-chart-line",
  CHART_PIE: "pi pi-chart-pie",
  CHECK: "pi pi-check",
  CHECK_CIRCLE: "pi pi-check-circle",
  CHECK_SQUARE: "pi pi-check-square",
  CHEVRON_CIRCLE_DOWN: "pi pi-chevron-circle-down",
  CHEVRON_CIRCLE_LEFT: "pi pi-chevron-circle-left",
  CHEVRON_CIRCLE_RIGHT: "pi pi-chevron-circle-right",
  CHEVRON_CIRCLE_UP: "pi pi-chevron-circle-up",
  CHEVRON_DOWN: "pi pi-chevron-down",
  CHEVRON_LEFT: "pi pi-chevron-left",
  CHEVRON_RIGHT: "pi pi-chevron-right",
  CHEVRON_UP: "pi pi-chevron-up",
  CIRCLE: "pi pi-circle",
  CIRCLE_FILL: "pi pi-circle-fill",
  CLOCK: "pi pi-clock",
  CLONE: "pi pi-clone",
  CLOUD: "pi pi-cloud",
  CLOUD_DOWNLOAD: "pi pi-cloud-download",
  CLOUD_UPLOAD: "pi pi-cloud-upload",
  CODE: "pi pi-code",
  COG: "pi pi-cog",
  COMMENT: "pi pi-comment",
  COMMENTS: "pi pi-comments",
  COMPASS: "pi pi-compass",
  COPY: "pi pi-copy",
  CREDIT_CARD: "pi pi-credit-card",
  DATABASE: "pi pi-database",
  DESKTOP: "pi pi-desktop",
  DIRECTIONS: "pi pi-directions",
  DIRECTIONS_ALT: "pi pi-directions-alt",
  DISCORD: "pi pi-discord",
  DOLLAR: "pi pi-dollar",
  DOWNLOAD: "pi pi-download",
  EJECT: "pi pi-eject",
  ELLIPSIS_H: "pi pi-ellipsis-h",
  ELLIPSIS_V: "pi pi-ellipsis-v",
  ENVELOPE: "pi pi-envelope",
  EURO: "pi pi-euro",
  EXCLAMATION_CIRCLE: "pi pi-exclamation-circle",
  EXCLAMATION_TRIANGLE: "pi pi-exclamation-triangle",
  EXTERNAL_LINK: "pi pi-external-link",
  EYE: "pi pi-eye",
  EYE_SLASH: "pi pi-eye-slash",
  FACEBOOK: "pi pi-facebook",
  FAST_BACKWARD: "pi pi-fast-backward",
  FAST_FORWARD: "pi pi-fast-forward",
  FILE: "pi pi-file",
  FILE_EXCEL: "pi pi-file-excel",
  FILE_PDF: "pi pi-file-pdf",
  FILTER: "pi pi-filter",
  FILTER_FILL: "pi pi-filter-fill",
  FILTER_SLASH: "pi pi-filter-slash",
  FLAG: "pi pi-flag",
  FLAG_FILL: "pi pi-flag-fill",
  FOLDER: "pi pi-folder",
  FOLDER_OPEN: "pi pi-folder-open",
  FORWARD: "pi pi-forward",
  GITHUB: "pi pi-github",
  GLOBE: "pi pi-globe",
  GOOGLE: "pi pi-google",
  HASHTAG: "pi pi-hashtag",
  HEART: "pi pi-heart",
  HEART_FILL: "pi pi-heart-fill",
  HISTORY: "pi pi-history",
  HOME: "pi pi-home",
  ID_CARD: "pi pi-id-card",
  IMAGE: "pi pi-image",
  IMAGES: "pi pi-images",
  INBOX: "pi pi-inbox",
  INFO: "pi pi-info",
  INFO_CIRCLE: "pi pi-info-circle",
  INSTAGRAM: "pi pi-instagram",
  KEY: "pi pi-key",
  LINK: "pi pi-link",
  LINKEDIN: "pi pi-linkedin",
  LIST: "pi pi-list",
  LOCK: "pi pi-lock",
  LOCK_OPEN: "pi pi-lock-open",
  MAP: "pi pi-map",
  MAP_MARKER: "pi pi-map-marker",
  MICROSOFT: "pi pi-microsoft",
  MINUS: "pi pi-minus",
  MINUS_CIRCLE: "pi pi-minus-circle",
  MOBILE: "pi pi-mobile",
  MONEY_BILL: "pi pi-money-bill",
  MOON: "pi pi-moon",
  PALETTE: "pi pi-palette",
  PAPERCLIP: "pi pi-paperclip",
  PAUSE: "pi pi-pause",
  PAYPAL: "pi pi-paypal",
  PENCIL: "pi pi-pencil",
  PERCENTAGE: "pi pi-percentage",
  PHONE: "pi pi-phone",
  PLAY: "pi pi-play",
  PLUS: "pi pi-plus",
  PLUS_CIRCLE: "pi pi-plus-circle",
  POUND: "pi pi-pound",
  POWER_OFF: "pi pi-power-off",
  PRIME: "pi pi-prime",
  PRINT: "pi pi-print",
  QRCODE: "pi pi-qrcode",
  QUESTION: "pi pi-question",
  QUESTION_CIRCLE: "pi pi-question-circle",
  REDDIT: "pi pi-reddit",
  REFRESH: "pi pi-refresh",
  REPLAY: "pi pi-replay",
  REPLY: "pi pi-reply",
  SAVE: "pi pi-save",
  SEARCH: "pi pi-search",
  SEARCH_MINUS: "pi pi-search-minus",
  SEARCH_PLUS: "pi pi-search-plus",
  SEND: "pi pi-send",
  SERVER: "pi pi-server",
  SHARE_ALT: "pi pi-share-alt",
  SHIELD: "pi pi-shield",
  SHOPPING_BAG: "pi pi-shopping-bag",
  SHOPPING_CART: "pi pi-shopping-cart",
  SIGN_IN: "pi pi-sign-in",
  SIGN_OUT: "pi pi-sign-out",
  SITEMAP: "pi pi-sitemap",
  SLACK: "pi pi-slack",
  SLIDERS_H: "pi pi-sliders-h",
  SLIDERS_V: "pi pi-sliders-v",
  SORT: "pi pi-sort",
  SORT_ALPHA_DOWN: "pi pi-sort-alpha-down",
  SORT_ALPHA_ALT_DOWN: "pi pi-sort-alpha-alt-down",
  SORT_ALPHA_UP: "pi pi-sort-alpha-up",
  SORT_ALPHA_ALT_UP: "pi pi-sort-alpha-alt-up",
  SORT_ALT: "pi pi-sort-alt",
  SORT_ALT_SLASH: "pi pi-sort-slash",
  SORT_AMOUNT_DOWN: "pi pi-sort-amount-down",
  SORT_AMOUNT_DOWN_ALT: "pi pi-sort-amount-down-alt",
  SORT_AMOUNT_UP: "pi pi-sort-amount-up",
  SORT_AMOUNT_UP_ALT: "pi pi-sort-amount-up-alt",
  SORT_DOWN: "pi pi-sort-down",
  SORT_NUMERIC_DOWN: "pi pi-sort-numeric-down",
  SORT_NUMERIC_ALT_DOWN: "pi pi-sort-numeric-alt-down",
  SORT_NUMERIC_UP: "pi pi-sort-numeric-up",
  SORT_NUMERIC_ALT_UP: "pi pi-sort-numeric-alt-up",
  SORT_UP: "pi pi-sort-up",
  SPINNER: "pi pi-spinner",
  STAR: "pi pi-star",
  STAR_FILL: "pi pi-star-fill",
  STEP_BACKWARD: "pi pi-step-backward",
  STEP_BACKWARD_ALT: "pi pi-step-backward-alt",
  STEP_FORWARD: "pi pi-step-forward",
  STEP_FORWARD_ALT: "pi pi-step-forward-alt",
  STOP: "pi pi-stop",
  STOP_CIRCLE: "pi pi-stop-circle",
  SUN: "pi pi-sun",
  SYNC: "pi pi-sync",
  TABLE: "pi pi-table",
  TABLET: "pi pi-tablet",
  TAG: "pi pi-tag",
  TAGS: "pi pi-tags",
  TELEGRAM: "pi pi-telegram",
  TH_LARGE: "pi pi-th-large",
  THUMBS_DOWN: "pi pi-thumbs-down",
  THUMBS_UP: "pi pi-thumbs-up",
  TICKET: "pi pi-ticket",
  TIMES: "pi pi-times",
  TIMES_CIRCLE: "pi pi-times-circle",
  TRASH: "pi pi-trash",
  TWITTER: "pi pi-twitter",
  UNDO: "pi pi-undo",
  UNLOCK: "pi pi-unlock",
  UPLOAD: "pi pi-upload",
  USER: "pi pi-user",
  USER_EDIT: "pi pi-user-edit",
  USER_MINUS: "pi pi-user-minus",
  USER_PLUS: "pi pi-user-plus",
  USERS: "pi pi-users",
  VIDEO: "pi pi-video",
  VIMEO: "pi pi-vimeo",
  VOLUME_DOWN: "pi pi-volume-down",
  VOLUME_OFF: "pi pi-volume-off",
  VOLUME_UP: "pi pi-volume-up",
  WALLET: "pi pi-wallet",
  WHATSAPP: "pi pi-whatsapp",
  WIFI: "pi pi-wifi",
  WINDOW_MAXIMIZE: "pi pi-window-maximize",
  WINDOW_MINIMIZE: "pi pi-window-minimize",
  YOUTUBE: "pi pi-youtube"
});
Object.freeze({
  SUCCESS: "success",
  INFO: "info",
  WARN: "warn",
  ERROR: "error"
});
Object.freeze({
  AND: "and",
  OR: "or"
});
function _classCallCheck$3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _assertThisInitialized$4(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf$4(o, p2) {
  _setPrototypeOf$4 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$4(o, p2);
}
function _inherits$3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf$4(subClass, superClass);
}
function _typeof$3(obj) {
  "@babel/helpers - typeof";
  return _typeof$3 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof$3(obj);
}
function _possibleConstructorReturn$3(self2, call) {
  if (call && (_typeof$3(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$4(self2);
}
function _getPrototypeOf$3(o) {
  _getPrototypeOf$3 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$3(o);
}
function _createSuper$4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$3(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$3(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$3(this, result);
  };
}
function _isNativeReflectConstruct$4() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
var Ripple = /* @__PURE__ */ function(_Component) {
  _inherits$3(Ripple2, _Component);
  var _super = _createSuper$4(Ripple2);
  function Ripple2(props) {
    var _this;
    _classCallCheck$3(this, Ripple2);
    _this = _super.call(this, props);
    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized$4(_this));
    return _this;
  }
  _createClass$3(Ripple2, [{
    key: "getTarget",
    value: function getTarget() {
      return this.ink && this.ink.parentElement;
    }
  }, {
    key: "bindEvents",
    value: function bindEvents() {
      if (this.target) {
        this.target.addEventListener("mousedown", this.onMouseDown);
      }
    }
  }, {
    key: "unbindEvents",
    value: function unbindEvents() {
      if (this.target) {
        this.target.removeEventListener("mousedown", this.onMouseDown);
      }
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(event) {
      if (!this.ink || getComputedStyle(this.ink, null).display === "none") {
        return;
      }
      DomHandler.removeClass(this.ink, "p-ink-active");
      if (!DomHandler.getHeight(this.ink) && !DomHandler.getWidth(this.ink)) {
        var d = Math.max(DomHandler.getOuterWidth(this.target), DomHandler.getOuterHeight(this.target));
        this.ink.style.height = d + "px";
        this.ink.style.width = d + "px";
      }
      var offset = DomHandler.getOffset(this.target);
      var x2 = event.pageX - offset.left + document.body.scrollTop - DomHandler.getWidth(this.ink) / 2;
      var y2 = event.pageY - offset.top + document.body.scrollLeft - DomHandler.getHeight(this.ink) / 2;
      this.ink.style.top = y2 + "px";
      this.ink.style.left = x2 + "px";
      DomHandler.addClass(this.ink, "p-ink-active");
    }
  }, {
    key: "onAnimationEnd",
    value: function onAnimationEnd(event) {
      DomHandler.removeClass(event.currentTarget, "p-ink-active");
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.ink) {
        this.target = this.getTarget();
        this.bindEvents();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.ink && !this.target) {
        this.target = this.getTarget();
        this.bindEvents();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.ink) {
        this.target = null;
        this.unbindEvents();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      return PrimeReact.ripple ? /* @__PURE__ */ jsx("span", {
        ref: function ref(el) {
          return _this2.ink = el;
        },
        className: "p-ink",
        onAnimationEnd: this.onAnimationEnd
      }) : null;
    }
  }]);
  return Ripple2;
}(react.exports.Component);
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _setPrototypeOf$3(o, p2) {
  _setPrototypeOf$3 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$3(o, p2);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf$3(subClass, superClass);
}
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass$1(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}
var config = {
  disabled: false
};
var TransitionGroupContext = React.createContext(null);
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout;
    if (timeout != null && typeof timeout !== "number") {
      exit = timeout.exit;
      enter = timeout.enter;
      appear = timeout.appear !== void 0 ? timeout.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : ReactDOM.findDOMNode(this);
    if (!exit || config.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler2) {
    this.setNextCallback(handler2);
    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout != null) {
      setTimeout(this.nextCallback, timeout);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children = _this$props.children;
    _this$props.in;
    _this$props.mountOnEnter;
    _this$props.unmountOnExit;
    _this$props.appear;
    _this$props.enter;
    _this$props.exit;
    _this$props.timeout;
    _this$props.addEndListener;
    _this$props.onEnter;
    _this$props.onEntering;
    _this$props.onEntered;
    _this$props.onExit;
    _this$props.onExiting;
    _this$props.onExited;
    _this$props.nodeRef;
    var childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
      value: null
    }, typeof children === "function" ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps));
  };
  return Transition2;
}(React.Component);
Transition.contextType = TransitionGroupContext;
Transition.propTypes = {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition$1 = Transition;
var _addClass = function addClass$1(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass(node, c);
  });
};
var removeClass = function removeClass2(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass$1(node, c);
  });
};
var CSSTransition$1 = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames2 = _this.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass2(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      node && node.scrollTop;
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass(node, baseClassName);
    }
    if (activeClassName) {
      removeClass(node, activeClassName);
    }
    if (doneClassName) {
      removeClass(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props;
    _this$props.classNames;
    var props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return /* @__PURE__ */ React.createElement(Transition$1, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(React.Component);
CSSTransition$1.defaultProps = {
  classNames: ""
};
CSSTransition$1.propTypes = {};
var CSSTransition$1$1 = CSSTransition$1;
function _assertThisInitialized$3(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function getChildMapping(children, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && react.exports.isValidElement(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children)
    react.exports.Children.map(children, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return react.exports.cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function(key) {
    var child = children[key];
    if (!react.exports.isValidElement(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = react.exports.isValidElement(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children[key] = react.exports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children[key] = react.exports.cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && react.exports.isValidElement(prevChild)) {
      children[key] = react.exports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children;
}
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized$3(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children = _extends({}, state.children);
        delete children[child.key];
        return {
          children
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }
    return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /* @__PURE__ */ React.createElement(Component, props, children));
  };
  return TransitionGroup2;
}(React.Component);
TransitionGroup.propTypes = {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup$1 = TransitionGroup;
function _defineProperty$2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck$2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _assertThisInitialized$2(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf$2(o, p2) {
  _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$2(o, p2);
}
function _inherits$2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf$2(subClass, superClass);
}
function _typeof$2(obj) {
  "@babel/helpers - typeof";
  return _typeof$2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof$2(obj);
}
function _possibleConstructorReturn$2(self2, call) {
  if (call && (_typeof$2(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$2(self2);
}
function _getPrototypeOf$2(o) {
  _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$2(o);
}
function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys$1(Object(source), true).forEach(function(key) {
      _defineProperty$2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _createSuper$3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$2(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$2(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$2(this, result);
  };
}
function _isNativeReflectConstruct$3() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
var CSSTransition = /* @__PURE__ */ function(_Component) {
  _inherits$2(CSSTransition2, _Component);
  var _super = _createSuper$3(CSSTransition2);
  function CSSTransition2(props) {
    var _this;
    _classCallCheck$2(this, CSSTransition2);
    _this = _super.call(this, props);
    _this.onEnter = _this.onEnter.bind(_assertThisInitialized$2(_this));
    _this.onEntering = _this.onEntering.bind(_assertThisInitialized$2(_this));
    _this.onEntered = _this.onEntered.bind(_assertThisInitialized$2(_this));
    _this.onExit = _this.onExit.bind(_assertThisInitialized$2(_this));
    _this.onExiting = _this.onExiting.bind(_assertThisInitialized$2(_this));
    _this.onExited = _this.onExited.bind(_assertThisInitialized$2(_this));
    return _this;
  }
  _createClass$2(CSSTransition2, [{
    key: "disabled",
    get: function get() {
      return this.props.disabled || this.props.options && this.props.options.disabled || !PrimeReact.cssTransition;
    }
  }, {
    key: "onEnter",
    value: function onEnter(node, isAppearing) {
      this.props.onEnter && this.props.onEnter(node, isAppearing);
      this.props.options && this.props.options.onEnter && this.props.options.onEnter(node, isAppearing);
    }
  }, {
    key: "onEntering",
    value: function onEntering(node, isAppearing) {
      this.props.onEntering && this.props.onEntering(node, isAppearing);
      this.props.options && this.props.options.onEntering && this.props.options.onEntering(node, isAppearing);
    }
  }, {
    key: "onEntered",
    value: function onEntered(node, isAppearing) {
      this.props.onEntered && this.props.onEntered(node, isAppearing);
      this.props.options && this.props.options.onEntered && this.props.options.onEntered(node, isAppearing);
    }
  }, {
    key: "onExit",
    value: function onExit(node) {
      this.props.onExit && this.props.onExit(node);
      this.props.options && this.props.options.onExit && this.props.options.onExit(node);
    }
  }, {
    key: "onExiting",
    value: function onExiting(node) {
      this.props.onExiting && this.props.onExiting(node);
      this.props.options && this.props.options.onExiting && this.props.options.onExiting(node);
    }
  }, {
    key: "onExited",
    value: function onExited(node) {
      this.props.onExited && this.props.onExited(node);
      this.props.options && this.props.options.onExited && this.props.options.onExited(node);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props["in"] !== prevProps["in"] && this.disabled) {
        var node = ObjectUtils.getRefElement(this.props.nodeRef);
        if (this.props["in"]) {
          this.onEnter(node, true);
          this.onEntering(node, true);
          this.onEntered(node, true);
        } else {
          this.onExit(node);
          this.onExiting(node);
          this.onExited(node);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (this.disabled) {
        return this.props["in"] ? this.props.children : null;
      } else {
        var immutableProps = {
          nodeRef: this.props.nodeRef,
          "in": this.props["in"],
          onEnter: this.onEnter,
          onEntering: this.onEntering,
          onEntered: this.onEntered,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        };
        var mutableProps = {
          classNames: this.props.classNames,
          timeout: this.props.timeout,
          unmountOnExit: this.props.unmountOnExit
        };
        var props = _objectSpread$1(_objectSpread$1(_objectSpread$1({}, mutableProps), this.props.options || {}), immutableProps);
        return /* @__PURE__ */ jsx(CSSTransition$1$1, __spreadProps(__spreadValues({}, props), {
          children: this.props.children
        }));
      }
    }
  }]);
  return CSSTransition2;
}(react.exports.Component);
function _classCallCheck$1(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties$1(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass$1(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties$1(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties$1(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _setPrototypeOf$1(o, p2) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf$1(o, p2);
}
function _inherits$1(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf$1(subClass, superClass);
}
function _typeof$1(obj) {
  "@babel/helpers - typeof";
  return _typeof$1 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof$1(obj);
}
function _assertThisInitialized$1(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _possibleConstructorReturn$1(self2, call) {
  if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized$1(self2);
}
function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf$1(o);
}
function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _createSuper$2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf$1(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf$1(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn$1(this, result);
  };
}
function _isNativeReflectConstruct$2() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
var Portal = /* @__PURE__ */ function(_Component) {
  _inherits$1(Portal2, _Component);
  var _super = _createSuper$2(Portal2);
  function Portal2(props) {
    var _this;
    _classCallCheck$1(this, Portal2);
    _this = _super.call(this, props);
    var mounted = props.visible && DomHandler.hasDOM();
    _this.state = {
      mounted
    };
    return _this;
  }
  _createClass$1(Portal2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (DomHandler.hasDOM() && !this.state.mounted) {
        this.setState({
          mounted: true
        }, this.props.onMounted);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.onUnmounted && this.props.onUnmounted();
    }
  }, {
    key: "render",
    value: function render() {
      var element = this.props.element || this.props.children;
      if (element && this.state.mounted) {
        var appendTo = this.props.appendTo || PrimeReact.appendTo || document.body;
        return appendTo === "self" ? element : /* @__PURE__ */ ReactDOM.createPortal(element, appendTo);
      }
      return null;
    }
  }]);
  return Portal2;
}(react.exports.Component);
_defineProperty$1(Portal, "defaultProps", {
  element: null,
  appendTo: null,
  visible: false,
  onMounted: null,
  onUnmounted: null
});
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o, minLen);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _possibleConstructorReturn(self2, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self2);
}
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _createSuper$1(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _isNativeReflectConstruct$1() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
var ToastMessageComponent = /* @__PURE__ */ function(_Component) {
  _inherits(ToastMessageComponent2, _Component);
  var _super = _createSuper$1(ToastMessageComponent2);
  function ToastMessageComponent2(props) {
    var _this;
    _classCallCheck(this, ToastMessageComponent2);
    _this = _super.call(this, props);
    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));
    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));
    return _this;
  }
  _createClass(ToastMessageComponent2, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.timeout) {
        clearTimeout(this.timeout);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      if (!this.props.message.sticky) {
        this.timeout = setTimeout(function() {
          _this2.onClose(null);
        }, this.props.message.life || 3e3);
      }
    }
  }, {
    key: "onClose",
    value: function onClose() {
      if (this.timeout) {
        clearTimeout(this.timeout);
      }
      if (this.props.onClose) {
        this.props.onClose(this.props.message);
      }
    }
  }, {
    key: "onClick",
    value: function onClick(event) {
      if (this.props.onClick && !(DomHandler.hasClass(event.target, "p-toast-icon-close") || DomHandler.hasClass(event.target, "p-toast-icon-close-icon"))) {
        this.props.onClick(this.props.message);
      }
    }
  }, {
    key: "renderCloseIcon",
    value: function renderCloseIcon() {
      if (this.props.message.closable !== false) {
        return /* @__PURE__ */ jsxs("button", {
          type: "button",
          className: "p-toast-icon-close p-link",
          onClick: this.onClose,
          children: [/* @__PURE__ */ jsx("span", {
            className: "p-toast-icon-close-icon pi pi-times"
          }), /* @__PURE__ */ jsx(Ripple, {})]
        });
      }
      return null;
    }
  }, {
    key: "renderMessage",
    value: function renderMessage() {
      if (this.props.message) {
        var _this$props$message = this.props.message, severity = _this$props$message.severity, content = _this$props$message.content, summary = _this$props$message.summary, detail = _this$props$message.detail;
        var contentEl = ObjectUtils.getJSXElement(content, _objectSpread(_objectSpread({}, this.props), {}, {
          onClose: this.onClose
        }));
        var iconClassName = classNames("p-toast-message-icon pi", {
          "pi-info-circle": severity === "info",
          "pi-exclamation-triangle": severity === "warn",
          "pi-times": severity === "error",
          "pi-check": severity === "success"
        });
        return contentEl || /* @__PURE__ */ jsxs(Fragment, {
          children: [/* @__PURE__ */ jsx("span", {
            className: iconClassName
          }), /* @__PURE__ */ jsxs("div", {
            className: "p-toast-message-text",
            children: [/* @__PURE__ */ jsx("span", {
              className: "p-toast-summary",
              children: summary
            }), detail && /* @__PURE__ */ jsx("div", {
              className: "p-toast-detail",
              children: detail
            })]
          })]
        });
      }
      return null;
    }
  }, {
    key: "render",
    value: function render() {
      var severity = this.props.message.severity;
      var contentClassName = this.props.message.contentClassName;
      var contentStyle = this.props.message.contentStyle;
      var style = this.props.message.style;
      var className = classNames("p-toast-message", {
        "p-toast-message-info": severity === "info",
        "p-toast-message-warn": severity === "warn",
        "p-toast-message-error": severity === "error",
        "p-toast-message-success": severity === "success"
      }, this.props.message.className);
      var message = this.renderMessage();
      var closeIcon = this.renderCloseIcon();
      return /* @__PURE__ */ jsx("div", {
        ref: this.props.forwardRef,
        className,
        style,
        role: "alert",
        "aria-live": "assertive",
        "aria-atomic": "true",
        onClick: this.onClick,
        children: /* @__PURE__ */ jsxs("div", {
          className: classNames("p-toast-message-content", contentClassName),
          style: contentStyle,
          children: [message, closeIcon]
        })
      });
    }
  }]);
  return ToastMessageComponent2;
}(react.exports.Component);
_defineProperty(ToastMessageComponent, "defaultProps", {
  message: null,
  onClose: null,
  onClick: null
});
var ToastMessage = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  return /* @__PURE__ */ jsx(ToastMessageComponent, __spreadValues({
    forwardRef: ref
  }, props));
});
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}
var messageIdx = 0;
var Toast = /* @__PURE__ */ function(_Component) {
  _inherits(Toast2, _Component);
  var _super = _createSuper(Toast2);
  function Toast2(props) {
    var _this;
    _classCallCheck(this, Toast2);
    _this = _super.call(this, props);
    _this.state = {
      messages: []
    };
    _this.onClose = _this.onClose.bind(_assertThisInitialized(_this));
    _this.onEntered = _this.onEntered.bind(_assertThisInitialized(_this));
    _this.onExited = _this.onExited.bind(_assertThisInitialized(_this));
    return _this;
  }
  _createClass(Toast2, [{
    key: "show",
    value: function show(value) {
      if (value) {
        if (value) {
          var newMessages;
          if (Array.isArray(value)) {
            for (var i = 0; i < value.length; i++) {
              value[i].id = messageIdx++;
              newMessages = [].concat(_toConsumableArray(this.state.messages), _toConsumableArray(value));
            }
          } else {
            value.id = messageIdx++;
            newMessages = this.state.messages ? [].concat(_toConsumableArray(this.state.messages), [value]) : [value];
          }
          this.state.messages.length === 0 && ZIndexUtils.set("toast", this.container, PrimeReact.autoZIndex, this.props.baseZIndex || PrimeReact.zIndex["toast"]);
          this.setState({
            messages: newMessages
          });
        }
      }
    }
  }, {
    key: "clear",
    value: function clear() {
      ZIndexUtils.clear(this.container);
      this.setState({
        messages: []
      });
    }
  }, {
    key: "onClose",
    value: function onClose(message) {
      var newMessages = this.state.messages.filter(function(msg) {
        return msg.id !== message.id;
      });
      this.setState({
        messages: newMessages
      });
      if (this.props.onRemove) {
        this.props.onRemove(message);
      }
    }
  }, {
    key: "onEntered",
    value: function onEntered() {
      this.props.onShow && this.props.onShow();
    }
  }, {
    key: "onExited",
    value: function onExited() {
      this.state.messages.length === 0 && ZIndexUtils.clear(this.container);
      this.props.onHide && this.props.onHide();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      ZIndexUtils.clear(this.container);
    }
  }, {
    key: "renderElement",
    value: function renderElement() {
      var _this2 = this;
      var className = classNames("p-toast p-component p-toast-" + this.props.position, this.props.className);
      return /* @__PURE__ */ jsx("div", {
        ref: function ref(el) {
          _this2.container = el;
        },
        id: this.props.id,
        className,
        style: this.props.style,
        children: /* @__PURE__ */ jsx(TransitionGroup$1, {
          children: this.state.messages.map(function(message) {
            var messageRef = /* @__PURE__ */ React.createRef();
            return /* @__PURE__ */ jsx(CSSTransition, {
              nodeRef: messageRef,
              classNames: "p-toast-message",
              unmountOnExit: true,
              timeout: {
                enter: 300,
                exit: 300
              },
              onEntered: _this2.onEntered,
              onExited: _this2.onExited,
              options: _this2.props.transitionOptions,
              children: /* @__PURE__ */ jsx(ToastMessage, {
                ref: messageRef,
                message,
                onClick: _this2.props.onClick,
                onClose: _this2.onClose
              })
            }, message.id);
          })
        })
      });
    }
  }, {
    key: "render",
    value: function render() {
      var element = this.renderElement();
      return /* @__PURE__ */ jsx(Portal, {
        element,
        appendTo: this.props.appendTo
      });
    }
  }]);
  return Toast2;
}(react.exports.Component);
_defineProperty(Toast, "defaultProps", {
  id: null,
  className: null,
  style: null,
  baseZIndex: 0,
  position: "top-right",
  transitionOptions: null,
  appendTo: "self",
  onClick: null,
  onRemove: null,
  onShow: null,
  onHide: null
});
var FlowChart = () => {
  const toastRef = react.exports.useRef(null);
  const diagramContainer = react.exports.useRef(null);
  const paletteContainer = react.exports.useRef(null);
  const inspectorContainer = react.exports.useRef(null);
  const [diagramObj, setDiagramObj] = react.exports.useState(null);
  const [inspectorVisible, setInspectorVisible] = react.exports.useState(true);
  const doAfterOnLoad = (controlFn) => {
    if (!!diagramContainer.current && !!paletteContainer.current && !!inspectorContainer.current) {
      const instance = new GojsOperate(diagramContainer.current, paletteContainer.current, inspectorContainer.current, controlFn);
      setDiagramObj(instance);
    }
  };
  react.exports.useLayoutEffect(() => {
    useToastStore().bind(toastRef.current);
    return () => {
      useToastStore().bind(null);
      diagramObj == null ? void 0 : diagramObj.dispose();
      setDiagramObj(null);
    };
  }, []);
  return /* @__PURE__ */ jsxs("div", {
    style: {
      position: "relative",
      width: "100%",
      height: "100%"
    },
    children: [/* @__PURE__ */ jsx(Toast, {
      ref: toastRef
    }), /* @__PURE__ */ jsx("div", {
      ref: diagramContainer,
      className: "custom-canvas-container",
      style: {
        position: "relative",
        width: "100%",
        height: "100%"
      }
    }), /* @__PURE__ */ jsx("div", {
      ref: paletteContainer,
      className: "custom-canvas-container",
      style: {
        position: "absolute",
        zIndex: "100",
        width: "199px",
        height: "100%",
        top: "0",
        left: "0",
        borderRight: "solid 2px #777777",
        backgroundColor: "#fefefe"
      }
    }), /* @__PURE__ */ jsx(EnableDrag, {
      initPos: {
        left: "210px",
        top: "10px"
      },
      innerEl: /* @__PURE__ */ jsxs("div", {
        style: {
          position: "relative",
          width: "300px",
          height: "fit-content",
          border: "solid 2px #aaaaaa",
          borderRadius: "10px",
          backgroundColor: "#ffffff",
          fontFamily: "Fira Sans,Arial,sans-serif"
        },
        children: [/* @__PURE__ */ jsxs("div", {
          className: "drag-controller",
          style: {
            position: "relative",
            width: "calc(100% - 20px)",
            height: "10px",
            margin: "10px",
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between"
          },
          children: [/* @__PURE__ */ jsx("i", {
            className: inspectorVisible ? "pi pi-eye" : "pi pi-eye-slash",
            title: `${inspectorVisible ? "hide" : "show"} inspector`,
            style: {
              position: "relative",
              width: "10px",
              textAlign: "center",
              color: "#aaaaaa",
              fontWeight: "bold",
              cursor: "pointer"
            },
            onClick: () => {
              setInspectorVisible(!inspectorVisible);
            }
          }), /* @__PURE__ */ jsx("div", {
            style: {
              position: "relative",
              width: "calc(100% - 30px)",
              height: "10px",
              margin: "5px",
              borderRadius: "5px",
              backgroundColor: "#aaaaaa"
            }
          })]
        }), /* @__PURE__ */ jsx("div", {
          className: Styles.inspectorPanel,
          style: {
            display: inspectorVisible ? "block" : "none"
          },
          children: /* @__PURE__ */ jsx("div", {
            ref: inspectorContainer
          })
        })]
      })
    }, "inspector-container"), /* @__PURE__ */ jsx(ContextMenu, {
      onLoad: doAfterOnLoad,
      instance: diagramObj
    })]
  });
};
var adaptor = defineSpaApp((container) => {
  return {
    mount() {
      reactDom.exports.render(/* @__PURE__ */ jsx(FlowChart, {}), container);
    },
    render() {
      return "";
    },
    unmount() {
      reactDom.exports.unmountComponentAtNode(container);
    }
  };
});
export { adaptor as default };
